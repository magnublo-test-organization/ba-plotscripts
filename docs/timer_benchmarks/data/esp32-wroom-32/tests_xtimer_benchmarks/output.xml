<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:43:06.442" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.043" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:07.051" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:08.082" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:07.041" endtime="20201029 12:43:08.083"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.086" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:43:08.084" endtime="20201029 12:43:09.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.040" endtime="20201029 12:43:09.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.093" endtime="20201029 12:43:09.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.090" endtime="20201029 12:43:09.309"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.321" endtime="20201029 12:43:09.341"></status>
</kw>
<msg timestamp="20201029 12:43:09.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.320" endtime="20201029 12:43:09.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.343" endtime="20201029 12:43:09.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.348" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:09.346" endtime="20201029 12:43:09.348"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.318" endtime="20201029 12:43:09.349"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.315" endtime="20201029 12:43:09.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.314" endtime="20201029 12:43:09.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:09.354" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:09.353" endtime="20201029 12:43:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.351" endtime="20201029 12:43:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.313" endtime="20201029 12:43:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.312" endtime="20201029 12:43:09.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.356" endtime="20201029 12:43:09.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.311" endtime="20201029 12:43:09.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.361" endtime="20201029 12:43:09.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.310" endtime="20201029 12:43:09.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.038" endtime="20201029 12:43:09.364"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.373" endtime="20201029 12:43:09.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.371" endtime="20201029 12:43:09.393"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.407" endtime="20201029 12:43:09.426"></status>
</kw>
<msg timestamp="20201029 12:43:09.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.406" endtime="20201029 12:43:09.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.427" endtime="20201029 12:43:09.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.432" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:09.430" endtime="20201029 12:43:09.432"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.403" endtime="20201029 12:43:09.433"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.401" endtime="20201029 12:43:09.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.399" endtime="20201029 12:43:09.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:09.438" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:09.437" endtime="20201029 12:43:09.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.435" endtime="20201029 12:43:09.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.398" endtime="20201029 12:43:09.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.397" endtime="20201029 12:43:09.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.439" endtime="20201029 12:43:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.396" endtime="20201029 12:43:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.394" endtime="20201029 12:43:09.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.369" endtime="20201029 12:43:09.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.450" endtime="20201029 12:43:09.463"></status>
</kw>
<msg timestamp="20201029 12:43:09.463" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.447" endtime="20201029 12:43:09.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.466" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.464" endtime="20201029 12:43:09.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.467" endtime="20201029 12:43:09.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.445" endtime="20201029 12:43:09.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.443" endtime="20201029 12:43:09.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.473" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:43:09.472" endtime="20201029 12:43:09.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.475" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:43:09.474" endtime="20201029 12:43:09.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.470" endtime="20201029 12:43:09.476"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:09.365" endtime="20201029 12:43:09.477" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:06.554" endtime="20201029 12:43:09.479"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.532" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:09.540" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:10.619" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:09.530" endtime="20201029 12:43:10.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.623" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:43:10.621" endtime="20201029 12:43:11.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.529" endtime="20201029 12:43:11.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.630" endtime="20201029 12:43:11.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.627" endtime="20201029 12:43:11.889"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.901" endtime="20201029 12:43:11.921"></status>
</kw>
<msg timestamp="20201029 12:43:11.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.899" endtime="20201029 12:43:11.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.922" endtime="20201029 12:43:11.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:11.925" endtime="20201029 12:43:11.927"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:11.897" endtime="20201029 12:43:11.928"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:11.895" endtime="20201029 12:43:11.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.893" endtime="20201029 12:43:11.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:11.932" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:11.932" endtime="20201029 12:43:11.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.929" endtime="20201029 12:43:11.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.893" endtime="20201029 12:43:11.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.892" endtime="20201029 12:43:11.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.934" endtime="20201029 12:43:11.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.891" endtime="20201029 12:43:11.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.937" endtime="20201029 12:43:11.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.889" endtime="20201029 12:43:11.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.528" endtime="20201029 12:43:11.939"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.945" endtime="20201029 12:43:11.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.943" endtime="20201029 12:43:11.965"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.978" endtime="20201029 12:43:11.996"></status>
</kw>
<msg timestamp="20201029 12:43:11.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.977" endtime="20201029 12:43:11.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.000" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.998" endtime="20201029 12:43:12.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:12.001" endtime="20201029 12:43:12.003"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:11.974" endtime="20201029 12:43:12.004"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:11.972" endtime="20201029 12:43:12.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.971" endtime="20201029 12:43:12.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:12.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:12.008" endtime="20201029 12:43:12.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.006" endtime="20201029 12:43:12.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.970" endtime="20201029 12:43:12.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.969" endtime="20201029 12:43:12.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.010" endtime="20201029 12:43:12.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.968" endtime="20201029 12:43:12.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.966" endtime="20201029 12:43:12.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.942" endtime="20201029 12:43:12.013"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.022" endtime="20201029 12:43:12.038"></status>
</kw>
<msg timestamp="20201029 12:43:12.038" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.021" endtime="20201029 12:43:12.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.039" endtime="20201029 12:43:12.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.042" endtime="20201029 12:43:12.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.018" endtime="20201029 12:43:12.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.017" endtime="20201029 12:43:12.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.051" endtime="20201029 12:43:12.323"></status>
</kw>
<msg timestamp="20201029 12:43:12.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.049" endtime="20201029 12:43:12.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.326" endtime="20201029 12:43:12.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.331" endtime="20201029 12:43:12.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.046" endtime="20201029 12:43:12.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.045" endtime="20201029 12:43:12.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.337" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.527999999993763e-06}, {'diff': 1.0306000000001592e-05}, {'diff': 6.458000000000852e-06}, {'diff': 5.277999999997451e-06}, {'diff': 6.583000000004446e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:12.335" endtime="20201029 12:43:12.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.341" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.763999999994443e-06, 8.527999999993763e-06, 1.0306000000001592e-05, 6.458000000000852e-06, 5.277999999997451e-06, 6.583000000004446e-06, 4.596999999995077e-06, 1.0903000000006546e-05, 7.70...</msg>
<status status="PASS" starttime="20201029 12:43:12.338" endtime="20201029 12:43:12.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.345" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.344" endtime="20201029 12:43:12.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.347" level="INFO">VALUE: [8.763999999994443e-06, 8.527999999993763e-06, 1.0306000000001592e-05, 6.458000000000852e-06, 5.277999999997451e-06, 6.583000000004446e-06, 4.596999999995077e-06, 1.0903000000006546e-05, 7.708000000009041e-06, 8.722000000002672e-06, 6.7779999999989515e-06, 9.847000000007267e-06, 9.957999999990474e-06, 7.332999999998258e-06, 6.083999999989542e-06, 7.013999999999632e-06, 7.957999999988474e-06, 7.208999999994137e-06, 7.527999999992763e-06, 4.61200000000106e-06, 8.596999999999078e-06, 7.708000000009041e-06, 1.0333000000001258e-05, 9.29200000000796e-06, 8.207999999995663e-06]</msg>
<status status="PASS" starttime="20201029 12:43:12.346" endtime="20201029 12:43:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.342" endtime="20201029 12:43:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.015" endtime="20201029 12:43:12.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.015" endtime="20201029 12:43:12.349"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.356" endtime="20201029 12:43:12.371"></status>
</kw>
<msg timestamp="20201029 12:43:12.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.355" endtime="20201029 12:43:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.374" endtime="20201029 12:43:12.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.377" endtime="20201029 12:43:12.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.352" endtime="20201029 12:43:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.351" endtime="20201029 12:43:12.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.393" endtime="20201029 12:43:12.688"></status>
</kw>
<msg timestamp="20201029 12:43:12.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.391" endtime="20201029 12:43:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.692" endtime="20201029 12:43:12.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.701" endtime="20201029 12:43:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.387" endtime="20201029 12:43:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.384" endtime="20201029 12:43:12.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.708" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.527999999993763e-06}, {'diff': 1.0306000000001592e-05}, {'diff': 6.458000000000852e-06}, {'diff': 5.277999999997451e-06}, {'diff': 6.583000000004446e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:12.705" endtime="20201029 12:43:12.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.712" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.763999999994443e-06, 8.527999999993763e-06, 1.0306000000001592e-05, 6.458000000000852e-06, 5.277999999997451e-06, 6.583000000004446e-06, 4.596999999995077e-06, 1.0903000000006546e-05, 7.70...</msg>
<status status="PASS" starttime="20201029 12:43:12.709" endtime="20201029 12:43:12.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.880" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.715" endtime="20201029 12:43:12.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.882" level="INFO">VALUE: [8.763999999994443e-06, 8.527999999993763e-06, 1.0306000000001592e-05, 6.458000000000852e-06, 5.277999999997451e-06, 6.583000000004446e-06, 4.596999999995077e-06, 1.0903000000006546e-05, 7.708000000009041e-06, 8.722000000002672e-06, 6.7779999999989515e-06, 9.847000000007267e-06, 9.957999999990474e-06, 7.332999999998258e-06, 6.083999999989542e-06, 7.013999999999632e-06, 7.957999999988474e-06, 7.208999999994137e-06, 7.527999999992763e-06, 4.61200000000106e-06, 8.596999999999078e-06, 7.708000000009041e-06, 1.0333000000001258e-05, 9.29200000000796e-06, 8.207999999995663e-06, 8.443999999996343e-06, 8.347000000019644e-06, 8.736000000009181e-06, 6.777000000013356e-06, 7.180999999967241e-06, 8.722999999988268e-06, 9.90299999997779e-06, 7.833999999984353e-06, 4.333000000023013e-06, 1.0958000000005352e-05, 8.347000000019644e-06, 5.9729999999924566e-06, 8.457999999988974e-06, 9.04200000001465e-06, 9.88899999998516e-06, 8.513999999959498e-06, 7.346999999990889e-06, 7.2779999999994516e-06, 1.0652999999971602e-05, 5.833000000010635e-06, 1.04169999999848e-05, 8.139000000018104e-06, 7.36099999998352e-06, 6.471999999979605e-06, 9.472000000010361e-06]</msg>
<status status="PASS" starttime="20201029 12:43:12.881" endtime="20201029 12:43:12.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.713" endtime="20201029 12:43:12.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.349" endtime="20201029 12:43:12.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.349" endtime="20201029 12:43:12.884"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.892" endtime="20201029 12:43:12.907"></status>
</kw>
<msg timestamp="20201029 12:43:12.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.891" endtime="20201029 12:43:12.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.908" endtime="20201029 12:43:12.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.911" endtime="20201029 12:43:12.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.888" endtime="20201029 12:43:12.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.886" endtime="20201029 12:43:12.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.920" endtime="20201029 12:43:13.246"></status>
</kw>
<msg timestamp="20201029 12:43:13.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067004653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0670145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:12.919" endtime="20201029 12:43:13.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067004653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0670145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:13.257" endtime="20201029 12:43:13.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.267" endtime="20201029 12:43:13.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.916" endtime="20201029 12:43:13.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.914" endtime="20201029 12:43:13.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.273" level="INFO">${RESULT} = [{'diff': 9.847000000007267e-06}, {'diff': 9.957999999990474e-06}, {'diff': 7.332999999998258e-06}, {'diff': 6.083999999989542e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.957999999988474e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:13.270" endtime="20201029 12:43:13.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.279" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.847000000007267e-06, 9.957999999990474e-06, 7.332999999998258e-06, 6.083999999989542e-06, 7.013999999999632e-06, 7.957999999988474e-06, 7.208999999994137e-06, 7.527999999992763e-06, 4.6120...</msg>
<status status="PASS" starttime="20201029 12:43:13.274" endtime="20201029 12:43:13.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.283" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:13.282" endtime="20201029 12:43:13.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.286" level="INFO">VALUE: [9.847000000007267e-06, 9.957999999990474e-06, 7.332999999998258e-06, 6.083999999989542e-06, 7.013999999999632e-06, 7.957999999988474e-06, 7.208999999994137e-06, 7.527999999992763e-06, 4.61200000000106e-06, 8.596999999999078e-06, 7.708000000009041e-06, 1.0333000000001258e-05, 9.29200000000796e-06, 8.207999999995663e-06, 8.443999999996343e-06, 8.347000000019644e-06, 8.736000000009181e-06, 6.777000000013356e-06, 7.180999999967241e-06, 8.722999999988268e-06, 9.90299999997779e-06, 7.833999999984353e-06, 4.333000000023013e-06, 1.0958000000005352e-05, 8.347000000019644e-06, 5.9729999999924566e-06, 8.457999999988974e-06, 9.04200000001465e-06, 9.88899999998516e-06, 8.513999999959498e-06, 7.346999999990889e-06, 7.2779999999994516e-06, 1.0652999999971602e-05, 5.833000000010635e-06, 1.04169999999848e-05, 8.139000000018104e-06, 7.36099999998352e-06, 6.471999999979605e-06, 9.472000000010361e-06, 6.763999999992443e-06, 1.0194999999990628e-05, 7.611000000018464e-06, 8.540999999917531e-06, 8.541000000028554e-06, 7.69499999997425e-06, 7.528000000034396e-06, 8.11099999997733e-06, 7.58299999992218e-06, 7.708000000050674e-06, 6.5140000000685205e-06, 1.0111000000034842e-05, 7.152999999981979e-06, 6.848000000059251e-06, 4.84800000000174e-06, 6.152999999953224e-06, 8.027999999993263e-06, 6.347000000017644e-06, 1.158400000000892e-05, 8.917000000052688e-06, 8.763999999938932e-06, 6.555000000019184e-06, 8.709000000051148e-06, 6.19400000001491e-06, 6.861000000024653e-06]</msg>
<status status="PASS" starttime="20201029 12:43:13.284" endtime="20201029 12:43:13.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.280" endtime="20201029 12:43:13.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.885" endtime="20201029 12:43:13.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.885" endtime="20201029 12:43:13.287"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.295" endtime="20201029 12:43:13.309"></status>
</kw>
<msg timestamp="20201029 12:43:13.310" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.294" endtime="20201029 12:43:13.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.311" endtime="20201029 12:43:13.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.313" endtime="20201029 12:43:13.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.291" endtime="20201029 12:43:13.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.289" endtime="20201029 12:43:13.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.322" endtime="20201029 12:43:13.629"></status>
</kw>
<msg timestamp="20201029 12:43:13.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.391098944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.391104917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.321" endtime="20201029 12:43:13.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.391098944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.391104917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.634" endtime="20201029 12:43:13.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.644" endtime="20201029 12:43:13.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.318" endtime="20201029 12:43:13.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.317" endtime="20201029 12:43:13.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.651" level="INFO">${RESULT} = [{'diff': 5.9729999999924566e-06}, {'diff': 8.457999999988974e-06}, {'diff': 9.04200000001465e-06}, {'diff': 9.88899999998516e-06}, {'diff': 8.513999999959498e-06}, {'diff': 7.346999999990889e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:13.647" endtime="20201029 12:43:13.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.656" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.9729999999924566e-06, 8.457999999988974e-06, 9.04200000001465e-06, 9.88899999998516e-06, 8.513999999959498e-06, 7.346999999990889e-06, 7.2779999999994516e-06, 1.0652999999971602e-05, 5.833...</msg>
<status status="PASS" starttime="20201029 12:43:13.652" endtime="20201029 12:43:13.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.660" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:13.659" endtime="20201029 12:43:13.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.663" level="INFO">VALUE: [5.9729999999924566e-06, 8.457999999988974e-06, 9.04200000001465e-06, 9.88899999998516e-06, 8.513999999959498e-06, 7.346999999990889e-06, 7.2779999999994516e-06, 1.0652999999971602e-05, 5.833000000010635e-06, 1.04169999999848e-05, 8.139000000018104e-06, 7.36099999998352e-06, 6.471999999979605e-06, 9.472000000010361e-06, 6.763999999992443e-06, 1.0194999999990628e-05, 7.611000000018464e-06, 8.540999999917531e-06, 8.541000000028554e-06, 7.69499999997425e-06, 7.528000000034396e-06, 8.11099999997733e-06, 7.58299999992218e-06, 7.708000000050674e-06, 6.5140000000685205e-06, 1.0111000000034842e-05, 7.152999999981979e-06, 6.848000000059251e-06, 4.84800000000174e-06, 6.152999999953224e-06, 8.027999999993263e-06, 6.347000000017644e-06, 1.158400000000892e-05, 8.917000000052688e-06, 8.763999999938932e-06, 6.555000000019184e-06, 8.709000000051148e-06, 6.19400000001491e-06, 6.861000000024653e-06, 9.735999999982425e-06, 7.069000000026193e-06, 7.513999999986254e-06, 7.431000000002186e-06, 1.001399999989161e-05, 1.0027999999939752e-05, 1.0263999999926554e-05, 6.528000000116663e-06, 4.222999999914379e-06, 7.23600000007707e-06, 8.777999999987074e-06, 6.208000000063052e-06, 9.221999999864394e-06, 9.431000000059697e-06, 1.0347999999993363e-05, 8.221999999946661e-06, 4.93100000009683e-06, 6.9580000001678854e-06, 9.208999999898992e-06, 5.542000000025027e-06, 7.471999999841827e-06, 9.875000000159062e-06, 1.0972000000109006e-05, 6.971999999993983e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201029 12:43:13.661" endtime="20201029 12:43:13.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.656" endtime="20201029 12:43:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.288" endtime="20201029 12:43:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.288" endtime="20201029 12:43:13.664"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.673" endtime="20201029 12:43:13.687"></status>
</kw>
<msg timestamp="20201029 12:43:13.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.670" endtime="20201029 12:43:13.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.689" endtime="20201029 12:43:13.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.691" endtime="20201029 12:43:13.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.668" endtime="20201029 12:43:13.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.666" endtime="20201029 12:43:13.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.700" endtime="20201029 12:43:14.002"></status>
</kw>
<msg timestamp="20201029 12:43:14.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.916707653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.916717764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.699" endtime="20201029 12:43:14.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.916707653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.916717764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.007" endtime="20201029 12:43:14.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.018" endtime="20201029 12:43:14.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.696" endtime="20201029 12:43:14.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.694" endtime="20201029 12:43:14.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.025" level="INFO">${RESULT} = [{'diff': 1.0111000000034842e-05}, {'diff': 7.152999999981979e-06}, {'diff': 6.848000000059251e-06}, {'diff': 4.84800000000174e-06}, {'diff': 6.152999999953224e-06}, {'diff': 8.027999999993263e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:14.021" endtime="20201029 12:43:14.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.030" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0111000000034842e-05, 7.152999999981979e-06, 6.848000000059251e-06, 4.84800000000174e-06, 6.152999999953224e-06, 8.027999999993263e-06, 6.347000000017644e-06, 1.158400000000892e-05, 8.9170...</msg>
<status status="PASS" starttime="20201029 12:43:14.026" endtime="20201029 12:43:14.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.035" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:14.034" endtime="20201029 12:43:14.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.038" level="INFO">VALUE: [1.0111000000034842e-05, 7.152999999981979e-06, 6.848000000059251e-06, 4.84800000000174e-06, 6.152999999953224e-06, 8.027999999993263e-06, 6.347000000017644e-06, 1.158400000000892e-05, 8.917000000052688e-06, 8.763999999938932e-06, 6.555000000019184e-06, 8.709000000051148e-06, 6.19400000001491e-06, 6.861000000024653e-06, 9.735999999982425e-06, 7.069000000026193e-06, 7.513999999986254e-06, 7.431000000002186e-06, 1.001399999989161e-05, 1.0027999999939752e-05, 1.0263999999926554e-05, 6.528000000116663e-06, 4.222999999914379e-06, 7.23600000007707e-06, 8.777999999987074e-06, 6.208000000063052e-06, 9.221999999864394e-06, 9.431000000059697e-06, 1.0347999999993363e-05, 8.221999999946661e-06, 4.93100000009683e-06, 6.9580000001678854e-06, 9.208999999898992e-06, 5.542000000025027e-06, 7.471999999841827e-06, 9.875000000159062e-06, 1.0972000000109006e-05, 6.971999999993983e-06, 6.903000000058057e-06, 8.014000000056143e-06, 7.944000000037477e-06, 7.958999999946315e-06, 7.652999999940846e-06, 7.1390000000448595e-06, 5.15300000003549e-06, 6.653000000023113e-06, 8.097000000040211e-06, 1.115199999990324e-05, 6.777999999929563e-06, 9.444000000025099e-06, 7.152000000010261e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.332999999887235e-06, 6.708999999993637e-06, 5.27799999994194e-06, 8.958000000003352e-06, 9.777999999904807e-06, 5.846999999947755e-06, 8.834000000179643e-06, 8.27800000013923e-06, 1.1139000000159882e-05, 6.777999999929563e-06, 7.4029999999059015e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.036" endtime="20201029 12:43:14.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.031" endtime="20201029 12:43:14.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.665" endtime="20201029 12:43:14.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.665" endtime="20201029 12:43:14.039"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.047" endtime="20201029 12:43:14.061"></status>
</kw>
<msg timestamp="20201029 12:43:14.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.045" endtime="20201029 12:43:14.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.063" endtime="20201029 12:43:14.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.065" endtime="20201029 12:43:14.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.043" endtime="20201029 12:43:14.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.041" endtime="20201029 12:43:14.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.074" endtime="20201029 12:43:14.378"></status>
</kw>
<msg timestamp="20201029 12:43:14.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.309869486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.309875694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.073" endtime="20201029 12:43:14.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.309869486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.309875694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.383" endtime="20201029 12:43:14.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.393" endtime="20201029 12:43:14.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.070" endtime="20201029 12:43:14.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.068" endtime="20201029 12:43:14.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.404" level="INFO">${RESULT} = [{'diff': 6.208000000063052e-06}, {'diff': 9.221999999864394e-06}, {'diff': 9.431000000059697e-06}, {'diff': 1.0347999999993363e-05}, {'diff': 8.221999999946661e-06}, {'diff': 4.93100000009683e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:14.400" endtime="20201029 12:43:14.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.412" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.208000000063052e-06, 9.221999999864394e-06, 9.431000000059697e-06, 1.0347999999993363e-05, 8.221999999946661e-06, 4.93100000009683e-06, 6.9580000001678854e-06, 9.208999999898992e-06, 5.542...</msg>
<status status="PASS" starttime="20201029 12:43:14.405" endtime="20201029 12:43:14.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.418" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:14.416" endtime="20201029 12:43:14.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.421" level="INFO">VALUE: [6.208000000063052e-06, 9.221999999864394e-06, 9.431000000059697e-06, 1.0347999999993363e-05, 8.221999999946661e-06, 4.93100000009683e-06, 6.9580000001678854e-06, 9.208999999898992e-06, 5.542000000025027e-06, 7.471999999841827e-06, 9.875000000159062e-06, 1.0972000000109006e-05, 6.971999999993983e-06, 6.903000000058057e-06, 8.014000000056143e-06, 7.944000000037477e-06, 7.958999999946315e-06, 7.652999999940846e-06, 7.1390000000448595e-06, 5.15300000003549e-06, 6.653000000023113e-06, 8.097000000040211e-06, 1.115199999990324e-05, 6.777999999929563e-06, 9.444000000025099e-06, 7.152000000010261e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.332999999887235e-06, 6.708999999993637e-06, 5.27799999994194e-06, 8.958000000003352e-06, 9.777999999904807e-06, 5.846999999947755e-06, 8.834000000179643e-06, 8.27800000013923e-06, 1.1139000000159882e-05, 6.777999999929563e-06, 7.4029999999059015e-06, 9.95800000014313e-06, 6.847000000309578e-06, 5.832999999899613e-06, 5.541000000164331e-06, 1.020900000003877e-05, 5.959000000110848e-06, 9.06899999986166e-06, 8.972000000273539e-06, 5.417000000118577e-06, 9.973000000051968e-06, 9.833000000014636e-06, 1.0458000000213019e-05, 7.264000000173354e-06, 9.874999999937017e-06, 7.070000000108934e-06, 7.348000000018118e-06, 8.500000000299934e-06, 5.999999999950489e-06, 7.847000000005266e-06, 7.540999999999798e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.556000000188192e-06, 9.014000000195921e-06, 6.8469999998654885e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.419" endtime="20201029 12:43:14.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.413" endtime="20201029 12:43:14.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.040" endtime="20201029 12:43:14.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.039" endtime="20201029 12:43:14.423"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.433" endtime="20201029 12:43:14.447"></status>
</kw>
<msg timestamp="20201029 12:43:14.447" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.431" endtime="20201029 12:43:14.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.448" endtime="20201029 12:43:14.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.451" endtime="20201029 12:43:14.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.428" endtime="20201029 12:43:14.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.427" endtime="20201029 12:43:14.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.460" endtime="20201029 12:43:14.784"></status>
</kw>
<msg timestamp="20201029 12:43:14.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.678390931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.678398083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.458" endtime="20201029 12:43:14.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.678390931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.678398083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.789" endtime="20201029 12:43:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.799" endtime="20201029 12:43:14.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.456" endtime="20201029 12:43:14.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.454" endtime="20201029 12:43:14.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.806" level="INFO">${RESULT} = [{'diff': 7.152000000010261e-06}, {'diff': 8.096999999818166e-06}, {'diff': 7.2220000000289275e-06}, {'diff': 7.332999999887235e-06}, {'diff': 6.708999999993637e-06}, {'diff': 5.27799999994194e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:14.803" endtime="20201029 12:43:14.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.811" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.152000000010261e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.332999999887235e-06, 6.708999999993637e-06, 5.27799999994194e-06, 8.958000000003352e-06, 9.777999999904807e-06, 5.8469...</msg>
<status status="PASS" starttime="20201029 12:43:14.807" endtime="20201029 12:43:14.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.815" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:14.814" endtime="20201029 12:43:14.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.818" level="INFO">VALUE: [7.152000000010261e-06, 8.096999999818166e-06, 7.2220000000289275e-06, 7.332999999887235e-06, 6.708999999993637e-06, 5.27799999994194e-06, 8.958000000003352e-06, 9.777999999904807e-06, 5.846999999947755e-06, 8.834000000179643e-06, 8.27800000013923e-06, 1.1139000000159882e-05, 6.777999999929563e-06, 7.4029999999059015e-06, 9.95800000014313e-06, 6.847000000309578e-06, 5.832999999899613e-06, 5.541000000164331e-06, 1.020900000003877e-05, 5.959000000110848e-06, 9.06899999986166e-06, 8.972000000273539e-06, 5.417000000118577e-06, 9.973000000051968e-06, 9.833000000014636e-06, 1.0458000000213019e-05, 7.264000000173354e-06, 9.874999999937017e-06, 7.070000000108934e-06, 7.348000000018118e-06, 8.500000000299934e-06, 5.999999999950489e-06, 7.847000000005266e-06, 7.540999999999798e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.556000000188192e-06, 9.014000000195921e-06, 6.8469999998654885e-06, 6.582999999782402e-06, 9.152000000067773e-06, 7.888999999927648e-06, 7.013999999916365e-06, 1.045799999976893e-05, 7.348000000018118e-06, 6.486000000194281e-06, 6.527000000033922e-06, 8.846999999700955e-06, 9.847999999923474e-06, 9.083999999770498e-06, 7.652999999940846e-06, 8.526999999869389e-06, 7.388999999857759e-06, 7.58299999992218e-06, 5.291999999990082e-06, 1.1929999999882313e-05, 1.140299999979888e-05, 5.15300000003549e-06, 8.889000000067426e-06, 7.348000000018118e-06, 8.361999999983993e-06, 8.221999999946661e-06, 7.1390000000448595e-06, 6.819000000213293e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.816" endtime="20201029 12:43:14.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.812" endtime="20201029 12:43:14.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.425" endtime="20201029 12:43:14.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.424" endtime="20201029 12:43:14.820"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.828" endtime="20201029 12:43:14.843"></status>
</kw>
<msg timestamp="20201029 12:43:14.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.827" endtime="20201029 12:43:14.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.846" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.845" endtime="20201029 12:43:14.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.847" endtime="20201029 12:43:14.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.823" endtime="20201029 12:43:14.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.822" endtime="20201029 12:43:14.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.856" endtime="20201029 12:43:15.166"></status>
</kw>
<msg timestamp="20201029 12:43:15.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.0431945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.043204958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:14.855" endtime="20201029 12:43:15.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.0431945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.043204958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:15.171" endtime="20201029 12:43:15.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.181" endtime="20201029 12:43:15.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.852" endtime="20201029 12:43:15.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.850" endtime="20201029 12:43:15.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.188" level="INFO">${RESULT} = [{'diff': 1.0458000000213019e-05}, {'diff': 7.264000000173354e-06}, {'diff': 9.874999999937017e-06}, {'diff': 7.070000000108934e-06}, {'diff': 7.348000000018118e-06}, {'diff': 8.500000000299934e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:15.184" endtime="20201029 12:43:15.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.193" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0458000000213019e-05, 7.264000000173354e-06, 9.874999999937017e-06, 7.070000000108934e-06, 7.348000000018118e-06, 8.500000000299934e-06, 5.999999999950489e-06, 7.847000000005266e-06, 7.540...</msg>
<status status="PASS" starttime="20201029 12:43:15.189" endtime="20201029 12:43:15.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.198" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:15.197" endtime="20201029 12:43:15.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.200" level="INFO">VALUE: [1.0458000000213019e-05, 7.264000000173354e-06, 9.874999999937017e-06, 7.070000000108934e-06, 7.348000000018118e-06, 8.500000000299934e-06, 5.999999999950489e-06, 7.847000000005266e-06, 7.540999999999798e-06, 6.652999999801068e-06, 9.528000000091907e-06, 9.556000000188192e-06, 9.014000000195921e-06, 6.8469999998654885e-06, 6.582999999782402e-06, 9.152000000067773e-06, 7.888999999927648e-06, 7.013999999916365e-06, 1.045799999976893e-05, 7.348000000018118e-06, 6.486000000194281e-06, 6.527000000033922e-06, 8.846999999700955e-06, 9.847999999923474e-06, 9.083999999770498e-06, 7.652999999940846e-06, 8.526999999869389e-06, 7.388999999857759e-06, 7.58299999992218e-06, 5.291999999990082e-06, 1.1929999999882313e-05, 1.140299999979888e-05, 5.15300000003549e-06, 8.889000000067426e-06, 7.348000000018118e-06, 8.361999999983993e-06, 8.221999999946661e-06, 7.1390000000448595e-06, 6.819000000213293e-06, 7.5700000001788226e-06, 6.1389999999050815e-06, 8.610999999714153e-06, 8.583000000061958e-06, 1.0346999999910622e-05, 6.082999999712513e-06, 9.472000000343428e-06, 8.666999999906722e-06, 1.1346999999606311e-05, 7.915999999941192e-06, 1.1430999999895164e-05, 8.972000000273539e-06, 1.0389000000277093e-05, 1.040300000010319e-05, 8.695000000003006e-06, 6.721999999736994e-06, 4.681000000061886e-06, 6.944000000341788e-06, 7.957999999863574e-06, 9.6670000000465e-06, 8.082999999992069e-06, 8.18099999966293e-06, 8.208000000120563e-06, 8.52799999995213e-06, 7.042000000012649e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.199" endtime="20201029 12:43:15.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.194" endtime="20201029 12:43:15.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.820" endtime="20201029 12:43:15.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.820" endtime="20201029 12:43:15.202"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.210" endtime="20201029 12:43:15.223"></status>
</kw>
<msg timestamp="20201029 12:43:15.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.208" endtime="20201029 12:43:15.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.225" endtime="20201029 12:43:15.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.227" endtime="20201029 12:43:15.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.205" endtime="20201029 12:43:15.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.204" endtime="20201029 12:43:15.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.237" endtime="20201029 12:43:15.547"></status>
</kw>
<msg timestamp="20201029 12:43:15.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.419286458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.419294111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.235" endtime="20201029 12:43:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.419286458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.419294111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.552" endtime="20201029 12:43:15.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.562" endtime="20201029 12:43:15.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.232" endtime="20201029 12:43:15.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.231" endtime="20201029 12:43:15.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.569" level="INFO">${RESULT} = [{'diff': 7.652999999940846e-06}, {'diff': 8.526999999869389e-06}, {'diff': 7.388999999857759e-06}, {'diff': 7.58299999992218e-06}, {'diff': 5.291999999990082e-06}, {'diff': 1.1929999999882313e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:15.566" endtime="20201029 12:43:15.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.575" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.652999999940846e-06, 8.526999999869389e-06, 7.388999999857759e-06, 7.58299999992218e-06, 5.291999999990082e-06, 1.1929999999882313e-05, 1.140299999979888e-05, 5.15300000003549e-06, 8.88900...</msg>
<status status="PASS" starttime="20201029 12:43:15.570" endtime="20201029 12:43:15.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.579" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:15.578" endtime="20201029 12:43:15.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.582" level="INFO">VALUE: [7.652999999940846e-06, 8.526999999869389e-06, 7.388999999857759e-06, 7.58299999992218e-06, 5.291999999990082e-06, 1.1929999999882313e-05, 1.140299999979888e-05, 5.15300000003549e-06, 8.889000000067426e-06, 7.348000000018118e-06, 8.361999999983993e-06, 8.221999999946661e-06, 7.1390000000448595e-06, 6.819000000213293e-06, 7.5700000001788226e-06, 6.1389999999050815e-06, 8.610999999714153e-06, 8.583000000061958e-06, 1.0346999999910622e-05, 6.082999999712513e-06, 9.472000000343428e-06, 8.666999999906722e-06, 1.1346999999606311e-05, 7.915999999941192e-06, 1.1430999999895164e-05, 8.972000000273539e-06, 1.0389000000277093e-05, 1.040300000010319e-05, 8.695000000003006e-06, 6.721999999736994e-06, 4.681000000061886e-06, 6.944000000341788e-06, 7.957999999863574e-06, 9.6670000000465e-06, 8.082999999992069e-06, 8.18099999966293e-06, 8.208000000120563e-06, 8.52799999995213e-06, 7.042000000012649e-06, 9.625000000124118e-06, 7.749999999973056e-06, 6.111000000252886e-06, 7.207999999980785e-06, 9.653000000220402e-06, 8.069000000165971e-06, 5.320000000086367e-06, 8.47300000028639e-06, 5.45899999959687e-06, 8.97199999982945e-06, 7.332999999665191e-06, 5.971999999854205e-06, 6.598000000135329e-06, 9.153000000150513e-06, 6.777999999929563e-06, 6.930999999710252e-06, 6.79199999975566e-06, 9.903000000033302e-06, 7.028000000186552e-06, 8.388999999997537e-06, 8.944000000177255e-06, 6.221999999667105e-06, 5.263000000255147e-06, 9.083000000131847e-06, 7.888999999927648e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.581" endtime="20201029 12:43:15.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.576" endtime="20201029 12:43:15.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.202" endtime="20201029 12:43:15.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.202" endtime="20201029 12:43:15.584"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.591" endtime="20201029 12:43:15.606"></status>
</kw>
<msg timestamp="20201029 12:43:15.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.590" endtime="20201029 12:43:15.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.609" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.608" endtime="20201029 12:43:15.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.610" endtime="20201029 12:43:15.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.587" endtime="20201029 12:43:15.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.586" endtime="20201029 12:43:15.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.621" endtime="20201029 12:43:15.933"></status>
</kw>
<msg timestamp="20201029 12:43:15.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.805742278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.80575125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:15.619" endtime="20201029 12:43:15.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.805742278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.80575125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:15.938" endtime="20201029 12:43:15.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.948" endtime="20201029 12:43:15.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.615" endtime="20201029 12:43:15.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.614" endtime="20201029 12:43:15.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.955" level="INFO">${RESULT} = [{'diff': 8.972000000273539e-06}, {'diff': 1.0389000000277093e-05}, {'diff': 1.040300000010319e-05}, {'diff': 8.695000000003006e-06}, {'diff': 6.721999999736994e-06}, {'diff': 4.681000000061886e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:15.951" endtime="20201029 12:43:15.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.960" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.972000000273539e-06, 1.0389000000277093e-05, 1.040300000010319e-05, 8.695000000003006e-06, 6.721999999736994e-06, 4.681000000061886e-06, 6.944000000341788e-06, 7.957999999863574e-06, 9.667...</msg>
<status status="PASS" starttime="20201029 12:43:15.956" endtime="20201029 12:43:15.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.964" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:15.963" endtime="20201029 12:43:15.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.968" level="INFO">VALUE: [8.972000000273539e-06, 1.0389000000277093e-05, 1.040300000010319e-05, 8.695000000003006e-06, 6.721999999736994e-06, 4.681000000061886e-06, 6.944000000341788e-06, 7.957999999863574e-06, 9.6670000000465e-06, 8.082999999992069e-06, 8.18099999966293e-06, 8.208000000120563e-06, 8.52799999995213e-06, 7.042000000012649e-06, 9.625000000124118e-06, 7.749999999973056e-06, 6.111000000252886e-06, 7.207999999980785e-06, 9.653000000220402e-06, 8.069000000165971e-06, 5.320000000086367e-06, 8.47300000028639e-06, 5.45899999959687e-06, 8.97199999982945e-06, 7.332999999665191e-06, 5.971999999854205e-06, 6.598000000135329e-06, 9.153000000150513e-06, 6.777999999929563e-06, 6.930999999710252e-06, 6.79199999975566e-06, 9.903000000033302e-06, 7.028000000186552e-06, 8.388999999997537e-06, 8.944000000177255e-06, 6.221999999667105e-06, 5.263000000255147e-06, 9.083000000131847e-06, 7.888999999927648e-06, 1.065299999991609e-05, 9.833000000014636e-06, 6.09800000006544e-06, 9.931000000129586e-06, 9.153000000150513e-06, 1.1208999999734459e-05, 1.0527999999787596e-05, 7.4859999998899696e-06, 8.097999999900907e-06, 5.028000000351085e-06, 7.528000000256441e-06, 7.63899999967066e-06, 9.304999999848462e-06, 8.77799999976503e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.666999999931477e-06, 7.207999999980785e-06, 6.653000000245157e-06, 7.763999999799154e-06, 6.34799999987834e-06, 7.666000000128292e-06, 8.708000000190452e-06, 6.764000000103465e-06, 8.653000000080624e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.965" endtime="20201029 12:43:15.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.961" endtime="20201029 12:43:15.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.584" endtime="20201029 12:43:15.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.584" endtime="20201029 12:43:15.969"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.977" endtime="20201029 12:43:15.991"></status>
</kw>
<msg timestamp="20201029 12:43:15.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.976" endtime="20201029 12:43:15.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.994" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.993" endtime="20201029 12:43:15.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.995" endtime="20201029 12:43:15.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.973" endtime="20201029 12:43:15.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.971" endtime="20201029 12:43:15.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.005" endtime="20201029 12:43:16.321"></status>
</kw>
<msg timestamp="20201029 12:43:16.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.176126028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.176132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:16.003" endtime="20201029 12:43:16.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.176126028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.176132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:16.326" endtime="20201029 12:43:16.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.336" endtime="20201029 12:43:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.000" endtime="20201029 12:43:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.999" endtime="20201029 12:43:16.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.343" level="INFO">${RESULT} = [{'diff': 5.971999999854205e-06}, {'diff': 6.598000000135329e-06}, {'diff': 9.153000000150513e-06}, {'diff': 6.777999999929563e-06}, {'diff': 6.930999999710252e-06}, {'diff': 6.79199999975566e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:16.339" endtime="20201029 12:43:16.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.348" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.971999999854205e-06, 6.598000000135329e-06, 9.153000000150513e-06, 6.777999999929563e-06, 6.930999999710252e-06, 6.79199999975566e-06, 9.903000000033302e-06, 7.028000000186552e-06, 8.38899...</msg>
<status status="PASS" starttime="20201029 12:43:16.344" endtime="20201029 12:43:16.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:16.352" endtime="20201029 12:43:16.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.355" level="INFO">VALUE: [5.971999999854205e-06, 6.598000000135329e-06, 9.153000000150513e-06, 6.777999999929563e-06, 6.930999999710252e-06, 6.79199999975566e-06, 9.903000000033302e-06, 7.028000000186552e-06, 8.388999999997537e-06, 8.944000000177255e-06, 6.221999999667105e-06, 5.263000000255147e-06, 9.083000000131847e-06, 7.888999999927648e-06, 1.065299999991609e-05, 9.833000000014636e-06, 6.09800000006544e-06, 9.931000000129586e-06, 9.153000000150513e-06, 1.1208999999734459e-05, 1.0527999999787596e-05, 7.4859999998899696e-06, 8.097999999900907e-06, 5.028000000351085e-06, 7.528000000256441e-06, 7.63899999967066e-06, 9.304999999848462e-06, 8.77799999976503e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.666999999931477e-06, 7.207999999980785e-06, 6.653000000245157e-06, 7.763999999799154e-06, 6.34799999987834e-06, 7.666000000128292e-06, 8.708000000190452e-06, 6.764000000103465e-06, 8.653000000080624e-06, 4.902999999778501e-06, 6.44499999991055e-06, 1.0277000000336045e-05, 6.3049999998732176e-06, 7.110999999948575e-06, 8.208999999759214e-06, 7.973000000216501e-06, 9.471999999899339e-06, 7.540999999999798e-06, 8.27800000013923e-06, 1.1222000000365995e-05, 1.0346999999910622e-05, 7.917000000023933e-06, 7.0970000001224776e-06, 7.0970000001224776e-06, 8.332999999804969e-06, 9.26400000000882e-06, 7.944999999676128e-06, 8.320000000061611e-06, 5.652000000022639e-06, 6.722000000181083e-06, 8.388999999997537e-06, 7.1660000000584034e-06, 7.903000000197835e-06, 7.083999999935031e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.354" endtime="20201029 12:43:16.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.349" endtime="20201029 12:43:16.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.970" endtime="20201029 12:43:16.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.969" endtime="20201029 12:43:16.357"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.365" endtime="20201029 12:43:16.379"></status>
</kw>
<msg timestamp="20201029 12:43:16.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.363" endtime="20201029 12:43:16.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.381" endtime="20201029 12:43:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.383" endtime="20201029 12:43:16.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.361" endtime="20201029 12:43:16.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.359" endtime="20201029 12:43:16.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.392" endtime="20201029 12:43:16.710"></status>
</kw>
<msg timestamp="20201029 12:43:16.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.546249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.546257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.391" endtime="20201029 12:43:16.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.546249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.546257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.715" endtime="20201029 12:43:16.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.726" endtime="20201029 12:43:16.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.388" endtime="20201029 12:43:16.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.387" endtime="20201029 12:43:16.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.732" level="INFO">${RESULT} = [{'diff': 7.63899999967066e-06}, {'diff': 9.304999999848462e-06}, {'diff': 8.77799999976503e-06}, {'diff': 8.708000000190452e-06}, {'diff': 8.832999999874858e-06}, {'diff': 5.666999999931477e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:16.729" endtime="20201029 12:43:16.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.737" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.63899999967066e-06, 9.304999999848462e-06, 8.77799999976503e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.666999999931477e-06, 7.207999999980785e-06, 6.653000000245157e-06, 7.763999...</msg>
<status status="PASS" starttime="20201029 12:43:16.733" endtime="20201029 12:43:16.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.742" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:16.741" endtime="20201029 12:43:16.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.744" level="INFO">VALUE: [7.63899999967066e-06, 9.304999999848462e-06, 8.77799999976503e-06, 8.708000000190452e-06, 8.832999999874858e-06, 5.666999999931477e-06, 7.207999999980785e-06, 6.653000000245157e-06, 7.763999999799154e-06, 6.34799999987834e-06, 7.666000000128292e-06, 8.708000000190452e-06, 6.764000000103465e-06, 8.653000000080624e-06, 4.902999999778501e-06, 6.44499999991055e-06, 1.0277000000336045e-05, 6.3049999998732176e-06, 7.110999999948575e-06, 8.208999999759214e-06, 7.973000000216501e-06, 9.471999999899339e-06, 7.540999999999798e-06, 8.27800000013923e-06, 1.1222000000365995e-05, 1.0346999999910622e-05, 7.917000000023933e-06, 7.0970000001224776e-06, 7.0970000001224776e-06, 8.332999999804969e-06, 9.26400000000882e-06, 7.944999999676128e-06, 8.320000000061611e-06, 5.652000000022639e-06, 6.722000000181083e-06, 8.388999999997537e-06, 7.1660000000584034e-06, 7.903000000197835e-06, 7.083999999935031e-06, 1.1666999999881966e-05, 7.598000000719196e-06, 6.334000000052242e-06, 8.541000000583665e-06, 7.194000000154688e-06, 6.334000000052242e-06, 5.0279999994629065e-06, 1.0417000000373378e-05, 9.791999999286816e-06, 7.776999999542511e-06, 8.33299999936088e-06, 6.083999999795253e-06, 8.098000000344996e-06, 8.417000000093822e-06, 9.291999999661016e-06, 8.42999999939309e-06, 7.596999999748277e-06, 8.097999999456817e-06, 7.861999999470015e-06, 8.069999999804622e-06, 6.276999999776933e-06, 1.1832999999406013e-05, 6.861000000135675e-06, 8.334000000331798e-06, 7.180999999967241e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.743" endtime="20201029 12:43:16.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.738" endtime="20201029 12:43:16.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.358" endtime="20201029 12:43:16.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.357" endtime="20201029 12:43:16.746"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.755" endtime="20201029 12:43:16.770"></status>
</kw>
<msg timestamp="20201029 12:43:16.771" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.752" endtime="20201029 12:43:16.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.775" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.773" endtime="20201029 12:43:16.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.776" endtime="20201029 12:43:16.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.750" endtime="20201029 12:43:16.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.748" endtime="20201029 12:43:16.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.788" endtime="20201029 12:43:17.102"></status>
</kw>
<msg timestamp="20201029 12:43:17.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.921139514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.921149861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.786" endtime="20201029 12:43:17.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.921139514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.921149861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.108" endtime="20201029 12:43:17.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.117" endtime="20201029 12:43:17.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.781" endtime="20201029 12:43:17.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.780" endtime="20201029 12:43:17.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.125" level="INFO">${RESULT} = [{'diff': 1.0346999999910622e-05}, {'diff': 7.917000000023933e-06}, {'diff': 7.0970000001224776e-06}, {'diff': 7.0970000001224776e-06}, {'diff': 8.332999999804969e-06}, {'diff': 9.26400000000882e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:17.121" endtime="20201029 12:43:17.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.130" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0346999999910622e-05, 7.917000000023933e-06, 7.0970000001224776e-06, 7.0970000001224776e-06, 8.332999999804969e-06, 9.26400000000882e-06, 7.944999999676128e-06, 8.320000000061611e-06, 5.65...</msg>
<status status="PASS" starttime="20201029 12:43:17.126" endtime="20201029 12:43:17.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.134" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:17.133" endtime="20201029 12:43:17.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.137" level="INFO">VALUE: [1.0346999999910622e-05, 7.917000000023933e-06, 7.0970000001224776e-06, 7.0970000001224776e-06, 8.332999999804969e-06, 9.26400000000882e-06, 7.944999999676128e-06, 8.320000000061611e-06, 5.652000000022639e-06, 6.722000000181083e-06, 8.388999999997537e-06, 7.1660000000584034e-06, 7.903000000197835e-06, 7.083999999935031e-06, 1.1666999999881966e-05, 7.598000000719196e-06, 6.334000000052242e-06, 8.541000000583665e-06, 7.194000000154688e-06, 6.334000000052242e-06, 5.0279999994629065e-06, 1.0417000000373378e-05, 9.791999999286816e-06, 7.776999999542511e-06, 8.33299999936088e-06, 6.083999999795253e-06, 8.098000000344996e-06, 8.417000000093822e-06, 9.291999999661016e-06, 8.42999999939309e-06, 7.596999999748277e-06, 8.097999999456817e-06, 7.861999999470015e-06, 8.069999999804622e-06, 6.276999999776933e-06, 1.1832999999406013e-05, 6.861000000135675e-06, 8.334000000331798e-06, 7.180999999967241e-06, 9.193999999546065e-06, 9.084000000214587e-06, 1.0028000000161796e-05, 6.749999999833278e-06, 6.749999999833278e-06, 8.596999999888055e-06, 9.458000000073241e-06, 1.030600000007098e-05, 1.0471999999595027e-05, 7.403000000572035e-06, 5.832999999455524e-06, 7.777999999625251e-06, 6.347000000239689e-06, 6.917000000328244e-06, 1.0028000000161796e-05, 1.0278000000418785e-05, 6.278000000747852e-06, 1.1388999999972782e-05, 8.860999999527053e-06, 6.221999999667105e-06, 9.847999999479384e-06, 7.639000000558838e-06, 9.528000000535997e-06, 6.389000000162071e-06, 6.235999999937292e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.136" endtime="20201029 12:43:17.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.131" endtime="20201029 12:43:17.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.747" endtime="20201029 12:43:17.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.746" endtime="20201029 12:43:17.139"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.146" endtime="20201029 12:43:17.161"></status>
</kw>
<msg timestamp="20201029 12:43:17.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.145" endtime="20201029 12:43:17.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.162" endtime="20201029 12:43:17.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.165" endtime="20201029 12:43:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.142" endtime="20201029 12:43:17.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.141" endtime="20201029 12:43:17.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.174" endtime="20201029 12:43:17.488"></status>
</kw>
<msg timestamp="20201029 12:43:17.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.298736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.298743042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.172" endtime="20201029 12:43:17.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.298736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.298743042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.493" endtime="20201029 12:43:17.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.503" endtime="20201029 12:43:17.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.170" endtime="20201029 12:43:17.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.168" endtime="20201029 12:43:17.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.510" level="INFO">${RESULT} = [{'diff': 6.083999999795253e-06}, {'diff': 8.098000000344996e-06}, {'diff': 8.417000000093822e-06}, {'diff': 9.291999999661016e-06}, {'diff': 8.42999999939309e-06}, {'diff': 7.596999999748277e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:17.507" endtime="20201029 12:43:17.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.516" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.083999999795253e-06, 8.098000000344996e-06, 8.417000000093822e-06, 9.291999999661016e-06, 8.42999999939309e-06, 7.596999999748277e-06, 8.097999999456817e-06, 7.861999999470015e-06, 8.06999...</msg>
<status status="PASS" starttime="20201029 12:43:17.511" endtime="20201029 12:43:17.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.521" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:17.520" endtime="20201029 12:43:17.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.523" level="INFO">VALUE: [6.083999999795253e-06, 8.098000000344996e-06, 8.417000000093822e-06, 9.291999999661016e-06, 8.42999999939309e-06, 7.596999999748277e-06, 8.097999999456817e-06, 7.861999999470015e-06, 8.069999999804622e-06, 6.276999999776933e-06, 1.1832999999406013e-05, 6.861000000135675e-06, 8.334000000331798e-06, 7.180999999967241e-06, 9.193999999546065e-06, 9.084000000214587e-06, 1.0028000000161796e-05, 6.749999999833278e-06, 6.749999999833278e-06, 8.596999999888055e-06, 9.458000000073241e-06, 1.030600000007098e-05, 1.0471999999595027e-05, 7.403000000572035e-06, 5.832999999455524e-06, 7.777999999625251e-06, 6.347000000239689e-06, 6.917000000328244e-06, 1.0028000000161796e-05, 1.0278000000418785e-05, 6.278000000747852e-06, 1.1388999999972782e-05, 8.860999999527053e-06, 6.221999999667105e-06, 9.847999999479384e-06, 7.639000000558838e-06, 9.528000000535997e-06, 6.389000000162071e-06, 6.235999999937292e-06, 8.069999999804622e-06, 8.778000000653208e-06, 1.1513999999657187e-05, 4.4030000001527014e-06, 8.139000000184637e-06, 9.152000000511862e-06, 8.27800000013923e-06, 9.152999999706424e-06, 9.278000000279008e-06, 7.971999999689672e-06, 9.401999999880672e-06, 5.778000000233874e-06, 1.1041999999683583e-05, 1.0834000000237154e-05, 6.778000000373652e-06, 5.707999999771118e-06, 9.582999999757646e-06, 7.0279999997424625e-06, 5.848000000696629e-06, 8.56900000023586e-06, 1.1027999999413396e-05, 5.0279999994629065e-06, 9.401999999880672e-06, 8.47200000020365e-06, 1.036200000026355e-05]</msg>
<status status="PASS" starttime="20201029 12:43:17.522" endtime="20201029 12:43:17.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.517" endtime="20201029 12:43:17.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.139" endtime="20201029 12:43:17.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.139" endtime="20201029 12:43:17.525"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.533" endtime="20201029 12:43:17.547"></status>
</kw>
<msg timestamp="20201029 12:43:17.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.531" endtime="20201029 12:43:17.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.550" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.549" endtime="20201029 12:43:17.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.551" endtime="20201029 12:43:17.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.529" endtime="20201029 12:43:17.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.527" endtime="20201029 12:43:17.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.560" endtime="20201029 12:43:17.879"></status>
</kw>
<msg timestamp="20201029 12:43:17.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.679605472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.67961325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:17.559" endtime="20201029 12:43:17.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.679605472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.67961325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:17.885" endtime="20201029 12:43:17.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.898" endtime="20201029 12:43:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.556" endtime="20201029 12:43:17.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.555" endtime="20201029 12:43:17.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.908" level="INFO">${RESULT} = [{'diff': 7.777999999625251e-06}, {'diff': 6.347000000239689e-06}, {'diff': 6.917000000328244e-06}, {'diff': 1.0028000000161796e-05}, {'diff': 1.0278000000418785e-05}, {'diff': 6.278000000747852e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:17.904" endtime="20201029 12:43:17.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.912" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.777999999625251e-06, 6.347000000239689e-06, 6.917000000328244e-06, 1.0028000000161796e-05, 1.0278000000418785e-05, 6.278000000747852e-06, 1.1388999999972782e-05, 8.860999999527053e-06, 6.2...</msg>
<status status="PASS" starttime="20201029 12:43:17.909" endtime="20201029 12:43:17.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:17.916" endtime="20201029 12:43:17.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.919" level="INFO">VALUE: [7.777999999625251e-06, 6.347000000239689e-06, 6.917000000328244e-06, 1.0028000000161796e-05, 1.0278000000418785e-05, 6.278000000747852e-06, 1.1388999999972782e-05, 8.860999999527053e-06, 6.221999999667105e-06, 9.847999999479384e-06, 7.639000000558838e-06, 9.528000000535997e-06, 6.389000000162071e-06, 6.235999999937292e-06, 8.069999999804622e-06, 8.778000000653208e-06, 1.1513999999657187e-05, 4.4030000001527014e-06, 8.139000000184637e-06, 9.152000000511862e-06, 8.27800000013923e-06, 9.152999999706424e-06, 9.278000000279008e-06, 7.971999999689672e-06, 9.401999999880672e-06, 5.778000000233874e-06, 1.1041999999683583e-05, 1.0834000000237154e-05, 6.778000000373652e-06, 5.707999999771118e-06, 9.582999999757646e-06, 7.0279999997424625e-06, 5.848000000696629e-06, 8.56900000023586e-06, 1.1027999999413396e-05, 5.0279999994629065e-06, 9.401999999880672e-06, 8.47200000020365e-06, 1.036200000026355e-05, 6.708000000799075e-06, 6.722000000181083e-06, 8.27800000013923e-06, 6.944999999980439e-06, 6.041999999872871e-06, 6.63900000041906e-06, 6.915999999357325e-06, 5.583000000086713e-06, 1.0167000000116388e-05, 9.792000000174994e-06, 5.318999999559537e-06, 6.903000000058057e-06, 8.207999999676474e-06, 6.582999999338313e-06, 5.347000000099911e-06, 9.528000000535997e-06, 9.028000000022018e-06, 6.73700000053401e-06, 6.88899999978787e-06, 9.653000000220402e-06, 5.833000000343702e-06, 9.680999999872597e-06, 5.0970000007311e-06, 7.444000000411677e-06, 6.402999999544079e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.918" endtime="20201029 12:43:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.913" endtime="20201029 12:43:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.526" endtime="20201029 12:43:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.525" endtime="20201029 12:43:17.921"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.930" endtime="20201029 12:43:17.944"></status>
</kw>
<msg timestamp="20201029 12:43:17.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.928" endtime="20201029 12:43:17.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.945" endtime="20201029 12:43:17.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.948" endtime="20201029 12:43:17.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.925" endtime="20201029 12:43:17.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.923" endtime="20201029 12:43:17.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.957" endtime="20201029 12:43:18.264"></status>
</kw>
<msg timestamp="20201029 12:43:18.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.062265597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.062271375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.955" endtime="20201029 12:43:18.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.062265597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.062271375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.269" endtime="20201029 12:43:18.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.279" endtime="20201029 12:43:18.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.953" endtime="20201029 12:43:18.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.951" endtime="20201029 12:43:18.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.286" level="INFO">${RESULT} = [{'diff': 5.778000000233874e-06}, {'diff': 1.1041999999683583e-05}, {'diff': 1.0834000000237154e-05}, {'diff': 6.778000000373652e-06}, {'diff': 5.707999999771118e-06}, {'diff': 9.582999999757646e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:18.283" endtime="20201029 12:43:18.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.292" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.778000000233874e-06, 1.1041999999683583e-05, 1.0834000000237154e-05, 6.778000000373652e-06, 5.707999999771118e-06, 9.582999999757646e-06, 7.0279999997424625e-06, 5.848000000696629e-06, 8.5...</msg>
<status status="PASS" starttime="20201029 12:43:18.287" endtime="20201029 12:43:18.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.296" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:18.295" endtime="20201029 12:43:18.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.299" level="INFO">VALUE: [5.778000000233874e-06, 1.1041999999683583e-05, 1.0834000000237154e-05, 6.778000000373652e-06, 5.707999999771118e-06, 9.582999999757646e-06, 7.0279999997424625e-06, 5.848000000696629e-06, 8.56900000023586e-06, 1.1027999999413396e-05, 5.0279999994629065e-06, 9.401999999880672e-06, 8.47200000020365e-06, 1.036200000026355e-05, 6.708000000799075e-06, 6.722000000181083e-06, 8.27800000013923e-06, 6.944999999980439e-06, 6.041999999872871e-06, 6.63900000041906e-06, 6.915999999357325e-06, 5.583000000086713e-06, 1.0167000000116388e-05, 9.792000000174994e-06, 5.318999999559537e-06, 6.903000000058057e-06, 8.207999999676474e-06, 6.582999999338313e-06, 5.347000000099911e-06, 9.528000000535997e-06, 9.028000000022018e-06, 6.73700000053401e-06, 6.88899999978787e-06, 9.653000000220402e-06, 5.833000000343702e-06, 9.680999999872597e-06, 5.0970000007311e-06, 7.444000000411677e-06, 6.402999999544079e-06, 9.028000000022018e-06, 5.902999999918279e-06, 7.721999999432683e-06, 9.70800000033023e-06, 6.2500000002074785e-06, 1.115299999998598e-05, 6.513999999846476e-06, 1.0193999999685843e-05, 7.776999999542511e-06, 7.137999999962119e-06, 4.681000000061886e-06, 8.889000000067426e-06, 1.0916999999999177e-05, 8.833999999957598e-06, 8.903000000337613e-06, 7.847000000005266e-06, 8.207999999676474e-06, 9.347999999853585e-06, 7.903000000197835e-06, 6.707999999910896e-06, 9.51400000026581e-06, 1.1777000000101623e-05, 5.221999999527327e-06, 5.583000000086713e-06, 9.583000000645825e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.297" endtime="20201029 12:43:18.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.293" endtime="20201029 12:43:18.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.922" endtime="20201029 12:43:18.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.921" endtime="20201029 12:43:18.300"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.308" endtime="20201029 12:43:18.323"></status>
</kw>
<msg timestamp="20201029 12:43:18.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.307" endtime="20201029 12:43:18.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.324" endtime="20201029 12:43:18.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.327" endtime="20201029 12:43:18.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.304" endtime="20201029 12:43:18.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.302" endtime="20201029 12:43:18.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.336" endtime="20201029 12:43:18.642"></status>
</kw>
<msg timestamp="20201029 12:43:18.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.437460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.437466972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.335" endtime="20201029 12:43:18.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.437460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.437466972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.647" endtime="20201029 12:43:18.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.657" endtime="20201029 12:43:18.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.332" endtime="20201029 12:43:18.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.330" endtime="20201029 12:43:18.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.664" level="INFO">${RESULT} = [{'diff': 6.903000000058057e-06}, {'diff': 8.207999999676474e-06}, {'diff': 6.582999999338313e-06}, {'diff': 5.347000000099911e-06}, {'diff': 9.528000000535997e-06}, {'diff': 9.028000000022018e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:18.660" endtime="20201029 12:43:18.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.669" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.903000000058057e-06, 8.207999999676474e-06, 6.582999999338313e-06, 5.347000000099911e-06, 9.528000000535997e-06, 9.028000000022018e-06, 6.73700000053401e-06, 6.88899999978787e-06, 9.653000...</msg>
<status status="PASS" starttime="20201029 12:43:18.666" endtime="20201029 12:43:18.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.674" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:18.673" endtime="20201029 12:43:18.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.677" level="INFO">VALUE: [6.903000000058057e-06, 8.207999999676474e-06, 6.582999999338313e-06, 5.347000000099911e-06, 9.528000000535997e-06, 9.028000000022018e-06, 6.73700000053401e-06, 6.88899999978787e-06, 9.653000000220402e-06, 5.833000000343702e-06, 9.680999999872597e-06, 5.0970000007311e-06, 7.444000000411677e-06, 6.402999999544079e-06, 9.028000000022018e-06, 5.902999999918279e-06, 7.721999999432683e-06, 9.70800000033023e-06, 6.2500000002074785e-06, 1.115299999998598e-05, 6.513999999846476e-06, 1.0193999999685843e-05, 7.776999999542511e-06, 7.137999999962119e-06, 4.681000000061886e-06, 8.889000000067426e-06, 1.0916999999999177e-05, 8.833999999957598e-06, 8.903000000337613e-06, 7.847000000005266e-06, 8.207999999676474e-06, 9.347999999853585e-06, 7.903000000197835e-06, 6.707999999910896e-06, 9.51400000026581e-06, 1.1777000000101623e-05, 5.221999999527327e-06, 5.583000000086713e-06, 9.583000000645825e-06, 6.332999999969502e-06, 6.471999999924094e-06, 7.014000000360454e-06, 9.903000000477391e-06, 5.875000000266084e-06, 7.83399999981782e-06, 9.47199999945525e-06, 8.167000000725011e-06, 7.318999999839093e-06, 8.847000000145044e-06, 8.459000000016204e-06, 9.180999999358619e-06, 1.159700000030739e-05, 1.0971999999220827e-05, 5.875000000266084e-06, 9.903000000477391e-06, 1.0514000000405588e-05, 7.916000000385282e-06, 7.5829999994780906e-06, 8.097000000262256e-06, 9.346999999770844e-06, 7.777999999625251e-06, 9.041000000209465e-06, 7.5270000001737e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.675" endtime="20201029 12:43:18.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.670" endtime="20201029 12:43:18.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.301" endtime="20201029 12:43:18.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.301" endtime="20201029 12:43:18.678"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.686" endtime="20201029 12:43:18.701"></status>
</kw>
<msg timestamp="20201029 12:43:18.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.684" endtime="20201029 12:43:18.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.702" endtime="20201029 12:43:18.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.705" endtime="20201029 12:43:18.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.682" endtime="20201029 12:43:18.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.680" endtime="20201029 12:43:18.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.715" endtime="20201029 12:43:19.022"></status>
</kw>
<msg timestamp="20201029 12:43:19.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.825741042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.825749931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.713" endtime="20201029 12:43:19.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.825741042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.825749931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.028" endtime="20201029 12:43:19.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.038" endtime="20201029 12:43:19.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.710" endtime="20201029 12:43:19.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.708" endtime="20201029 12:43:19.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.045" level="INFO">${RESULT} = [{'diff': 8.889000000067426e-06}, {'diff': 1.0916999999999177e-05}, {'diff': 8.833999999957598e-06}, {'diff': 8.903000000337613e-06}, {'diff': 7.847000000005266e-06}, {'diff': 8.207999999676474e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:19.041" endtime="20201029 12:43:19.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.049" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.889000000067426e-06, 1.0916999999999177e-05, 8.833999999957598e-06, 8.903000000337613e-06, 7.847000000005266e-06, 8.207999999676474e-06, 9.347999999853585e-06, 7.903000000197835e-06, 6.707...</msg>
<status status="PASS" starttime="20201029 12:43:19.046" endtime="20201029 12:43:19.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:19.053" endtime="20201029 12:43:19.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.057" level="INFO">VALUE: [8.889000000067426e-06, 1.0916999999999177e-05, 8.833999999957598e-06, 8.903000000337613e-06, 7.847000000005266e-06, 8.207999999676474e-06, 9.347999999853585e-06, 7.903000000197835e-06, 6.707999999910896e-06, 9.51400000026581e-06, 1.1777000000101623e-05, 5.221999999527327e-06, 5.583000000086713e-06, 9.583000000645825e-06, 6.332999999969502e-06, 6.471999999924094e-06, 7.014000000360454e-06, 9.903000000477391e-06, 5.875000000266084e-06, 7.83399999981782e-06, 9.47199999945525e-06, 8.167000000725011e-06, 7.318999999839093e-06, 8.847000000145044e-06, 8.459000000016204e-06, 9.180999999358619e-06, 1.159700000030739e-05, 1.0971999999220827e-05, 5.875000000266084e-06, 9.903000000477391e-06, 1.0514000000405588e-05, 7.916000000385282e-06, 7.5829999994780906e-06, 8.097000000262256e-06, 9.346999999770844e-06, 7.777999999625251e-06, 9.041000000209465e-06, 7.5270000001737e-06, 9.207999999816252e-06, 7.97300000066059e-06, 8.096999999374077e-06, 1.026399999926042e-05, 1.0277000000336045e-05, 6.013999999332498e-06, 8.223000000029401e-06, 1.0778000000044585e-05, 6.457999999653907e-06, 7.611000000018464e-06, 6.402000000349517e-06, 7.3199999999218335e-06, 4.902999999778501e-06, 7.222999999889623e-06, 4.582999999946935e-06, 9.513999999377631e-06, 7.971999999689672e-06, 8.333000000249058e-06, 8.472999999398212e-06, 9.305999999931203e-06, 1.0624999999819806e-05, 6.971999999549894e-06, 6.874999999517684e-06, 7.0279999997424625e-06, 6.625000000148873e-06, 6.568999999956304e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.056" endtime="20201029 12:43:19.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.050" endtime="20201029 12:43:19.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.679" endtime="20201029 12:43:19.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.678" endtime="20201029 12:43:19.059"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.066" endtime="20201029 12:43:19.081"></status>
</kw>
<msg timestamp="20201029 12:43:19.081" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.065" endtime="20201029 12:43:19.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.084" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.082" endtime="20201029 12:43:19.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.085" endtime="20201029 12:43:19.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.062" endtime="20201029 12:43:19.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.061" endtime="20201029 12:43:19.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.094" endtime="20201029 12:43:19.405"></status>
</kw>
<msg timestamp="20201029 12:43:19.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.193251444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.193260625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.092" endtime="20201029 12:43:19.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.193251444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.193260625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.410" endtime="20201029 12:43:19.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.420" endtime="20201029 12:43:19.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.090" endtime="20201029 12:43:19.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.088" endtime="20201029 12:43:19.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.427" level="INFO">${RESULT} = [{'diff': 9.180999999358619e-06}, {'diff': 1.159700000030739e-05}, {'diff': 1.0971999999220827e-05}, {'diff': 5.875000000266084e-06}, {'diff': 9.903000000477391e-06}, {'diff': 1.0514000000405588e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:19.424" endtime="20201029 12:43:19.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.433" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.180999999358619e-06, 1.159700000030739e-05, 1.0971999999220827e-05, 5.875000000266084e-06, 9.903000000477391e-06, 1.0514000000405588e-05, 7.916000000385282e-06, 7.5829999994780906e-06, 8.0...</msg>
<status status="PASS" starttime="20201029 12:43:19.428" endtime="20201029 12:43:19.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:19.436" endtime="20201029 12:43:19.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.440" level="INFO">VALUE: [9.180999999358619e-06, 1.159700000030739e-05, 1.0971999999220827e-05, 5.875000000266084e-06, 9.903000000477391e-06, 1.0514000000405588e-05, 7.916000000385282e-06, 7.5829999994780906e-06, 8.097000000262256e-06, 9.346999999770844e-06, 7.777999999625251e-06, 9.041000000209465e-06, 7.5270000001737e-06, 9.207999999816252e-06, 7.97300000066059e-06, 8.096999999374077e-06, 1.026399999926042e-05, 1.0277000000336045e-05, 6.013999999332498e-06, 8.223000000029401e-06, 1.0778000000044585e-05, 6.457999999653907e-06, 7.611000000018464e-06, 6.402000000349517e-06, 7.3199999999218335e-06, 4.902999999778501e-06, 7.222999999889623e-06, 4.582999999946935e-06, 9.513999999377631e-06, 7.971999999689672e-06, 8.333000000249058e-06, 8.472999999398212e-06, 9.305999999931203e-06, 1.0624999999819806e-05, 6.971999999549894e-06, 6.874999999517684e-06, 7.0279999997424625e-06, 6.625000000148873e-06, 6.568999999956304e-06, 5.50000000032469e-06, 9.735999999982425e-06, 1.084800000050734e-05, 7.791999999895438e-06, 6.971999999549894e-06, 9.833000000014636e-06, 5.083999999655475e-06, 6.777999999485473e-06, 7.945000000120217e-06, 7.805000000082885e-06, 8.722000000460639e-06, 1.0195000000656762e-05, 8.832999999874858e-06, 8.653000000080624e-06, 7.903000000197835e-06, 8.541999999778227e-06, 1.0069000000001438e-05, 5.513999999706698e-06, 9.834000000097376e-06, 8.263999999869043e-06, 9.207999999816252e-06, 7.33300000010928e-06, 5.874999999377906e-06, 9.847000000284822e-06, 6.15299999928709e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.439" endtime="20201029 12:43:19.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.434" endtime="20201029 12:43:19.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.059" endtime="20201029 12:43:19.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.059" endtime="20201029 12:43:19.442"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.449" endtime="20201029 12:43:19.464"></status>
</kw>
<msg timestamp="20201029 12:43:19.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.448" endtime="20201029 12:43:19.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.465" endtime="20201029 12:43:19.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.468" endtime="20201029 12:43:19.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.445" endtime="20201029 12:43:19.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.444" endtime="20201029 12:43:19.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.477" endtime="20201029 12:43:19.787"></status>
</kw>
<msg timestamp="20201029 12:43:19.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.561782958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.561787861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.475" endtime="20201029 12:43:19.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.561782958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.561787861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.792" endtime="20201029 12:43:19.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.802" endtime="20201029 12:43:19.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.472" endtime="20201029 12:43:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.471" endtime="20201029 12:43:19.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.809" level="INFO">${RESULT} = [{'diff': 4.902999999778501e-06}, {'diff': 7.222999999889623e-06}, {'diff': 4.582999999946935e-06}, {'diff': 9.513999999377631e-06}, {'diff': 7.971999999689672e-06}, {'diff': 8.333000000249058e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:19.805" endtime="20201029 12:43:19.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.814" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.902999999778501e-06, 7.222999999889623e-06, 4.582999999946935e-06, 9.513999999377631e-06, 7.971999999689672e-06, 8.333000000249058e-06, 8.472999999398212e-06, 9.305999999931203e-06, 1.0624...</msg>
<status status="PASS" starttime="20201029 12:43:19.810" endtime="20201029 12:43:19.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.819" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:19.818" endtime="20201029 12:43:19.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.822" level="INFO">VALUE: [4.902999999778501e-06, 7.222999999889623e-06, 4.582999999946935e-06, 9.513999999377631e-06, 7.971999999689672e-06, 8.333000000249058e-06, 8.472999999398212e-06, 9.305999999931203e-06, 1.0624999999819806e-05, 6.971999999549894e-06, 6.874999999517684e-06, 7.0279999997424625e-06, 6.625000000148873e-06, 6.568999999956304e-06, 5.50000000032469e-06, 9.735999999982425e-06, 1.084800000050734e-05, 7.791999999895438e-06, 6.971999999549894e-06, 9.833000000014636e-06, 5.083999999655475e-06, 6.777999999485473e-06, 7.945000000120217e-06, 7.805000000082885e-06, 8.722000000460639e-06, 1.0195000000656762e-05, 8.832999999874858e-06, 8.653000000080624e-06, 7.903000000197835e-06, 8.541999999778227e-06, 1.0069000000001438e-05, 5.513999999706698e-06, 9.834000000097376e-06, 8.263999999869043e-06, 9.207999999816252e-06, 7.33300000010928e-06, 5.874999999377906e-06, 9.847000000284822e-06, 6.15299999928709e-06, 6.514000000734654e-06, 9.541999999918005e-06, 6.347000000239689e-06, 7.611000000018464e-06, 8.347000000519245e-06, 7.29199999938146e-06, 1.0958000000726997e-05, 1.0083000000271625e-05, 5.486000000054503e-06, 6.707999999910896e-06, 1.0027999999273618e-05, 1.040300000010319e-05, 6.347000000239689e-06, 8.097000000262256e-06, 5.3199999996422775e-06, 8.360999999901253e-06, 8.653000000080624e-06, 7.597000000636456e-06, 7.944000000037477e-06, 1.0151999999763461e-05, 7.0970000001224776e-06, 1.065300000036018e-05, 7.597999999831018e-06, 1.0957999999838819e-05, 7.33300000010928e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.820" endtime="20201029 12:43:19.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.815" endtime="20201029 12:43:19.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.442" endtime="20201029 12:43:19.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.442" endtime="20201029 12:43:19.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.014" endtime="20201029 12:43:19.824"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:11.939" endtime="20201029 12:43:19.824" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.831" endtime="20201029 12:43:19.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.830" endtime="20201029 12:43:19.851"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.866" endtime="20201029 12:43:19.882"></status>
</kw>
<msg timestamp="20201029 12:43:19.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.864" endtime="20201029 12:43:19.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.884" endtime="20201029 12:43:19.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:19.886" endtime="20201029 12:43:19.888"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:19.861" endtime="20201029 12:43:19.889"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:19.859" endtime="20201029 12:43:19.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.858" endtime="20201029 12:43:19.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:19.894" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:19.893" endtime="20201029 12:43:19.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.891" endtime="20201029 12:43:19.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.857" endtime="20201029 12:43:19.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.856" endtime="20201029 12:43:19.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.895" endtime="20201029 12:43:19.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.854" endtime="20201029 12:43:19.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.852" endtime="20201029 12:43:19.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.829" endtime="20201029 12:43:19.898"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.907" endtime="20201029 12:43:19.923"></status>
</kw>
<msg timestamp="20201029 12:43:19.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.906" endtime="20201029 12:43:19.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.926" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.924" endtime="20201029 12:43:19.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.927" endtime="20201029 12:43:19.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.903" endtime="20201029 12:43:19.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.901" endtime="20201029 12:43:19.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.937" endtime="20201029 12:43:20.225"></status>
</kw>
<msg timestamp="20201029 12:43:20.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065282264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.936" endtime="20201029 12:43:20.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065282264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.229" endtime="20201029 12:43:20.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.238" endtime="20201029 12:43:20.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.932" endtime="20201029 12:43:20.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.930" endtime="20201029 12:43:20.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.244" level="INFO">${RESULT} = [{'diff': 6.083000000003946e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.777999999993951e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201029 12:43:20.241" endtime="20201029 12:43:20.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.249" level="INFO">${OVERHEAD} = {'diff': [6.083000000003946e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.777999999993951e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7080000000030404e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:20.245" endtime="20201029 12:43:20.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.253" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.252" endtime="20201029 12:43:20.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.255" level="INFO">VALUE: [6.083000000003946e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.777999999993951e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7080000000030404e-06, 1.7220000000095492e-06, 1.7219999999956714e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.750000000008689e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6659999999973918e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7639999999874423e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.7769999999944774e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.254" endtime="20201029 12:43:20.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.249" endtime="20201029 12:43:20.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.900" endtime="20201029 12:43:20.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.899" endtime="20201029 12:43:20.257"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.266" endtime="20201029 12:43:20.281"></status>
</kw>
<msg timestamp="20201029 12:43:20.281" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.263" endtime="20201029 12:43:20.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.284" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.282" endtime="20201029 12:43:20.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.285" endtime="20201029 12:43:20.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.261" endtime="20201029 12:43:20.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.259" endtime="20201029 12:43:20.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.294" endtime="20201029 12:43:20.597"></status>
</kw>
<msg timestamp="20201029 12:43:20.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065486097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065487833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.292" endtime="20201029 12:43:20.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065486097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065487833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.602" endtime="20201029 12:43:20.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.612" endtime="20201029 12:43:20.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.290" endtime="20201029 12:43:20.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.288" endtime="20201029 12:43:20.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.619" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7780000000078289e-06}, {'diff': 1.750000000008689e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7780000000078289e-0...</msg>
<status status="PASS" starttime="20201029 12:43:20.615" endtime="20201029 12:43:20.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.624" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7639999999874423e-06, 1.7360000000021802e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:20.620" endtime="20201029 12:43:20.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.627" endtime="20201029 12:43:20.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.631" level="INFO">VALUE: [1.7360000000021802e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7639999999874423e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.7769999999944774e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7229999999535117e-06, 1.7640000000151979e-06, 1.7500000000225668e-06, 1.6670000000384988e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7079999999891626e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.6660000000112696e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.6949999999682497e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7370000000016539e-06, 1.7500000000225668e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7780000000078289e-06, 1.6949999999682497e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7370000000016539e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7640000000151979e-06, 1.7219999999817936e-06, 1.7500000000225668e-06, 1.7229999999535117e-06, 1.7360000000299358e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.629" endtime="20201029 12:43:20.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.625" endtime="20201029 12:43:20.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.258" endtime="20201029 12:43:20.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.257" endtime="20201029 12:43:20.633"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.641" endtime="20201029 12:43:20.656"></status>
</kw>
<msg timestamp="20201029 12:43:20.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.639" endtime="20201029 12:43:20.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.657" endtime="20201029 12:43:20.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.660" endtime="20201029 12:43:20.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.637" endtime="20201029 12:43:20.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.635" endtime="20201029 12:43:20.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.669" endtime="20201029 12:43:20.967"></status>
</kw>
<msg timestamp="20201029 12:43:20.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416034389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.667" endtime="20201029 12:43:20.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416034389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.972" endtime="20201029 12:43:20.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.982" endtime="20201029 12:43:20.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.665" endtime="20201029 12:43:20.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.663" endtime="20201029 12:43:20.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.989" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7780000000078289e-06}, {'diff': 1.6949999999682497e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7360000000299358e-...</msg>
<status status="PASS" starttime="20201029 12:43:20.985" endtime="20201029 12:43:20.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.996" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7780000000078289e-06, 1.6949999999682497e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7370000000016539e-06, 1.7360000000299358e-06...</msg>
<status status="PASS" starttime="20201029 12:43:20.990" endtime="20201029 12:43:20.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.000" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.999" endtime="20201029 12:43:21.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.003" level="INFO">VALUE: [1.7359999999744247e-06, 1.7780000000078289e-06, 1.6949999999682497e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7370000000016539e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7640000000151979e-06, 1.7219999999817936e-06, 1.7500000000225668e-06, 1.7229999999535117e-06, 1.7360000000299358e-06, 1.7499999999115445e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7780000000078289e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7369999999461427e-06, 1.805999999993091e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7639999999596867e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.805999999993091e-06, 1.7359999999744247e-06, 1.7369999999461427e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.736000000085447e-06, 1.736000000085447e-06, 1.6660000000667807e-06, 1.7359999999744247e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7780000000078289e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7230000000090229e-06, 1.736000000085447e-06]</msg>
<status status="PASS" starttime="20201029 12:43:21.002" endtime="20201029 12:43:21.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.997" endtime="20201029 12:43:21.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.634" endtime="20201029 12:43:21.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.633" endtime="20201029 12:43:21.005"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.013" endtime="20201029 12:43:21.027"></status>
</kw>
<msg timestamp="20201029 12:43:21.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.011" endtime="20201029 12:43:21.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.030" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.029" endtime="20201029 12:43:21.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.032" endtime="20201029 12:43:21.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.009" endtime="20201029 12:43:21.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.007" endtime="20201029 12:43:21.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.041" endtime="20201029 12:43:21.349"></status>
</kw>
<msg timestamp="20201029 12:43:21.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.780076944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.780078681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.039" endtime="20201029 12:43:21.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.780076944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.780078681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.354" endtime="20201029 12:43:21.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.364" endtime="20201029 12:43:21.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.037" endtime="20201029 12:43:21.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.035" endtime="20201029 12:43:21.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.371" level="INFO">${RESULT} = [{'diff': 1.7369999999461427e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-...</msg>
<status status="PASS" starttime="20201029 12:43:21.367" endtime="20201029 12:43:21.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:21.375" level="INFO">${OVERHEAD} = {'diff': [1.7369999999461427e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:21.372" endtime="20201029 12:43:21.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.380" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:21.379" endtime="20201029 12:43:21.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.382" level="INFO">VALUE: [1.7369999999461427e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7780000000078289e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7230000000090229e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.6950000001347831e-06, 1.722000000148327e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7079999998781403e-06, 1.737000000057165e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.764000000070709e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.6670000000384988e-06, 1.681000000086641e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 12:43:21.381" endtime="20201029 12:43:21.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.376" endtime="20201029 12:43:21.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.006" endtime="20201029 12:43:21.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.005" endtime="20201029 12:43:21.384"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.393" endtime="20201029 12:43:21.408"></status>
</kw>
<msg timestamp="20201029 12:43:21.408" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.391" endtime="20201029 12:43:21.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.413" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.410" endtime="20201029 12:43:21.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.414" endtime="20201029 12:43:21.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.388" endtime="20201029 12:43:21.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.386" endtime="20201029 12:43:21.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.428" endtime="20201029 12:43:21.732"></status>
</kw>
<msg timestamp="20201029 12:43:21.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142919056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.426" endtime="20201029 12:43:21.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142919056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.737" endtime="20201029 12:43:21.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.747" endtime="20201029 12:43:21.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.422" endtime="20201029 12:43:21.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.419" endtime="20201029 12:43:21.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.754" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.7359999999744247e-0...</msg>
<status status="PASS" starttime="20201029 12:43:21.751" endtime="20201029 12:43:21.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:21.760" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:21.755" endtime="20201029 12:43:21.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.764" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:21.763" endtime="20201029 12:43:21.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.767" level="INFO">VALUE: [1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.6670000000384988e-06, 1.681000000086641e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.7779999998968066e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.7359999999744247e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7499999998005222e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.7769999998140662e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.737000000057165e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201029 12:43:21.765" endtime="20201029 12:43:21.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.761" endtime="20201029 12:43:21.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.385" endtime="20201029 12:43:21.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.385" endtime="20201029 12:43:21.769"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.776" endtime="20201029 12:43:21.792"></status>
</kw>
<msg timestamp="20201029 12:43:21.792" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.775" endtime="20201029 12:43:21.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.793" endtime="20201029 12:43:21.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.796" endtime="20201029 12:43:21.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.772" endtime="20201029 12:43:21.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.771" endtime="20201029 12:43:21.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.807" endtime="20201029 12:43:22.121"></status>
</kw>
<msg timestamp="20201029 12:43:22.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.512083708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.512085458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.805" endtime="20201029 12:43:22.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.512083708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.512085458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.126" endtime="20201029 12:43:22.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.136" endtime="20201029 12:43:22.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.801" endtime="20201029 12:43:22.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.799" endtime="20201029 12:43:22.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.142" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7089999999608807e-06}, {'diff': 1.7769999998140662e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-...</msg>
<status status="PASS" starttime="20201029 12:43:22.139" endtime="20201029 12:43:22.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.148" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7089999999608807e-06, 1.7769999998140662e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7219999999262825e-06...</msg>
<status status="PASS" starttime="20201029 12:43:22.143" endtime="20201029 12:43:22.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.152" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:22.151" endtime="20201029 12:43:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.155" level="INFO">VALUE: [1.7500000000225668e-06, 1.7089999999608807e-06, 1.7769999998140662e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.8189999999584927e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.6530000002124012e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7919999999449487e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.153" endtime="20201029 12:43:22.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.149" endtime="20201029 12:43:22.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.769" endtime="20201029 12:43:22.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.769" endtime="20201029 12:43:22.157"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.164" endtime="20201029 12:43:22.180"></status>
</kw>
<msg timestamp="20201029 12:43:22.180" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.163" endtime="20201029 12:43:22.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.181" endtime="20201029 12:43:22.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.183" endtime="20201029 12:43:22.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.160" endtime="20201029 12:43:22.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.159" endtime="20201029 12:43:22.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.193" endtime="20201029 12:43:22.502"></status>
</kw>
<msg timestamp="20201029 12:43:22.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.886560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.886562139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.191" endtime="20201029 12:43:22.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.886560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.886562139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.507" endtime="20201029 12:43:22.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.517" endtime="20201029 12:43:22.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.188" endtime="20201029 12:43:22.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.187" endtime="20201029 12:43:22.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.524" level="INFO">${RESULT} = [{'diff': 1.7780000001188512e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7780000001188512e-...</msg>
<status status="PASS" starttime="20201029 12:43:22.520" endtime="20201029 12:43:22.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.528" level="INFO">${OVERHEAD} = {'diff': [1.7780000001188512e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06...</msg>
<status status="PASS" starttime="20201029 12:43:22.525" endtime="20201029 12:43:22.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.532" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:22.531" endtime="20201029 12:43:22.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.535" level="INFO">VALUE: [1.7780000001188512e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.6669999998164542e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7499999995784776e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.534" endtime="20201029 12:43:22.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.529" endtime="20201029 12:43:22.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.157" endtime="20201029 12:43:22.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.157" endtime="20201029 12:43:22.537"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.546" endtime="20201029 12:43:22.561"></status>
</kw>
<msg timestamp="20201029 12:43:22.561" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.544" endtime="20201029 12:43:22.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.564" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.563" endtime="20201029 12:43:22.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.565" endtime="20201029 12:43:22.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.541" endtime="20201029 12:43:22.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.539" endtime="20201029 12:43:22.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.574" endtime="20201029 12:43:22.885"></status>
</kw>
<msg timestamp="20201029 12:43:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.263673417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.263675153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.573" endtime="20201029 12:43:22.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.263673417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.263675153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.890" endtime="20201029 12:43:22.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.901" endtime="20201029 12:43:22.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.570" endtime="20201029 12:43:22.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.568" endtime="20201029 12:43:22.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.908" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7079999996560957e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7780000001188512e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:22.904" endtime="20201029 12:43:22.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.913" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 12:43:22.909" endtime="20201029 12:43:22.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.917" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:22.916" endtime="20201029 12:43:22.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.920" level="INFO">VALUE: [1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7499999995784776e-06, 1.7360000001964693e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7909999998622084e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.777999999674762e-06, 1.762999999765924e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.6669999998164542e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6669999998164542e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.708999999738836e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.918" endtime="20201029 12:43:22.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.914" endtime="20201029 12:43:22.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.538" endtime="20201029 12:43:22.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.537" endtime="20201029 12:43:22.922"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.930" endtime="20201029 12:43:22.945"></status>
</kw>
<msg timestamp="20201029 12:43:22.946" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.928" endtime="20201029 12:43:22.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.948" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.947" endtime="20201029 12:43:22.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.949" endtime="20201029 12:43:22.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.925" endtime="20201029 12:43:22.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.924" endtime="20201029 12:43:22.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.958" endtime="20201029 12:43:23.279"></status>
</kw>
<msg timestamp="20201029 12:43:23.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.634900722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.634902458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.957" endtime="20201029 12:43:23.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.634900722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.634902458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.284" endtime="20201029 12:43:23.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.294" endtime="20201029 12:43:23.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.954" endtime="20201029 12:43:23.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.952" endtime="20201029 12:43:23.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.302" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6669999998164542e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:23.297" endtime="20201029 12:43:23.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:23.307" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6669999998164542e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:43:23.303" endtime="20201029 12:43:23.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.311" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:23.310" endtime="20201029 12:43:23.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.313" level="INFO">VALUE: [1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6669999998164542e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.708999999738836e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.681000000086641e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7780000001188512e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.708999999738836e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6800000000039006e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7909999998622084e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7499999995784776e-06]</msg>
<status status="PASS" starttime="20201029 12:43:23.312" endtime="20201029 12:43:23.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.307" endtime="20201029 12:43:23.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.922" endtime="20201029 12:43:23.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.922" endtime="20201029 12:43:23.315"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.323" endtime="20201029 12:43:23.338"></status>
</kw>
<msg timestamp="20201029 12:43:23.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.321" endtime="20201029 12:43:23.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.339" endtime="20201029 12:43:23.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.342" endtime="20201029 12:43:23.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.319" endtime="20201029 12:43:23.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.317" endtime="20201029 12:43:23.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.352" endtime="20201029 12:43:23.676"></status>
</kw>
<msg timestamp="20201029 12:43:23.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.008847889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.008849625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.350" endtime="20201029 12:43:23.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.008847889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.008849625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.681" endtime="20201029 12:43:23.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.691" endtime="20201029 12:43:23.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.347" endtime="20201029 12:43:23.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.345" endtime="20201029 12:43:23.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.697" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7219999999262825e-06...</msg>
<status status="PASS" starttime="20201029 12:43:23.694" endtime="20201029 12:43:23.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:23.702" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7909999998622084e-06, 1.7370000002792096e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:23.698" endtime="20201029 12:43:23.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.707" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:23.705" endtime="20201029 12:43:23.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.710" level="INFO">VALUE: [1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7909999998622084e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7499999995784776e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7220000003703717e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 12:43:23.708" endtime="20201029 12:43:23.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.703" endtime="20201029 12:43:23.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.316" endtime="20201029 12:43:23.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.316" endtime="20201029 12:43:23.711"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.719" endtime="20201029 12:43:23.735"></status>
</kw>
<msg timestamp="20201029 12:43:23.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.718" endtime="20201029 12:43:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.736" endtime="20201029 12:43:23.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.739" endtime="20201029 12:43:23.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.715" endtime="20201029 12:43:23.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.713" endtime="20201029 12:43:23.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.747" endtime="20201029 12:43:24.053"></status>
</kw>
<msg timestamp="20201029 12:43:24.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.391281611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.391283347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.746" endtime="20201029 12:43:24.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.391281611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.391283347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.058" endtime="20201029 12:43:24.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.068" endtime="20201029 12:43:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.743" endtime="20201029 12:43:24.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.742" endtime="20201029 12:43:24.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.074" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7360000001964693e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:24.071" endtime="20201029 12:43:24.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:24.080" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:43:24.076" endtime="20201029 12:43:24.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.084" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:24.083" endtime="20201029 12:43:24.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.087" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.708999999738836e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 12:43:24.085" endtime="20201029 12:43:24.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.081" endtime="20201029 12:43:24.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.712" endtime="20201029 12:43:24.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.712" endtime="20201029 12:43:24.089"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.097" endtime="20201029 12:43:24.112"></status>
</kw>
<msg timestamp="20201029 12:43:24.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.095" endtime="20201029 12:43:24.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.114" endtime="20201029 12:43:24.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.116" endtime="20201029 12:43:24.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.092" endtime="20201029 12:43:24.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.091" endtime="20201029 12:43:24.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.125" endtime="20201029 12:43:24.448"></status>
</kw>
<msg timestamp="20201029 12:43:24.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.776731042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.776732778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.124" endtime="20201029 12:43:24.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.776731042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.776732778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.453" endtime="20201029 12:43:24.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.463" endtime="20201029 12:43:24.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.121" endtime="20201029 12:43:24.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.119" endtime="20201029 12:43:24.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.470" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.681000000086641e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.73599999975238e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:24.466" endtime="20201029 12:43:24.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:24.475" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.735...</msg>
<status status="PASS" starttime="20201029 12:43:24.471" endtime="20201029 12:43:24.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.479" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:24.478" endtime="20201029 12:43:24.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.481" level="INFO">VALUE: [1.73599999975238e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.6800000004479898e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7640000002927536e-06, 1.7640000002927536e-06, 1.6800000004479898e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 12:43:24.480" endtime="20201029 12:43:24.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.475" endtime="20201029 12:43:24.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.090" endtime="20201029 12:43:24.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.089" endtime="20201029 12:43:24.483"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.492" endtime="20201029 12:43:24.507"></status>
</kw>
<msg timestamp="20201029 12:43:24.508" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.490" endtime="20201029 12:43:24.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.510" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.509" endtime="20201029 12:43:24.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.511" endtime="20201029 12:43:24.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.487" endtime="20201029 12:43:24.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.485" endtime="20201029 12:43:24.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.520" endtime="20201029 12:43:24.856"></status>
</kw>
<msg timestamp="20201029 12:43:24.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.145033875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.145035611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.519" endtime="20201029 12:43:24.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.145033875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.145035611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.861" endtime="20201029 12:43:24.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.871" endtime="20201029 12:43:24.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.516" endtime="20201029 12:43:24.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.515" endtime="20201029 12:43:24.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.878" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:24.874" endtime="20201029 12:43:24.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:24.883" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.75...</msg>
<status status="PASS" starttime="20201029 12:43:24.879" endtime="20201029 12:43:24.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.887" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:24.886" endtime="20201029 12:43:24.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.890" level="INFO">VALUE: [1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7919999999449487e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201029 12:43:24.889" endtime="20201029 12:43:24.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.884" endtime="20201029 12:43:24.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.484" endtime="20201029 12:43:24.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.484" endtime="20201029 12:43:24.892"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.900" endtime="20201029 12:43:24.918"></status>
</kw>
<msg timestamp="20201029 12:43:24.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.899" endtime="20201029 12:43:24.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.920" endtime="20201029 12:43:24.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.923" endtime="20201029 12:43:24.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.896" endtime="20201029 12:43:24.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.894" endtime="20201029 12:43:24.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.932" endtime="20201029 12:43:25.247"></status>
</kw>
<msg timestamp="20201029 12:43:25.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.529707347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.529709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.930" endtime="20201029 12:43:25.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.529707347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.529709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.253" endtime="20201029 12:43:25.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.264" endtime="20201029 12:43:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.928" endtime="20201029 12:43:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.926" endtime="20201029 12:43:25.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.271" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7640000002927536e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:25.267" endtime="20201029 12:43:25.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:25.276" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999...</msg>
<status status="PASS" starttime="20201029 12:43:25.272" endtime="20201029 12:43:25.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.281" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:25.280" endtime="20201029 12:43:25.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.283" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.7360000006405585e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06]</msg>
<status status="PASS" starttime="20201029 12:43:25.282" endtime="20201029 12:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.277" endtime="20201029 12:43:25.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.893" endtime="20201029 12:43:25.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.892" endtime="20201029 12:43:25.285"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.293" endtime="20201029 12:43:25.308"></status>
</kw>
<msg timestamp="20201029 12:43:25.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.292" endtime="20201029 12:43:25.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.311" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.309" endtime="20201029 12:43:25.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.312" endtime="20201029 12:43:25.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.289" endtime="20201029 12:43:25.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.287" endtime="20201029 12:43:25.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.321" endtime="20201029 12:43:25.641"></status>
</kw>
<msg timestamp="20201029 12:43:25.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927665625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927667361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.319" endtime="20201029 12:43:25.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927665625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927667361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.646" endtime="20201029 12:43:25.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.656" endtime="20201029 12:43:25.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.317" endtime="20201029 12:43:25.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.315" endtime="20201029 12:43:25.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.663" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7369999998351204e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:25.659" endtime="20201029 12:43:25.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:25.668" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:43:25.664" endtime="20201029 12:43:25.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.672" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:25.671" endtime="20201029 12:43:25.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.674" level="INFO">VALUE: [1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.7369999998351204e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.6810000005307302e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.6809999996425518e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.8050000001323951e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7370000007232989e-06]</msg>
<status status="PASS" starttime="20201029 12:43:25.673" endtime="20201029 12:43:25.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.669" endtime="20201029 12:43:25.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.286" endtime="20201029 12:43:25.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.286" endtime="20201029 12:43:25.676"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.685" endtime="20201029 12:43:25.701"></status>
</kw>
<msg timestamp="20201029 12:43:25.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.683" endtime="20201029 12:43:25.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.702" endtime="20201029 12:43:25.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.705" endtime="20201029 12:43:25.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.680" endtime="20201029 12:43:25.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.679" endtime="20201029 12:43:25.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.714" endtime="20201029 12:43:26.029"></status>
</kw>
<msg timestamp="20201029 12:43:26.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.309842014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.309843708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.712" endtime="20201029 12:43:26.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.309842014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.309843708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.034" endtime="20201029 12:43:26.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.044" endtime="20201029 12:43:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.710" endtime="20201029 12:43:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.708" endtime="20201029 12:43:26.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.051" level="INFO">${RESULT} = [{'diff': 1.6939999998299982e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7220000003703717e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:26.047" endtime="20201029 12:43:26.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:26.056" level="INFO">${OVERHEAD} = {'diff': [1.6939999998299982e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 12:43:26.052" endtime="20201029 12:43:26.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:26.060" endtime="20201029 12:43:26.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.063" level="INFO">VALUE: [1.6939999998299982e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.8050000001323951e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.7229999995649337e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7499999991343884e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7360000006405585e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.6940000007181766e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 12:43:26.062" endtime="20201029 12:43:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.057" endtime="20201029 12:43:26.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.677" endtime="20201029 12:43:26.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.677" endtime="20201029 12:43:26.065"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.073" endtime="20201029 12:43:26.088"></status>
</kw>
<msg timestamp="20201029 12:43:26.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.071" endtime="20201029 12:43:26.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.090" endtime="20201029 12:43:26.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.093" endtime="20201029 12:43:26.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.069" endtime="20201029 12:43:26.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.067" endtime="20201029 12:43:26.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.102" endtime="20201029 12:43:26.409"></status>
</kw>
<msg timestamp="20201029 12:43:26.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.691007833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.691009583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.100" endtime="20201029 12:43:26.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.691007833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.691009583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.414" endtime="20201029 12:43:26.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.424" endtime="20201029 12:43:26.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.098" endtime="20201029 12:43:26.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.096" endtime="20201029 12:43:26.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.431" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.6940000007181766e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:26.428" endtime="20201029 12:43:26.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:26.437" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.6940000007181766e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.7...</msg>
<status status="PASS" starttime="20201029 12:43:26.432" endtime="20201029 12:43:26.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.441" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:26.440" endtime="20201029 12:43:26.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.444" level="INFO">VALUE: [1.7500000000225668e-06, 1.6940000007181766e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.6670000002605434e-06, 1.7369999998351204e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.6799999995598114e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 12:43:26.443" endtime="20201029 12:43:26.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.438" endtime="20201029 12:43:26.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.066" endtime="20201029 12:43:26.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.066" endtime="20201029 12:43:26.446"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.454" endtime="20201029 12:43:26.469"></status>
</kw>
<msg timestamp="20201029 12:43:26.469" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.452" endtime="20201029 12:43:26.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.470" endtime="20201029 12:43:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.473" endtime="20201029 12:43:26.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.450" endtime="20201029 12:43:26.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.448" endtime="20201029 12:43:26.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.483" endtime="20201029 12:43:26.803"></status>
</kw>
<msg timestamp="20201029 12:43:26.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.068809514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.06881125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:26.481" endtime="20201029 12:43:26.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.068809514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.06881125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:26.808" endtime="20201029 12:43:26.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.818" endtime="20201029 12:43:26.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.478" endtime="20201029 12:43:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.476" endtime="20201029 12:43:26.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.825" level="INFO">${RESULT} = [{'diff': 1.7360000006405585e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:26.822" endtime="20201029 12:43:26.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:26.830" level="INFO">${OVERHEAD} = {'diff': [1.7360000006405585e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 12:43:26.826" endtime="20201029 12:43:26.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:26.833" endtime="20201029 12:43:26.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.838" level="INFO">VALUE: [1.7360000006405585e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6799999995598114e-06, 1.7500000000225668e-06, 1.7770000004802e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.6940000007181766e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201029 12:43:26.836" endtime="20201029 12:43:26.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.831" endtime="20201029 12:43:26.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.447" endtime="20201029 12:43:26.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.446" endtime="20201029 12:43:26.840"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.848" endtime="20201029 12:43:26.863"></status>
</kw>
<msg timestamp="20201029 12:43:26.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.846" endtime="20201029 12:43:26.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.864" endtime="20201029 12:43:26.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.867" endtime="20201029 12:43:26.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.844" endtime="20201029 12:43:26.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.842" endtime="20201029 12:43:26.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.876" endtime="20201029 12:43:27.188"></status>
</kw>
<msg timestamp="20201029 12:43:27.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.440742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.440743708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.874" endtime="20201029 12:43:27.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.440742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.440743708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.193" endtime="20201029 12:43:27.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.203" endtime="20201029 12:43:27.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.871" endtime="20201029 12:43:27.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.870" endtime="20201029 12:43:27.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.210" level="INFO">${RESULT} = [{'diff': 1.6940000007181766e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.6809999996425518e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06...</msg>
<status status="PASS" starttime="20201029 12:43:27.206" endtime="20201029 12:43:27.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:27.215" level="INFO">${OVERHEAD} = {'diff': [1.6940000007181766e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 12:43:27.211" endtime="20201029 12:43:27.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:27.219" endtime="20201029 12:43:27.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.222" level="INFO">VALUE: [1.6940000007181766e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6809999996425518e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.6800000004479898e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.6800000004479898e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.221" endtime="20201029 12:43:27.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.216" endtime="20201029 12:43:27.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.840" endtime="20201029 12:43:27.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.840" endtime="20201029 12:43:27.224"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.232" endtime="20201029 12:43:27.248"></status>
</kw>
<msg timestamp="20201029 12:43:27.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.230" endtime="20201029 12:43:27.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.250" endtime="20201029 12:43:27.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.252" endtime="20201029 12:43:27.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.228" endtime="20201029 12:43:27.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.226" endtime="20201029 12:43:27.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.261" endtime="20201029 12:43:27.584"></status>
</kw>
<msg timestamp="20201029 12:43:27.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.823643931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.823645667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.260" endtime="20201029 12:43:27.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.823643931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.823645667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.589" endtime="20201029 12:43:27.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.599" endtime="20201029 12:43:27.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.257" endtime="20201029 12:43:27.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.255" endtime="20201029 12:43:27.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.606" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7780000005629404e-06}, {'diff': 1.7219999994821933e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:27.602" endtime="20201029 12:43:27.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:27.611" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.735999...</msg>
<status status="PASS" starttime="20201029 12:43:27.607" endtime="20201029 12:43:27.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.615" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:27.614" endtime="20201029 12:43:27.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.617" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.777999999674762e-06, 1.7370000007232989e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.6949999999127385e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.6670000002605434e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7360000006405585e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.616" endtime="20201029 12:43:27.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.612" endtime="20201029 12:43:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.225" endtime="20201029 12:43:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.224" endtime="20201029 12:43:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.899" endtime="20201029 12:43:27.620"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:19.826" endtime="20201029 12:43:27.620" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.627" endtime="20201029 12:43:27.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.625" endtime="20201029 12:43:27.647"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.663" endtime="20201029 12:43:27.679"></status>
</kw>
<msg timestamp="20201029 12:43:27.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.661" endtime="20201029 12:43:27.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.681" endtime="20201029 12:43:27.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:27.684" endtime="20201029 12:43:27.688"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:27.658" endtime="20201029 12:43:27.689"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:27.656" endtime="20201029 12:43:27.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.655" endtime="20201029 12:43:27.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:27.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:27.694" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.691" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.654" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.653" endtime="20201029 12:43:27.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.698" endtime="20201029 12:43:27.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.649" endtime="20201029 12:43:27.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.648" endtime="20201029 12:43:27.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.624" endtime="20201029 12:43:27.701"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.710" endtime="20201029 12:43:27.731"></status>
</kw>
<msg timestamp="20201029 12:43:27.732" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.708" endtime="20201029 12:43:27.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.734" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.733" endtime="20201029 12:43:27.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.735" endtime="20201029 12:43:27.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.705" endtime="20201029 12:43:27.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.703" endtime="20201029 12:43:27.738"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.741" endtime="20201029 12:43:27.742"></status>
</kw>
<msg timestamp="20201029 12:43:27.743" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:27.739" endtime="20201029 12:43:27.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.747" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:27.746" endtime="20201029 12:43:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.750" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:27.748" endtime="20201029 12:43:27.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.743" endtime="20201029 12:43:27.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.755" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:27.754" endtime="20201029 12:43:27.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.757" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:27.756" endtime="20201029 12:43:27.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.752" endtime="20201029 12:43:27.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.764" endtime="20201029 12:43:28.053"></status>
</kw>
<msg timestamp="20201029 12:43:28.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072909694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.763" endtime="20201029 12:43:28.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072909694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.058" endtime="20201029 12:43:28.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.066" endtime="20201029 12:43:28.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.760" endtime="20201029 12:43:28.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.759" endtime="20201029 12:43:28.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.073" level="INFO">${RESULT} = [{'diff': 3.4124999999995964e-05}, {'diff': 8.041000000000298e-06}, {'diff': 8.054999999992929e-06}, {'diff': 8.055000000006807e-06}, {'diff': 8.02800000000714e-06}, {'diff': 8.055000000006807e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:28.070" endtime="20201029 12:43:28.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:28.077" level="INFO">${OVERHEAD} = {'diff': [3.4124999999995964e-05, 8.041000000000298e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.02800000000714e-06, 8.055000000006807e-06, 8.069000000013316e-06, 8.054999999992929e-06, 8.0549...</msg>
<status status="PASS" starttime="20201029 12:43:28.074" endtime="20201029 12:43:28.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.082" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:28.081" endtime="20201029 12:43:28.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.085" level="INFO">VALUE: [3.4124999999995964e-05, 8.041000000000298e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.02800000000714e-06, 8.055000000006807e-06, 8.069000000013316e-06, 8.054999999992929e-06, 8.054999999992929e-06, 8.068999999999438e-06, 8.05600000000628e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.054999999992929e-06, 8.027000000007667e-06, 8.041000000000298e-06, 8.027000000007667e-06, 8.05600000000628e-06, 8.054999999992929e-06, 8.05600000000628e-06, 7.999999999994123e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.027999999993263e-06, 8.05600000000628e-06, 8.054999999992929e-06, 8.04099999998642e-06, 8.041000000000298e-06, 8.055000000006807e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.041999999999772e-06, 7.985999999987614e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.014000000000632e-06, 8.05600000000628e-06, 8.014000000000632e-06, 8.041999999999772e-06]</msg>
<status status="PASS" starttime="20201029 12:43:28.083" endtime="20201029 12:43:28.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.078" endtime="20201029 12:43:28.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.701" endtime="20201029 12:43:28.469"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:27.622" endtime="20201029 12:43:28.471" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.485" endtime="20201029 12:43:28.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.482" endtime="20201029 12:43:28.507"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.536" endtime="20201029 12:43:28.561"></status>
</kw>
<msg timestamp="20201029 12:43:28.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.532" endtime="20201029 12:43:28.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.564" endtime="20201029 12:43:28.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:28.570" endtime="20201029 12:43:28.575"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:28.526" endtime="20201029 12:43:28.576"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:28.521" endtime="20201029 12:43:28.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.518" endtime="20201029 12:43:28.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:28.586" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:28.585" endtime="20201029 12:43:28.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.580" endtime="20201029 12:43:28.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.516" endtime="20201029 12:43:28.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.515" endtime="20201029 12:43:28.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.590" endtime="20201029 12:43:28.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.512" endtime="20201029 12:43:28.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.509" endtime="20201029 12:43:28.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.479" endtime="20201029 12:43:28.596"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.607" endtime="20201029 12:43:28.676"></status>
</kw>
<msg timestamp="20201029 12:43:28.677" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.604" endtime="20201029 12:43:28.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.681" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.678" endtime="20201029 12:43:28.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.682" endtime="20201029 12:43:28.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.601" endtime="20201029 12:43:28.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.599" endtime="20201029 12:43:28.686"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.690" endtime="20201029 12:43:28.693"></status>
</kw>
<msg timestamp="20201029 12:43:28.694" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:28.687" endtime="20201029 12:43:28.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.702" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:28.699" endtime="20201029 12:43:28.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.706" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:28.704" endtime="20201029 12:43:28.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.695" endtime="20201029 12:43:28.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.713" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:28.712" endtime="20201029 12:43:28.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.715" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:28.714" endtime="20201029 12:43:28.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.708" endtime="20201029 12:43:28.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.723" endtime="20201029 12:43:29.017"></status>
</kw>
<msg timestamp="20201029 12:43:29.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112791667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.721" endtime="20201029 12:43:29.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112791667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.021" endtime="20201029 12:43:29.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.030" endtime="20201029 12:43:29.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.718" endtime="20201029 12:43:29.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.717" endtime="20201029 12:43:29.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.037" level="INFO">${RESULT} = [{'diff': 3.408400000000367e-05}, {'diff': 3.4180999999994244e-05}, {'diff': 3.416700000000161e-05}, {'diff': 3.418100000000812e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.413900000000247e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:29.034" endtime="20201029 12:43:29.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:29.042" level="INFO">${OVERHEAD} = {'diff': [3.408400000000367e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.418100000000812e-05, 3.419500000000075e-05, 3.413900000000247e-05, 3.415199999999563e-05, 3.4236999999992523e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 12:43:29.038" endtime="20201029 12:43:29.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.047" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:29.046" endtime="20201029 12:43:29.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.050" level="INFO">VALUE: [3.408400000000367e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.418100000000812e-05, 3.419500000000075e-05, 3.413900000000247e-05, 3.415199999999563e-05, 3.4236999999992523e-05, 3.416700000000161e-05, 3.4152999999995104e-05, 3.418100000000812e-05, 3.419400000000128e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.4124999999995964e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.420800000000779e-05, 3.41939999999874e-05, 3.422299999999989e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.413799999998912e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.420799999998003e-05, 3.4194999999986875e-05, 3.412500000002372e-05, 3.416700000000161e-05, 3.416600000000214e-05, 3.4180999999994244e-05, 3.423599999999305e-05, 3.420800000000779e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.4194999999986875e-05, 3.4180000000022526e-05, 3.4181000000022e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.41939999999874e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.423599999999305e-05, 3.4180999999994244e-05, 3.413900000001635e-05, 3.417999999999477e-05, 3.4180999999994244e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.048" endtime="20201029 12:43:29.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.043" endtime="20201029 12:43:29.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.597" endtime="20201029 12:43:29.051"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:28.474" endtime="20201029 12:43:29.052" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.059" endtime="20201029 12:43:29.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.058" endtime="20201029 12:43:29.079"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.092" endtime="20201029 12:43:29.109"></status>
</kw>
<msg timestamp="20201029 12:43:29.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.091" endtime="20201029 12:43:29.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.113" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.111" endtime="20201029 12:43:29.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.116" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:29.114" endtime="20201029 12:43:29.116"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.088" endtime="20201029 12:43:29.117"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.086" endtime="20201029 12:43:29.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.085" endtime="20201029 12:43:29.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:29.122" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:29.121" endtime="20201029 12:43:29.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.119" endtime="20201029 12:43:29.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.084" endtime="20201029 12:43:29.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.083" endtime="20201029 12:43:29.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.125" endtime="20201029 12:43:29.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.082" endtime="20201029 12:43:29.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.080" endtime="20201029 12:43:29.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.056" endtime="20201029 12:43:29.127"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.136" endtime="20201029 12:43:29.340"></status>
</kw>
<msg timestamp="20201029 12:43:29.342" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.135" endtime="20201029 12:43:29.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.350" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.345" endtime="20201029 12:43:29.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.353" endtime="20201029 12:43:29.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.132" endtime="20201029 12:43:29.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.130" endtime="20201029 12:43:29.360"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.365" endtime="20201029 12:43:29.370"></status>
</kw>
<msg timestamp="20201029 12:43:29.371" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:29.362" endtime="20201029 12:43:29.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.381" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:29.379" endtime="20201029 12:43:29.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.386" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:29.383" endtime="20201029 12:43:29.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.373" endtime="20201029 12:43:29.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.397" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:29.395" endtime="20201029 12:43:29.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.402" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:29.400" endtime="20201029 12:43:29.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.389" endtime="20201029 12:43:29.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.412" endtime="20201029 12:43:29.707"></status>
</kw>
<msg timestamp="20201029 12:43:29.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070751097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070815806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.411" endtime="20201029 12:43:29.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070751097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070815806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.711" endtime="20201029 12:43:29.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.720" endtime="20201029 12:43:29.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.408" endtime="20201029 12:43:29.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.406" endtime="20201029 12:43:29.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.727" level="INFO">${RESULT} = [{'diff': 6.470899999999613e-05}, {'diff': 6.434699999999238e-05}, {'diff': 6.434800000000573e-05}, {'diff': 6.438899999999803e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.437499999999152e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:29.723" endtime="20201029 12:43:29.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:29.732" level="INFO">${OVERHEAD} = {'diff': [6.470899999999613e-05, 6.434699999999238e-05, 6.434800000000573e-05, 6.438899999999803e-05, 6.434700000000626e-05, 6.437499999999152e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.4403...</msg>
<status status="PASS" starttime="20201029 12:43:29.728" endtime="20201029 12:43:29.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.737" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:29.735" endtime="20201029 12:43:29.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.739" level="INFO">VALUE: [6.470899999999613e-05, 6.434699999999238e-05, 6.434800000000573e-05, 6.438899999999803e-05, 6.434700000000626e-05, 6.437499999999152e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.440300000000454e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.434799999999186e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.433299999999975e-05, 6.434700000002014e-05, 6.433299999999975e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.43750000000054e-05, 6.436099999998501e-05, 6.427800000000095e-05, 6.436100000001277e-05, 6.44300000000042e-05, 6.436199999998449e-05, 6.437499999997764e-05, 6.436099999998501e-05, 6.436100000001277e-05, 6.434700000002014e-05, 6.44300000000042e-05, 6.434800000001961e-05, 6.43750000000054e-05, 6.434700000002014e-05, 6.436099999998501e-05, 6.440299999999066e-05, 6.436100000001277e-05, 6.436200000001224e-05, 6.433299999999975e-05, 6.434699999999238e-05, 6.436099999998501e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.433399999999923e-05, 6.436100000001277e-05, 6.434700000002014e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.738" endtime="20201029 12:43:29.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.733" endtime="20201029 12:43:29.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.128" endtime="20201029 12:43:29.740"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:29.054" endtime="20201029 12:43:29.741" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.749" endtime="20201029 12:43:29.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.747" endtime="20201029 12:43:29.769"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.783" endtime="20201029 12:43:29.801"></status>
</kw>
<msg timestamp="20201029 12:43:29.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.781" endtime="20201029 12:43:29.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.803" endtime="20201029 12:43:29.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.808" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:29.806" endtime="20201029 12:43:29.808"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.778" endtime="20201029 12:43:29.809"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.775" endtime="20201029 12:43:29.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.774" endtime="20201029 12:43:29.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:29.813" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:29.813" endtime="20201029 12:43:29.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.811" endtime="20201029 12:43:29.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.773" endtime="20201029 12:43:29.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.773" endtime="20201029 12:43:29.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.815" endtime="20201029 12:43:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.771" endtime="20201029 12:43:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.769" endtime="20201029 12:43:29.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.746" endtime="20201029 12:43:29.818"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.827" endtime="20201029 12:43:29.850"></status>
</kw>
<msg timestamp="20201029 12:43:29.850" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.825" endtime="20201029 12:43:29.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.853" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.851" endtime="20201029 12:43:29.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.854" endtime="20201029 12:43:29.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.823" endtime="20201029 12:43:29.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.820" endtime="20201029 12:43:29.857"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.859" endtime="20201029 12:43:29.860"></status>
</kw>
<msg timestamp="20201029 12:43:29.861" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:29.857" endtime="20201029 12:43:29.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.866" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:29.865" endtime="20201029 12:43:29.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.868" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:29.867" endtime="20201029 12:43:29.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.862" endtime="20201029 12:43:29.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.873" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:29.872" endtime="20201029 12:43:29.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.875" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:29.874" endtime="20201029 12:43:29.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.869" endtime="20201029 12:43:29.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.884" endtime="20201029 12:43:30.170"></status>
</kw>
<msg timestamp="20201029 12:43:30.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068879736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068881292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.882" endtime="20201029 12:43:30.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068879736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068881292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.174" endtime="20201029 12:43:30.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.183" endtime="20201029 12:43:30.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.878" endtime="20201029 12:43:30.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.877" endtime="20201029 12:43:30.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.190" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5409999999937973e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.569000000006815e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.541999999993271e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:30.186" endtime="20201029 12:43:30.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:30.194" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.54...</msg>
<status status="PASS" starttime="20201029 12:43:30.191" endtime="20201029 12:43:30.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.199" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:30.198" endtime="20201029 12:43:30.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.201" level="INFO">VALUE: [1.5559999999997798e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.514000000008009e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5979999999915506e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.4860000000088691e-06, 1.5000000000015001e-06, 1.5409999999937973e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5130000000085353e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.596999999992077e-06]</msg>
<status status="PASS" starttime="20201029 12:43:30.200" endtime="20201029 12:43:30.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.195" endtime="20201029 12:43:30.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.819" endtime="20201029 12:43:30.203"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:29.743" endtime="20201029 12:43:30.203" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.211" endtime="20201029 12:43:30.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.209" endtime="20201029 12:43:30.231"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.251" endtime="20201029 12:43:30.269"></status>
</kw>
<msg timestamp="20201029 12:43:30.270" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.249" endtime="20201029 12:43:30.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.272" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.271" endtime="20201029 12:43:30.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.276" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:30.274" endtime="20201029 12:43:30.276"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:30.245" endtime="20201029 12:43:30.277"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:30.242" endtime="20201029 12:43:30.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.240" endtime="20201029 12:43:30.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:30.281" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:30.281" endtime="20201029 12:43:30.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.278" endtime="20201029 12:43:30.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.239" endtime="20201029 12:43:30.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.238" endtime="20201029 12:43:30.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.283" endtime="20201029 12:43:30.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.236" endtime="20201029 12:43:30.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.232" endtime="20201029 12:43:30.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.208" endtime="20201029 12:43:30.286"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.295" endtime="20201029 12:43:30.364"></status>
</kw>
<msg timestamp="20201029 12:43:30.365" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.293" endtime="20201029 12:43:30.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.367" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.366" endtime="20201029 12:43:30.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.369" endtime="20201029 12:43:30.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.291" endtime="20201029 12:43:30.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.288" endtime="20201029 12:43:30.371"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.373" endtime="20201029 12:43:30.376"></status>
</kw>
<msg timestamp="20201029 12:43:30.377" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:30.372" endtime="20201029 12:43:30.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.381" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:30.380" endtime="20201029 12:43:30.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.383" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:30.382" endtime="20201029 12:43:30.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.378" endtime="20201029 12:43:30.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.388" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:30.387" endtime="20201029 12:43:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.391" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:30.390" endtime="20201029 12:43:30.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.385" endtime="20201029 12:43:30.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.398" endtime="20201029 12:43:30.691"></status>
</kw>
<msg timestamp="20201029 12:43:30.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075823597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075832472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.397" endtime="20201029 12:43:30.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075823597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075832472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.695" endtime="20201029 12:43:30.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.704" endtime="20201029 12:43:30.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.394" endtime="20201029 12:43:30.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.392" endtime="20201029 12:43:30.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.711" level="INFO">${RESULT} = [{'diff': 8.874999999991529e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.874999999991529e-06}, {'diff': 8.874999999991529e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.875000000005406e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:30.707" endtime="20201029 12:43:30.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:30.716" level="INFO">${OVERHEAD} = {'diff': [8.874999999991529e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.9029...</msg>
<status status="PASS" starttime="20201029 12:43:30.712" endtime="20201029 12:43:30.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.721" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:30.720" endtime="20201029 12:43:30.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.723" level="INFO">VALUE: [8.874999999991529e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.889000000011915e-06, 8.931000000003686e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.903000000004546e-06, 8.915999999997704e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.847000000006267e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.916999999997177e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.915999999997704e-06, 8.915999999997704e-06, 8.903000000004546e-06, 8.861999999998371e-06, 8.819999999992723e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999991529e-06]</msg>
<status status="PASS" starttime="20201029 12:43:30.722" endtime="20201029 12:43:30.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.717" endtime="20201029 12:43:30.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.287" endtime="20201029 12:43:30.725"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:30.205" endtime="20201029 12:43:30.725" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.733" endtime="20201029 12:43:30.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.731" endtime="20201029 12:43:30.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.766" endtime="20201029 12:43:30.782"></status>
</kw>
<msg timestamp="20201029 12:43:30.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.765" endtime="20201029 12:43:30.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.784" endtime="20201029 12:43:30.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:30.787" endtime="20201029 12:43:30.789"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:30.762" endtime="20201029 12:43:30.790"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:30.760" endtime="20201029 12:43:30.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.758" endtime="20201029 12:43:30.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:30.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:30.794" endtime="20201029 12:43:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.791" endtime="20201029 12:43:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.757" endtime="20201029 12:43:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.757" endtime="20201029 12:43:30.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.796" endtime="20201029 12:43:30.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.755" endtime="20201029 12:43:30.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.753" endtime="20201029 12:43:30.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.729" endtime="20201029 12:43:30.799"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.811" endtime="20201029 12:43:31.010"></status>
</kw>
<msg timestamp="20201029 12:43:31.011" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.810" endtime="20201029 12:43:31.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.014" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.012" endtime="20201029 12:43:31.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.015" endtime="20201029 12:43:31.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.807" endtime="20201029 12:43:31.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.801" endtime="20201029 12:43:31.018"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.020" endtime="20201029 12:43:31.022"></status>
</kw>
<msg timestamp="20201029 12:43:31.022" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:31.019" endtime="20201029 12:43:31.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.027" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:31.026" endtime="20201029 12:43:31.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.029" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:31.028" endtime="20201029 12:43:31.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.023" endtime="20201029 12:43:31.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.034" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:31.033" endtime="20201029 12:43:31.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.036" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:31.035" endtime="20201029 12:43:31.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.031" endtime="20201029 12:43:31.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.044" endtime="20201029 12:43:31.347"></status>
</kw>
<msg timestamp="20201029 12:43:31.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072516028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072532403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.043" endtime="20201029 12:43:31.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072516028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072532403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.352" endtime="20201029 12:43:31.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.360" endtime="20201029 12:43:31.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.040" endtime="20201029 12:43:31.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.038" endtime="20201029 12:43:31.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.367" level="INFO">${RESULT} = [{'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.6402000000012573e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.6388000000006064e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:31.364" endtime="20201029 12:43:31.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:31.372" level="INFO">${OVERHEAD} = {'diff': [1.637499999999903e-05, 1.637499999999903e-05, 1.640299999999817e-05, 1.6402000000012573e-05, 1.640299999999817e-05, 1.6388000000006064e-05, 1.638899999999166e-05, 1.6401999999998695e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:43:31.368" endtime="20201029 12:43:31.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.377" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:31.376" endtime="20201029 12:43:31.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.380" level="INFO">VALUE: [1.637499999999903e-05, 1.637499999999903e-05, 1.640299999999817e-05, 1.6402000000012573e-05, 1.640299999999817e-05, 1.6388000000006064e-05, 1.638899999999166e-05, 1.6401999999998695e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.645899999999645e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.637499999998515e-05, 1.6444000000004344e-05, 1.640299999999817e-05, 1.637499999998515e-05, 1.6401999999998695e-05, 1.637499999998515e-05, 1.6388000000006064e-05, 1.640299999999817e-05, 1.634699999999989e-05, 1.640299999999817e-05, 1.636099999999252e-05, 1.6416000000019082e-05, 1.640200000002645e-05, 1.6388999999977782e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6401999999998695e-05, 1.640299999999817e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.64169999999908e-05, 1.6375000000012907e-05, 1.6389000000005538e-05]</msg>
<status status="PASS" starttime="20201029 12:43:31.378" endtime="20201029 12:43:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.373" endtime="20201029 12:43:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.800" endtime="20201029 12:43:31.381"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:30.727" endtime="20201029 12:43:31.381" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.388" endtime="20201029 12:43:31.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.387" endtime="20201029 12:43:31.409"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.422" endtime="20201029 12:43:31.438"></status>
</kw>
<msg timestamp="20201029 12:43:31.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.421" endtime="20201029 12:43:31.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.440" endtime="20201029 12:43:31.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.445" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:31.442" endtime="20201029 12:43:31.446"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:31.418" endtime="20201029 12:43:31.446"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:31.415" endtime="20201029 12:43:31.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.414" endtime="20201029 12:43:31.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:31.451" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:31.450" endtime="20201029 12:43:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.448" endtime="20201029 12:43:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.413" endtime="20201029 12:43:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.413" endtime="20201029 12:43:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.453" endtime="20201029 12:43:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.411" endtime="20201029 12:43:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.409" endtime="20201029 12:43:31.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.385" endtime="20201029 12:43:31.456"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.460" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:31.468" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:33.950" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:31.458" endtime="20201029 12:43:33.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.954" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:43:33.952" endtime="20201029 12:43:34.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.457" endtime="20201029 12:43:34.957"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.964" endtime="20201029 12:43:34.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.961" endtime="20201029 12:43:34.989"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.007" endtime="20201029 12:43:35.021"></status>
</kw>
<msg timestamp="20201029 12:43:35.022" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.004" endtime="20201029 12:43:35.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.028" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.025" endtime="20201029 12:43:35.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.030" endtime="20201029 12:43:35.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.998" endtime="20201029 12:43:35.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.993" endtime="20201029 12:43:35.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.058" endtime="20201029 12:43:35.359"></status>
</kw>
<msg timestamp="20201029 12:43:35.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032234083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032277625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.053" endtime="20201029 12:43:35.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032234083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032277625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.364" endtime="20201029 12:43:35.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.373" endtime="20201029 12:43:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.042" endtime="20201029 12:43:35.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.038" endtime="20201029 12:43:35.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.380" level="INFO">${PHILIP_RES} = [{'diff': 4.354200000000058e-05}, {'diff': 8.096999999998578e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.055999999999341e-06}, {'diff': 8.096999999998578e-06}, {'diff': 8.068999999999438e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:35.376" endtime="20201029 12:43:35.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.385" level="INFO">${RESULT} = {'diff': [4.354200000000058e-05, 8.096999999998578e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.097000000005516e-06, 8.0699...</msg>
<status status="PASS" starttime="20201029 12:43:35.381" endtime="20201029 12:43:35.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.390" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.389" endtime="20201029 12:43:35.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.392" level="INFO">VALUE: [4.354200000000058e-05, 8.096999999998578e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.097000000005516e-06, 8.069999999998911e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201029 12:43:35.391" endtime="20201029 12:43:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.386" endtime="20201029 12:43:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.990" endtime="20201029 12:43:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.959" endtime="20201029 12:43:35.394"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.396" endtime="20201029 12:43:35.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.395" endtime="20201029 12:43:35.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.425" endtime="20201029 12:43:35.436"></status>
</kw>
<msg timestamp="20201029 12:43:35.437" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.423" endtime="20201029 12:43:35.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.439" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.438" endtime="20201029 12:43:35.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.440" endtime="20201029 12:43:35.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.420" endtime="20201029 12:43:35.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.418" endtime="20201029 12:43:35.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.450" endtime="20201029 12:43:35.737"></status>
</kw>
<msg timestamp="20201029 12:43:35.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017150292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017163514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.449" endtime="20201029 12:43:35.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017150292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017163514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.741" endtime="20201029 12:43:35.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.750" endtime="20201029 12:43:35.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.446" endtime="20201029 12:43:35.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.444" endtime="20201029 12:43:35.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.757" level="INFO">${PHILIP_RES} = [{'diff': 1.3222000000000234e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2611000000002648e-05}, {'diff': 1.2624999999998748e-...</msg>
<status status="PASS" starttime="20201029 12:43:35.753" endtime="20201029 12:43:35.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.761" level="INFO">${RESULT} = {'diff': [1.3222000000000234e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2610999999999178e-05...</msg>
<status status="PASS" starttime="20201029 12:43:35.758" endtime="20201029 12:43:35.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.766" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.765" endtime="20201029 12:43:35.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.768" level="INFO">VALUE: [1.3222000000000234e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2708999999999637e-05, 1.2612000000002122e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2610999999999178e-05, 1.2527000000001759e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2681000000000497e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2680000000001024e-05, 1.2610999999999178e-05, 1.2667000000000928e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2612000000002122e-05, 1.2624999999998748e-05, 1.2597999999999082e-05, 1.2556000000000372e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2652999999997888e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2597999999999082e-05, 1.2528000000001233e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2610999999999178e-05]</msg>
<status status="PASS" starttime="20201029 12:43:35.767" endtime="20201029 12:43:35.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.762" endtime="20201029 12:43:35.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.417" endtime="20201029 12:43:35.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.394" endtime="20201029 12:43:35.770"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.772" endtime="20201029 12:43:35.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.771" endtime="20201029 12:43:35.792"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.802" endtime="20201029 12:43:35.813"></status>
</kw>
<msg timestamp="20201029 12:43:35.813" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.799" endtime="20201029 12:43:35.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.816" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.814" endtime="20201029 12:43:35.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.818" endtime="20201029 12:43:35.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.797" endtime="20201029 12:43:35.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.794" endtime="20201029 12:43:35.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.827" endtime="20201029 12:43:36.112"></status>
</kw>
<msg timestamp="20201029 12:43:36.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018227028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.826" endtime="20201029 12:43:36.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018227028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.117" endtime="20201029 12:43:36.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.126" endtime="20201029 12:43:36.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.823" endtime="20201029 12:43:36.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.821" endtime="20201029 12:43:36.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.133" level="INFO">${PHILIP_RES} = [{'diff': 1.8305999999999184e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7763999999999974e-...</msg>
<status status="PASS" starttime="20201029 12:43:36.130" endtime="20201029 12:43:36.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.138" level="INFO">${RESULT} = {'diff': [1.8305999999999184e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05...</msg>
<status status="PASS" starttime="20201029 12:43:36.134" endtime="20201029 12:43:36.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.142" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.141" endtime="20201029 12:43:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.146" level="INFO">VALUE: [1.8305999999999184e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.777700000000007e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7791999999999114e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7749999999996935e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.144" endtime="20201029 12:43:36.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.139" endtime="20201029 12:43:36.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.793" endtime="20201029 12:43:36.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.770" endtime="20201029 12:43:36.148"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.150" endtime="20201029 12:43:36.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.148" endtime="20201029 12:43:36.170"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.178" endtime="20201029 12:43:36.189"></status>
</kw>
<msg timestamp="20201029 12:43:36.190" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.177" endtime="20201029 12:43:36.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.193" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.191" endtime="20201029 12:43:36.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.194" endtime="20201029 12:43:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.174" endtime="20201029 12:43:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.172" endtime="20201029 12:43:36.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.203" endtime="20201029 12:43:36.488"></status>
</kw>
<msg timestamp="20201029 12:43:36.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017250208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017274264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.202" endtime="20201029 12:43:36.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017250208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017274264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.493" endtime="20201029 12:43:36.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.503" endtime="20201029 12:43:36.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.199" endtime="20201029 12:43:36.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.197" endtime="20201029 12:43:36.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.511" level="INFO">${PHILIP_RES} = [{'diff': 2.4056000000001465e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.352700000000235e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.3528000000001825e-0...</msg>
<status status="PASS" starttime="20201029 12:43:36.508" endtime="20201029 12:43:36.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.517" level="INFO">${RESULT} = {'diff': [2.4056000000001465e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.352700000000235e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3513999999998786e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:36.512" endtime="20201029 12:43:36.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.522" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.521" endtime="20201029 12:43:36.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.526" level="INFO">VALUE: [2.4056000000001465e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.352700000000235e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.355500000000149e-05, 2.3513999999998786e-05, 2.3542000000001395e-05, 2.3569999999997066e-05, 2.3527999999998356e-05, 2.3514000000002255e-05, 2.3540999999998452e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.352700000000235e-05, 2.3527999999998356e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.354100000000192e-05, 2.3526999999998882e-05, 2.35970000000002e-05, 2.3542000000001395e-05, 2.3570000000000535e-05, 2.3528000000001825e-05, 2.3512999999999312e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3458000000000506e-05, 2.35970000000002e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3499999999999216e-05, 2.3541999999997926e-05, 2.3540999999998452e-05, 2.355500000000149e-05, 2.3513999999998786e-05, 2.3485999999999646e-05, 2.3556000000000965e-05, 2.3527999999998356e-05, 2.354100000000192e-05, 2.3513999999998786e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.524" endtime="20201029 12:43:36.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.518" endtime="20201029 12:43:36.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.171" endtime="20201029 12:43:36.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.148" endtime="20201029 12:43:36.527"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.530" endtime="20201029 12:43:36.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.528" endtime="20201029 12:43:36.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.559" endtime="20201029 12:43:36.571"></status>
</kw>
<msg timestamp="20201029 12:43:36.571" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.558" endtime="20201029 12:43:36.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.574" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.572" endtime="20201029 12:43:36.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.575" endtime="20201029 12:43:36.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.555" endtime="20201029 12:43:36.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.553" endtime="20201029 12:43:36.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.584" endtime="20201029 12:43:36.871"></status>
</kw>
<msg timestamp="20201029 12:43:36.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019012306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.583" endtime="20201029 12:43:36.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019012306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.875" endtime="20201029 12:43:36.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.883" endtime="20201029 12:43:36.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.580" endtime="20201029 12:43:36.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.578" endtime="20201029 12:43:36.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.891" level="INFO">${PHILIP_RES} = [{'diff': 3.0431000000000902e-05}, {'diff': 2.9917000000000832e-05}, {'diff': 2.988800000000222e-05}, {'diff': 2.9889000000001692e-05}, {'diff': 2.9903000000001262e-05}, {'diff': 2.9916000000001358e-0...</msg>
<status status="PASS" starttime="20201029 12:43:36.888" endtime="20201029 12:43:36.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.896" level="INFO">${RESULT} = {'diff': [3.0431000000000902e-05, 2.9917000000000832e-05, 2.988800000000222e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.9916000000001358e-05, 2.994499999999997e-05, 2.9846999999999513e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:36.892" endtime="20201029 12:43:36.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.900" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.899" endtime="20201029 12:43:36.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.903" level="INFO">VALUE: [3.0431000000000902e-05, 2.9917000000000832e-05, 2.988800000000222e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.9916000000001358e-05, 2.994499999999997e-05, 2.9846999999999513e-05, 2.9903000000001262e-05, 2.9861000000002552e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9902000000001788e-05, 2.9889000000001692e-05, 2.990199999999832e-05, 2.9903000000001262e-05, 2.9931000000000402e-05, 2.988799999999875e-05, 2.9902999999997792e-05, 2.9902999999997792e-05, 2.9985999999999208e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9930000000000928e-05, 2.9846999999999513e-05, 2.9944000000000498e-05, 2.9930000000000928e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9902999999997792e-05, 2.9917000000000832e-05, 2.9888999999998223e-05, 2.9903000000001262e-05, 2.990199999999832e-05, 2.9903000000001262e-05, 2.9888999999998223e-05, 2.992999999999746e-05, 2.9903000000001262e-05, 2.9888999999998223e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9889000000001692e-05, 2.9917000000000832e-05, 2.9903000000001262e-05, 2.9902000000001788e-05, 2.9958000000000068e-05, 2.9903000000001262e-05, 2.9916000000001358e-05, 2.9889000000001692e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.901" endtime="20201029 12:43:36.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.897" endtime="20201029 12:43:36.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.551" endtime="20201029 12:43:36.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.528" endtime="20201029 12:43:36.904"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.907" endtime="20201029 12:43:36.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.905" endtime="20201029 12:43:36.927"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.936" endtime="20201029 12:43:36.947"></status>
</kw>
<msg timestamp="20201029 12:43:36.948" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.934" endtime="20201029 12:43:36.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.950" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.949" endtime="20201029 12:43:36.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.951" endtime="20201029 12:43:36.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.931" endtime="20201029 12:43:36.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.929" endtime="20201029 12:43:36.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.962" endtime="20201029 12:43:37.249"></status>
</kw>
<msg timestamp="20201029 12:43:37.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.960" endtime="20201029 12:43:37.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.254" endtime="20201029 12:43:37.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.262" endtime="20201029 12:43:37.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.958" endtime="20201029 12:43:37.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.956" endtime="20201029 12:43:37.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.269" level="INFO">${PHILIP_RES} = [{'diff': 3.7416999999997924e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.694500000000003e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.6903000000001324e-05}, {'diff': 3.6889000000001754e-0...</msg>
<status status="PASS" starttime="20201029 12:43:37.266" endtime="20201029 12:43:37.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.274" level="INFO">${RESULT} = {'diff': [3.7416999999997924e-05, 3.6889000000001754e-05, 3.694500000000003e-05, 3.6888999999998284e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6931000000000463e-05, 3.6888999999998284e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:37.270" endtime="20201029 12:43:37.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.278" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.277" endtime="20201029 12:43:37.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.281" level="INFO">VALUE: [3.7416999999997924e-05, 3.6889000000001754e-05, 3.694500000000003e-05, 3.6888999999998284e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6931000000000463e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.6902999999997854e-05, 3.6917000000000894e-05, 3.6860999999999144e-05, 3.6903000000001324e-05, 3.6846999999999575e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6917000000000894e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6874999999998714e-05, 3.6903000000001324e-05, 3.6903000000001324e-05, 3.6902999999997854e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6875000000002184e-05, 3.6875000000002184e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.692999999999752e-05, 3.6902999999997854e-05, 3.6889000000001754e-05, 3.6903000000001324e-05]</msg>
<status status="PASS" starttime="20201029 12:43:37.279" endtime="20201029 12:43:37.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.274" endtime="20201029 12:43:37.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.927" endtime="20201029 12:43:37.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.905" endtime="20201029 12:43:37.283"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.285" endtime="20201029 12:43:37.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.284" endtime="20201029 12:43:37.306"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.315" endtime="20201029 12:43:37.327"></status>
</kw>
<msg timestamp="20201029 12:43:37.328" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.313" endtime="20201029 12:43:37.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.330" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.329" endtime="20201029 12:43:37.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.332" endtime="20201029 12:43:37.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.310" endtime="20201029 12:43:37.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.308" endtime="20201029 12:43:37.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.341" endtime="20201029 12:43:37.627"></status>
</kw>
<msg timestamp="20201029 12:43:37.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017876083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017921097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.339" endtime="20201029 12:43:37.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017876083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017921097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.631" endtime="20201029 12:43:37.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.640" endtime="20201029 12:43:37.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.337" endtime="20201029 12:43:37.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.335" endtime="20201029 12:43:37.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.647" level="INFO">${PHILIP_RES} = [{'diff': 4.501399999999947e-05}, {'diff': 4.447200000000026e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.44999999999994e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.44999999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:37.643" endtime="20201029 12:43:37.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.652" level="INFO">${RESULT} = {'diff': [4.501399999999947e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.4486999999999305e-05, 4.448599999999983e-05, 4.45000...</msg>
<status status="PASS" starttime="20201029 12:43:37.648" endtime="20201029 12:43:37.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.656" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.655" endtime="20201029 12:43:37.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.659" level="INFO">VALUE: [4.501399999999947e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.4486999999999305e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.447200000000026e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.442999999999808e-05, 4.4472999999999735e-05, 4.44999999999994e-05, 4.4486999999999305e-05, 4.451400000000244e-05, 4.4431000000001025e-05, 4.4459000000000165e-05, 4.4459000000000165e-05, 4.4459000000000165e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.451400000000244e-05, 4.4486999999999305e-05, 4.45129999999995e-05, 4.445800000000069e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.454199999999811e-05, 4.448599999999983e-05, 4.442999999999808e-05, 4.44999999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:43:37.657" endtime="20201029 12:43:37.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.653" endtime="20201029 12:43:37.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.306" endtime="20201029 12:43:37.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.283" endtime="20201029 12:43:37.660"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.663" endtime="20201029 12:43:37.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.661" endtime="20201029 12:43:37.683"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.692" endtime="20201029 12:43:37.706"></status>
</kw>
<msg timestamp="20201029 12:43:37.706" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.690" endtime="20201029 12:43:37.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.709" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.707" endtime="20201029 12:43:37.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.710" endtime="20201029 12:43:37.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.687" endtime="20201029 12:43:37.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.685" endtime="20201029 12:43:37.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.719" endtime="20201029 12:43:38.009"></status>
</kw>
<msg timestamp="20201029 12:43:38.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017601097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.718" endtime="20201029 12:43:38.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017601097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.013" endtime="20201029 12:43:38.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.022" endtime="20201029 12:43:38.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.715" endtime="20201029 12:43:38.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.713" endtime="20201029 12:43:38.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.029" level="INFO">${PHILIP_RES} = [{'diff': 5.322200000000207e-05}, {'diff': 5.2708000000002e-05}, {'diff': 5.272200000000157e-05}, {'diff': 5.2708000000002e-05}, {'diff': 5.270900000000148e-05}, {'diff': 5.2707999999998534e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:38.026" endtime="20201029 12:43:38.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.033" level="INFO">${RESULT} = {'diff': [5.322200000000207e-05, 5.2708000000002e-05, 5.272200000000157e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.269500000000191e-05, 5.2693999999998964e-05, 5.270899...</msg>
<status status="PASS" starttime="20201029 12:43:38.030" endtime="20201029 12:43:38.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.038" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.037" endtime="20201029 12:43:38.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.040" level="INFO">VALUE: [5.322200000000207e-05, 5.2708000000002e-05, 5.272200000000157e-05, 5.2708000000002e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.269500000000191e-05, 5.2693999999998964e-05, 5.270899999999801e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2707999999998534e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2707999999998534e-05, 5.272300000000105e-05, 5.2665999999999824e-05, 5.269499999999844e-05, 5.269400000000243e-05, 5.2708000000002e-05, 5.2708000000002e-05, 5.269500000000191e-05, 5.270900000000148e-05, 5.2708000000002e-05, 5.269499999999844e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2693999999998964e-05, 5.2721999999998104e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.270899999999801e-05, 5.2707999999998534e-05, 5.270899999999801e-05, 5.2707999999998534e-05, 5.270900000000148e-05, 5.269400000000243e-05, 5.270900000000148e-05, 5.277799999999985e-05, 5.269400000000243e-05, 5.276400000000028e-05, 5.2707999999998534e-05, 5.269500000000191e-05, 5.2693999999998964e-05, 5.268099999999887e-05, 5.2721999999998104e-05, 5.269499999999844e-05, 5.2679999999999394e-05, 5.2693999999998964e-05, 5.268099999999887e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.039" endtime="20201029 12:43:38.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.034" endtime="20201029 12:43:38.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.683" endtime="20201029 12:43:38.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.661" endtime="20201029 12:43:38.042"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.044" endtime="20201029 12:43:38.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.043" endtime="20201029 12:43:38.065"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.073" endtime="20201029 12:43:38.087"></status>
</kw>
<msg timestamp="20201029 12:43:38.087" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.072" endtime="20201029 12:43:38.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.090" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.088" endtime="20201029 12:43:38.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.091" endtime="20201029 12:43:38.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.069" endtime="20201029 12:43:38.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.067" endtime="20201029 12:43:38.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.101" endtime="20201029 12:43:38.388"></status>
</kw>
<msg timestamp="20201029 12:43:38.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017315083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:38.100" endtime="20201029 12:43:38.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017315083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:38.392" endtime="20201029 12:43:38.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.401" endtime="20201029 12:43:38.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.097" endtime="20201029 12:43:38.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.095" endtime="20201029 12:43:38.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.409" level="INFO">${PHILIP_RES} = [{'diff': 6.20829999999975e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.15279999999982e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.15279999999982e-05}, {'diff': 6.152800000000166e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:38.404" endtime="20201029 12:43:38.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.419" level="INFO">${RESULT} = {'diff': [6.20829999999975e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.14589999...</msg>
<status status="PASS" starttime="20201029 12:43:38.410" endtime="20201029 12:43:38.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.428" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.427" endtime="20201029 12:43:38.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.431" level="INFO">VALUE: [6.20829999999975e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.145899999999982e-05, 6.162499999999918e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.154099999999829e-05, 6.154100000000176e-05, 6.151399999999863e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.155500000000133e-05, 6.15140000000021e-05, 6.154200000000123e-05, 6.154200000000123e-05, 6.15560000000008e-05, 6.15560000000008e-05, 6.148599999999949e-05, 6.148600000000295e-05, 6.154099999999829e-05, 6.152800000000166e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.155500000000133e-05, 6.151299999999915e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.15140000000021e-05, 6.151399999999863e-05, 6.152699999999872e-05, 6.154200000000123e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.15140000000021e-05, 6.152699999999872e-05, 6.154100000000176e-05, 6.15279999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.430" endtime="20201029 12:43:38.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.421" endtime="20201029 12:43:38.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.065" endtime="20201029 12:43:38.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.042" endtime="20201029 12:43:38.434"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.437" endtime="20201029 12:43:38.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.435" endtime="20201029 12:43:38.458"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.466" endtime="20201029 12:43:38.478"></status>
</kw>
<msg timestamp="20201029 12:43:38.479" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.464" endtime="20201029 12:43:38.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.481" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.480" endtime="20201029 12:43:38.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.482" endtime="20201029 12:43:38.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.462" endtime="20201029 12:43:38.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.460" endtime="20201029 12:43:38.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.497" endtime="20201029 12:43:38.805"></status>
</kw>
<msg timestamp="20201029 12:43:38.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016832208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.492" endtime="20201029 12:43:38.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016832208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.809" endtime="20201029 12:43:38.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.818" endtime="20201029 12:43:38.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.489" endtime="20201029 12:43:38.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.486" endtime="20201029 12:43:38.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.824" level="INFO">${PHILIP_RES} = [{'diff': 7.148599999999908e-05}, {'diff': 7.098600000000205e-05}, {'diff': 7.088899999999759e-05}, {'diff': 7.098599999999858e-05}, {'diff': 7.094499999999934e-05}, {'diff': 7.097300000000195e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:38.821" endtime="20201029 12:43:38.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.829" level="INFO">${RESULT} = {'diff': [7.148599999999908e-05, 7.098600000000205e-05, 7.088899999999759e-05, 7.098599999999858e-05, 7.094499999999934e-05, 7.097300000000195e-05, 7.095799999999944e-05, 7.09300000000003e-05, 7.09579...</msg>
<status status="PASS" starttime="20201029 12:43:38.825" endtime="20201029 12:43:38.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.833" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.832" endtime="20201029 12:43:38.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.836" level="INFO">VALUE: [7.148599999999908e-05, 7.098600000000205e-05, 7.088899999999759e-05, 7.098599999999858e-05, 7.094499999999934e-05, 7.097300000000195e-05, 7.095799999999944e-05, 7.09300000000003e-05, 7.095799999999944e-05, 7.094500000000281e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.097199999999901e-05, 7.101400000000119e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095899999999891e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.097200000000248e-05, 7.102700000000128e-05, 7.097299999999848e-05, 7.097300000000195e-05, 7.097200000000248e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.097200000000248e-05, 7.095799999999944e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.098600000000205e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.097300000000195e-05, 7.097199999999901e-05, 7.094399999999987e-05, 7.097200000000248e-05, 7.098600000000205e-05, 7.097199999999901e-05, 7.097299999999848e-05, 7.097300000000195e-05, 7.094399999999987e-05, 7.09170000000002e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.095899999999891e-05, 7.097299999999848e-05, 7.095800000000291e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.835" endtime="20201029 12:43:38.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.830" endtime="20201029 12:43:38.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.458" endtime="20201029 12:43:38.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.435" endtime="20201029 12:43:38.838"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.840" endtime="20201029 12:43:38.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.839" endtime="20201029 12:43:38.860"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.868" endtime="20201029 12:43:38.881"></status>
</kw>
<msg timestamp="20201029 12:43:38.882" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.867" endtime="20201029 12:43:38.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.884" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.883" endtime="20201029 12:43:38.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.885" endtime="20201029 12:43:38.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.864" endtime="20201029 12:43:38.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.862" endtime="20201029 12:43:38.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.894" endtime="20201029 12:43:39.187"></status>
</kw>
<msg timestamp="20201029 12:43:39.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016824194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.893" endtime="20201029 12:43:39.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016824194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.191" endtime="20201029 12:43:39.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.199" endtime="20201029 12:43:39.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.890" endtime="20201029 12:43:39.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.889" endtime="20201029 12:43:39.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.207" level="INFO">${PHILIP_RES} = [{'diff': 8.152700000000138e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.099999999999774e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.099999999999774e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:39.204" endtime="20201029 12:43:39.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.211" level="INFO">${RESULT} = {'diff': [8.152700000000138e-05, 8.104199999999992e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.1027...</msg>
<status status="PASS" starttime="20201029 12:43:39.208" endtime="20201029 12:43:39.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.215" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.214" endtime="20201029 12:43:39.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.218" level="INFO">VALUE: [8.152700000000138e-05, 8.104199999999992e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.094399999999946e-05, 8.102799999999688e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.102799999999688e-05, 8.09719999999986e-05, 8.100000000000121e-05, 8.10269999999974e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.101399999999731e-05, 8.102800000000035e-05, 8.100000000000121e-05, 8.102800000000035e-05, 8.105599999999949e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.097200000000207e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.101400000000078e-05, 8.101399999999731e-05, 8.105599999999949e-05, 8.10130000000013e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.10130000000013e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.105600000000296e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.102700000000088e-05, 8.102800000000035e-05, 8.105500000000002e-05, 8.102700000000088e-05, 8.104199999999992e-05, 8.101400000000078e-05, 8.102800000000035e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.216" endtime="20201029 12:43:39.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.212" endtime="20201029 12:43:39.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.861" endtime="20201029 12:43:39.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.838" endtime="20201029 12:43:39.220"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.222" endtime="20201029 12:43:39.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.220" endtime="20201029 12:43:39.242"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.250" endtime="20201029 12:43:39.264"></status>
</kw>
<msg timestamp="20201029 12:43:39.265" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.248" endtime="20201029 12:43:39.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.267" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.266" endtime="20201029 12:43:39.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.268" endtime="20201029 12:43:39.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.246" endtime="20201029 12:43:39.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.244" endtime="20201029 12:43:39.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.278" endtime="20201029 12:43:39.564"></status>
</kw>
<msg timestamp="20201029 12:43:39.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016767597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016859819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.277" endtime="20201029 12:43:39.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016767597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016859819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.569" endtime="20201029 12:43:39.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.577" endtime="20201029 12:43:39.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.274" endtime="20201029 12:43:39.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.272" endtime="20201029 12:43:39.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.583" level="INFO">${PHILIP_RES} = [{'diff': 9.222200000000291e-05}, {'diff': 9.169499999999928e-05}, {'diff': 9.170799999999937e-05}, {'diff': 9.168000000000023e-05}, {'diff': 9.173599999999851e-05}, {'diff': 9.166700000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:39.580" endtime="20201029 12:43:39.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.587" level="INFO">${RESULT} = {'diff': [9.222200000000291e-05, 9.169499999999928e-05, 9.170799999999937e-05, 9.168000000000023e-05, 9.173599999999851e-05, 9.166700000000014e-05, 9.165300000000057e-05, 9.168000000000023e-05, 9.1667...</msg>
<status status="PASS" starttime="20201029 12:43:39.584" endtime="20201029 12:43:39.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.592" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.591" endtime="20201029 12:43:39.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.594" level="INFO">VALUE: [9.222200000000291e-05, 9.169499999999928e-05, 9.170799999999937e-05, 9.168000000000023e-05, 9.173599999999851e-05, 9.166700000000014e-05, 9.165300000000057e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.161099999999839e-05, 9.172200000000241e-05, 9.169499999999928e-05, 9.1639000000001e-05, 9.170899999999885e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.16520000000011e-05, 9.169500000000275e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.162499999999796e-05, 9.168099999999971e-05, 9.168099999999971e-05, 9.169499999999928e-05, 9.170800000000284e-05, 9.172199999999894e-05, 9.168099999999971e-05, 9.168100000000318e-05, 9.166700000000014e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.166600000000066e-05, 9.169500000000275e-05, 9.16939999999998e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.169499999999928e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.163799999999805e-05, 9.166700000000014e-05, 9.166600000000066e-05, 9.161099999999839e-05, 9.168000000000023e-05, 9.168099999999971e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.593" endtime="20201029 12:43:39.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.588" endtime="20201029 12:43:39.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.242" endtime="20201029 12:43:39.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.220" endtime="20201029 12:43:39.597"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.599" endtime="20201029 12:43:39.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.598" endtime="20201029 12:43:39.619"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.627" endtime="20201029 12:43:39.642"></status>
</kw>
<msg timestamp="20201029 12:43:39.643" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.626" endtime="20201029 12:43:39.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.645" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.644" endtime="20201029 12:43:39.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.646" endtime="20201029 12:43:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.623" endtime="20201029 12:43:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.621" endtime="20201029 12:43:39.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.655" endtime="20201029 12:43:39.940"></status>
</kw>
<msg timestamp="20201029 12:43:39.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016729069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.653" endtime="20201029 12:43:39.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016729069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.944" endtime="20201029 12:43:39.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.952" endtime="20201029 12:43:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.651" endtime="20201029 12:43:39.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.649" endtime="20201029 12:43:39.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.959" level="INFO">${PHILIP_RES} = [{'diff': 0.00010349999999999943}, {'diff': 0.00010299999999999893}, {'diff': 0.00010297300000000273}, {'diff': 0.00010291700000000098}, {'diff': 0.00010297199999999979}, {'diff': 0.000102957999999996...</msg>
<status status="PASS" starttime="20201029 12:43:39.956" endtime="20201029 12:43:39.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.964" level="INFO">${RESULT} = {'diff': [0.00010349999999999943, 0.00010299999999999893, 0.00010297300000000273, 0.00010291700000000098, 0.00010297199999999979, 0.00010295799999999675, 0.00010298599999999936, 0.00010297199999999979...</msg>
<status status="PASS" starttime="20201029 12:43:39.960" endtime="20201029 12:43:39.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.968" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.967" endtime="20201029 12:43:39.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.971" level="INFO">VALUE: [0.00010349999999999943, 0.00010299999999999893, 0.00010297300000000273, 0.00010291700000000098, 0.00010297199999999979, 0.00010295799999999675, 0.00010298599999999936, 0.00010297199999999979, 0.00010294500000000012, 0.00010295800000000022, 0.00010297299999999926, 0.00010295800000000022, 0.00010294500000000012, 0.00010295800000000022, 0.0001030420000000011, 0.00010294400000000065, 0.00010295899999999969, 0.00010297199999999979, 0.00010291700000000098, 0.00010295800000000022, 0.00010294500000000012, 0.00010295800000000022, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010294400000000065, 0.00010294500000000012, 0.00010298599999999936, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010295800000000022, 0.00010295800000000022, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010291699999999751, 0.00010295800000000022, 0.00010297200000000326, 0.00010298599999999936, 0.00010295800000000022, 0.00010295899999999969, 0.00010299999999999893, 0.00010295899999999969, 0.00010298600000000283, 0.00010297199999999979, 0.00010295800000000022, 0.00010295899999999969, 0.0001030000000000024, 0.00010295899999999969]</msg>
<status status="PASS" starttime="20201029 12:43:39.969" endtime="20201029 12:43:39.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.965" endtime="20201029 12:43:39.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.620" endtime="20201029 12:43:39.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.597" endtime="20201029 12:43:39.972"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.975" endtime="20201029 12:43:39.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.973" endtime="20201029 12:43:39.996"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.007" endtime="20201029 12:43:40.024"></status>
</kw>
<msg timestamp="20201029 12:43:40.025" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.004" endtime="20201029 12:43:40.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.027" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.026" endtime="20201029 12:43:40.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.028" endtime="20201029 12:43:40.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.001" endtime="20201029 12:43:40.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.999" endtime="20201029 12:43:40.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.037" endtime="20201029 12:43:40.323"></status>
</kw>
<msg timestamp="20201029 12:43:40.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.036" endtime="20201029 12:43:40.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.327" endtime="20201029 12:43:40.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.335" endtime="20201029 12:43:40.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.033" endtime="20201029 12:43:40.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.031" endtime="20201029 12:43:40.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.342" level="INFO">${PHILIP_RES} = [{'diff': 0.00011538900000000046}, {'diff': 0.00011483299999999821}, {'diff': 0.00011486100000000082}, {'diff': 0.00011484700000000125}, {'diff': 0.00011484800000000073}, {'diff': 0.000114846999999997...</msg>
<status status="PASS" starttime="20201029 12:43:40.339" endtime="20201029 12:43:40.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.346" level="INFO">${RESULT} = {'diff': [0.00011538900000000046, 0.00011483299999999821, 0.00011486100000000082, 0.00011484700000000125, 0.00011484800000000073, 0.00011484699999999778, 0.0001149299999999992, 0.00011479199999999898,...</msg>
<status status="PASS" starttime="20201029 12:43:40.343" endtime="20201029 12:43:40.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.351" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.350" endtime="20201029 12:43:40.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.353" level="INFO">VALUE: [0.00011538900000000046, 0.00011483299999999821, 0.00011486100000000082, 0.00011484700000000125, 0.00011484800000000073, 0.00011484699999999778, 0.0001149299999999992, 0.00011479199999999898, 0.00011486100000000082, 0.00011484700000000125, 0.00011484699999999778, 0.00011484700000000125, 0.00011479199999999898, 0.00011484700000000125, 0.00011483399999999769, 0.00011483299999999821, 0.00011486100000000082, 0.00011484800000000073, 0.00011480499999999907, 0.00011481999999999812, 0.00011484700000000125, 0.00011484700000000125, 0.00011486099999999735, 0.00011488899999999996, 0.00011482000000000159, 0.00011483300000000168, 0.00011477799999999941, 0.00011493100000000214, 0.00011484700000000125, 0.00011486100000000082, 0.00011484699999999778, 0.00011488800000000049, 0.00011486100000000082, 0.00011483300000000168, 0.00011484700000000125, 0.00011484699999999778, 0.00011486100000000082, 0.00011484800000000073, 0.00011484700000000125, 0.00011484699999999778, 0.00011491700000000257, 0.00011482000000000159, 0.0001148750000000004, 0.00011484699999999778, 0.00011479199999999898, 0.00011484700000000125, 0.00011484700000000125, 0.00011484799999999726, 0.00011484699999999778, 0.00011488800000000049]</msg>
<status status="PASS" starttime="20201029 12:43:40.352" endtime="20201029 12:43:40.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.347" endtime="20201029 12:43:40.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.997" endtime="20201029 12:43:40.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.973" endtime="20201029 12:43:40.355"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.357" endtime="20201029 12:43:40.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.356" endtime="20201029 12:43:40.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.385" endtime="20201029 12:43:40.402"></status>
</kw>
<msg timestamp="20201029 12:43:40.402" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.384" endtime="20201029 12:43:40.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.405" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.403" endtime="20201029 12:43:40.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.406" endtime="20201029 12:43:40.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.381" endtime="20201029 12:43:40.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.379" endtime="20201029 12:43:40.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.415" endtime="20201029 12:43:40.701"></status>
</kw>
<msg timestamp="20201029 12:43:40.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016880444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.414" endtime="20201029 12:43:40.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016880444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.705" endtime="20201029 12:43:40.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.714" endtime="20201029 12:43:40.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.411" endtime="20201029 12:43:40.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.410" endtime="20201029 12:43:40.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.720" level="INFO">${PHILIP_RES} = [{'diff': 0.00012787500000000299}, {'diff': 0.00012734699999999988}, {'diff': 0.00012734699999999988}, {'diff': 0.00012731999999999674}, {'diff': 0.00012737499999999902}, {'diff': 0.000127361000000002...</msg>
<status status="PASS" starttime="20201029 12:43:40.717" endtime="20201029 12:43:40.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.724" level="INFO">${RESULT} = {'diff': [0.00012787500000000299, 0.00012734699999999988, 0.00012734699999999988, 0.00012731999999999674, 0.00012737499999999902, 0.00012736100000000292, 0.00012734699999999988, 0.00012734699999999988...</msg>
<status status="PASS" starttime="20201029 12:43:40.721" endtime="20201029 12:43:40.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.728" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.727" endtime="20201029 12:43:40.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.731" level="INFO">VALUE: [0.00012787500000000299, 0.00012734699999999988, 0.00012734699999999988, 0.00012731999999999674, 0.00012737499999999902, 0.00012736100000000292, 0.00012734699999999988, 0.00012734699999999988, 0.00012740300000000163, 0.00012737499999999902, 0.00012734699999999988, 0.00012736099999999945, 0.00012730600000000064, 0.00012736199999999892, 0.00012736099999999945, 0.00012734699999999988, 0.00012734699999999988, 0.00012736100000000292, 0.0001273889999999986, 0.00012734699999999988, 0.00012740300000000163, 0.00012734699999999988, 0.00012736099999999945, 0.0001273200000000002, 0.00012734699999999988, 0.00012740300000000163, 0.00012734699999999988, 0.00012733399999999978, 0.00012734799999999935, 0.00012734699999999988, 0.0001273330000000003, 0.00012740300000000163, 0.00012733399999999978, 0.00012737499999999902, 0.0001273330000000003, 0.00012740199999999868, 0.00012733400000000325, 0.0001272780000000015, 0.0001273330000000003, 0.00012737499999999902, 0.00012740299999999816, 0.00012734699999999988, 0.00012734799999999935, 0.00012734699999999988, 0.00012734699999999988, 0.00012737499999999902, 0.00012734699999999988, 0.00012734799999999935, 0.00012736099999999945, 0.00012734699999999988]</msg>
<status status="PASS" starttime="20201029 12:43:40.729" endtime="20201029 12:43:40.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.725" endtime="20201029 12:43:40.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.378" endtime="20201029 12:43:40.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.355" endtime="20201029 12:43:40.733"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.736" endtime="20201029 12:43:40.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.734" endtime="20201029 12:43:40.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.764" endtime="20201029 12:43:40.781"></status>
</kw>
<msg timestamp="20201029 12:43:40.781" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.762" endtime="20201029 12:43:40.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.784" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.782" endtime="20201029 12:43:40.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.785" endtime="20201029 12:43:40.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.760" endtime="20201029 12:43:40.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.758" endtime="20201029 12:43:40.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.794" endtime="20201029 12:43:41.079"></status>
</kw>
<msg timestamp="20201029 12:43:41.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016741694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016882681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.792" endtime="20201029 12:43:41.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016741694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016882681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.083" endtime="20201029 12:43:41.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.091" endtime="20201029 12:43:41.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.790" endtime="20201029 12:43:41.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.788" endtime="20201029 12:43:41.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.098" level="INFO">${PHILIP_RES} = [{'diff': 0.00014098699999999867}, {'diff': 0.00014040300000000075}, {'diff': 0.00014048699999999817}, {'diff': 0.0001404729999999986}, {'diff': 0.00014045799999999956}, {'diff': 0.0001404720000000026...</msg>
<status status="PASS" starttime="20201029 12:43:41.095" endtime="20201029 12:43:41.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.103" level="INFO">${RESULT} = {'diff': [0.00014098699999999867, 0.00014040300000000075, 0.00014048699999999817, 0.0001404729999999986, 0.00014045799999999956, 0.0001404720000000026, 0.0001404309999999999, 0.00014045799999999956, 0...</msg>
<status status="PASS" starttime="20201029 12:43:41.099" endtime="20201029 12:43:41.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.107" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.106" endtime="20201029 12:43:41.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.109" level="INFO">VALUE: [0.00014098699999999867, 0.00014040300000000075, 0.00014048699999999817, 0.0001404729999999986, 0.00014045799999999956, 0.0001404720000000026, 0.0001404309999999999, 0.00014045799999999956, 0.00014047199999999913, 0.0001404859999999987, 0.00014049999999999827, 0.00014047199999999913, 0.00014044499999999946, 0.0001404590000000025, 0.00014044500000000293, 0.0001404859999999987, 0.0001404859999999987, 0.00014044499999999946, 0.00014044399999999999, 0.00014047199999999913, 0.00014047199999999913, 0.00014040299999999728, 0.0001404720000000026, 0.0001404720000000026, 0.00014045799999999956, 0.00014040300000000075, 0.00014044499999999946, 0.00014048699999999817, 0.00014045899999999903, 0.00014044499999999946, 0.00014048600000000216, 0.0001404309999999999, 0.00014049999999999827, 0.00014045799999999956, 0.00014045799999999956, 0.00014045799999999956, 0.00014045799999999956, 0.00014047199999999913, 0.0001405140000000013, 0.0001404590000000025, 0.00014048700000000164, 0.0001404859999999987, 0.00014044499999999946, 0.0001405270000000014, 0.00014045799999999956, 0.00014047199999999913, 0.00014041699999999685, 0.00014047199999999913, 0.0001404720000000026, 0.00014040200000000128]</msg>
<status status="PASS" starttime="20201029 12:43:41.108" endtime="20201029 12:43:41.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.103" endtime="20201029 12:43:41.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.756" endtime="20201029 12:43:41.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.734" endtime="20201029 12:43:41.111"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.114" endtime="20201029 12:43:41.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.112" endtime="20201029 12:43:41.133"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.141" endtime="20201029 12:43:41.159"></status>
</kw>
<msg timestamp="20201029 12:43:41.159" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.140" endtime="20201029 12:43:41.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.162" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.160" endtime="20201029 12:43:41.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.163" endtime="20201029 12:43:41.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.137" endtime="20201029 12:43:41.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.136" endtime="20201029 12:43:41.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.172" endtime="20201029 12:43:41.457"></status>
</kw>
<msg timestamp="20201029 12:43:41.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016780667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.170" endtime="20201029 12:43:41.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016780667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.462" endtime="20201029 12:43:41.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.470" endtime="20201029 12:43:41.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.167" endtime="20201029 12:43:41.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.166" endtime="20201029 12:43:41.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.476" level="INFO">${PHILIP_RES} = [{'diff': 0.0001547089999999994}, {'diff': 0.0001541670000000002}, {'diff': 0.00015418099999999976}, {'diff': 0.0001542080000000029}, {'diff': 0.0001541800000000003}, {'diff': 0.0001542089999999989}, ...</msg>
<status status="PASS" starttime="20201029 12:43:41.473" endtime="20201029 12:43:41.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.480" level="INFO">${RESULT} = {'diff': [0.0001547089999999994, 0.0001541670000000002, 0.00015418099999999976, 0.0001542080000000029, 0.0001541800000000003, 0.0001542089999999989, 0.00015416599999999725, 0.00015419499999999933, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:41.477" endtime="20201029 12:43:41.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.484" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.483" endtime="20201029 12:43:41.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.487" level="INFO">VALUE: [0.0001547089999999994, 0.0001541670000000002, 0.00015418099999999976, 0.0001542080000000029, 0.0001541800000000003, 0.0001542089999999989, 0.00015416599999999725, 0.00015419499999999933, 0.00015419399999999986, 0.00015419499999999933, 0.00015416600000000072, 0.00015418099999999976, 0.0001541800000000003, 0.00015418099999999976, 0.0001541800000000003, 0.00015418099999999976, 0.00015419399999999986, 0.00015420799999999943, 0.000154221999999999, 0.0001541800000000003, 0.00015418099999999976, 0.00015420799999999943, 0.00015419499999999933, 0.0001541800000000003, 0.00015418099999999976, 0.0001541800000000003, 0.00015419499999999933, 0.0001541800000000003, 0.0001541670000000002, 0.00015416599999999725, 0.00015419499999999933, 0.00015419399999999986, 0.0001541670000000002, 0.0001541800000000003, 0.00015418099999999976, 0.00015419399999999986, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.0001542089999999989, 0.0001541800000000003, 0.0001542089999999989, 0.00015419399999999986, 0.000154221999999999, 0.0001541670000000002, 0.0001541950000000028, 0.00015419399999999986, 0.00015418099999999976, 0.00015419399999999986, 0.00015419499999999933]</msg>
<status status="PASS" starttime="20201029 12:43:41.485" endtime="20201029 12:43:41.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.481" endtime="20201029 12:43:41.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.134" endtime="20201029 12:43:41.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.112" endtime="20201029 12:43:41.489"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.491" endtime="20201029 12:43:41.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.489" endtime="20201029 12:43:41.511"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.519" endtime="20201029 12:43:41.538"></status>
</kw>
<msg timestamp="20201029 12:43:41.538" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.517" endtime="20201029 12:43:41.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.541" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.539" endtime="20201029 12:43:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.542" endtime="20201029 12:43:41.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.515" endtime="20201029 12:43:41.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.513" endtime="20201029 12:43:41.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.551" endtime="20201029 12:43:41.837"></status>
</kw>
<msg timestamp="20201029 12:43:41.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016756292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016925347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.550" endtime="20201029 12:43:41.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016756292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016925347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.841" endtime="20201029 12:43:41.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.849" endtime="20201029 12:43:41.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.547" endtime="20201029 12:43:41.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.546" endtime="20201029 12:43:41.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0001690550000000013}, {'diff': 0.00016847199999999937}, {'diff': 0.00016852800000000112}, {'diff': 0.00016851400000000155}, {'diff': 0.00016852799999999765}, {'diff': 0.0001685280000000011...</msg>
<status status="PASS" starttime="20201029 12:43:41.853" endtime="20201029 12:43:41.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.860" level="INFO">${RESULT} = {'diff': [0.0001690550000000013, 0.00016847199999999937, 0.00016852800000000112, 0.00016851400000000155, 0.00016852799999999765, 0.00016852800000000112, 0.0001685420000000007, 0.00016851400000000155, ...</msg>
<status status="PASS" starttime="20201029 12:43:41.857" endtime="20201029 12:43:41.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.864" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.863" endtime="20201029 12:43:41.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.866" level="INFO">VALUE: [0.0001690550000000013, 0.00016847199999999937, 0.00016852800000000112, 0.00016851400000000155, 0.00016852799999999765, 0.00016852800000000112, 0.0001685420000000007, 0.00016851400000000155, 0.00016855600000000026, 0.00016852800000000112, 0.00016852800000000112, 0.00016852800000000112, 0.0001684999999999985, 0.00016851400000000155, 0.00016852800000000112, 0.00016851399999999808, 0.0001685420000000007, 0.00016852800000000112, 0.00016852700000000165, 0.00016852800000000112, 0.00016852699999999818, 0.00016852700000000165, 0.00016851300000000208, 0.00016852699999999818, 0.00016851400000000155, 0.00016851399999999808, 0.00016852799999999765, 0.0001685420000000007, 0.00016852799999999765, 0.00016852800000000112, 0.00016855600000000026, 0.00016851399999999808, 0.00016851400000000155, 0.0001685420000000007, 0.00016852799999999765, 0.00016852800000000112, 0.00016854199999999722, 0.00016852800000000112, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.00016852800000000112, 0.00016852699999999818, 0.00016852800000000112, 0.00016852699999999818, 0.00016854100000000122, 0.00016852700000000165, 0.00016851399999999808, 0.00016852700000000165, 0.0001684579999999998]</msg>
<status status="PASS" starttime="20201029 12:43:41.865" endtime="20201029 12:43:41.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.860" endtime="20201029 12:43:41.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.511" endtime="20201029 12:43:41.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.489" endtime="20201029 12:43:41.869"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.871" endtime="20201029 12:43:41.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.870" endtime="20201029 12:43:41.891"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.903" endtime="20201029 12:43:41.922"></status>
</kw>
<msg timestamp="20201029 12:43:41.922" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.901" endtime="20201029 12:43:41.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.925" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.923" endtime="20201029 12:43:41.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.926" endtime="20201029 12:43:41.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.896" endtime="20201029 12:43:41.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.893" endtime="20201029 12:43:41.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.935" endtime="20201029 12:43:42.220"></status>
</kw>
<msg timestamp="20201029 12:43:42.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.934" endtime="20201029 12:43:42.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.225" endtime="20201029 12:43:42.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.233" endtime="20201029 12:43:42.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.931" endtime="20201029 12:43:42.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.929" endtime="20201029 12:43:42.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.239" level="INFO">${PHILIP_RES} = [{'diff': 0.0001840139999999997}, {'diff': 0.00018345800000000093}, {'diff': 0.00018348600000000007}, {'diff': 0.00018355499999999844}, {'diff': 0.00018348699999999954}, {'diff': 0.0001834720000000005...</msg>
<status status="PASS" starttime="20201029 12:43:42.236" endtime="20201029 12:43:42.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.244" level="INFO">${RESULT} = {'diff': [0.0001840139999999997, 0.00018345800000000093, 0.00018348600000000007, 0.00018355499999999844, 0.00018348699999999954, 0.0001834720000000005, 0.00018348699999999954, 0.0001834439999999979, 0...</msg>
<status status="PASS" starttime="20201029 12:43:42.240" endtime="20201029 12:43:42.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.248" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.247" endtime="20201029 12:43:42.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.251" level="INFO">VALUE: [0.0001840139999999997, 0.00018345800000000093, 0.00018348600000000007, 0.00018355499999999844, 0.00018348699999999954, 0.0001834720000000005, 0.00018348699999999954, 0.0001834439999999979, 0.00018347199999999703, 0.00018347199999999703, 0.00018348600000000007, 0.00018349999999999964, 0.00018349999999999964, 0.00018341600000000222, 0.00018349999999999964, 0.0001834439999999979, 0.00018345800000000093, 0.00018347299999999997, 0.0001834720000000005, 0.0001834720000000005, 0.0001834720000000005, 0.00018349999999999964, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.0001834720000000005, 0.00018348600000000007, 0.0001834720000000005, 0.0001834590000000004, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.0001834859999999966, 0.0001835000000000031, 0.00018348600000000007, 0.00018348600000000007, 0.0001834720000000005, 0.0001834720000000005, 0.00018354200000000181, 0.00018349999999999964, 0.00018348600000000007, 0.00018351400000000267, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.0001834720000000005, 0.00018354099999999887, 0.00018352799999999878, 0.00018345800000000093]</msg>
<status status="PASS" starttime="20201029 12:43:42.249" endtime="20201029 12:43:42.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.245" endtime="20201029 12:43:42.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.892" endtime="20201029 12:43:42.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.869" endtime="20201029 12:43:42.253"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.255" endtime="20201029 12:43:42.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.254" endtime="20201029 12:43:42.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.283" endtime="20201029 12:43:42.303"></status>
</kw>
<msg timestamp="20201029 12:43:42.304" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.281" endtime="20201029 12:43:42.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.306" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.305" endtime="20201029 12:43:42.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.307" endtime="20201029 12:43:42.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.279" endtime="20201029 12:43:42.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.277" endtime="20201029 12:43:42.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.316" endtime="20201029 12:43:42.601"></status>
</kw>
<msg timestamp="20201029 12:43:42.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016703528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.315" endtime="20201029 12:43:42.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016703528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.605" endtime="20201029 12:43:42.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.613" endtime="20201029 12:43:42.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.312" endtime="20201029 12:43:42.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.311" endtime="20201029 12:43:42.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.620" level="INFO">${PHILIP_RES} = [{'diff': 0.00019961100000000231}, {'diff': 0.00019904199999999997}, {'diff': 0.00019904199999999997}, {'diff': 0.00019904199999999997}, {'diff': 0.0001990410000000005}, {'diff': 0.0001990550000000000...</msg>
<status status="PASS" starttime="20201029 12:43:42.617" endtime="20201029 12:43:42.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.624" level="INFO">${RESULT} = {'diff': [0.00019961100000000231, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.0001990410000000005, 0.00019905500000000007, 0.00019905599999999954, 0.00019905599999999954,...</msg>
<status status="PASS" starttime="20201029 12:43:42.621" endtime="20201029 12:43:42.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.629" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.628" endtime="20201029 12:43:42.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.631" level="INFO">VALUE: [0.00019961100000000231, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.0001990410000000005, 0.00019905500000000007, 0.00019905599999999954, 0.00019905599999999954, 0.0001990549999999966, 0.00019905500000000007, 0.00019904199999999997, 0.00019905599999999954, 0.00019904199999999997, 0.0001990410000000005, 0.00019905500000000007, 0.00019905599999999954, 0.0001990280000000004, 0.00019905500000000007, 0.00019897200000000212, 0.0001989999999999978, 0.0001990280000000004, 0.00019905500000000007, 0.00019900000000000126, 0.00019904199999999997, 0.00019904199999999997, 0.00019904199999999997, 0.0001990410000000005, 0.00019904199999999997, 0.0001990699999999991, 0.00019895799999999908, 0.00019905500000000007, 0.00019906899999999964, 0.00019904199999999997, 0.00019901400000000083, 0.0001990280000000004, 0.00019904099999999703, 0.00019897299999999812, 0.000199056000000003, 0.0001990410000000005, 0.00019905500000000007, 0.0001990280000000004, 0.00019904199999999997, 0.00019908400000000215, 0.00019905500000000007, 0.0001990280000000004, 0.00019905599999999954, 0.00019905599999999954, 0.0001990410000000005, 0.0001989869999999977, 0.00019904199999999997]</msg>
<status status="PASS" starttime="20201029 12:43:42.630" endtime="20201029 12:43:42.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.625" endtime="20201029 12:43:42.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.276" endtime="20201029 12:43:42.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.253" endtime="20201029 12:43:42.633"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.635" endtime="20201029 12:43:42.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.634" endtime="20201029 12:43:42.655"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.663" endtime="20201029 12:43:42.684"></status>
</kw>
<msg timestamp="20201029 12:43:42.684" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.661" endtime="20201029 12:43:42.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.687" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.685" endtime="20201029 12:43:42.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.688" endtime="20201029 12:43:42.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.659" endtime="20201029 12:43:42.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.657" endtime="20201029 12:43:42.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.698" endtime="20201029 12:43:42.983"></status>
</kw>
<msg timestamp="20201029 12:43:42.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016563361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016779097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.696" endtime="20201029 12:43:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016563361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016779097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.987" endtime="20201029 12:43:42.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.995" endtime="20201029 12:43:42.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.694" endtime="20201029 12:43:42.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.692" endtime="20201029 12:43:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0002157360000000011}, {'diff': 0.00021522200000000102}, {'diff': 0.00021520799999999798}, {'diff': 0.00021522200000000102}, {'diff': 0.00021522200000000102}, {'diff': 0.0002151939999999984...</msg>
<status status="PASS" starttime="20201029 12:43:42.998" endtime="20201029 12:43:43.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.006" level="INFO">${RESULT} = {'diff': [0.0002157360000000011, 0.00021522200000000102, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021519399999999841, 0.00021522200000000102, 0.00021522200000000102,...</msg>
<status status="PASS" starttime="20201029 12:43:43.003" endtime="20201029 12:43:43.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.010" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.009" endtime="20201029 12:43:43.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.012" level="INFO">VALUE: [0.0002157360000000011, 0.00021522200000000102, 0.00021520799999999798, 0.00021522200000000102, 0.00021522200000000102, 0.00021519399999999841, 0.00021522200000000102, 0.00021522200000000102, 0.00021522200000000102, 0.00021522199999999755, 0.00021520800000000145, 0.0002152360000000006, 0.00021523599999999712, 0.00021520800000000145, 0.00021522200000000102, 0.00021522199999999755, 0.00021520900000000093, 0.0002152230000000005, 0.00021522299999999703, 0.0002151949999999979, 0.0002152779999999993, 0.00021519500000000136, 0.00021520900000000093, 0.0002152779999999993, 0.0002152230000000005, 0.00021520899999999746, 0.00021516699999999875, 0.00021520900000000093, 0.00021523599999999712, 0.0002152360000000006, 0.00021520900000000093, 0.00021520899999999746, 0.00021520900000000093, 0.00021522200000000102, 0.00021523599999999712, 0.0002152360000000006, 0.0002152360000000006, 0.0002152360000000006, 0.00021519399999999841, 0.00021519400000000188, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.0002152779999999993, 0.00021519399999999841, 0.00021522200000000102, 0.00021516700000000222, 0.00021520799999999798, 0.0002152360000000006, 0.00021522200000000102]</msg>
<status status="PASS" starttime="20201029 12:43:43.011" endtime="20201029 12:43:43.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.006" endtime="20201029 12:43:43.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.656" endtime="20201029 12:43:43.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.633" endtime="20201029 12:43:43.015"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.017" endtime="20201029 12:43:43.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.016" endtime="20201029 12:43:43.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.045" endtime="20201029 12:43:43.067"></status>
</kw>
<msg timestamp="20201029 12:43:43.067" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.044" endtime="20201029 12:43:43.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.069" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.068" endtime="20201029 12:43:43.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.071" endtime="20201029 12:43:43.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.041" endtime="20201029 12:43:43.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.039" endtime="20201029 12:43:43.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.080" endtime="20201029 12:43:43.365"></status>
</kw>
<msg timestamp="20201029 12:43:43.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016622819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016855347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.078" endtime="20201029 12:43:43.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016622819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016855347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.369" endtime="20201029 12:43:43.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.377" endtime="20201029 12:43:43.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.075" endtime="20201029 12:43:43.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.074" endtime="20201029 12:43:43.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.383" level="INFO">${PHILIP_RES} = [{'diff': 0.0002325279999999992}, {'diff': 0.00023205600000000132}, {'diff': 0.00023199999999999957}, {'diff': 0.00023201399999999914}, {'diff': 0.0002320279999999987}, {'diff': 0.00023199999999999957...</msg>
<status status="PASS" starttime="20201029 12:43:43.380" endtime="20201029 12:43:43.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.388" level="INFO">${RESULT} = {'diff': [0.0002325279999999992, 0.00023205600000000132, 0.00023199999999999957, 0.00023201399999999914, 0.0002320279999999987, 0.00023199999999999957, 0.00023202800000000218, 0.00023201299999999966, ...</msg>
<status status="PASS" starttime="20201029 12:43:43.384" endtime="20201029 12:43:43.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.392" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.391" endtime="20201029 12:43:43.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.395" level="INFO">VALUE: [0.0002325279999999992, 0.00023205600000000132, 0.00023199999999999957, 0.00023201399999999914, 0.0002320279999999987, 0.00023199999999999957, 0.00023202800000000218, 0.00023201299999999966, 0.00023199999999999957, 0.0002319440000000013, 0.00023204199999999828, 0.00023201399999999914, 0.00023201399999999914, 0.000231986, 0.00023199999999999957, 0.00023200000000000304, 0.00023199999999999957, 0.00023206899999999794, 0.00023205500000000184, 0.00023201299999999966, 0.00023201399999999914, 0.000231986, 0.000231986, 0.00023204199999999828, 0.00023195800000000086, 0.0002320279999999987, 0.00023201399999999914, 0.00023197199999999696, 0.00023201399999999914, 0.00023208300000000098, 0.00023199999999999957, 0.0002320140000000026, 0.00023205600000000132, 0.00023193000000000172, 0.00023197199999999696, 0.00023194500000000076, 0.00023197200000000043, 0.00023201399999999914, 0.0002320140000000026, 0.00023201399999999914, 0.00023201299999999966, 0.00023200000000000304, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.00023199999999999957, 0.0002320140000000026, 0.00023201399999999914]</msg>
<status status="PASS" starttime="20201029 12:43:43.393" endtime="20201029 12:43:43.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.389" endtime="20201029 12:43:43.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.038" endtime="20201029 12:43:43.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.015" endtime="20201029 12:43:43.397"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.399" endtime="20201029 12:43:43.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.398" endtime="20201029 12:43:43.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.427" endtime="20201029 12:43:43.449"></status>
</kw>
<msg timestamp="20201029 12:43:43.450" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.425" endtime="20201029 12:43:43.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.452" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.451" endtime="20201029 12:43:43.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.453" endtime="20201029 12:43:43.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.423" endtime="20201029 12:43:43.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.421" endtime="20201029 12:43:43.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.462" endtime="20201029 12:43:43.749"></status>
</kw>
<msg timestamp="20201029 12:43:43.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016725306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.461" endtime="20201029 12:43:43.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016725306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.753" endtime="20201029 12:43:43.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.761" endtime="20201029 12:43:43.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.458" endtime="20201029 12:43:43.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.456" endtime="20201029 12:43:43.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.767" level="INFO">${PHILIP_RES} = [{'diff': 0.00024993000000000237}, {'diff': 0.00024938899999999917}, {'diff': 0.00024938899999999917}, {'diff': 0.00024940299999999874}, {'diff': 0.0002494030000000022}, {'diff': 0.0002494030000000022...</msg>
<status status="PASS" starttime="20201029 12:43:43.764" endtime="20201029 12:43:43.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.771" level="INFO">${RESULT} = {'diff': [0.00024993000000000237, 0.00024938899999999917, 0.00024938899999999917, 0.00024940299999999874, 0.0002494030000000022, 0.0002494030000000022, 0.0002494160000000023, 0.0002493749999999996, 0....</msg>
<status status="PASS" starttime="20201029 12:43:43.768" endtime="20201029 12:43:43.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.776" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.775" endtime="20201029 12:43:43.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.778" level="INFO">VALUE: [0.00024993000000000237, 0.00024938899999999917, 0.00024938899999999917, 0.00024940299999999874, 0.0002494030000000022, 0.0002494030000000022, 0.0002494160000000023, 0.0002493749999999996, 0.00024938899999999917, 0.0002494309999999979, 0.00024943100000000135, 0.000249361, 0.0002494030000000022, 0.00024938899999999917, 0.00024940299999999874, 0.00024938899999999917, 0.00024944400000000144, 0.00024938899999999917, 0.0002494030000000022, 0.00024944499999999745, 0.0002494450000000009, 0.0002494170000000018, 0.0002494170000000018, 0.0002494170000000018, 0.00024940299999999874, 0.000249361, 0.00024941599999999883, 0.00024941599999999883, 0.0002494030000000022, 0.00024947300000000006, 0.0002494170000000018, 0.0002494169999999983, 0.00024940299999999874, 0.0002494170000000018, 0.00024940200000000273, 0.0002494160000000023, 0.00024941599999999883, 0.0002494309999999979, 0.0002493749999999996, 0.0002494030000000022, 0.000249361, 0.00024940299999999874, 0.0002493879999999997, 0.00024940299999999874, 0.00024940199999999926, 0.0002494160000000023, 0.00024938900000000264, 0.00024944499999999745, 0.00024940299999999874, 0.00024940299999999874]</msg>
<status status="PASS" starttime="20201029 12:43:43.777" endtime="20201029 12:43:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.772" endtime="20201029 12:43:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.419" endtime="20201029 12:43:43.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.397" endtime="20201029 12:43:43.780"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.782" endtime="20201029 12:43:43.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.781" endtime="20201029 12:43:43.802"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.810" endtime="20201029 12:43:43.833"></status>
</kw>
<msg timestamp="20201029 12:43:43.834" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.809" endtime="20201029 12:43:43.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.836" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.835" endtime="20201029 12:43:43.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.838" endtime="20201029 12:43:43.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.806" endtime="20201029 12:43:43.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.804" endtime="20201029 12:43:43.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.847" endtime="20201029 12:43:44.134"></status>
</kw>
<msg timestamp="20201029 12:43:44.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016673, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016940931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:43.846" endtime="20201029 12:43:44.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016673, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016940931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:44.138" endtime="20201029 12:43:44.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.146" endtime="20201029 12:43:44.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.843" endtime="20201029 12:43:44.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.842" endtime="20201029 12:43:44.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.152" level="INFO">${PHILIP_RES} = [{'diff': 0.00026793099999999903}, {'diff': 0.00026741600000000296}, {'diff': 0.00026744399999999863}, {'diff': 0.00026741600000000296}, {'diff': 0.0002674019999999999}, {'diff': 0.0002674160000000029...</msg>
<status status="PASS" starttime="20201029 12:43:44.149" endtime="20201029 12:43:44.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.156" level="INFO">${RESULT} = {'diff': [0.00026793099999999903, 0.00026741600000000296, 0.00026744399999999863, 0.00026741600000000296, 0.0002674019999999999, 0.00026741600000000296, 0.00026742999999999906, 0.00026751399999999995,...</msg>
<status status="PASS" starttime="20201029 12:43:44.153" endtime="20201029 12:43:44.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.161" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.160" endtime="20201029 12:43:44.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.163" level="INFO">VALUE: [0.00026793099999999903, 0.00026741600000000296, 0.00026744399999999863, 0.00026741600000000296, 0.0002674019999999999, 0.00026741600000000296, 0.00026742999999999906, 0.00026751399999999995, 0.00026742999999999906, 0.00026742999999999906, 0.00026745800000000167, 0.00026745800000000167, 0.0002674159999999995, 0.0002674159999999995, 0.0002674029999999994, 0.00026742999999999906, 0.00026742999999999906, 0.00026747199999999777, 0.0002674870000000003, 0.0002673470000000011, 0.000267431000000002, 0.00026741699999999896, 0.00026743099999999853, 0.00026745899999999767, 0.00026741699999999896, 0.00026741699999999896, 0.00026744500000000157, 0.00026737500000000025, 0.00026744500000000157, 0.00026741699999999896, 0.000267431000000002, 0.00026741699999999896, 0.00026743099999999853, 0.00026741699999999896, 0.000267431000000002, 0.0002673889999999998, 0.00026741699999999896, 0.00026741699999999896, 0.00026737500000000025, 0.00026747199999999777, 0.00026741700000000243, 0.00026741699999999896, 0.000267431000000002, 0.0002674579999999982, 0.0002674440000000021, 0.00026741699999999896, 0.0002674300000000025, 0.00026742999999999906, 0.00026742999999999906, 0.0002674019999999999]</msg>
<status status="PASS" starttime="20201029 12:43:44.162" endtime="20201029 12:43:44.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.157" endtime="20201029 12:43:44.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.803" endtime="20201029 12:43:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.780" endtime="20201029 12:43:44.166"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.168" endtime="20201029 12:43:44.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.167" endtime="20201029 12:43:44.188"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.196" endtime="20201029 12:43:44.221"></status>
</kw>
<msg timestamp="20201029 12:43:44.222" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.194" endtime="20201029 12:43:44.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.224" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.223" endtime="20201029 12:43:44.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.225" endtime="20201029 12:43:44.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.192" endtime="20201029 12:43:44.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.190" endtime="20201029 12:43:44.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.234" endtime="20201029 12:43:44.535"></status>
</kw>
<msg timestamp="20201029 12:43:44.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016925389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.233" endtime="20201029 12:43:44.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016925389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.539" endtime="20201029 12:43:44.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.547" endtime="20201029 12:43:44.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.230" endtime="20201029 12:43:44.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.228" endtime="20201029 12:43:44.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.553" level="INFO">${PHILIP_RES} = [{'diff': 0.000286583}, {'diff': 0.00028602800000000067}, {'diff': 0.0002860689999999999}, {'diff': 0.0002860270000000012}, {'diff': 0.00028604199999999677}, {'diff': 0.0002860559999999998}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:43:44.550" endtime="20201029 12:43:44.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.558" level="INFO">${RESULT} = {'diff': [0.000286583, 0.00028602800000000067, 0.0002860689999999999, 0.0002860270000000012, 0.00028604199999999677, 0.0002860559999999998, 0.0002860560000000033, 0.00028605500000000034, 0.00028604100...</msg>
<status status="PASS" starttime="20201029 12:43:44.554" endtime="20201029 12:43:44.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.563" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.562" endtime="20201029 12:43:44.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.565" level="INFO">VALUE: [0.000286583, 0.00028602800000000067, 0.0002860689999999999, 0.0002860270000000012, 0.00028604199999999677, 0.0002860559999999998, 0.0002860560000000033, 0.00028605500000000034, 0.00028604100000000077, 0.00028604100000000077, 0.00028604200000000024, 0.00028607000000000285, 0.00028608399999999895, 0.0002860559999999998, 0.00028604100000000077, 0.0002861109999999986, 0.00028602800000000067, 0.0002860699999999994, 0.00028601399999999763, 0.00028604200000000024, 0.0002860409999999973, 0.00028605500000000034, 0.0002860559999999998, 0.0002860559999999998, 0.0002860559999999998, 0.0002860829999999995, 0.00028605500000000034, 0.0002860409999999973, 0.0002860559999999998, 0.0002860559999999998, 0.00028604200000000024, 0.0002860559999999998, 0.00028605500000000034, 0.00028605500000000034, 0.0002860559999999998, 0.00028604200000000024, 0.0002860559999999998, 0.0002860559999999998, 0.00028605500000000034, 0.0002860270000000012, 0.0002861109999999986, 0.00028607000000000285, 0.0002860699999999994, 0.000286098000000002, 0.00028602800000000067, 0.00028605500000000034, 0.00028605500000000034, 0.00028604200000000024, 0.00028604200000000024, 0.0002860559999999998]</msg>
<status status="PASS" starttime="20201029 12:43:44.564" endtime="20201029 12:43:44.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.559" endtime="20201029 12:43:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.189" endtime="20201029 12:43:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.166" endtime="20201029 12:43:44.569"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.571" endtime="20201029 12:43:44.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.569" endtime="20201029 12:43:44.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.599" endtime="20201029 12:43:44.625"></status>
</kw>
<msg timestamp="20201029 12:43:44.626" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.598" endtime="20201029 12:43:44.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.628" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.627" endtime="20201029 12:43:44.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.629" endtime="20201029 12:43:44.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.595" endtime="20201029 12:43:44.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.593" endtime="20201029 12:43:44.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.639" endtime="20201029 12:43:44.928"></status>
</kw>
<msg timestamp="20201029 12:43:44.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016956486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017262292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.637" endtime="20201029 12:43:44.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016956486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017262292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.932" endtime="20201029 12:43:44.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.940" endtime="20201029 12:43:44.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.634" endtime="20201029 12:43:44.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.633" endtime="20201029 12:43:44.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.946" level="INFO">${PHILIP_RES} = [{'diff': 0.00030580599999999875}, {'diff': 0.0003052360000000004}, {'diff': 0.0003052919999999987}, {'diff': 0.0003052919999999987}, {'diff': 0.00030530500000000224}, {'diff': 0.0003052919999999987},...</msg>
<status status="PASS" starttime="20201029 12:43:44.943" endtime="20201029 12:43:44.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.950" level="INFO">${RESULT} = {'diff': [0.00030580599999999875, 0.0003052360000000004, 0.0003052919999999987, 0.0003052919999999987, 0.00030530500000000224, 0.0003052919999999987, 0.00030530499999999877, 0.0003053060000000017, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:44.947" endtime="20201029 12:43:44.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.955" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.954" endtime="20201029 12:43:44.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.957" level="INFO">VALUE: [0.00030580599999999875, 0.0003052360000000004, 0.0003052919999999987, 0.0003052919999999987, 0.00030530500000000224, 0.0003052919999999987, 0.00030530499999999877, 0.0003053060000000017, 0.0003052909999999992, 0.0003052919999999987, 0.0003052780000000026, 0.0003052919999999987, 0.0003053200000000013, 0.0003052779999999991, 0.00030530599999999825, 0.0003052909999999992, 0.00030529200000000214, 0.00030524999999999997, 0.0003052780000000026, 0.00030530499999999877, 0.0003052779999999991, 0.0003053200000000013, 0.0003052919999999987, 0.0003052919999999987, 0.00030529100000000267, 0.0003052919999999987, 0.0003052909999999992, 0.00030529200000000214, 0.00030531899999999834, 0.00030526399999999954, 0.000305264000000003, 0.0003052779999999991, 0.0003052779999999991, 0.0003052780000000026, 0.0003052919999999987, 0.0003052909999999992, 0.0003052780000000026, 0.00030527699999999963, 0.0003052919999999987, 0.00030529100000000267, 0.0003052919999999987, 0.0003052779999999991, 0.0003052779999999991, 0.0003052919999999987, 0.00030530499999999877, 0.00030532000000000475, 0.0003052909999999992, 0.00030530599999999825, 0.00030533300000000485, 0.0003052919999999987]</msg>
<status status="PASS" starttime="20201029 12:43:44.956" endtime="20201029 12:43:44.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.951" endtime="20201029 12:43:44.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.591" endtime="20201029 12:43:44.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.569" endtime="20201029 12:43:44.959"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.961" endtime="20201029 12:43:44.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.960" endtime="20201029 12:43:44.982"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.990" endtime="20201029 12:43:45.017"></status>
</kw>
<msg timestamp="20201029 12:43:45.017" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.988" endtime="20201029 12:43:45.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.020" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.019" endtime="20201029 12:43:45.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.021" endtime="20201029 12:43:45.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.986" endtime="20201029 12:43:45.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.984" endtime="20201029 12:43:45.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.031" endtime="20201029 12:43:45.317"></status>
</kw>
<msg timestamp="20201029 12:43:45.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01690575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017231389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:45.029" endtime="20201029 12:43:45.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01690575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017231389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:45.321" endtime="20201029 12:43:45.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.329" endtime="20201029 12:43:45.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.027" endtime="20201029 12:43:45.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.025" endtime="20201029 12:43:45.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:45.336" level="INFO">${PHILIP_RES} = [{'diff': 0.0003256389999999991}, {'diff': 0.0003251670000000012}, {'diff': 0.00032513900000000207}, {'diff': 0.0003251250000000025}, {'diff': 0.0003251389999999986}, {'diff': 0.0003252089999999999}, ...</msg>
<status status="PASS" starttime="20201029 12:43:45.333" endtime="20201029 12:43:45.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.340" level="INFO">${RESULT} = {'diff': [0.0003256389999999991, 0.0003251670000000012, 0.00032513900000000207, 0.0003251250000000025, 0.0003251389999999986, 0.0003252089999999999, 0.0003251389999999986, 0.00032513900000000207, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:45.337" endtime="20201029 12:43:45.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.344" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:45.343" endtime="20201029 12:43:45.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.346" level="INFO">VALUE: [0.0003256389999999991, 0.0003251670000000012, 0.00032513900000000207, 0.0003251250000000025, 0.0003251389999999986, 0.0003252089999999999, 0.0003251389999999986, 0.00032513900000000207, 0.00032513900000000207, 0.0003251250000000025, 0.0003251519999999987, 0.00032515299999999817, 0.00032515299999999817, 0.00032511099999999946, 0.000325124999999999, 0.00032513900000000207, 0.00032520800000000044, 0.0003251389999999986, 0.00032515299999999817, 0.0003250969999999999, 0.00032515299999999817, 0.0003251250000000025, 0.0003251250000000025, 0.00032515299999999817, 0.0003251389999999986, 0.0003251389999999986, 0.0003251389999999986, 0.00032515200000000216, 0.00032515300000000164, 0.00032519500000000034, 0.00032515300000000164, 0.0003251800000000013, 0.000325124999999999, 0.00032505600000000065, 0.00032513900000000207, 0.0003250830000000003, 0.0003251389999999986, 0.000325124999999999, 0.000325124999999999, 0.00032515200000000216, 0.0003251250000000025, 0.0003251529999999947, 0.0003251250000000025, 0.00032512499999999556, 0.0003251110000000029, 0.00032515200000000216, 0.0003251389999999951, 0.0003251250000000025, 0.0003251389999999951, 0.00032513900000000207]</msg>
<status status="PASS" starttime="20201029 12:43:45.345" endtime="20201029 12:43:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.340" endtime="20201029 12:43:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.982" endtime="20201029 12:43:45.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.959" endtime="20201029 12:43:45.349"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.351" endtime="20201029 12:43:45.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.350" endtime="20201029 12:43:45.371"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.379" endtime="20201029 12:43:45.407"></status>
</kw>
<msg timestamp="20201029 12:43:45.408" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.378" endtime="20201029 12:43:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.410" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.409" endtime="20201029 12:43:45.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.411" endtime="20201029 12:43:45.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.375" endtime="20201029 12:43:45.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.373" endtime="20201029 12:43:45.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.420" endtime="20201029 12:43:45.707"></status>
</kw>
<msg timestamp="20201029 12:43:45.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016840361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017186486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.419" endtime="20201029 12:43:45.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016840361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017186486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.711" endtime="20201029 12:43:45.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.719" endtime="20201029 12:43:45.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.416" endtime="20201029 12:43:45.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.414" endtime="20201029 12:43:45.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:45.726" level="INFO">${PHILIP_RES} = [{'diff': 0.0003461249999999992}, {'diff': 0.00034559699999999957}, {'diff': 0.00034555600000000034}, {'diff': 0.00034559699999999957}, {'diff': 0.0003456530000000013}, {'diff': 0.0003456249999999987}...</msg>
<status status="PASS" starttime="20201029 12:43:45.722" endtime="20201029 12:43:45.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.730" level="INFO">${RESULT} = {'diff': [0.0003461249999999992, 0.00034559699999999957, 0.00034555600000000034, 0.00034559699999999957, 0.0003456530000000013, 0.0003456249999999987, 0.000345680000000001, 0.0003456249999999987, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:45.727" endtime="20201029 12:43:45.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.735" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:45.734" endtime="20201029 12:43:45.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.737" level="INFO">VALUE: [0.0003461249999999992, 0.00034559699999999957, 0.00034555600000000034, 0.00034559699999999957, 0.0003456530000000013, 0.0003456249999999987, 0.000345680000000001, 0.0003456249999999987, 0.00034559799999999904, 0.00034559699999999957, 0.00034559700000000304, 0.0003456120000000021, 0.00034561099999999914, 0.00034563900000000175, 0.0003455839999999995, 0.00034559699999999957, 0.000345583, 0.0003456249999999987, 0.0003456249999999987, 0.00034561099999999914, 0.00034561099999999914, 0.00034559699999999957, 0.00034559699999999957, 0.0003456110000000026, 0.0003456380000000023, 0.00034563900000000175, 0.0003456110000000026, 0.0003456119999999986, 0.000345583, 0.00034559699999999957, 0.0003456119999999986, 0.0003456249999999987, 0.0003456249999999987, 0.00034561099999999914, 0.0003456110000000026, 0.0003456110000000026, 0.00034559700000000304, 0.0003456110000000026, 0.00034556899999999696, 0.0003455690000000039, 0.0003455979999999956, 0.00034559700000000304, 0.00034558299999999653, 0.0003455980000000025, 0.0003456110000000026, 0.0003456110000000026, 0.0003456110000000026, 0.0003456389999999948, 0.0003456110000000026, 0.0003455979999999956]</msg>
<status status="PASS" starttime="20201029 12:43:45.736" endtime="20201029 12:43:45.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.731" endtime="20201029 12:43:45.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.372" endtime="20201029 12:43:45.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.349" endtime="20201029 12:43:45.739"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.741" endtime="20201029 12:43:45.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.740" endtime="20201029 12:43:45.761"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.769" endtime="20201029 12:43:45.799"></status>
</kw>
<msg timestamp="20201029 12:43:45.799" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.768" endtime="20201029 12:43:45.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.802" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.800" endtime="20201029 12:43:45.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.803" endtime="20201029 12:43:45.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.765" endtime="20201029 12:43:45.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.763" endtime="20201029 12:43:45.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.812" endtime="20201029 12:43:46.116"></status>
</kw>
<msg timestamp="20201029 12:43:46.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016723222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017090444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.810" endtime="20201029 12:43:46.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016723222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017090444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.120" endtime="20201029 12:43:46.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.128" endtime="20201029 12:43:46.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.808" endtime="20201029 12:43:46.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.806" endtime="20201029 12:43:46.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0003672220000000004}, {'diff': 0.0003666660000000016}, {'diff': 0.00036666599999999813}, {'diff': 0.00036669400000000074}, {'diff': 0.00036666599999999813}, {'diff': 0.00036668000000000117...</msg>
<status status="PASS" starttime="20201029 12:43:46.131" endtime="20201029 12:43:46.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.138" level="INFO">${RESULT} = {'diff': [0.0003672220000000004, 0.0003666660000000016, 0.00036666599999999813, 0.00036669400000000074, 0.00036666599999999813, 0.00036668000000000117, 0.0003666669999999976, 0.0003666950000000002, 0....</msg>
<status status="PASS" starttime="20201029 12:43:46.135" endtime="20201029 12:43:46.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.143" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.142" endtime="20201029 12:43:46.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.145" level="INFO">VALUE: [0.0003672220000000004, 0.0003666660000000016, 0.00036666599999999813, 0.00036669400000000074, 0.00036666599999999813, 0.00036668000000000117, 0.0003666669999999976, 0.0003666950000000002, 0.00036668100000000065, 0.0003667219999999999, 0.0003667080000000003, 0.0003666799999999977, 0.00036669399999999727, 0.00036669399999999727, 0.0003666799999999977, 0.0003666669999999976, 0.0003667369999999989, 0.0003666669999999976, 0.00036668100000000065, 0.00036668100000000065, 0.00036669400000000074, 0.00036668000000000117, 0.00036669400000000074, 0.00036662500000000237, 0.0003666110000000028, 0.0003666670000000011, 0.00036668100000000065, 0.00036673599999999945, 0.00036668100000000065, 0.00036668100000000065, 0.00036668100000000065, 0.00036665199999999856, 0.00036665200000000203, 0.00036669400000000074, 0.00036669400000000074, 0.0003666670000000011, 0.00036668100000000065, 0.0003666670000000011, 0.00036668100000000065, 0.0003666530000000015, 0.0003666530000000015, 0.0003666660000000016, 0.00036669400000000074, 0.0003666530000000015, 0.00036673599999999945, 0.000366749999999999, 0.00036668100000000065, 0.0003666670000000011, 0.00036668100000000065, 0.0003666950000000002]</msg>
<status status="PASS" starttime="20201029 12:43:46.144" endtime="20201029 12:43:46.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.139" endtime="20201029 12:43:46.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.762" endtime="20201029 12:43:46.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.739" endtime="20201029 12:43:46.147"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.149" endtime="20201029 12:43:46.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.148" endtime="20201029 12:43:46.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.177" endtime="20201029 12:43:46.207"></status>
</kw>
<msg timestamp="20201029 12:43:46.207" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.176" endtime="20201029 12:43:46.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.210" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.208" endtime="20201029 12:43:46.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.211" endtime="20201029 12:43:46.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.173" endtime="20201029 12:43:46.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.171" endtime="20201029 12:43:46.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.221" endtime="20201029 12:43:46.507"></status>
</kw>
<msg timestamp="20201029 12:43:46.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016665028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017053944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.219" endtime="20201029 12:43:46.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016665028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017053944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.511" endtime="20201029 12:43:46.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.519" endtime="20201029 12:43:46.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.216" endtime="20201029 12:43:46.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.215" endtime="20201029 12:43:46.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.525" level="INFO">${PHILIP_RES} = [{'diff': 0.00038891600000000304}, {'diff': 0.00038837499999999983}, {'diff': 0.0003883889999999994}, {'diff': 0.00038836100000000026}, {'diff': 0.00038838900000000287}, {'diff': 0.0003883610000000002...</msg>
<status status="PASS" starttime="20201029 12:43:46.522" endtime="20201029 12:43:46.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.529" level="INFO">${RESULT} = {'diff': [0.00038891600000000304, 0.00038837499999999983, 0.0003883889999999994, 0.00038836100000000026, 0.00038838900000000287, 0.00038836100000000026, 0.00038837499999999983, 0.0003883609999999968, ...</msg>
<status status="PASS" starttime="20201029 12:43:46.526" endtime="20201029 12:43:46.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.534" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.533" endtime="20201029 12:43:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.536" level="INFO">VALUE: [0.00038891600000000304, 0.00038837499999999983, 0.0003883889999999994, 0.00038836100000000026, 0.00038838900000000287, 0.00038836100000000026, 0.00038837499999999983, 0.0003883609999999968, 0.00038836100000000026, 0.00038834800000000017, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.0003883889999999994, 0.00038837499999999983, 0.0003884310000000016, 0.00038836100000000026, 0.00038840299999999897, 0.00038836100000000026, 0.0003883889999999994, 0.00038837499999999983, 0.00038837499999999983, 0.00038836100000000026, 0.00038836100000000026, 0.0003883750000000033, 0.00038838900000000287, 0.00038836100000000026, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.00038838900000000287, 0.00038837499999999983, 0.0003883889999999994, 0.0003883750000000033, 0.0003883750000000033, 0.00038838799999999646, 0.00038837499999999636, 0.00038831999999999756, 0.0003883750000000033, 0.00038836100000000373, 0.0003883330000000046, 0.00038836100000000373, 0.00038837499999999636, 0.0003883609999999968, 0.00038837499999999636, 0.00038844500000000115, 0.00038838900000000287, 0.00038833400000000406, 0.0003883750000000033]</msg>
<status status="PASS" starttime="20201029 12:43:46.535" endtime="20201029 12:43:46.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.530" endtime="20201029 12:43:46.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.170" endtime="20201029 12:43:46.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.147" endtime="20201029 12:43:46.539"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.541" endtime="20201029 12:43:46.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.540" endtime="20201029 12:43:46.561"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.569" endtime="20201029 12:43:46.601"></status>
</kw>
<msg timestamp="20201029 12:43:46.601" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.568" endtime="20201029 12:43:46.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.604" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.602" endtime="20201029 12:43:46.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.605" endtime="20201029 12:43:46.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.565" endtime="20201029 12:43:46.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.563" endtime="20201029 12:43:46.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.614" endtime="20201029 12:43:46.899"></status>
</kw>
<msg timestamp="20201029 12:43:46.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016657861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.612" endtime="20201029 12:43:46.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016657861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.903" endtime="20201029 12:43:46.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.911" endtime="20201029 12:43:46.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.610" endtime="20201029 12:43:46.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.608" endtime="20201029 12:43:46.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.917" level="INFO">${PHILIP_RES} = [{'diff': 0.0004111530000000009}, {'diff': 0.00041073599999999835}, {'diff': 0.00041068099999999955}, {'diff': 0.000410667}, {'diff': 0.00041069399999999964}, {'diff': 0.00041068099999999955}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:43:46.914" endtime="20201029 12:43:46.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.922" level="INFO">${RESULT} = {'diff': [0.0004111530000000009, 0.00041073599999999835, 0.00041068099999999955, 0.000410667, 0.00041069399999999964, 0.00041068099999999955, 0.00041068000000000007, 0.00041069399999999964, 0.00041065...</msg>
<status status="PASS" starttime="20201029 12:43:46.918" endtime="20201029 12:43:46.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.926" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.925" endtime="20201029 12:43:46.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.929" level="INFO">VALUE: [0.0004111530000000009, 0.00041073599999999835, 0.00041068099999999955, 0.000410667, 0.00041069399999999964, 0.00041068099999999955, 0.00041068000000000007, 0.00041069399999999964, 0.0004106530000000004, 0.0004106949999999991, 0.000410667, 0.0004106949999999991, 0.00041069399999999964, 0.0004106249999999978, 0.0004106949999999991, 0.0004107080000000027, 0.0004107219999999988, 0.00041068000000000007, 0.00041068000000000007, 0.000410667, 0.00041068000000000007, 0.000410667, 0.00041068099999999955, 0.0004106660000000005, 0.00041068099999999955, 0.000410667, 0.0004106660000000005, 0.0004106110000000017, 0.00041068099999999955, 0.00041063800000000136, 0.000410667, 0.0004107219999999988, 0.00041072200000000225, 0.00041066700000000345, 0.00041066600000000397, 0.00041061099999999823, 0.0004106390000000043, 0.00041059699999999866, 0.00041070900000000216, 0.00041068000000000354, 0.00041065299999999694, 0.0004106950000000026, 0.00041066599999999703, 0.0004106669999999965, 0.00041065299999999694, 0.0004106939999999962, 0.00041069499999999565, 0.0004106669999999965, 0.0004106799999999966, 0.00041070900000000216]</msg>
<status status="PASS" starttime="20201029 12:43:46.927" endtime="20201029 12:43:46.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.923" endtime="20201029 12:43:46.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.562" endtime="20201029 12:43:46.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.539" endtime="20201029 12:43:46.930"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.933" endtime="20201029 12:43:46.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.931" endtime="20201029 12:43:46.953"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.962" endtime="20201029 12:43:46.994"></status>
</kw>
<msg timestamp="20201029 12:43:46.994" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.960" endtime="20201029 12:43:46.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.997" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.995" endtime="20201029 12:43:46.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.998" endtime="20201029 12:43:46.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.958" endtime="20201029 12:43:47.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.955" endtime="20201029 12:43:47.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.007" endtime="20201029 12:43:47.294"></status>
</kw>
<msg timestamp="20201029 12:43:47.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018185986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.005" endtime="20201029 12:43:47.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018185986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.299" endtime="20201029 12:43:47.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.307" endtime="20201029 12:43:47.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.003" endtime="20201029 12:43:47.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.001" endtime="20201029 12:43:47.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:47.314" level="INFO">${PHILIP_RES} = [{'diff': 0.0004341250000000005}, {'diff': 0.00043359700000000084}, {'diff': 0.0004335699999999977}, {'diff': 0.0004335699999999977}, {'diff': 0.0004335829999999978}, {'diff': 0.000433625}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:43:47.311" endtime="20201029 12:43:47.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.318" level="INFO">${RESULT} = {'diff': [0.0004341250000000005, 0.00043359700000000084, 0.0004335699999999977, 0.0004335699999999977, 0.0004335829999999978, 0.000433625, 0.00043358400000000075, 0.0004335969999999974, 0.000433666999...</msg>
<status status="PASS" starttime="20201029 12:43:47.315" endtime="20201029 12:43:47.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.323" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:47.322" endtime="20201029 12:43:47.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.325" level="INFO">VALUE: [0.0004341250000000005, 0.00043359700000000084, 0.0004335699999999977, 0.0004335699999999977, 0.0004335829999999978, 0.000433625, 0.00043358400000000075, 0.0004335969999999974, 0.0004336669999999987, 0.0004335690000000017, 0.00043358400000000075, 0.0004335830000000013, 0.0004335829999999978, 0.00043356899999999823, 0.0004335980000000003, 0.00043363899999999955, 0.0004335830000000013, 0.0004335829999999978, 0.0004336119999999999, 0.0004336110000000004, 0.0004335830000000013, 0.0004335829999999978, 0.0004335980000000003, 0.00043358400000000075, 0.0004335830000000013, 0.0004335969999999974, 0.00043358400000000075, 0.00043359700000000084, 0.00043359700000000084, 0.00043359700000000084, 0.00043358400000000075, 0.0004335830000000013, 0.0004336109999999935, 0.0004335690000000017, 0.00043358400000000075, 0.00043352799999999553, 0.0004336110000000004, 0.00043363899999999955, 0.00043358400000000075, 0.0004335700000000012, 0.0004336110000000004, 0.0004336110000000004, 0.00043354200000000204, 0.00043359700000000084, 0.00043359700000000084, 0.0004335969999999939, 0.00043358400000000075, 0.0004335560000000016, 0.0004335830000000013, 0.0004336110000000004]</msg>
<status status="PASS" starttime="20201029 12:43:47.324" endtime="20201029 12:43:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.319" endtime="20201029 12:43:47.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.953" endtime="20201029 12:43:47.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.931" endtime="20201029 12:43:47.327"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.330" endtime="20201029 12:43:47.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.328" endtime="20201029 12:43:47.350"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.358" endtime="20201029 12:43:47.392"></status>
</kw>
<msg timestamp="20201029 12:43:47.393" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.357" endtime="20201029 12:43:47.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.399" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.396" endtime="20201029 12:43:47.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.401" endtime="20201029 12:43:47.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.354" endtime="20201029 12:43:47.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.352" endtime="20201029 12:43:47.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.423" endtime="20201029 12:43:47.718"></status>
</kw>
<msg timestamp="20201029 12:43:47.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017827819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.420" endtime="20201029 12:43:47.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017827819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.723" endtime="20201029 12:43:47.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.731" endtime="20201029 12:43:47.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.414" endtime="20201029 12:43:47.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.410" endtime="20201029 12:43:47.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:47.738" level="INFO">${PHILIP_RES} = [{'diff': 0.00045755500000000185}, {'diff': 0.0004571249999999992}, {'diff': 0.00045704200000000125}, {'diff': 0.0004570690000000009}, {'diff': 0.00045709700000000006}, {'diff': 0.0004571379999999993}...</msg>
<status status="PASS" starttime="20201029 12:43:47.735" endtime="20201029 12:43:47.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.742" level="INFO">${RESULT} = {'diff': [0.00045755500000000185, 0.0004571249999999992, 0.00045704200000000125, 0.0004570690000000009, 0.00045709700000000006, 0.0004571379999999993, 0.0004571249999999992, 0.0004571249999999992, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:47.739" endtime="20201029 12:43:47.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.747" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:47.746" endtime="20201029 12:43:47.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.749" level="INFO">VALUE: [0.00045755500000000185, 0.0004571249999999992, 0.00045704200000000125, 0.0004570690000000009, 0.00045709700000000006, 0.0004571379999999993, 0.0004571249999999992, 0.0004571249999999992, 0.0004571249999999992, 0.0004570830000000005, 0.00045711099999999963, 0.00045711099999999963, 0.00045709700000000006, 0.00045711099999999963, 0.00045708399999999996, 0.00045711099999999963, 0.0004571669999999979, 0.00045711099999999963, 0.0004571119999999991, 0.00045711099999999963, 0.00045711099999999963, 0.0004571249999999992, 0.00045711099999999963, 0.00045711099999999963, 0.00045711099999999963, 0.0004570549999999979, 0.0004571110000000031, 0.00045709799999999953, 0.00045712500000000267, 0.00045712499999999573, 0.0004571110000000031, 0.00045712499999999573, 0.00045711099999999616, 0.00045712500000000267, 0.0004571950000000005, 0.00045712500000000267, 0.0004570839999999965, 0.0004571110000000031, 0.00045711099999999616, 0.00045712500000000267, 0.0004571379999999958, 0.0004571660000000019, 0.00045712499999999573, 0.00045708300000000396, 0.0004571950000000005, 0.00045713800000000276, 0.00045712500000000267, 0.0004571110000000031, 0.00045713900000000224, 0.00045712499999999573]</msg>
<status status="PASS" starttime="20201029 12:43:47.748" endtime="20201029 12:43:47.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.743" endtime="20201029 12:43:47.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.350" endtime="20201029 12:43:47.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.328" endtime="20201029 12:43:47.752"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.755" endtime="20201029 12:43:47.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.753" endtime="20201029 12:43:47.775"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.783" endtime="20201029 12:43:47.818"></status>
</kw>
<msg timestamp="20201029 12:43:47.819" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.781" endtime="20201029 12:43:47.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.821" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.820" endtime="20201029 12:43:47.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.822" endtime="20201029 12:43:47.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.779" endtime="20201029 12:43:47.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.777" endtime="20201029 12:43:47.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.832" endtime="20201029 12:43:48.117"></status>
</kw>
<msg timestamp="20201029 12:43:48.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017343403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017825194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.830" endtime="20201029 12:43:48.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017343403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017825194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.122" endtime="20201029 12:43:48.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.130" endtime="20201029 12:43:48.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.828" endtime="20201029 12:43:48.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.826" endtime="20201029 12:43:48.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:48.137" level="INFO">${PHILIP_RES} = [{'diff': 0.0004817909999999988}, {'diff': 0.0004812639999999986}, {'diff': 0.0004812640000000021}, {'diff': 0.0004812219999999999}, {'diff': 0.0004812639999999986}, {'diff': 0.0004812640000000021}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.133" endtime="20201029 12:43:48.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.142" level="INFO">${RESULT} = {'diff': [0.0004817909999999988, 0.0004812639999999986, 0.0004812640000000021, 0.0004812219999999999, 0.0004812639999999986, 0.0004812640000000021, 0.00048124999999999904, 0.00048124999999999904, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:48.138" endtime="20201029 12:43:48.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.146" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:48.145" endtime="20201029 12:43:48.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.149" level="INFO">VALUE: [0.0004817909999999988, 0.0004812639999999986, 0.0004812640000000021, 0.0004812219999999999, 0.0004812639999999986, 0.0004812640000000021, 0.00048124999999999904, 0.00048124999999999904, 0.00048124999999999904, 0.00048119400000000076, 0.0004812640000000021, 0.0004812219999999999, 0.00048124999999999904, 0.0004812370000000024, 0.00048123599999999947, 0.0004812639999999986, 0.0004812219999999999, 0.00048124999999999904, 0.0004812639999999986, 0.0004812640000000021, 0.0004812639999999986, 0.0004812779999999982, 0.00048127800000000165, 0.00048123599999999947, 0.00048124999999999904, 0.0004812640000000021, 0.00048124999999999904, 0.00048123600000000294, 0.0004812500000000025, 0.00048120799999999686, 0.00048124999999999557, 0.00048124999999999557, 0.0004812500000000025, 0.0004812640000000021, 0.00048127800000000165, 0.00048127800000000165, 0.000481235999999996, 0.0004812640000000021, 0.00048127800000000165, 0.0004812640000000021, 0.0004812640000000021, 0.00048124999999999557, 0.00048124999999999557, 0.00048127800000000165, 0.0004812640000000021, 0.0004812080000000038, 0.0004812770000000022, 0.00048124999999999557, 0.0004812640000000021, 0.00048123600000000294]</msg>
<status status="PASS" starttime="20201029 12:43:48.148" endtime="20201029 12:43:48.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.143" endtime="20201029 12:43:48.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.775" endtime="20201029 12:43:48.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.752" endtime="20201029 12:43:48.151"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.153" endtime="20201029 12:43:48.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.152" endtime="20201029 12:43:48.173"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.182" endtime="20201029 12:43:48.219"></status>
</kw>
<msg timestamp="20201029 12:43:48.219" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.180" endtime="20201029 12:43:48.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.222" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.220" endtime="20201029 12:43:48.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.223" endtime="20201029 12:43:48.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.178" endtime="20201029 12:43:48.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.176" endtime="20201029 12:43:48.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.232" endtime="20201029 12:43:48.521"></status>
</kw>
<msg timestamp="20201029 12:43:48.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017177458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.231" endtime="20201029 12:43:48.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017177458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.525" endtime="20201029 12:43:48.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.533" endtime="20201029 12:43:48.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.228" endtime="20201029 12:43:48.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.226" endtime="20201029 12:43:48.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:48.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0005065279999999991}, {'diff': 0.0005060129999999996}, {'diff': 0.0005059859999999999}, {'diff': 0.0005060139999999991}, {'diff': 0.0005060139999999991}, {'diff': 0.0005059999999999995}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.537" endtime="20201029 12:43:48.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.544" level="INFO">${RESULT} = {'diff': [0.0005065279999999991, 0.0005060129999999996, 0.0005059859999999999, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059720000000004, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:48.541" endtime="20201029 12:43:48.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.549" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:48.548" endtime="20201029 12:43:48.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.551" level="INFO">VALUE: [0.0005065279999999991, 0.0005060129999999996, 0.0005059859999999999, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005059720000000004, 0.0005060139999999991, 0.0005060829999999975, 0.0005060139999999991, 0.0005060129999999996, 0.0005059859999999999, 0.0005060270000000026, 0.000506000000000003, 0.0005060270000000026, 0.0005059859999999999, 0.0005060139999999991, 0.0005060280000000021, 0.0005059999999999995, 0.0005060690000000014, 0.0005060279999999986, 0.0005059999999999995, 0.0005059999999999995, 0.0005059999999999995, 0.0005060839999999969, 0.0005059999999999995, 0.0005060279999999986, 0.0005060279999999986, 0.0005059859999999999, 0.0005060139999999991, 0.0005059720000000004, 0.0005060139999999991, 0.0005060139999999991, 0.0005059590000000003, 0.0005060139999999991, 0.0005060549999999983, 0.0005060139999999991, 0.0005060139999999991, 0.0005059859999999999, 0.0005059999999999995, 0.0005059999999999995, 0.0005059859999999999, 0.0005060139999999991, 0.0005060279999999986, 0.0005060139999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.0005060279999999986]</msg>
<status status="PASS" starttime="20201029 12:43:48.550" endtime="20201029 12:43:48.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.545" endtime="20201029 12:43:48.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.174" endtime="20201029 12:43:48.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.151" endtime="20201029 12:43:48.553"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.556" endtime="20201029 12:43:48.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.554" endtime="20201029 12:43:48.576"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.584" endtime="20201029 12:43:48.623"></status>
</kw>
<msg timestamp="20201029 12:43:48.623" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.583" endtime="20201029 12:43:48.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.626" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.624" endtime="20201029 12:43:48.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.627" endtime="20201029 12:43:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.580" endtime="20201029 12:43:48.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.578" endtime="20201029 12:43:48.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.637" endtime="20201029 12:43:48.923"></status>
</kw>
<msg timestamp="20201029 12:43:48.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017350431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017882333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.636" endtime="20201029 12:43:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017350431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017882333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.928" endtime="20201029 12:43:48.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.936" endtime="20201029 12:43:48.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.633" endtime="20201029 12:43:48.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.631" endtime="20201029 12:43:48.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:48.943" level="INFO">${PHILIP_RES} = [{'diff': 0.0005319020000000008}, {'diff': 0.0005313890000000002}, {'diff': 0.0005313890000000002}, {'diff': 0.000531361000000001}, {'diff': 0.000531361000000001}, {'diff': 0.0005314029999999997}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:48.940" endtime="20201029 12:43:48.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.947" level="INFO">${RESULT} = {'diff': [0.0005319020000000008, 0.0005313890000000002, 0.0005313890000000002, 0.000531361000000001, 0.000531361000000001, 0.0005314029999999997, 0.0005313750000000006, 0.0005313200000000018, 0.000531...</msg>
<status status="PASS" starttime="20201029 12:43:48.944" endtime="20201029 12:43:48.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.951" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:48.950" endtime="20201029 12:43:48.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.954" level="INFO">VALUE: [0.0005319020000000008, 0.0005313890000000002, 0.0005313890000000002, 0.000531361000000001, 0.000531361000000001, 0.0005314029999999997, 0.0005313750000000006, 0.0005313200000000018, 0.0005313340000000014, 0.0005313330000000019, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005314309999999989, 0.0005313749999999971, 0.0005313749999999971, 0.0005313749999999971, 0.0005314450000000019, 0.0005313749999999971, 0.0005313890000000002, 0.0005313750000000006, 0.0005313880000000007, 0.000531361000000001, 0.0005314029999999997, 0.0005313199999999949, 0.0005313480000000009, 0.0005313469999999945, 0.0005313750000000006, 0.0005313749999999937, 0.0005313750000000006, 0.0005313750000000006, 0.0005314169999999993, 0.0005313750000000006, 0.0005313750000000006, 0.0005313059999999953, 0.0005313890000000002, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313890000000002, 0.0005313890000000002, 0.000531361000000001, 0.0005313750000000006, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.0005313620000000005, 0.0005313890000000002, 0.0005313890000000002]</msg>
<status status="PASS" starttime="20201029 12:43:48.952" endtime="20201029 12:43:48.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.948" endtime="20201029 12:43:48.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.576" endtime="20201029 12:43:48.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.554" endtime="20201029 12:43:48.957"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.959" endtime="20201029 12:43:48.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.958" endtime="20201029 12:43:48.979"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.988" endtime="20201029 12:43:49.027"></status>
</kw>
<msg timestamp="20201029 12:43:49.027" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.986" endtime="20201029 12:43:49.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.030" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.028" endtime="20201029 12:43:49.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.031" endtime="20201029 12:43:49.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.983" endtime="20201029 12:43:49.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.981" endtime="20201029 12:43:49.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.041" endtime="20201029 12:43:49.327"></status>
</kw>
<msg timestamp="20201029 12:43:49.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017730306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018288167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.039" endtime="20201029 12:43:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017730306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018288167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.331" endtime="20201029 12:43:49.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.340" endtime="20201029 12:43:49.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.036" endtime="20201029 12:43:49.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.034" endtime="20201029 12:43:49.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:49.346" level="INFO">${PHILIP_RES} = [{'diff': 0.0005578609999999998}, {'diff': 0.0005573609999999993}, {'diff': 0.0005574160000000015}, {'diff': 0.0005573609999999993}, {'diff': 0.0005573049999999975}, {'diff': 0.0005573609999999993}, {...</msg>
<status status="PASS" starttime="20201029 12:43:49.343" endtime="20201029 12:43:49.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.351" level="INFO">${RESULT} = {'diff': [0.0005578609999999998, 0.0005573609999999993, 0.0005574160000000015, 0.0005573609999999993, 0.0005573049999999975, 0.0005573609999999993, 0.00055732, 0.0005573610000000027, 0.000557360999999...</msg>
<status status="PASS" starttime="20201029 12:43:49.347" endtime="20201029 12:43:49.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.356" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:49.355" endtime="20201029 12:43:49.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.359" level="INFO">VALUE: [0.0005578609999999998, 0.0005573609999999993, 0.0005574160000000015, 0.0005573609999999993, 0.0005573049999999975, 0.0005573609999999993, 0.00055732, 0.0005573610000000027, 0.0005573609999999993, 0.0005573469999999997, 0.0005573190000000006, 0.0005573890000000019, 0.0005573479999999992, 0.0005573609999999993, 0.0005573330000000001, 0.0005573469999999997, 0.0005573889999999984, 0.0005573329999999967, 0.0005573469999999997, 0.0005573619999999987, 0.0005573469999999997, 0.0005573470000000032, 0.0005573890000000019, 0.0005573330000000001, 0.0005573330000000001, 0.00055732, 0.0005573339999999996, 0.0005573749999999988, 0.0005573469999999997, 0.0005573610000000062, 0.0005573609999999993, 0.0005573469999999997, 0.0005573330000000001, 0.0005573749999999988, 0.0005572920000000009, 0.0005573469999999997, 0.0005573330000000001, 0.0005573469999999997, 0.0005573469999999997, 0.0005573479999999992, 0.0005573339999999996, 0.0005573609999999993, 0.0005573610000000062, 0.0005573190000000006, 0.0005573469999999997, 0.0005573609999999993, 0.0005573619999999987, 0.0005573609999999993, 0.0005573330000000001, 0.0005573470000000066]</msg>
<status status="PASS" starttime="20201029 12:43:49.357" endtime="20201029 12:43:49.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.352" endtime="20201029 12:43:49.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.980" endtime="20201029 12:43:49.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.957" endtime="20201029 12:43:49.361"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.363" endtime="20201029 12:43:49.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.362" endtime="20201029 12:43:49.383"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.392" endtime="20201029 12:43:49.432"></status>
</kw>
<msg timestamp="20201029 12:43:49.433" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.390" endtime="20201029 12:43:49.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.435" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.434" endtime="20201029 12:43:49.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.436" endtime="20201029 12:43:49.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.387" endtime="20201029 12:43:49.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.385" endtime="20201029 12:43:49.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.446" endtime="20201029 12:43:49.734"></status>
</kw>
<msg timestamp="20201029 12:43:49.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.444" endtime="20201029 12:43:49.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.739" endtime="20201029 12:43:49.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.747" endtime="20201029 12:43:49.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.442" endtime="20201029 12:43:49.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.440" endtime="20201029 12:43:49.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:49.754" level="INFO">${PHILIP_RES} = [{'diff': 0.0005844999999999982}, {'diff': 0.0005839719999999986}, {'diff': 0.0005839030000000002}, {'diff': 0.000583972000000002}, {'diff': 0.000583972000000002}, {'diff': 0.0005839589999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:49.750" endtime="20201029 12:43:49.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.758" level="INFO">${RESULT} = {'diff': [0.0005844999999999982, 0.0005839719999999986, 0.0005839030000000002, 0.000583972000000002, 0.000583972000000002, 0.0005839589999999985, 0.000583957999999999, 0.0005839309999999993, 0.0005839...</msg>
<status status="PASS" starttime="20201029 12:43:49.755" endtime="20201029 12:43:49.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.762" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:49.761" endtime="20201029 12:43:49.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.765" level="INFO">VALUE: [0.0005844999999999982, 0.0005839719999999986, 0.0005839030000000002, 0.000583972000000002, 0.000583972000000002, 0.0005839589999999985, 0.000583957999999999, 0.0005839309999999993, 0.0005839449999999989, 0.0005839170000000032, 0.0005839310000000028, 0.0005839309999999993, 0.000583957999999999, 0.0005839589999999985, 0.0005839160000000003, 0.0005839309999999993, 0.0005839169999999998, 0.0005839160000000003, 0.0005839449999999989, 0.0005840000000000012, 0.000583860999999998, 0.0005839310000000028, 0.0005839159999999968, 0.0005839310000000028, 0.000583959000000002, 0.0005839579999999955, 0.0005839310000000028, 0.0005839449999999954, 0.0005839580000000025, 0.000583959000000002, 0.0005839300000000033, 0.0005839440000000029, 0.0005839309999999959, 0.0005839440000000029, 0.000583943999999996, 0.0005839310000000028, 0.0005839440000000029, 0.0005839450000000024, 0.0005839300000000033, 0.0005839299999999964, 0.0005839450000000024, 0.0005839299999999964, 0.0005839310000000028, 0.0005839310000000028, 0.0005838749999999976, 0.000583959000000002, 0.0005839579999999955, 0.0005839580000000025, 0.0005839450000000024, 0.0005839299999999964]</msg>
<status status="PASS" starttime="20201029 12:43:49.763" endtime="20201029 12:43:50.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.759" endtime="20201029 12:43:50.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.384" endtime="20201029 12:43:50.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.361" endtime="20201029 12:43:50.080"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.083" endtime="20201029 12:43:50.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.081" endtime="20201029 12:43:50.103"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.111" endtime="20201029 12:43:50.153"></status>
</kw>
<msg timestamp="20201029 12:43:50.153" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.109" endtime="20201029 12:43:50.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.156" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.154" endtime="20201029 12:43:50.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.157" endtime="20201029 12:43:50.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.107" endtime="20201029 12:43:50.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.105" endtime="20201029 12:43:50.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.167" endtime="20201029 12:43:50.485"></status>
</kw>
<msg timestamp="20201029 12:43:50.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017204708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.166" endtime="20201029 12:43:50.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017204708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.489" endtime="20201029 12:43:50.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.497" endtime="20201029 12:43:50.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.163" endtime="20201029 12:43:50.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.161" endtime="20201029 12:43:50.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:50.504" level="INFO">${PHILIP_RES} = [{'diff': 0.0006116669999999998}, {'diff': 0.0006111390000000001}, {'diff': 0.0006111520000000002}, {'diff': 0.0006110979999999974}, {'diff': 0.0006111529999999997}, {'diff': 0.000611111000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:50.501" endtime="20201029 12:43:50.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.509" level="INFO">${RESULT} = {'diff': [0.0006116669999999998, 0.0006111390000000001, 0.0006111520000000002, 0.0006110979999999974, 0.0006111529999999997, 0.000611111000000001, 0.0006111389999999967, 0.0006111520000000002, 0.00061...</msg>
<status status="PASS" starttime="20201029 12:43:50.505" endtime="20201029 12:43:50.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.514" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:50.513" endtime="20201029 12:43:50.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.517" level="INFO">VALUE: [0.0006116669999999998, 0.0006111390000000001, 0.0006111520000000002, 0.0006110979999999974, 0.0006111529999999997, 0.000611111000000001, 0.0006111389999999967, 0.0006111520000000002, 0.0006111390000000001, 0.0006111390000000001, 0.0006111529999999997, 0.0006111669999999993, 0.0006111390000000001, 0.0006111250000000006, 0.0006111109999999975, 0.0006111669999999993, 0.0006111390000000001, 0.0006111390000000001, 0.0006111529999999997, 0.0006111390000000001, 0.0006111390000000001, 0.0006110830000000018, 0.0006111390000000036, 0.0006111809999999954, 0.0006112220000000015, 0.0006110970000000049, 0.0006111940000000024, 0.0006111389999999967, 0.0006111940000000024, 0.0006111249999999971, 0.0006111529999999962, 0.0006111530000000032, 0.0006111670000000027, 0.0006111249999999971, 0.0006111390000000036, 0.0006111249999999971, 0.0006111389999999967, 0.000611125000000004, 0.000611125000000004, 0.0006111529999999962, 0.0006111390000000036, 0.0006111520000000037, 0.0006111529999999962, 0.000611125000000004, 0.0006111390000000036, 0.0006111519999999968, 0.0006111390000000036, 0.0006111670000000027, 0.0006111669999999958, 0.0006111530000000032]</msg>
<status status="PASS" starttime="20201029 12:43:50.516" endtime="20201029 12:43:50.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.510" endtime="20201029 12:43:50.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.103" endtime="20201029 12:43:50.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.080" endtime="20201029 12:43:50.520"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.522" endtime="20201029 12:43:50.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.521" endtime="20201029 12:43:50.542"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.551" endtime="20201029 12:43:50.594"></status>
</kw>
<msg timestamp="20201029 12:43:50.595" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.549" endtime="20201029 12:43:50.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.597" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.596" endtime="20201029 12:43:50.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.598" endtime="20201029 12:43:50.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.547" endtime="20201029 12:43:50.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.545" endtime="20201029 12:43:50.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.608" endtime="20201029 12:43:50.894"></status>
</kw>
<msg timestamp="20201029 12:43:50.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.606" endtime="20201029 12:43:50.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.898" endtime="20201029 12:43:50.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.906" endtime="20201029 12:43:50.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.604" endtime="20201029 12:43:50.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.602" endtime="20201029 12:43:50.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:50.913" level="INFO">${PHILIP_RES} = [{'diff': 0.0006394860000000016}, {'diff': 0.0006389449999999984}, {'diff': 0.000638958999999998}, {'diff': 0.0006389590000000014}, {'diff': 0.0006389720000000015}, {'diff': 0.0006389719999999981}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:50.910" endtime="20201029 12:43:50.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.918" level="INFO">${RESULT} = {'diff': [0.0006394860000000016, 0.0006389449999999984, 0.000638958999999998, 0.0006389590000000014, 0.0006389720000000015, 0.0006389719999999981, 0.0006389719999999981, 0.0006389860000000011, 0.00063...</msg>
<status status="PASS" starttime="20201029 12:43:50.914" endtime="20201029 12:43:50.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.923" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:50.921" endtime="20201029 12:43:50.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.925" level="INFO">VALUE: [0.0006394860000000016, 0.0006389449999999984, 0.000638958999999998, 0.0006389590000000014, 0.0006389720000000015, 0.0006389719999999981, 0.0006389719999999981, 0.0006389860000000011, 0.0006389579999999985, 0.0006389579999999985, 0.0006389450000000019, 0.0006389590000000014, 0.0006389719999999981, 0.0006389449999999984, 0.000638958000000002, 0.000638958000000002, 0.0006389299999999994, 0.0006390279999999998, 0.000638958000000002, 0.0006389860000000011, 0.0006389590000000014, 0.0006389310000000023, 0.0006389590000000014, 0.000638958000000002, 0.000638958000000002, 0.0006390140000000002, 0.0006389719999999946, 0.0006389720000000015, 0.000638958000000002, 0.0006389870000000006, 0.000638973000000001, 0.0006389590000000014, 0.0006389299999999959, 0.0006389439999999955, 0.0006389720000000015, 0.0006389440000000024, 0.000638958000000002, 0.0006389590000000014, 0.0006389170000000027, 0.0006389590000000014, 0.0006390000000000007, 0.0006389439999999955, 0.000638958000000002, 0.0006389860000000011, 0.0006389440000000024, 0.000638958000000002, 0.0006390270000000003, 0.0006389589999999945, 0.000638973000000001, 0.0006389590000000014]</msg>
<status status="PASS" starttime="20201029 12:43:50.924" endtime="20201029 12:43:50.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.919" endtime="20201029 12:43:50.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.543" endtime="20201029 12:43:50.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.520" endtime="20201029 12:43:50.927"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.930" endtime="20201029 12:43:50.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.928" endtime="20201029 12:43:50.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.958" endtime="20201029 12:43:51.003"></status>
</kw>
<msg timestamp="20201029 12:43:51.004" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.957" endtime="20201029 12:43:51.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.007" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.005" endtime="20201029 12:43:51.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.008" endtime="20201029 12:43:51.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.954" endtime="20201029 12:43:51.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.952" endtime="20201029 12:43:51.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.017" endtime="20201029 12:43:51.304"></status>
</kw>
<msg timestamp="20201029 12:43:51.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.015" endtime="20201029 12:43:51.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.308" endtime="20201029 12:43:51.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.317" endtime="20201029 12:43:51.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.013" endtime="20201029 12:43:51.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.011" endtime="20201029 12:43:51.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:51.323" level="INFO">${PHILIP_RES} = [{'diff': 0.0006679030000000009}, {'diff': 0.0006674030000000004}, {'diff': 0.000667402000000001}, {'diff': 0.0006673890000000009}, {'diff': 0.0006673890000000009}, {'diff': 0.0006673749999999978}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:51.320" endtime="20201029 12:43:51.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.327" level="INFO">${RESULT} = {'diff': [0.0006679030000000009, 0.0006674030000000004, 0.000667402000000001, 0.0006673890000000009, 0.0006673890000000009, 0.0006673749999999978, 0.0006674030000000004, 0.0006673889999999974, 0.00066...</msg>
<status status="PASS" starttime="20201029 12:43:51.324" endtime="20201029 12:43:51.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.332" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:51.331" endtime="20201029 12:43:51.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.335" level="INFO">VALUE: [0.0006679030000000009, 0.0006674030000000004, 0.000667402000000001, 0.0006673890000000009, 0.0006673890000000009, 0.0006673749999999978, 0.0006674030000000004, 0.0006673889999999974, 0.0006673879999999979, 0.0006673750000000013, 0.0006673479999999982, 0.000667402000000001, 0.0006673890000000009, 0.0006673890000000009, 0.000667402000000001, 0.0006673890000000009, 0.0006673890000000009, 0.0006673879999999979, 0.0006673889999999974, 0.0006673889999999974, 0.0006673879999999979, 0.000667402999999997, 0.0006673889999999974, 0.0006673609999999983, 0.000667402999999997, 0.000667402999999997, 0.0006674030000000039, 0.0006673890000000043, 0.0006673890000000043, 0.0006673750000000048, 0.0006674030000000039, 0.0006673890000000043, 0.0006674020000000044, 0.0006674030000000039, 0.0006673889999999974, 0.0006673889999999974, 0.0006673889999999974, 0.0006673749999999978, 0.0006673879999999979, 0.0006673889999999974, 0.0006673339999999986, 0.0006673879999999979, 0.0006673749999999978, 0.0006673479999999982, 0.0006673749999999978, 0.0006673189999999996, 0.0006673889999999974, 0.0006673879999999979, 0.0006673890000000043, 0.0006674019999999975]</msg>
<status status="PASS" starttime="20201029 12:43:51.333" endtime="20201029 12:43:51.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.328" endtime="20201029 12:43:51.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.950" endtime="20201029 12:43:51.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.927" endtime="20201029 12:43:51.337"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.340" endtime="20201029 12:43:51.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.338" endtime="20201029 12:43:51.360"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.369" endtime="20201029 12:43:51.415"></status>
</kw>
<msg timestamp="20201029 12:43:51.416" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.367" endtime="20201029 12:43:51.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.418" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.417" endtime="20201029 12:43:51.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.419" endtime="20201029 12:43:51.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.364" endtime="20201029 12:43:51.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.362" endtime="20201029 12:43:51.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.430" endtime="20201029 12:43:51.716"></status>
</kw>
<msg timestamp="20201029 12:43:51.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017438264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.428" endtime="20201029 12:43:51.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017438264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.720" endtime="20201029 12:43:51.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.728" endtime="20201029 12:43:51.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.425" endtime="20201029 12:43:51.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.423" endtime="20201029 12:43:51.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:51.735" level="INFO">${PHILIP_RES} = [{'diff': 0.0006969440000000014}, {'diff': 0.0006964169999999978}, {'diff': 0.0006964020000000022}, {'diff': 0.000696459}, {'diff': 0.0006964720000000001}, {'diff': 0.0006964170000000013}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:51.732" endtime="20201029 12:43:51.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.739" level="INFO">${RESULT} = {'diff': [0.0006969440000000014, 0.0006964169999999978, 0.0006964020000000022, 0.000696459, 0.0006964720000000001, 0.0006964170000000013, 0.0006965139999999988, 0.0006964300000000014, 0.00069641699999...</msg>
<status status="PASS" starttime="20201029 12:43:51.736" endtime="20201029 12:43:51.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.744" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:51.743" endtime="20201029 12:43:51.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.746" level="INFO">VALUE: [0.0006969440000000014, 0.0006964169999999978, 0.0006964020000000022, 0.000696459, 0.0006964720000000001, 0.0006964170000000013, 0.0006965139999999988, 0.0006964300000000014, 0.0006964169999999978, 0.0006964030000000017, 0.0006964580000000005, 0.0006964159999999983, 0.0006964169999999978, 0.0006964859999999996, 0.0006964450000000004, 0.0006964299999999979, 0.0006964170000000013, 0.0006964580000000005, 0.0006964310000000043, 0.0006964170000000047, 0.0006964439999999975, 0.0006964309999999974, 0.0006964299999999979, 0.0006964309999999974, 0.0006964299999999979, 0.0006964310000000043, 0.0006964020000000057, 0.0006963889999999986, 0.0006964169999999978, 0.0006964309999999974, 0.0006964439999999975, 0.0006964299999999979, 0.0006964309999999974, 0.0006964300000000048, 0.0006964170000000047, 0.0006964859999999962, 0.0006964169999999978, 0.0006964159999999983, 0.0006964449999999969, 0.0006964439999999975, 0.0006964310000000043, 0.0006964310000000043, 0.0006964439999999975, 0.0006964309999999974, 0.0006964299999999979, 0.0006964029999999982, 0.0006964299999999979, 0.0006964450000000039, 0.0006964300000000048, 0.0006963749999999991]</msg>
<status status="PASS" starttime="20201029 12:43:51.745" endtime="20201029 12:43:51.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.740" endtime="20201029 12:43:51.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.361" endtime="20201029 12:43:51.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.338" endtime="20201029 12:43:51.749"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.752" endtime="20201029 12:43:51.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.750" endtime="20201029 12:43:51.772"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.780" endtime="20201029 12:43:51.828"></status>
</kw>
<msg timestamp="20201029 12:43:51.828" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.778" endtime="20201029 12:43:51.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.831" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.829" endtime="20201029 12:43:51.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.832" endtime="20201029 12:43:51.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.776" endtime="20201029 12:43:51.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.774" endtime="20201029 12:43:51.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.841" endtime="20201029 12:43:52.128"></status>
</kw>
<msg timestamp="20201029 12:43:52.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017239611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017966167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.840" endtime="20201029 12:43:52.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017239611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017966167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.132" endtime="20201029 12:43:52.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.141" endtime="20201029 12:43:52.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.837" endtime="20201029 12:43:52.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.835" endtime="20201029 12:43:52.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:52.148" level="INFO">${PHILIP_RES} = [{'diff': 0.0007265560000000032}, {'diff': 0.0007260829999999989}, {'diff': 0.0007260839999999984}, {'diff': 0.0007259999999999975}, {'diff': 0.0007260840000000018}, {'diff': 0.0007261390000000006}, {...</msg>
<status status="PASS" starttime="20201029 12:43:52.144" endtime="20201029 12:43:52.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.153" level="INFO">${RESULT} = {'diff': [0.0007265560000000032, 0.0007260829999999989, 0.0007260839999999984, 0.0007259999999999975, 0.0007260840000000018, 0.0007261390000000006, 0.0007260700000000023, 0.0007260829999999989, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:52.149" endtime="20201029 12:43:52.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.157" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:52.156" endtime="20201029 12:43:52.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.160" level="INFO">VALUE: [0.0007265560000000032, 0.0007260829999999989, 0.0007260839999999984, 0.0007259999999999975, 0.0007260840000000018, 0.0007261390000000006, 0.0007260700000000023, 0.0007260829999999989, 0.0007260699999999988, 0.0007260830000000024, 0.0007260280000000001, 0.0007260969999999985, 0.0007260689999999993, 0.0007260840000000018, 0.0007260829999999989, 0.0007261249999999976, 0.0007260829999999989, 0.0007260840000000018, 0.0007260970000000019, 0.0007260829999999954, 0.0007260830000000024, 0.0007260700000000023, 0.0007260689999999959, 0.0007260980000000014, 0.0007260830000000024, 0.0007260559999999958, 0.0007260970000000019, 0.0007260980000000014, 0.0007261390000000006, 0.0007260840000000018, 0.0007260830000000024, 0.0007260559999999958, 0.0007261110000000015, 0.0007260830000000024, 0.0007260549999999963, 0.0007260700000000023, 0.0007261110000000015, 0.0007260689999999959, 0.0007260690000000028, 0.0007261110000000015, 0.0007260829999999954, 0.0007260830000000024, 0.0007260700000000023, 0.0007260829999999954, 0.0007260700000000023, 0.0007260690000000028, 0.0007260980000000014, 0.0007260549999999963, 0.0007260840000000018, 0.0007260830000000024]</msg>
<status status="PASS" starttime="20201029 12:43:52.158" endtime="20201029 12:43:52.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.153" endtime="20201029 12:43:52.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.772" endtime="20201029 12:43:52.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.749" endtime="20201029 12:43:52.162"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.164" endtime="20201029 12:43:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.163" endtime="20201029 12:43:52.184"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.193" endtime="20201029 12:43:52.242"></status>
</kw>
<msg timestamp="20201029 12:43:52.243" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.191" endtime="20201029 12:43:52.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.245" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.244" endtime="20201029 12:43:52.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.246" endtime="20201029 12:43:52.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.188" endtime="20201029 12:43:52.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.186" endtime="20201029 12:43:52.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.256" endtime="20201029 12:43:52.545"></status>
</kw>
<msg timestamp="20201029 12:43:52.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017465986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018222903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.254" endtime="20201029 12:43:52.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017465986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018222903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.550" endtime="20201029 12:43:52.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.558" endtime="20201029 12:43:52.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.251" endtime="20201029 12:43:52.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.250" endtime="20201029 12:43:52.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:52.565" level="INFO">${PHILIP_RES} = [{'diff': 0.0007569169999999993}, {'diff': 0.0007563340000000009}, {'diff': 0.0007563609999999971}, {'diff': 0.0007563330000000014}, {'diff': 0.0007563200000000013}, {'diff': 0.0007563330000000014}, {...</msg>
<status status="PASS" starttime="20201029 12:43:52.561" endtime="20201029 12:43:52.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.569" level="INFO">${RESULT} = {'diff': [0.0007569169999999993, 0.0007563340000000009, 0.0007563609999999971, 0.0007563330000000014, 0.0007563200000000013, 0.0007563330000000014, 0.0007562919999999987, 0.000756347000000001, 0.00075...</msg>
<status status="PASS" starttime="20201029 12:43:52.566" endtime="20201029 12:43:52.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.573" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:52.572" endtime="20201029 12:43:52.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.576" level="INFO">VALUE: [0.0007569169999999993, 0.0007563340000000009, 0.0007563609999999971, 0.0007563330000000014, 0.0007563200000000013, 0.0007563330000000014, 0.0007562919999999987, 0.000756347000000001, 0.0007563610000000005, 0.0007563889999999997, 0.000756347000000001, 0.0007564029999999992, 0.000756347000000001, 0.0007563469999999975, 0.0007563889999999997, 0.0007562920000000022, 0.000756347999999997, 0.0007562769999999996, 0.0007562920000000056, 0.0007563469999999975, 0.0007563470000000044, 0.0007563199999999978, 0.0007563329999999979, 0.0007563329999999979, 0.0007563609999999971, 0.0007563330000000049, 0.0007563199999999978, 0.0007563329999999979, 0.0007563890000000031, 0.0007563609999999971, 0.0007563470000000044, 0.0007563339999999974, 0.0007563189999999984, 0.0007563059999999983, 0.0007563469999999975, 0.000756361000000004, 0.0007563749999999966, 0.000756361000000004, 0.0007563199999999978, 0.0007563470000000044, 0.0007563470000000044, 0.0007563339999999974, 0.0007563330000000049, 0.0007563609999999971, 0.0007563890000000031, 0.0007564030000000027, 0.0007563339999999974, 0.000756361000000004, 0.000756347999999997, 0.0007563330000000049]</msg>
<status status="PASS" starttime="20201029 12:43:52.574" endtime="20201029 12:43:52.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.570" endtime="20201029 12:43:52.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.185" endtime="20201029 12:43:52.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.162" endtime="20201029 12:43:52.578"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.580" endtime="20201029 12:43:52.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.579" endtime="20201029 12:43:52.600"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.609" endtime="20201029 12:43:52.660"></status>
</kw>
<msg timestamp="20201029 12:43:52.660" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.607" endtime="20201029 12:43:52.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.663" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.661" endtime="20201029 12:43:52.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.664" endtime="20201029 12:43:52.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.604" endtime="20201029 12:43:52.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.602" endtime="20201029 12:43:52.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.674" endtime="20201029 12:43:52.960"></status>
</kw>
<msg timestamp="20201029 12:43:52.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.673" endtime="20201029 12:43:52.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.965" endtime="20201029 12:43:52.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.973" endtime="20201029 12:43:52.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.670" endtime="20201029 12:43:52.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.668" endtime="20201029 12:43:52.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:52.980" level="INFO">${PHILIP_RES} = [{'diff': 0.0007877639999999998}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872090000000005}, {'diff': 0.000787208000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:52.977" endtime="20201029 12:43:52.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.984" level="INFO">${RESULT} = {'diff': [0.0007877639999999998, 0.0007872220000000006, 0.0007872220000000006, 0.0007872220000000006, 0.0007872090000000005, 0.000787208000000001, 0.0007872499999999998, 0.0007872220000000006, 0.00078...</msg>
<status status="PASS" starttime="20201029 12:43:52.981" endtime="20201029 12:43:52.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.988" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:52.987" endtime="20201029 12:43:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.991" level="INFO">VALUE: [0.0007877639999999998, 0.0007872220000000006, 0.0007872220000000006, 0.0007872220000000006, 0.0007872090000000005, 0.000787208000000001, 0.0007872499999999998, 0.0007872220000000006, 0.0007872499999999998, 0.0007872360000000002, 0.0007872360000000002, 0.0007872220000000006, 0.0007872360000000002, 0.0007872230000000001, 0.0007872220000000006, 0.000787208000000001, 0.0007872220000000006, 0.0007872229999999966, 0.0007872360000000037, 0.0007872080000000045, 0.0007872220000000041, 0.0007872360000000037, 0.0007872219999999971, 0.0007872079999999976, 0.0007871809999999979, 0.0007872220000000041, 0.0007872230000000036, 0.0007872080000000045, 0.000787193999999998, 0.0007872219999999971, 0.0007872369999999962, 0.0007872220000000041, 0.0007872640000000028, 0.0007872360000000037, 0.0007872230000000036, 0.0007871809999999979, 0.0007872219999999971, 0.0007872219999999971, 0.0007872360000000037, 0.0007871799999999984, 0.0007871800000000054, 0.0007872219999999971, 0.0007872219999999971, 0.0007872229999999966, 0.0007871949999999975, 0.0007872360000000037, 0.0007872360000000037, 0.0007872770000000029, 0.0007872229999999966, 0.0007872499999999963]</msg>
<status status="PASS" starttime="20201029 12:43:52.990" endtime="20201029 12:43:52.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.985" endtime="20201029 12:43:52.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.601" endtime="20201029 12:43:52.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.578" endtime="20201029 12:43:52.994"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.996" endtime="20201029 12:43:53.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.995" endtime="20201029 12:43:53.016"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.025" endtime="20201029 12:43:53.078"></status>
</kw>
<msg timestamp="20201029 12:43:53.078" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.023" endtime="20201029 12:43:53.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.081" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.079" endtime="20201029 12:43:53.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.082" endtime="20201029 12:43:53.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.021" endtime="20201029 12:43:53.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.019" endtime="20201029 12:43:53.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.091" endtime="20201029 12:43:53.401"></status>
</kw>
<msg timestamp="20201029 12:43:53.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017315111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.090" endtime="20201029 12:43:53.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017315111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.405" endtime="20201029 12:43:53.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.414" endtime="20201029 12:43:53.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.087" endtime="20201029 12:43:53.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.085" endtime="20201029 12:43:53.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:53.420" level="INFO">${PHILIP_RES} = [{'diff': 0.0008192219999999979}, {'diff': 0.0008187079999999979}, {'diff': 0.0008186939999999983}, {'diff': 0.0008187090000000008}, {'diff': 0.0008187090000000008}, {'diff': 0.00081875}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:53.417" endtime="20201029 12:43:53.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.425" level="INFO">${RESULT} = {'diff': [0.0008192219999999979, 0.0008187079999999979, 0.0008186939999999983, 0.0008187090000000008, 0.0008187090000000008, 0.00081875, 0.0008186809999999982, 0.0008187090000000008, 0.000818709000000...</msg>
<status status="PASS" starttime="20201029 12:43:53.421" endtime="20201029 12:43:53.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.430" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:53.429" endtime="20201029 12:43:53.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.432" level="INFO">VALUE: [0.0008192219999999979, 0.0008187079999999979, 0.0008186939999999983, 0.0008187090000000008, 0.0008187090000000008, 0.00081875, 0.0008186809999999982, 0.0008187090000000008, 0.0008187090000000008, 0.0008187220000000009, 0.0008187220000000009, 0.0008187090000000008, 0.0008187769999999997, 0.0008187639999999996, 0.0008187220000000009, 0.0008187080000000013, 0.0008187079999999944, 0.0008187080000000013, 0.000818721999999994, 0.0008186940000000018, 0.0008187079999999944, 0.0008187080000000013, 0.0008187080000000013, 0.0008187220000000009, 0.0008186950000000012, 0.0008187230000000004, 0.0008187230000000004, 0.0008187090000000008, 0.0008187230000000004, 0.0008186950000000012, 0.0008187220000000009, 0.0008187090000000008, 0.0008187360000000005, 0.0008186810000000017, 0.0008187080000000013, 0.0008186799999999952, 0.0008186940000000018, 0.0008186659999999957, 0.0008187220000000009, 0.0008186940000000018, 0.0008187080000000013, 0.000818721999999994, 0.0008187080000000013, 0.000818721999999994, 0.0008187090000000008, 0.0008186949999999943, 0.0008187360000000005, 0.0008186950000000012, 0.0008187230000000004, 0.0008187230000000004]</msg>
<status status="PASS" starttime="20201029 12:43:53.431" endtime="20201029 12:43:53.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.426" endtime="20201029 12:43:53.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.017" endtime="20201029 12:43:53.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.994" endtime="20201029 12:43:53.434"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.437" endtime="20201029 12:43:53.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.435" endtime="20201029 12:43:53.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.465" endtime="20201029 12:43:53.520"></status>
</kw>
<msg timestamp="20201029 12:43:53.520" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.464" endtime="20201029 12:43:53.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.523" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.521" endtime="20201029 12:43:53.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.524" endtime="20201029 12:43:53.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.461" endtime="20201029 12:43:53.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.459" endtime="20201029 12:43:53.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.533" endtime="20201029 12:43:53.818"></status>
</kw>
<msg timestamp="20201029 12:43:53.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017212944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.532" endtime="20201029 12:43:53.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017212944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.822" endtime="20201029 12:43:53.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.831" endtime="20201029 12:43:53.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.529" endtime="20201029 12:43:53.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.527" endtime="20201029 12:43:53.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:53.837" level="INFO">${PHILIP_RES} = [{'diff': 0.0008513479999999983}, {'diff': 0.0008508189999999992}, {'diff': 0.0008508199999999987}, {'diff': 0.0008508049999999996}, {'diff': 0.0008507500000000008}, {'diff': 0.0008507500000000008}, {...</msg>
<status status="PASS" starttime="20201029 12:43:53.834" endtime="20201029 12:43:53.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.841" level="INFO">${RESULT} = {'diff': [0.0008513479999999983, 0.0008508189999999992, 0.0008508199999999987, 0.0008508049999999996, 0.0008507500000000008, 0.0008507500000000008, 0.0008508049999999996, 0.0008508200000000021, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:53.838" endtime="20201029 12:43:53.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.846" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:53.845" endtime="20201029 12:43:53.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.849" level="INFO">VALUE: [0.0008513479999999983, 0.0008508189999999992, 0.0008508199999999987, 0.0008508049999999996, 0.0008507500000000008, 0.0008507500000000008, 0.0008508049999999996, 0.0008508200000000021, 0.0008508190000000027, 0.0008508060000000026, 0.0008508049999999996, 0.0008508189999999992, 0.000850778, 0.0008507640000000004, 0.0008508059999999991, 0.0008508050000000031, 0.0008508200000000021, 0.0008508190000000027, 0.0008508190000000027, 0.0008508480000000013, 0.0008508190000000027, 0.000850791999999996, 0.000850792000000003, 0.0008508329999999953, 0.0008508200000000021, 0.0008508189999999957, 0.000850792000000003, 0.0008508049999999961, 0.0008508330000000022, 0.0008507499999999973, 0.0008508200000000021, 0.000850791999999996, 0.0008508050000000031, 0.0008507499999999973, 0.0008507640000000039, 0.0008508200000000021, 0.0008508330000000022, 0.0008508190000000027, 0.000850792000000003, 0.0008508050000000031, 0.0008508340000000017, 0.0008508330000000022, 0.0008508469999999949, 0.000850792000000003, 0.0008508189999999957, 0.000850792000000003, 0.0008508329999999953, 0.0008508200000000021, 0.000850791999999996, 0.0008508199999999952]</msg>
<status status="PASS" starttime="20201029 12:43:53.847" endtime="20201029 12:43:53.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.842" endtime="20201029 12:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.457" endtime="20201029 12:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.435" endtime="20201029 12:43:53.851"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.853" endtime="20201029 12:43:53.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.852" endtime="20201029 12:43:53.873"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.882" endtime="20201029 12:43:53.938"></status>
</kw>
<msg timestamp="20201029 12:43:53.939" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.880" endtime="20201029 12:43:53.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.941" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.940" endtime="20201029 12:43:53.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.943" endtime="20201029 12:43:53.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.877" endtime="20201029 12:43:53.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.875" endtime="20201029 12:43:53.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.953" endtime="20201029 12:43:54.239"></status>
</kw>
<msg timestamp="20201029 12:43:54.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018199514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.951" endtime="20201029 12:43:54.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018199514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.243" endtime="20201029 12:43:54.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.251" endtime="20201029 12:43:54.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.949" endtime="20201029 12:43:54.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.947" endtime="20201029 12:43:54.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:54.258" level="INFO">${PHILIP_RES} = [{'diff': 0.0008840700000000007}, {'diff': 0.0008835560000000006}, {'diff': 0.000883527999999998}, {'diff': 0.000883542000000001}, {'diff': 0.0008835280000000015}, {'diff': 0.0008835269999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:54.255" endtime="20201029 12:43:54.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.262" level="INFO">${RESULT} = {'diff': [0.0008840700000000007, 0.0008835560000000006, 0.000883527999999998, 0.000883542000000001, 0.0008835280000000015, 0.0008835269999999985, 0.0008835140000000019, 0.0008835839999999998, 0.000883...</msg>
<status status="PASS" starttime="20201029 12:43:54.259" endtime="20201029 12:43:54.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.267" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:54.266" endtime="20201029 12:43:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.269" level="INFO">VALUE: [0.0008840700000000007, 0.0008835560000000006, 0.000883527999999998, 0.000883542000000001, 0.0008835280000000015, 0.0008835269999999985, 0.0008835140000000019, 0.0008835839999999998, 0.0008834719999999997, 0.000883542000000001, 0.000883624999999999, 0.000883542000000001, 0.0008834719999999997, 0.0008835139999999984, 0.000883527000000002, 0.0008835129999999955, 0.0008835280000000015, 0.000883542000000001, 0.0008835280000000015, 0.0008835280000000015, 0.0008835419999999941, 0.0008835560000000006, 0.0008835410000000016, 0.0008835140000000019, 0.0008835280000000015, 0.000883527000000002, 0.0008835690000000007, 0.000883513999999995, 0.000883542000000001, 0.0008835140000000019, 0.0008835000000000023, 0.000883542000000001, 0.0008835419999999941, 0.000883542000000001, 0.0008835280000000015, 0.000883527000000002, 0.0008835280000000015, 0.000883542000000001, 0.0008834719999999963, 0.0008835969999999999, 0.0008835140000000019, 0.0008835140000000019, 0.000883542000000001, 0.0008835410000000016, 0.0008836109999999994, 0.0008835000000000023, 0.0008835140000000019, 0.0008835279999999945, 0.0008835140000000019, 0.000883542000000001]</msg>
<status status="PASS" starttime="20201029 12:43:54.268" endtime="20201029 12:43:54.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.263" endtime="20201029 12:43:54.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.874" endtime="20201029 12:43:54.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.851" endtime="20201029 12:43:54.272"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.274" endtime="20201029 12:43:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.273" endtime="20201029 12:43:54.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.308" endtime="20201029 12:43:54.366"></status>
</kw>
<msg timestamp="20201029 12:43:54.367" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.305" endtime="20201029 12:43:54.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.369" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.368" endtime="20201029 12:43:54.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.370" endtime="20201029 12:43:54.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.302" endtime="20201029 12:43:54.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.299" endtime="20201029 12:43:54.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.380" endtime="20201029 12:43:54.667"></status>
</kw>
<msg timestamp="20201029 12:43:54.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.379" endtime="20201029 12:43:54.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.671" endtime="20201029 12:43:54.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.680" endtime="20201029 12:43:54.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.376" endtime="20201029 12:43:54.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.374" endtime="20201029 12:43:54.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:54.686" level="INFO">${PHILIP_RES} = [{'diff': 0.0009173890000000011}, {'diff': 0.000916875000000001}, {'diff': 0.0009168749999999976}, {'diff': 0.0009168749999999976}, {'diff': 0.0009168749999999976}, {'diff': 0.0009169030000000002}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:54.683" endtime="20201029 12:43:54.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.691" level="INFO">${RESULT} = {'diff': [0.0009173890000000011, 0.000916875000000001, 0.0009168749999999976, 0.0009168749999999976, 0.0009168749999999976, 0.0009169030000000002, 0.000916860999999998, 0.0009168610000000015, 0.000916...</msg>
<status status="PASS" starttime="20201029 12:43:54.687" endtime="20201029 12:43:54.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.696" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:54.695" endtime="20201029 12:43:54.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.699" level="INFO">VALUE: [0.0009173890000000011, 0.000916875000000001, 0.0009168749999999976, 0.0009168749999999976, 0.0009168749999999976, 0.0009169030000000002, 0.000916860999999998, 0.0009168610000000015, 0.0009168610000000015, 0.000916860999999998, 0.0009168749999999976, 0.0009168749999999976, 0.0009168329999999988, 0.0009168610000000049, 0.0009168329999999988, 0.0009168470000000054, 0.0009168749999999976, 0.0009168480000000048, 0.000916860999999998, 0.0009167919999999996, 0.0009168749999999976, 0.000916860999999998, 0.0009168749999999976, 0.0009168339999999983, 0.0009169300000000033, 0.0009168469999999984, 0.0009168470000000054, 0.000916860999999998, 0.0009168750000000045, 0.0009168889999999971, 0.0009168890000000041, 0.0009168469999999984, 0.000916860999999998, 0.0009168469999999984, 0.0009168889999999971, 0.000916860999999998, 0.000916860999999998, 0.000916860999999998, 0.0009168479999999979, 0.0009168330000000058, 0.0009168480000000048, 0.0009168610000000049, 0.0009168189999999993, 0.0009168330000000058, 0.0009168049999999928, 0.0009168469999999984, 0.000916860999999991, 0.0009168610000000049, 0.0009168610000000049, 0.0009168750000000114]</msg>
<status status="PASS" starttime="20201029 12:43:54.697" endtime="20201029 12:43:54.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.692" endtime="20201029 12:43:54.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.296" endtime="20201029 12:43:54.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.272" endtime="20201029 12:43:54.701"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.703" endtime="20201029 12:43:54.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.702" endtime="20201029 12:43:54.723"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.731" endtime="20201029 12:43:54.792"></status>
</kw>
<msg timestamp="20201029 12:43:54.792" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.730" endtime="20201029 12:43:54.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.795" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.793" endtime="20201029 12:43:54.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.796" endtime="20201029 12:43:54.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.727" endtime="20201029 12:43:54.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.725" endtime="20201029 12:43:54.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.806" endtime="20201029 12:43:55.092"></status>
</kw>
<msg timestamp="20201029 12:43:55.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017197653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.804" endtime="20201029 12:43:55.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017197653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.097" endtime="20201029 12:43:55.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.105" endtime="20201029 12:43:55.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.801" endtime="20201029 12:43:55.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.799" endtime="20201029 12:43:55.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:55.112" level="INFO">${PHILIP_RES} = [{'diff': 0.0009513329999999987}, {'diff': 0.000950804999999999}, {'diff': 0.0009507920000000024}, {'diff': 0.0009508059999999985}, {'diff': 0.0009508059999999985}, {'diff': 0.0009507919999999989}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:55.109" endtime="20201029 12:43:55.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.116" level="INFO">${RESULT} = {'diff': [0.0009513329999999987, 0.000950804999999999, 0.0009507920000000024, 0.0009508059999999985, 0.0009508059999999985, 0.0009507919999999989, 0.0009508050000000025, 0.000950804999999999, 0.000950...</msg>
<status status="PASS" starttime="20201029 12:43:55.113" endtime="20201029 12:43:55.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.120" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:55.119" endtime="20201029 12:43:55.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.123" level="INFO">VALUE: [0.0009513329999999987, 0.000950804999999999, 0.0009507920000000024, 0.0009508059999999985, 0.0009508059999999985, 0.0009507919999999989, 0.0009508050000000025, 0.000950804999999999, 0.000950804999999999, 0.0009508189999999986, 0.000950806000000002, 0.0009507920000000024, 0.0009507919999999989, 0.000950804999999999, 0.0009507909999999994, 0.0009507769999999999, 0.000950804999999999, 0.0009507639999999998, 0.0009507779999999993, 0.0009508199999999981, 0.0009507779999999993, 0.0009507909999999994, 0.0009507360000000006, 0.0009508470000000047, 0.0009507919999999989, 0.0009508060000000054, 0.0009507919999999989, 0.0009507909999999994, 0.0009508329999999982, 0.0009507779999999993, 0.0009508060000000054, 0.0009508059999999985, 0.0009508059999999985, 0.0009507779999999993, 0.000950804999999999, 0.0009507909999999994, 0.000950804999999999, 0.0009508199999999981, 0.0009508060000000054, 0.0009508059999999985, 0.0009508189999999986, 0.000950804999999999, 0.0009507769999999999, 0.0009508610000000042, 0.0009508199999999981, 0.0009507639999999928, 0.000950820000000005, 0.0009507920000000059, 0.0009507910000000064, 0.000950804999999999]</msg>
<status status="PASS" starttime="20201029 12:43:55.122" endtime="20201029 12:43:55.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.117" endtime="20201029 12:43:55.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.724" endtime="20201029 12:43:55.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.701" endtime="20201029 12:43:55.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.958" endtime="20201029 12:43:55.459"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:31.383" endtime="20201029 12:43:55.460" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:09.485" endtime="20201029 12:43:55.469"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.595" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:55.603" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:56.600" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:55.593" endtime="20201029 12:43:56.601"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.604" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:43:56.602" endtime="20201029 12:43:57.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.592" endtime="20201029 12:43:57.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.611" endtime="20201029 12:43:57.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.608" endtime="20201029 12:43:57.883"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.896" endtime="20201029 12:43:57.916"></status>
</kw>
<msg timestamp="20201029 12:43:57.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.894" endtime="20201029 12:43:57.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.917" endtime="20201029 12:43:57.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.922" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:57.920" endtime="20201029 12:43:57.922"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:57.892" endtime="20201029 12:43:57.923"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:57.889" endtime="20201029 12:43:57.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.888" endtime="20201029 12:43:57.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:57.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:57.928" endtime="20201029 12:43:57.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.925" endtime="20201029 12:43:57.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.887" endtime="20201029 12:43:57.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.887" endtime="20201029 12:43:57.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.931" endtime="20201029 12:43:57.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.885" endtime="20201029 12:43:57.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.934" endtime="20201029 12:43:57.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.884" endtime="20201029 12:43:57.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.591" endtime="20201029 12:43:57.936"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.942" endtime="20201029 12:43:57.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.941" endtime="20201029 12:43:57.962"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.976" endtime="20201029 12:43:57.993"></status>
</kw>
<msg timestamp="20201029 12:43:57.993" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.974" endtime="20201029 12:43:57.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.994" endtime="20201029 12:43:57.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.999" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:57.997" endtime="20201029 12:43:58.000"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:57.972" endtime="20201029 12:43:58.000"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:57.969" endtime="20201029 12:43:58.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.968" endtime="20201029 12:43:58.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:58.005" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:58.004" endtime="20201029 12:43:58.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.002" endtime="20201029 12:43:58.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.967" endtime="20201029 12:43:58.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.967" endtime="20201029 12:43:58.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.007" endtime="20201029 12:43:58.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.965" endtime="20201029 12:43:58.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.963" endtime="20201029 12:43:58.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.939" endtime="20201029 12:43:58.010"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.021" endtime="20201029 12:43:58.039"></status>
</kw>
<msg timestamp="20201029 12:43:58.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.020" endtime="20201029 12:43:58.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.041" endtime="20201029 12:43:58.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.043" endtime="20201029 12:43:58.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.016" endtime="20201029 12:43:58.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.013" endtime="20201029 12:43:58.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.053" endtime="20201029 12:43:58.347"></status>
</kw>
<msg timestamp="20201029 12:43:58.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069508556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069533097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.051" endtime="20201029 12:43:58.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069508556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069533097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.352" endtime="20201029 12:43:58.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.361" endtime="20201029 12:43:58.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.049" endtime="20201029 12:43:58.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.047" endtime="20201029 12:43:58.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.368" level="INFO">${RESULT} = [{'diff': 2.454100000000292e-05}, {'diff': 3.2219999999971716e-06}, {'diff': 2.7079999999901627e-06}, {'diff': 3.2079999999906628e-06}, {'diff': 3.7219999999976716e-06}, {'diff': 2.7080000000040405e-0...</msg>
<status status="PASS" starttime="20201029 12:43:58.364" endtime="20201029 12:43:58.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.372" level="INFO">${ACCURACY} = {'diff': [2.454100000000292e-05, 3.2219999999971716e-06, 2.7079999999901627e-06, 3.2079999999906628e-06, 3.7219999999976716e-06, 2.7080000000040405e-06, 2.7080000000040405e-06, 3.2079999999906628e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:58.369" endtime="20201029 12:43:58.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.378" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.377" endtime="20201029 12:43:58.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.380" level="INFO">VALUE: [2.454100000000292e-05, 3.2219999999971716e-06, 2.7079999999901627e-06, 3.2079999999906628e-06, 3.7219999999976716e-06, 2.7080000000040405e-06, 2.7080000000040405e-06, 3.2079999999906628e-06, 3.2089999999901364e-06, 3.2220000000110494e-06, 3.1669999999983656e-06, 2.6809999999904965e-06, 3.2499999999963114e-06, 2.7080000000040405e-06, 3.2360000000036804e-06, 3.1949999999975054e-06, 3.209000000004014e-06, 3.2219999999971716e-06, 2.7219999999966715e-06, 3.1670000000122434e-06, 2.7220000000105493e-06, 3.2220000000110494e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 3.2220000000110494e-06, 3.2080000000045406e-06, 3.693999999998532e-06, 2.7080000000040405e-06, 2.6949999999970053e-06, 2.7080000000040405e-06, 2.7360000000031803e-06, 3.2220000000110494e-06, 3.209000000004014e-06, 2.7080000000040405e-06, 3.2219999999971716e-06, 2.6810000000043743e-06, 2.6529999999913567e-06, 2.6949999999970053e-06, 3.1949999999975054e-06, 2.7079999999901627e-06, 2.6810000000043743e-06, 3.2360000000036804e-06, 3.7080000000050406e-06, 2.7219999999966715e-06, 3.2219999999971716e-06, 3.209000000004014e-06, 3.2079999999906628e-06, 3.209000000004014e-06, 2.7220000000105493e-06, 3.2079999999906628e-06]</msg>
<status status="PASS" starttime="20201029 12:43:58.379" endtime="20201029 12:43:58.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.373" endtime="20201029 12:43:58.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.385" endtime="20201029 12:43:58.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.383" endtime="20201029 12:43:58.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.382" endtime="20201029 12:43:58.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.012" endtime="20201029 12:43:58.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.011" endtime="20201029 12:43:58.406"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.415" endtime="20201029 12:43:58.433"></status>
</kw>
<msg timestamp="20201029 12:43:58.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.413" endtime="20201029 12:43:58.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.435" endtime="20201029 12:43:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.438" endtime="20201029 12:43:58.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.411" endtime="20201029 12:43:58.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.409" endtime="20201029 12:43:58.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.447" endtime="20201029 12:43:58.737"></status>
</kw>
<msg timestamp="20201029 12:43:58.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020289444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.445" endtime="20201029 12:43:58.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020289444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.741" endtime="20201029 12:43:58.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.750" endtime="20201029 12:43:58.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.443" endtime="20201029 12:43:58.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.441" endtime="20201029 12:43:58.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.756" level="INFO">${RESULT} = [{'diff': 3.7919999999989906e-06}, {'diff': 3.722000000001141e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.693999999999532e-06}, {'diff': 4.236000000001211e-06}, {'diff': 3.6949999999980054e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:58.753" endtime="20201029 12:43:58.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.762" level="INFO">${ACCURACY} = {'diff': [3.7919999999989906e-06, 3.722000000001141e-06, 4.207999999998602e-06, 4.693999999999532e-06, 4.236000000001211e-06, 3.6949999999980054e-06, 3.709000000001045e-06, 4.207999999998602e-06, 4.16...</msg>
<status status="PASS" starttime="20201029 12:43:58.757" endtime="20201029 12:43:58.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.767" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.766" endtime="20201029 12:43:58.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.769" level="INFO">VALUE: [3.7919999999989906e-06, 3.722000000001141e-06, 4.207999999998602e-06, 4.693999999999532e-06, 4.236000000001211e-06, 3.6949999999980054e-06, 3.709000000001045e-06, 4.207999999998602e-06, 4.166999999999366e-06, 4.236000000001211e-06, 4.236000000001211e-06, 3.750000000000281e-06, 4.707999999999102e-06, 4.666999999999866e-06, 3.6529999999992957e-06, 3.681000000001905e-06, 3.6809999999984355e-06, 4.208000000002071e-06, 4.207999999998602e-06, 3.7089999999975753e-06, 4.221999999998172e-06, 3.7079999999981017e-06, 4.179999999999462e-06, 4.707999999999102e-06, 4.207999999998602e-06, 3.7089999999975753e-06, 3.709000000001045e-06, 3.7219999999976716e-06, 4.222000000001641e-06, 3.7079999999981017e-06, 4.722000000002141e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 3.708000000001571e-06, 3.722000000001141e-06, 4.2499999999973115e-06, 4.222000000001641e-06, 4.222999999997645e-06, 3.6940000000020012e-06, 3.722000000001141e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.277999999999921e-06, 4.223000000001115e-06, 4.208000000002071e-06, 3.708000000001571e-06, 4.221999999998172e-06, 3.7079999999981017e-06, 4.207999999998602e-06, 4.222000000001641e-06]</msg>
<status status="PASS" starttime="20201029 12:43:58.768" endtime="20201029 12:43:58.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.763" endtime="20201029 12:43:58.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.774" endtime="20201029 12:43:58.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.772" endtime="20201029 12:43:58.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.771" endtime="20201029 12:43:58.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.407" endtime="20201029 12:43:58.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.406" endtime="20201029 12:43:58.795"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.804" endtime="20201029 12:43:58.820"></status>
</kw>
<msg timestamp="20201029 12:43:58.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.802" endtime="20201029 12:43:58.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.822" endtime="20201029 12:43:58.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.824" endtime="20201029 12:43:58.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.799" endtime="20201029 12:43:58.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.797" endtime="20201029 12:43:58.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.834" endtime="20201029 12:43:59.118"></status>
</kw>
<msg timestamp="20201029 12:43:59.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019893444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.833" endtime="20201029 12:43:59.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019893444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.122" endtime="20201029 12:43:59.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.131" endtime="20201029 12:43:59.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.830" endtime="20201029 12:43:59.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.828" endtime="20201029 12:43:59.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.138" level="INFO">${RESULT} = [{'diff': 5.2089999999990755e-06}, {'diff': 5.235999999998742e-06}, {'diff': 4.708000000002571e-06}, {'diff': 5.207999999999602e-06}, {'diff': 5.2089999999990755e-06}, {'diff': 5.292000000000491e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:59.134" endtime="20201029 12:43:59.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.142" level="INFO">${ACCURACY} = {'diff': [5.2089999999990755e-06, 5.235999999998742e-06, 4.708000000002571e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.292000000000491e-06, 4.695000000002475e-06, 4.708000000002571e-06, 4.69...</msg>
<status status="PASS" starttime="20201029 12:43:59.139" endtime="20201029 12:43:59.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.146" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.145" endtime="20201029 12:43:59.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.149" level="INFO">VALUE: [5.2089999999990755e-06, 5.235999999998742e-06, 4.708000000002571e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.292000000000491e-06, 4.695000000002475e-06, 4.708000000002571e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.709000000002045e-06, 5.1949999999995056e-06, 5.222000000002641e-06, 4.721999999998672e-06, 4.7089999999985754e-06, 4.735999999998242e-06, 4.722000000002141e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 4.723000000001615e-06, 4.707999999999102e-06, 5.221999999999172e-06, 4.707999999999102e-06, 4.708000000002571e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.749999999998812e-06, 4.721999999998672e-06, 5.221999999999172e-06, 5.209000000002545e-06, 5.708000000000102e-06, 4.707999999999102e-06, 4.7089999999985754e-06, 5.2499999999983116e-06, 4.707999999999102e-06, 4.709000000002045e-06, 5.167000000000366e-06, 4.707999999999102e-06, 4.750000000001281e-06, 4.707999999999102e-06, 4.709000000002045e-06, 5.209000000002545e-06, 4.709000000002045e-06, 5.207999999999602e-06, 4.693999999999532e-06, 4.707999999999102e-06, 4.693999999999532e-06, 5.221999999999172e-06, 4.693999999999532e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201029 12:43:59.148" endtime="20201029 12:43:59.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.143" endtime="20201029 12:43:59.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.154" endtime="20201029 12:43:59.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.152" endtime="20201029 12:43:59.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.151" endtime="20201029 12:43:59.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.796" endtime="20201029 12:43:59.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.795" endtime="20201029 12:43:59.175"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.184" endtime="20201029 12:43:59.201"></status>
</kw>
<msg timestamp="20201029 12:43:59.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.182" endtime="20201029 12:43:59.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.202" endtime="20201029 12:43:59.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.205" endtime="20201029 12:43:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.179" endtime="20201029 12:43:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.177" endtime="20201029 12:43:59.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.215" endtime="20201029 12:43:59.498"></status>
</kw>
<msg timestamp="20201029 12:43:59.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020945319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.213" endtime="20201029 12:43:59.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020945319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.503" endtime="20201029 12:43:59.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.512" endtime="20201029 12:43:59.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.210" endtime="20201029 12:43:59.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.209" endtime="20201029 12:43:59.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.518" level="INFO">${RESULT} = [{'diff': 6.208000000000602e-06}, {'diff': 5.721999999999672e-06}, {'diff': 5.750000000002281e-06}, {'diff': 5.7089999999995755e-06}, {'diff': 5.708000000000102e-06}, {'diff': 6.722000000000672e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:59.515" endtime="20201029 12:43:59.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.523" level="INFO">${ACCURACY} = {'diff': [6.208000000000602e-06, 5.721999999999672e-06, 5.750000000002281e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 6.722000000000672e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.722...</msg>
<status status="PASS" starttime="20201029 12:43:59.519" endtime="20201029 12:43:59.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.530" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.528" endtime="20201029 12:43:59.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.532" level="INFO">VALUE: [6.208000000000602e-06, 5.721999999999672e-06, 5.750000000002281e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 6.722000000000672e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.7229999999991454e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 5.721999999999672e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.709000000000576e-06, 5.708000000000102e-06, 6.2090000000000756e-06, 5.791999999997521e-06, 6.208000000000602e-06, 5.708000000000102e-06, 6.249999999999312e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 6.7079999999976325e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 5.7229999999991454e-06, 5.708000000000102e-06, 6.194000000001032e-06, 6.722000000000672e-06, 5.723000000002615e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.708000000001102e-06, 6.222000000000172e-06, 5.7229999999991454e-06, 6.153000000001796e-06, 5.721999999999672e-06, 5.708000000000102e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.749999999999812e-06, 6.250000000002781e-06, 6.7079999999976325e-06]</msg>
<status status="PASS" starttime="20201029 12:43:59.531" endtime="20201029 12:43:59.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.525" endtime="20201029 12:43:59.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.538" endtime="20201029 12:43:59.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.536" endtime="20201029 12:43:59.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.535" endtime="20201029 12:43:59.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.176" endtime="20201029 12:43:59.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.175" endtime="20201029 12:43:59.559"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.568" endtime="20201029 12:43:59.586"></status>
</kw>
<msg timestamp="20201029 12:43:59.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.566" endtime="20201029 12:43:59.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.587" endtime="20201029 12:43:59.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.590" endtime="20201029 12:43:59.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.564" endtime="20201029 12:43:59.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.561" endtime="20201029 12:43:59.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.599" endtime="20201029 12:43:59.884"></status>
</kw>
<msg timestamp="20201029 12:43:59.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.598" endtime="20201029 12:43:59.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.889" endtime="20201029 12:43:59.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.897" endtime="20201029 12:43:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.595" endtime="20201029 12:43:59.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.593" endtime="20201029 12:43:59.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.904" level="INFO">${RESULT} = [{'diff': 7.236000000000742e-06}, {'diff': 6.709000000000576e-06}, {'diff': 7.194999999998036e-06}, {'diff': 6.7079999999976325e-06}, {'diff': 7.236000000000742e-06}, {'diff': 7.194999999998036e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:59.901" endtime="20201029 12:43:59.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.909" level="INFO">${ACCURACY} = {'diff': [7.236000000000742e-06, 6.709000000000576e-06, 7.194999999998036e-06, 6.7079999999976325e-06, 7.236000000000742e-06, 7.194999999998036e-06, 6.638999999999257e-06, 7.2219999999977025e-06, 6.70...</msg>
<status status="PASS" starttime="20201029 12:43:59.905" endtime="20201029 12:43:59.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.914" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.913" endtime="20201029 12:43:59.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.917" level="INFO">VALUE: [7.236000000000742e-06, 6.709000000000576e-06, 7.194999999998036e-06, 6.7079999999976325e-06, 7.236000000000742e-06, 7.194999999998036e-06, 6.638999999999257e-06, 7.2219999999977025e-06, 6.7079999999976325e-06, 7.2079999999981326e-06, 7.708000000002102e-06, 7.222000000001172e-06, 7.208999999997606e-06, 6.708000000001102e-06, 7.194000000002032e-06, 7.2219999999977025e-06, 7.193999999998563e-06, 7.693999999999063e-06, 7.194000000002032e-06, 7.222000000001172e-06, 7.236000000000742e-06, 6.776999999999478e-06, 7.194999999998036e-06, 7.208000000001602e-06, 7.222000000001172e-06, 6.708000000001102e-06, 7.222000000001172e-06, 6.7079999999976325e-06, 7.179999999998993e-06, 7.181000000001936e-06, 7.208000000001602e-06, 7.222000000001172e-06, 7.235999999997272e-06, 6.709000000000576e-06, 7.208999999997606e-06, 7.736000000001242e-06, 6.6669999999983964e-06, 7.2219999999977025e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.236999999996746e-06, 7.236000000000742e-06, 6.7219999999972024e-06, 7.208999999997606e-06, 7.208000000001602e-06, 7.708000000002102e-06, 6.722000000000672e-06, 7.736000000001242e-06, 7.208000000001602e-06, 7.735999999997772e-06]</msg>
<status status="PASS" starttime="20201029 12:43:59.915" endtime="20201029 12:43:59.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.910" endtime="20201029 12:43:59.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.922" endtime="20201029 12:43:59.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.920" endtime="20201029 12:43:59.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.919" endtime="20201029 12:43:59.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.560" endtime="20201029 12:43:59.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.559" endtime="20201029 12:43:59.942"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.257" endtime="20201029 12:44:01.285"></status>
</kw>
<msg timestamp="20201029 12:44:01.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.246" endtime="20201029 12:44:01.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.288" endtime="20201029 12:44:01.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.292" endtime="20201029 12:44:01.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.231" endtime="20201029 12:44:01.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.217" endtime="20201029 12:44:01.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.304" endtime="20201029 12:44:01.598"></status>
</kw>
<msg timestamp="20201029 12:44:01.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.333257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.333265389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.302" endtime="20201029 12:44:01.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.333257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.333265389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.602" endtime="20201029 12:44:01.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.611" endtime="20201029 12:44:01.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.299" endtime="20201029 12:44:01.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.297" endtime="20201029 12:44:01.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.618" level="INFO">${RESULT} = [{'diff': 7.721999999876772e-06}, {'diff': 8.208999999981259e-06}, {'diff': 7.694000000002532e-06}, {'diff': 8.207999999898519e-06}, {'diff': 8.235999999994803e-06}, {'diff': 8.208000000120563e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:01.615" endtime="20201029 12:44:01.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.622" level="INFO">${ACCURACY} = {'diff': [7.721999999876772e-06, 8.208999999981259e-06, 7.694000000002532e-06, 8.207999999898519e-06, 8.235999999994803e-06, 8.208000000120563e-06, 8.180999999884975e-06, 8.708000000190452e-06, 7.7079...</msg>
<status status="PASS" starttime="20201029 12:44:01.619" endtime="20201029 12:44:01.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.627" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.626" endtime="20201029 12:44:01.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.629" level="INFO">VALUE: [7.721999999876772e-06, 8.208999999981259e-06, 7.694000000002532e-06, 8.207999999898519e-06, 8.235999999994803e-06, 8.208000000120563e-06, 8.180999999884975e-06, 8.708000000190452e-06, 7.70799999982863e-06, 7.708000000050674e-06, 8.207999999898519e-06, 8.708000000190452e-06, 7.722000000098816e-06, 7.70899999991137e-06, 8.207999999898519e-06, 8.208000000120563e-06, 8.208999999981259e-06, 8.194000000072421e-06, 8.194999999933117e-06, 7.708000000050674e-06, 8.208999999981259e-06, 7.70799999982863e-06, 7.694999999863228e-06, 8.194999999933117e-06, 7.708000000050674e-06, 8.193999999850377e-06, 8.208999999981259e-06, 7.708000000050674e-06, 8.72200000001655e-06, 8.208999999981259e-06, 7.735999999924914e-06, 8.207999999898519e-06, 7.70799999982863e-06, 7.708000000050674e-06, 7.70899999991137e-06, 7.70799999982863e-06, 8.207999999898519e-06, 8.180999999884975e-06, 8.180999999884975e-06, 7.70799999982863e-06, 8.27800000013923e-06, 8.208999999981259e-06, 7.721999999876772e-06, 7.708000000050674e-06, 8.277999999917185e-06, 8.208999999981259e-06, 7.708000000050674e-06, 8.223000000029401e-06, 8.208000000120563e-06, 7.694000000002532e-06]</msg>
<status status="PASS" starttime="20201029 12:44:01.628" endtime="20201029 12:44:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.623" endtime="20201029 12:44:01.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.634" endtime="20201029 12:44:01.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.633" endtime="20201029 12:44:01.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.631" endtime="20201029 12:44:01.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.943" endtime="20201029 12:44:01.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.943" endtime="20201029 12:44:01.655"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.665" endtime="20201029 12:44:01.684"></status>
</kw>
<msg timestamp="20201029 12:44:01.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.663" endtime="20201029 12:44:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.685" endtime="20201029 12:44:01.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.688" endtime="20201029 12:44:01.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.660" endtime="20201029 12:44:01.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.658" endtime="20201029 12:44:01.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.697" endtime="20201029 12:44:01.985"></status>
</kw>
<msg timestamp="20201029 12:44:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:01.696" endtime="20201029 12:44:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:01.989" endtime="20201029 12:44:01.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.998" endtime="20201029 12:44:02.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.693" endtime="20201029 12:44:02.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.691" endtime="20201029 12:44:02.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.005" level="INFO">${RESULT} = [{'diff': 9.235999999999273e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.708000000003102e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:02.002" endtime="20201029 12:44:02.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.010" level="INFO">${ACCURACY} = {'diff': [9.235999999999273e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.680999999999967e-06, 9.208000000000133e-06, 9.2219...</msg>
<status status="PASS" starttime="20201029 12:44:02.006" endtime="20201029 12:44:02.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.014" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.013" endtime="20201029 12:44:02.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.017" level="INFO">VALUE: [9.235999999999273e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.680999999999967e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.194000000000563e-06, 8.707999999999633e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.152999999997857e-06, 9.722000000000203e-06, 9.263999999998412e-06, 9.208000000000133e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.722000000002672e-06, 9.208999999999606e-06, 9.236000000002742e-06, 9.221999999999703e-06, 8.721999999999203e-06, 9.221999999999703e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.693999999996593e-06, 9.263999999998412e-06, 8.707999999999633e-06, 8.707999999999633e-06, 9.709000000000106e-06, 9.208000000000133e-06, 8.721999999999203e-06, 8.735999999998773e-06, 9.221999999999703e-06, 8.625000000001687e-06, 9.222999999999176e-06, 8.722999999998676e-06, 8.694999999999536e-06, 9.152000000001853e-06, 8.639000000001257e-06, 8.721999999999203e-06, 9.167000000000897e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.708000000003102e-06, 9.208000000000133e-06]</msg>
<status status="PASS" starttime="20201029 12:44:02.015" endtime="20201029 12:44:02.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.010" endtime="20201029 12:44:02.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.023" endtime="20201029 12:44:02.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.021" endtime="20201029 12:44:02.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.020" endtime="20201029 12:44:02.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.656" endtime="20201029 12:44:02.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.656" endtime="20201029 12:44:02.044"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.053" endtime="20201029 12:44:02.070"></status>
</kw>
<msg timestamp="20201029 12:44:02.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.051" endtime="20201029 12:44:02.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.072" endtime="20201029 12:44:02.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.074" endtime="20201029 12:44:02.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.049" endtime="20201029 12:44:02.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.046" endtime="20201029 12:44:02.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.084" endtime="20201029 12:44:02.369"></status>
</kw>
<msg timestamp="20201029 12:44:02.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.082" endtime="20201029 12:44:02.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.373" endtime="20201029 12:44:02.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.382" endtime="20201029 12:44:02.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.079" endtime="20201029 12:44:02.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.078" endtime="20201029 12:44:02.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.389" level="INFO">${RESULT} = [{'diff': 1.0222000000000703e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 9.694999999997067e-06}, {'diff': 9.763999999998912e-06}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0263999999999412e-05...</msg>
<status status="PASS" starttime="20201029 12:44:02.385" endtime="20201029 12:44:02.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.394" level="INFO">${ACCURACY} = {'diff': [1.0222000000000703e-05, 1.0222000000000703e-05, 9.694999999997067e-06, 9.763999999998912e-06, 1.0222000000000703e-05, 1.0263999999999412e-05, 9.709000000000106e-06, 1.0236000000000273e-05, 9...</msg>
<status status="PASS" starttime="20201029 12:44:02.390" endtime="20201029 12:44:02.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.399" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.398" endtime="20201029 12:44:02.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.401" level="INFO">VALUE: [1.0222000000000703e-05, 1.0222000000000703e-05, 9.694999999997067e-06, 9.763999999998912e-06, 1.0222000000000703e-05, 1.0263999999999412e-05, 9.709000000000106e-06, 1.0236000000000273e-05, 9.709000000000106e-06, 9.707999999997163e-06, 9.681000000000967e-06, 1.0222000000000703e-05, 1.0207999999997663e-05, 9.735999999999773e-06, 1.0194000000001563e-05, 1.0249999999999843e-05, 1.0263999999999412e-05, 9.722000000000203e-06, 9.722999999999676e-06, 9.680999999997497e-06, 9.709000000000106e-06, 1.0151999999999384e-05, 1.0207999999997663e-05, 1.0277999999998982e-05, 1.0209000000000606e-05, 9.722000000000203e-06, 9.681000000000967e-06, 9.707999999997163e-06, 1.0221999999997233e-05, 1.0193999999998093e-05, 9.735999999999773e-06, 1.0709000000001107e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0194999999997567e-05, 1.0222000000000703e-05, 1.0138999999999287e-05, 1.0194999999997567e-05, 1.0708000000001633e-05, 9.707999999997163e-06, 1.0721999999997733e-05, 1.0222000000000703e-05, 9.763999999998912e-06, 9.722000000000203e-06, 9.707999999997163e-06, 1.0221999999997233e-05, 9.722000000000203e-06, 1.0208000000001133e-05, 1.0708999999997637e-05, 9.708000000000633e-06]</msg>
<status status="PASS" starttime="20201029 12:44:02.400" endtime="20201029 12:44:02.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.395" endtime="20201029 12:44:02.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.406" endtime="20201029 12:44:02.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.405" endtime="20201029 12:44:02.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.404" endtime="20201029 12:44:02.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.045" endtime="20201029 12:44:02.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.044" endtime="20201029 12:44:02.427"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.436" endtime="20201029 12:44:02.452"></status>
</kw>
<msg timestamp="20201029 12:44:02.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.435" endtime="20201029 12:44:02.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.453" endtime="20201029 12:44:02.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.456" endtime="20201029 12:44:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.432" endtime="20201029 12:44:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.430" endtime="20201029 12:44:02.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.466" endtime="20201029 12:44:02.753"></status>
</kw>
<msg timestamp="20201029 12:44:02.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.464" endtime="20201029 12:44:02.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.757" endtime="20201029 12:44:02.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.766" endtime="20201029 12:44:02.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.461" endtime="20201029 12:44:02.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.459" endtime="20201029 12:44:02.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.773" level="INFO">${RESULT} = [{'diff': 1.1735999999998303e-05}, {'diff': 1.1694999999999067e-05}, {'diff': 1.1707999999999164e-05}, {'diff': 1.1221999999998233e-05}, {'diff': 1.1193999999999094e-05}, {'diff': 1.1207999999998663e-...</msg>
<status status="PASS" starttime="20201029 12:44:02.770" endtime="20201029 12:44:02.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.777" level="INFO">${ACCURACY} = {'diff': [1.1735999999998303e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1207999999998663e-05, 1.1222000000001703e-05, 1.1207999999998663e-05...</msg>
<status status="PASS" starttime="20201029 12:44:02.774" endtime="20201029 12:44:02.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.782" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.781" endtime="20201029 12:44:02.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.784" level="INFO">VALUE: [1.1735999999998303e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1207999999998663e-05, 1.1222000000001703e-05, 1.1207999999998663e-05, 1.0707999999998163e-05, 1.1250000000000843e-05, 1.1207999999998663e-05, 1.1195000000002037e-05, 1.0722000000001203e-05, 1.0708999999997637e-05, 1.0707999999998163e-05, 1.0707999999998163e-05, 1.0708999999997637e-05, 1.0722000000001203e-05, 1.1208000000002133e-05, 1.1207999999998663e-05, 1.1222000000001703e-05, 1.0708000000001633e-05, 1.1222999999997707e-05, 1.1194999999998567e-05, 1.1195000000002037e-05, 1.1221999999998233e-05, 1.0709000000001107e-05, 1.0721999999997733e-05, 1.1235999999997803e-05, 1.1263000000000939e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.0708000000001633e-05, 1.0694000000002063e-05, 1.0708999999997637e-05, 1.1208000000002133e-05, 1.1194999999998567e-05, 1.1208000000002133e-05, 1.1709000000002107e-05, 1.1236000000001273e-05, 1.0723000000000676e-05, 1.0680999999998497e-05, 1.1207999999998663e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.0695000000001537e-05, 1.0722000000001203e-05, 1.0680999999998497e-05, 1.0681000000001967e-05, 1.0707999999998163e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.783" endtime="20201029 12:44:02.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.778" endtime="20201029 12:44:02.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.790" endtime="20201029 12:44:02.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.788" endtime="20201029 12:44:02.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.787" endtime="20201029 12:44:02.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.428" endtime="20201029 12:44:02.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.428" endtime="20201029 12:44:02.810"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.820" endtime="20201029 12:44:02.841"></status>
</kw>
<msg timestamp="20201029 12:44:02.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.818" endtime="20201029 12:44:02.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.842" endtime="20201029 12:44:02.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.845" endtime="20201029 12:44:02.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.815" endtime="20201029 12:44:02.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.813" endtime="20201029 12:44:02.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.854" endtime="20201029 12:44:03.140"></status>
</kw>
<msg timestamp="20201029 12:44:03.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023370028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.853" endtime="20201029 12:44:03.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023370028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.145" endtime="20201029 12:44:03.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.153" endtime="20201029 12:44:03.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.850" endtime="20201029 12:44:03.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.848" endtime="20201029 12:44:03.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.160" level="INFO">${RESULT} = [{'diff': 1.2209000000002607e-05}, {'diff': 1.2221999999999233e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.2221999999999233e-05}, {'diff': 1.1709000000002107e-05}, {'diff': 1.2180999999999997e-...</msg>
<status status="PASS" starttime="20201029 12:44:03.157" endtime="20201029 12:44:03.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.164" level="INFO">${ACCURACY} = {'diff': [1.2209000000002607e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1709000000002107e-05, 1.2180999999999997e-05, 1.2208000000003133e-05, 1.2221999999999233e-05...</msg>
<status status="PASS" starttime="20201029 12:44:03.161" endtime="20201029 12:44:03.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.169" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.168" endtime="20201029 12:44:03.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.172" level="INFO">VALUE: [1.2209000000002607e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1709000000002107e-05, 1.2180999999999997e-05, 1.2208000000003133e-05, 1.2221999999999233e-05, 1.1792000000000052e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2221999999999233e-05, 1.227699999999804e-05, 1.2221999999999233e-05, 1.1694000000003063e-05, 1.1723000000001677e-05, 1.2194999999999567e-05, 1.1721999999998733e-05, 1.2180000000000524e-05, 1.1707999999999164e-05, 1.1763999999997443e-05, 1.2207999999999664e-05, 1.2722999999999207e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1680999999999497e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.2208999999999137e-05, 1.2249999999998373e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2223000000002177e-05, 1.2194999999999567e-05, 1.1778000000000483e-05, 1.1707999999999164e-05, 1.2235999999998803e-05, 1.2708000000000164e-05, 1.2194999999999567e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1736000000001773e-05, 1.1652000000000884e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.1653000000000358e-05, 1.1707999999999164e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.170" endtime="20201029 12:44:03.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.165" endtime="20201029 12:44:03.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.178" endtime="20201029 12:44:03.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.176" endtime="20201029 12:44:03.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.175" endtime="20201029 12:44:03.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.811" endtime="20201029 12:44:03.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.811" endtime="20201029 12:44:03.199"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.208" endtime="20201029 12:44:03.225"></status>
</kw>
<msg timestamp="20201029 12:44:03.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.206" endtime="20201029 12:44:03.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.226" endtime="20201029 12:44:03.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.229" endtime="20201029 12:44:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.203" endtime="20201029 12:44:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.201" endtime="20201029 12:44:03.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.238" endtime="20201029 12:44:03.526"></status>
</kw>
<msg timestamp="20201029 12:44:03.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.237" endtime="20201029 12:44:03.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.530" endtime="20201029 12:44:03.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.539" endtime="20201029 12:44:03.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.234" endtime="20201029 12:44:03.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.232" endtime="20201029 12:44:03.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.546" level="INFO">${RESULT} = [{'diff': 1.377699999999954e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.2722999999999207e-05}, {'diff': 1.3207999999997194e-05}, {'diff': 1.3193999999997624e-0...</msg>
<status status="PASS" starttime="20201029 12:44:03.543" endtime="20201029 12:44:03.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.552" level="INFO">${ACCURACY} = {'diff': [1.377699999999954e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.2722999999999207e-05, 1.3207999999997194e-05, 1.3193999999997624e-05, 1.3167000000001428e-05, 1.3222999999999707e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:03.548" endtime="20201029 12:44:03.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.557" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.555" endtime="20201029 12:44:03.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.559" level="INFO">VALUE: [1.377699999999954e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.2722999999999207e-05, 1.3207999999997194e-05, 1.3193999999997624e-05, 1.3167000000001428e-05, 1.3222999999999707e-05, 1.3194000000001094e-05, 1.3209000000000137e-05, 1.3165999999998484e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.3736000000000304e-05, 1.3236999999999277e-05, 1.3179999999998054e-05, 1.3193999999997624e-05, 1.2750000000002343e-05, 1.2708999999999637e-05, 1.3709000000000637e-05, 1.2778000000001483e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3138999999998818e-05, 1.3209000000000137e-05, 1.3235999999999803e-05, 1.2721999999999734e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.2652999999997888e-05, 1.3723000000000207e-05, 1.2694000000000594e-05, 1.3208000000000664e-05, 1.2750000000002343e-05, 1.3221999999996764e-05, 1.3222999999999707e-05, 1.2695000000000067e-05, 1.3193999999997624e-05, 1.2708000000000164e-05, 1.3152999999998388e-05, 1.2764000000001913e-05, 1.3208000000000664e-05, 1.2721999999999734e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.558" endtime="20201029 12:44:03.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.553" endtime="20201029 12:44:03.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.564" endtime="20201029 12:44:03.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.563" endtime="20201029 12:44:03.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.561" endtime="20201029 12:44:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.200" endtime="20201029 12:44:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.199" endtime="20201029 12:44:03.585"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.594" endtime="20201029 12:44:03.612"></status>
</kw>
<msg timestamp="20201029 12:44:03.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.592" endtime="20201029 12:44:03.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.614" endtime="20201029 12:44:03.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.617" endtime="20201029 12:44:03.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.590" endtime="20201029 12:44:03.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.588" endtime="20201029 12:44:03.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.626" endtime="20201029 12:44:03.914"></status>
</kw>
<msg timestamp="20201029 12:44:03.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.625" endtime="20201029 12:44:03.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.918" endtime="20201029 12:44:03.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.927" endtime="20201029 12:44:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.622" endtime="20201029 12:44:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.620" endtime="20201029 12:44:03.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.934" level="INFO">${RESULT} = [{'diff': 1.4223000000000707e-05}, {'diff': 1.4207999999998194e-05}, {'diff': 1.4194000000002094e-05}, {'diff': 1.4708000000002164e-05}, {'diff': 1.3666999999998458e-05}, {'diff': 1.4208999999997668e-...</msg>
<status status="PASS" starttime="20201029 12:44:03.930" endtime="20201029 12:44:03.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.938" level="INFO">${ACCURACY} = {'diff': [1.4223000000000707e-05, 1.4207999999998194e-05, 1.4194000000002094e-05, 1.4708000000002164e-05, 1.3666999999998458e-05, 1.4208999999997668e-05, 1.3723000000000207e-05, 1.4193999999998624e-05...</msg>
<status status="PASS" starttime="20201029 12:44:03.935" endtime="20201029 12:44:03.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.943" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.942" endtime="20201029 12:44:03.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.945" level="INFO">VALUE: [1.4223000000000707e-05, 1.4207999999998194e-05, 1.4194000000002094e-05, 1.4708000000002164e-05, 1.3666999999998458e-05, 1.4208999999997668e-05, 1.3723000000000207e-05, 1.4193999999998624e-05, 1.427700000000004e-05, 1.3694000000001594e-05, 1.3723000000000207e-05, 1.3709000000000637e-05, 1.4209000000001137e-05, 1.4250000000000373e-05, 1.3708000000001164e-05, 1.3709000000000637e-05, 1.4223000000000707e-05, 1.4236000000000804e-05, 1.4208999999997668e-05, 1.4194999999998098e-05, 1.4207999999998194e-05, 1.3749999999999873e-05, 1.4236000000000804e-05, 1.3708999999997168e-05, 1.3680999999998028e-05, 1.3707999999997694e-05, 1.4222000000001234e-05, 1.4207999999998194e-05, 1.3709000000000637e-05, 1.3694999999997598e-05, 1.3749999999999873e-05, 1.4222000000001234e-05, 1.3708000000001164e-05, 1.4166999999998958e-05, 1.4722000000001734e-05, 1.3709000000000637e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4138999999999818e-05, 1.4207999999998194e-05, 1.3709000000000637e-05, 1.4222000000001234e-05, 1.3721999999997264e-05, 1.3693999999998124e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.3721999999997264e-05, 1.3708000000001164e-05, 1.3708000000001164e-05, 1.4193999999998624e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.944" endtime="20201029 12:44:03.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.939" endtime="20201029 12:44:03.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.950" endtime="20201029 12:44:03.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.949" endtime="20201029 12:44:03.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.948" endtime="20201029 12:44:03.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.586" endtime="20201029 12:44:03.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.586" endtime="20201029 12:44:03.971"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.980" endtime="20201029 12:44:03.999"></status>
</kw>
<msg timestamp="20201029 12:44:03.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.979" endtime="20201029 12:44:04.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.001" endtime="20201029 12:44:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.003" endtime="20201029 12:44:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.976" endtime="20201029 12:44:04.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.974" endtime="20201029 12:44:04.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.013" endtime="20201029 12:44:04.299"></status>
</kw>
<msg timestamp="20201029 12:44:04.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02112725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021142444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:04.011" endtime="20201029 12:44:04.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02112725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021142444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:04.304" endtime="20201029 12:44:04.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.312" endtime="20201029 12:44:04.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.009" endtime="20201029 12:44:04.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.007" endtime="20201029 12:44:04.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.319" level="INFO">${RESULT} = [{'diff': 1.5193999999999624e-05}, {'diff': 1.5221999999998764e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.4723000000001207e-05}, {'diff': 1.4694999999998598e-05}, {'diff': 1.5235999999998334e-0...</msg>
<status status="PASS" starttime="20201029 12:44:04.316" endtime="20201029 12:44:04.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.323" level="INFO">${ACCURACY} = {'diff': [1.5193999999999624e-05, 1.5221999999998764e-05, 1.565300000000089e-05, 1.4723000000001207e-05, 1.4694999999998598e-05, 1.5235999999998334e-05, 1.5235999999998334e-05, 1.5221999999998764e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:04.320" endtime="20201029 12:44:04.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.329" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.327" endtime="20201029 12:44:04.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.331" level="INFO">VALUE: [1.5193999999999624e-05, 1.5221999999998764e-05, 1.565300000000089e-05, 1.4723000000001207e-05, 1.4694999999998598e-05, 1.5235999999998334e-05, 1.5235999999998334e-05, 1.5221999999998764e-05, 1.5207999999999194e-05, 1.5153000000000388e-05, 1.5235999999998334e-05, 1.4764000000000443e-05, 1.4693999999999124e-05, 1.5209000000002137e-05, 1.5207999999999194e-05, 1.5194999999999098e-05, 1.5207999999999194e-05, 1.4721999999998264e-05, 1.5221999999998764e-05, 1.5207999999999194e-05, 1.5222999999998238e-05, 1.4709000000001637e-05, 1.4721999999998264e-05, 1.5221999999998764e-05, 1.4708999999998168e-05, 1.4722000000001734e-05, 1.5209000000002137e-05, 1.5180000000000055e-05, 1.5222000000002234e-05, 1.4707999999998694e-05, 1.5139000000000818e-05, 1.4652999999999888e-05, 1.5194000000003094e-05, 1.4723000000001207e-05, 1.4708000000002164e-05, 1.4736000000001304e-05, 1.4709000000001637e-05, 1.5153000000000388e-05, 1.5222999999998238e-05, 1.5208999999998668e-05, 1.4778000000000013e-05, 1.5193999999999624e-05, 1.5209000000002137e-05, 1.5194999999999098e-05, 1.4707999999998694e-05, 1.4707999999998694e-05, 1.5209000000002137e-05, 1.4708000000002164e-05, 1.5236000000001804e-05, 1.5222999999998238e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.330" endtime="20201029 12:44:04.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.324" endtime="20201029 12:44:04.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.338" endtime="20201029 12:44:04.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.336" endtime="20201029 12:44:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.335" endtime="20201029 12:44:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.972" endtime="20201029 12:44:04.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.972" endtime="20201029 12:44:04.359"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.367" endtime="20201029 12:44:04.385"></status>
</kw>
<msg timestamp="20201029 12:44:04.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.366" endtime="20201029 12:44:04.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.387" endtime="20201029 12:44:04.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.389" endtime="20201029 12:44:04.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.363" endtime="20201029 12:44:04.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.361" endtime="20201029 12:44:04.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.399" endtime="20201029 12:44:04.685"></status>
</kw>
<msg timestamp="20201029 12:44:04.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:04.397" endtime="20201029 12:44:04.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:04.689" endtime="20201029 12:44:04.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.698" endtime="20201029 12:44:04.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.394" endtime="20201029 12:44:04.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.393" endtime="20201029 12:44:04.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.704" level="INFO">${RESULT} = [{'diff': 1.6221999999999764e-05}, {'diff': 1.6181000000000528e-05}, {'diff': 1.6208999999999668e-05}, {'diff': 1.6708000000000695e-05}, {'diff': 1.6221999999999764e-05}, {'diff': 1.6208999999999668e-...</msg>
<status status="PASS" starttime="20201029 12:44:04.701" endtime="20201029 12:44:04.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.709" level="INFO">${ACCURACY} = {'diff': [1.6221999999999764e-05, 1.6181000000000528e-05, 1.6208999999999668e-05, 1.6708000000000695e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.6195000000000098e-05...</msg>
<status status="PASS" starttime="20201029 12:44:04.705" endtime="20201029 12:44:04.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.714" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.713" endtime="20201029 12:44:04.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.716" level="INFO">VALUE: [1.6221999999999764e-05, 1.6181000000000528e-05, 1.6208999999999668e-05, 1.6708000000000695e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.6195000000000098e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.618099999999706e-05, 1.5708000000003164e-05, 1.6208000000000194e-05, 1.5721999999999264e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.6208000000000194e-05, 1.5749999999998404e-05, 1.6222999999999238e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.5736000000002304e-05, 1.615300000000139e-05, 1.5722999999998738e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.5721999999999264e-05, 1.5709000000002638e-05, 1.5708999999999168e-05, 1.6221999999999764e-05, 1.629100000000161e-05, 1.6222999999999238e-05, 1.5722000000002734e-05, 1.6195000000000098e-05, 1.5707999999999694e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.6208000000000194e-05, 1.5694999999999598e-05, 1.6237000000002277e-05, 1.6208000000000194e-05, 1.566700000000046e-05, 1.616700000000096e-05, 1.5777999999997544e-05, 1.6222999999999238e-05, 1.6208999999999668e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.715" endtime="20201029 12:44:04.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.710" endtime="20201029 12:44:04.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.722" endtime="20201029 12:44:04.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.720" endtime="20201029 12:44:04.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.719" endtime="20201029 12:44:04.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.360" endtime="20201029 12:44:04.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.359" endtime="20201029 12:44:04.742"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.751" endtime="20201029 12:44:04.767"></status>
</kw>
<msg timestamp="20201029 12:44:04.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.749" endtime="20201029 12:44:04.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.769" endtime="20201029 12:44:04.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.771" endtime="20201029 12:44:04.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.747" endtime="20201029 12:44:04.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.745" endtime="20201029 12:44:04.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.781" endtime="20201029 12:44:05.083"></status>
</kw>
<msg timestamp="20201029 12:44:05.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01968575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:04.779" endtime="20201029 12:44:05.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01968575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:05.088" endtime="20201029 12:44:05.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.096" endtime="20201029 12:44:05.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.776" endtime="20201029 12:44:05.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.775" endtime="20201029 12:44:05.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.103" level="INFO">${RESULT} = [{'diff': 1.7207999999997725e-05}, {'diff': 1.7207999999997725e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.7208000000001195e-05}, {'diff': 1.7208000000001195e-05}, {'diff': 1.7208000000001195e-...</msg>
<status status="PASS" starttime="20201029 12:44:05.099" endtime="20201029 12:44:05.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.107" level="INFO">${ACCURACY} = {'diff': [1.7207999999997725e-05, 1.7207999999997725e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7236000000000334e-05, 1.6735999999999834e-05...</msg>
<status status="PASS" starttime="20201029 12:44:05.104" endtime="20201029 12:44:05.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.111" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.110" endtime="20201029 12:44:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.114" level="INFO">VALUE: [1.7207999999997725e-05, 1.7207999999997725e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7236000000000334e-05, 1.6735999999999834e-05, 1.6708000000000695e-05, 1.6709000000000168e-05, 1.7222000000000764e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7721999999997795e-05, 1.7223000000000238e-05, 1.6709000000000168e-05, 1.6722000000000264e-05, 1.727699999999957e-05, 1.6722000000000264e-05, 1.7179999999998585e-05, 1.7236000000000334e-05, 1.7195000000001098e-05, 1.7208000000001195e-05, 1.6694000000001125e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.6722000000000264e-05, 1.7209000000000668e-05, 1.7222000000000764e-05, 1.6722000000000264e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.6722000000000264e-05, 1.718100000000153e-05, 1.7208000000001195e-05, 1.7680000000002555e-05, 1.7166000000002485e-05, 1.7223000000000238e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.6763999999998974e-05, 1.7208000000001195e-05, 1.6694000000001125e-05, 1.6694000000001125e-05, 1.668100000000103e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.6666000000001985e-05, 1.668100000000103e-05, 1.768100000000203e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.112" endtime="20201029 12:44:05.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.108" endtime="20201029 12:44:05.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.119" endtime="20201029 12:44:05.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.117" endtime="20201029 12:44:05.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.116" endtime="20201029 12:44:05.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.743" endtime="20201029 12:44:05.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.743" endtime="20201029 12:44:05.139"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.148" endtime="20201029 12:44:05.165"></status>
</kw>
<msg timestamp="20201029 12:44:05.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.147" endtime="20201029 12:44:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.167" endtime="20201029 12:44:05.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.169" endtime="20201029 12:44:05.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.144" endtime="20201029 12:44:05.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.142" endtime="20201029 12:44:05.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.179" endtime="20201029 12:44:05.465"></status>
</kw>
<msg timestamp="20201029 12:44:05.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020694222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.177" endtime="20201029 12:44:05.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020694222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.469" endtime="20201029 12:44:05.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.477" endtime="20201029 12:44:05.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.174" endtime="20201029 12:44:05.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.173" endtime="20201029 12:44:05.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.484" level="INFO">${RESULT} = [{'diff': 1.77089999999977e-05}, {'diff': 1.8194000000002625e-05}, {'diff': 1.7721999999997795e-05}, {'diff': 1.8222000000001765e-05}, {'diff': 1.7736000000000834e-05}, {'diff': 1.8207999999998725e-05...</msg>
<status status="PASS" starttime="20201029 12:44:05.481" endtime="20201029 12:44:05.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.488" level="INFO">${ACCURACY} = {'diff': [1.77089999999977e-05, 1.8194000000002625e-05, 1.7721999999997795e-05, 1.8222000000001765e-05, 1.7736000000000834e-05, 1.8207999999998725e-05, 1.7735999999997365e-05, 1.7723000000000738e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:05.485" endtime="20201029 12:44:05.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.493" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.492" endtime="20201029 12:44:05.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.495" level="INFO">VALUE: [1.77089999999977e-05, 1.8194000000002625e-05, 1.7721999999997795e-05, 1.8222000000001765e-05, 1.7736000000000834e-05, 1.8207999999998725e-05, 1.7735999999997365e-05, 1.7723000000000738e-05, 1.8250000000000904e-05, 1.7721999999997795e-05, 1.7750000000000404e-05, 1.7707999999998225e-05, 1.8223000000001238e-05, 1.8707999999999225e-05, 1.7737000000000308e-05, 1.8208000000002195e-05, 1.8236000000001334e-05, 1.7722000000001265e-05, 1.8735999999998365e-05, 1.822299999999777e-05, 1.8221999999998295e-05, 1.769499999999813e-05, 1.766699999999899e-05, 1.768100000000203e-05, 1.7693999999998655e-05, 1.8194000000002625e-05, 1.82089999999982e-05, 1.8222000000001765e-05, 1.7735999999997365e-05, 1.7722000000001265e-05, 1.7722000000001265e-05, 1.813900000000035e-05, 1.8223000000001238e-05, 1.8208000000002195e-05, 1.8221999999998295e-05, 1.7735999999997365e-05, 1.7722000000001265e-05, 1.7723000000000738e-05, 1.8223000000001238e-05, 1.7750000000000404e-05, 1.8208000000002195e-05, 1.812500000000078e-05, 1.818100000000253e-05, 1.7708000000001695e-05, 1.8222000000001765e-05, 1.7722000000001265e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.82089999999982e-05, 1.8207999999998725e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.494" endtime="20201029 12:44:05.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.489" endtime="20201029 12:44:05.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.501" endtime="20201029 12:44:05.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.500" endtime="20201029 12:44:05.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.498" endtime="20201029 12:44:05.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.140" endtime="20201029 12:44:05.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.140" endtime="20201029 12:44:05.522"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.530" endtime="20201029 12:44:05.548"></status>
</kw>
<msg timestamp="20201029 12:44:05.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.529" endtime="20201029 12:44:05.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.550" endtime="20201029 12:44:05.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.552" endtime="20201029 12:44:05.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.526" endtime="20201029 12:44:05.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.524" endtime="20201029 12:44:05.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.572" endtime="20201029 12:44:05.858"></status>
</kw>
<msg timestamp="20201029 12:44:05.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.570" endtime="20201029 12:44:05.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.862" endtime="20201029 12:44:05.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.870" endtime="20201029 12:44:05.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.568" endtime="20201029 12:44:05.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.566" endtime="20201029 12:44:05.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.877" level="INFO">${RESULT} = [{'diff': 1.8707999999999225e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.8778000000000544e-05}, {'diff': 1.8735999999998365e-05}, {'diff': 1.9221999999999295e-05}, {'diff': 1.8707999999999225e-0...</msg>
<status status="PASS" starttime="20201029 12:44:05.874" endtime="20201029 12:44:05.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.885" level="INFO">${ACCURACY} = {'diff': [1.8707999999999225e-05, 1.866699999999999e-05, 1.8778000000000544e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.8707999999999225e-05, 1.8722000000002265e-05, 1.9222000000002765e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:05.878" endtime="20201029 12:44:05.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.891" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.889" endtime="20201029 12:44:05.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.894" level="INFO">VALUE: [1.8707999999999225e-05, 1.866699999999999e-05, 1.8778000000000544e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.8707999999999225e-05, 1.8722000000002265e-05, 1.9222000000002765e-05, 1.922299999999877e-05, 1.9221999999999295e-05, 1.9264000000001474e-05, 1.9249999999998435e-05, 1.9194000000000155e-05, 1.8707999999999225e-05, 1.913899999999788e-05, 1.9235999999998865e-05, 1.9207999999999725e-05, 1.863899999999738e-05, 1.8735999999998365e-05, 1.8707999999999225e-05, 1.9236000000002335e-05, 1.92089999999992e-05, 1.869499999999913e-05, 1.8736000000001835e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.872299999999827e-05, 1.92089999999992e-05, 1.87089999999987e-05, 1.927700000000157e-05, 1.9221999999999295e-05, 1.9208000000003195e-05, 1.87089999999987e-05, 1.870900000000217e-05, 1.92089999999992e-05, 1.9194000000000155e-05, 1.869499999999913e-05, 1.9222000000002765e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.9235999999998865e-05, 1.866699999999999e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.8694000000003125e-05, 1.912499999999831e-05, 1.8708000000002695e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.892" endtime="20201029 12:44:05.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.886" endtime="20201029 12:44:05.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.901" endtime="20201029 12:44:05.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.899" endtime="20201029 12:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.897" endtime="20201029 12:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.523" endtime="20201029 12:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.522" endtime="20201029 12:44:05.922"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.931" endtime="20201029 12:44:05.947"></status>
</kw>
<msg timestamp="20201029 12:44:05.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.930" endtime="20201029 12:44:05.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.949" endtime="20201029 12:44:05.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.951" endtime="20201029 12:44:05.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.927" endtime="20201029 12:44:05.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.925" endtime="20201029 12:44:05.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.960" endtime="20201029 12:44:06.247"></status>
</kw>
<msg timestamp="20201029 12:44:06.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.959" endtime="20201029 12:44:06.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.251" endtime="20201029 12:44:06.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.259" endtime="20201029 12:44:06.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.956" endtime="20201029 12:44:06.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.954" endtime="20201029 12:44:06.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.266" level="INFO">${RESULT} = [{'diff': 1.9735999999999365e-05}, {'diff': 2.020899999999673e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 2.0208000000000725e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 1.9721999999999795e-0...</msg>
<status status="PASS" starttime="20201029 12:44:06.263" endtime="20201029 12:44:06.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.270" level="INFO">${ACCURACY} = {'diff': [1.9735999999999365e-05, 2.020899999999673e-05, 1.9735999999999365e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.965299999999795e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:06.267" endtime="20201029 12:44:06.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.275" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.273" endtime="20201029 12:44:06.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.277" level="INFO">VALUE: [1.9735999999999365e-05, 2.020899999999673e-05, 1.9735999999999365e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.965299999999795e-05, 2.0221999999996826e-05, 1.966699999999752e-05, 2.0208000000000725e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 2.02090000000002e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0235999999999865e-05, 1.9708000000000225e-05, 1.9680000000001086e-05, 1.9763999999998505e-05, 2.069500000000113e-05, 1.9651999999998476e-05, 1.9708000000000225e-05, 2.019500000000063e-05, 1.9693999999997186e-05, 1.9764000000001974e-05, 2.022299999999977e-05, 2.018100000000106e-05, 2.013899999999888e-05, 2.02090000000002e-05, 2.015300000000192e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0707999999997756e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.969500000000013e-05, 1.9708000000000225e-05, 2.0708000000001225e-05, 1.9721999999999795e-05, 2.0194000000001155e-05, 2.0250000000002905e-05, 1.9749999999998935e-05, 2.0193999999997686e-05, 1.9708000000000225e-05, 2.018100000000106e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.276" endtime="20201029 12:44:06.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.271" endtime="20201029 12:44:06.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.282" endtime="20201029 12:44:06.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.281" endtime="20201029 12:44:06.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.279" endtime="20201029 12:44:06.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.923" endtime="20201029 12:44:06.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.923" endtime="20201029 12:44:06.303"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.319" endtime="20201029 12:44:06.348"></status>
</kw>
<msg timestamp="20201029 12:44:06.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.316" endtime="20201029 12:44:06.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.351" endtime="20201029 12:44:06.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.356" endtime="20201029 12:44:06.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.310" endtime="20201029 12:44:06.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.306" endtime="20201029 12:44:06.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.375" endtime="20201029 12:44:06.666"></status>
</kw>
<msg timestamp="20201029 12:44:06.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034442889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.372" endtime="20201029 12:44:06.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034442889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.670" endtime="20201029 12:44:06.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.679" endtime="20201029 12:44:06.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.367" endtime="20201029 12:44:06.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.363" endtime="20201029 12:44:06.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.686" level="INFO">${RESULT} = [{'diff': 2.0708000000001225e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 2.069500000000113e-05}, {'diff': 2.0736000000000365e-05}, {'diff': 2.069499999999419e-05}, {'diff': 2.0708000000001225e-05...</msg>
<status status="PASS" starttime="20201029 12:44:06.683" endtime="20201029 12:44:06.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.690" level="INFO">${ACCURACY} = {'diff': [2.0708000000001225e-05, 2.0708000000001225e-05, 2.069500000000113e-05, 2.0736000000000365e-05, 2.069499999999419e-05, 2.0708000000001225e-05, 2.072300000000027e-05, 2.066700000000199e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:06.687" endtime="20201029 12:44:06.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.695" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.694" endtime="20201029 12:44:06.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.698" level="INFO">VALUE: [2.0708000000001225e-05, 2.0708000000001225e-05, 2.069500000000113e-05, 2.0736000000000365e-05, 2.069499999999419e-05, 2.0708000000001225e-05, 2.072300000000027e-05, 2.066700000000199e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.072300000000027e-05, 2.0777999999999075e-05, 2.1250000000000435e-05, 2.1180000000002586e-05, 2.1722000000001795e-05, 2.0708000000001225e-05, 2.1222000000001295e-05, 2.12090000000012e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.119499999999469e-05, 2.1222000000001295e-05, 2.1222000000001295e-05, 2.1236000000000865e-05, 2.1222000000001295e-05, 2.0722000000000795e-05, 2.1236000000000865e-05, 2.1193999999995217e-05, 2.1208000000001725e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0736000000000365e-05, 2.122300000000077e-05, 2.0708000000001225e-05, 2.0651999999996007e-05, 2.1236000000000865e-05, 2.1222000000001295e-05, 2.07090000000007e-05, 2.1193999999995217e-05, 2.115300000000292e-05, 2.066700000000199e-05, 2.0722000000000795e-05, 2.1208000000001725e-05, 2.12090000000012e-05, 2.07090000000007e-05, 2.1194000000002156e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.696" endtime="20201029 12:44:06.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.691" endtime="20201029 12:44:06.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.704" endtime="20201029 12:44:06.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.702" endtime="20201029 12:44:06.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.701" endtime="20201029 12:44:06.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.304" endtime="20201029 12:44:06.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.303" endtime="20201029 12:44:06.725"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.734" endtime="20201029 12:44:06.749"></status>
</kw>
<msg timestamp="20201029 12:44:06.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.732" endtime="20201029 12:44:06.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.751" endtime="20201029 12:44:06.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.753" endtime="20201029 12:44:06.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.729" endtime="20201029 12:44:06.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.727" endtime="20201029 12:44:06.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.763" endtime="20201029 12:44:07.048"></status>
</kw>
<msg timestamp="20201029 12:44:07.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.761" endtime="20201029 12:44:07.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.052" endtime="20201029 12:44:07.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.061" endtime="20201029 12:44:07.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.759" endtime="20201029 12:44:07.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.757" endtime="20201029 12:44:07.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.068" level="INFO">${RESULT} = [{'diff': 2.2222000000002295e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.219499999999916e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.2680000000000616e-05}, {'diff': 2.266700000000052e-05...</msg>
<status status="PASS" starttime="20201029 12:44:07.064" endtime="20201029 12:44:07.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.073" level="INFO">${ACCURACY} = {'diff': [2.2222000000002295e-05, 2.2207999999999256e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.1651999999997007e-05, 2.170899999999823e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:07.069" endtime="20201029 12:44:07.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.078" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.077" endtime="20201029 12:44:07.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.080" level="INFO">VALUE: [2.2222000000002295e-05, 2.2207999999999256e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.1651999999997007e-05, 2.170899999999823e-05, 2.220899999999873e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.22770000000011e-05, 2.2207999999999256e-05, 2.1778000000000075e-05, 2.1736000000001365e-05, 2.172300000000127e-05, 2.216700000000002e-05, 2.270899999999923e-05, 2.1736000000001365e-05, 2.170899999999823e-05, 2.165299999999995e-05, 2.169500000000213e-05, 2.1707999999998756e-05, 2.220899999999873e-05, 2.2722000000002796e-05, 2.2221999999998826e-05, 2.2222000000002295e-05, 2.1707999999998756e-05, 2.1750000000000935e-05, 2.2721999999999326e-05, 2.1694000000002656e-05, 2.2721999999999326e-05, 2.1707999999998756e-05, 2.1721999999998326e-05, 2.1707999999998756e-05, 2.2207999999999256e-05, 2.2222000000002295e-05, 2.1707999999998756e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.2721999999999326e-05, 2.219500000000263e-05, 2.1707999999998756e-05, 2.165299999999995e-05, 2.219500000000263e-05, 2.172300000000127e-05, 2.220899999999873e-05, 2.1721999999998326e-05, 2.2207999999999256e-05, 2.2222000000002295e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.079" endtime="20201029 12:44:07.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.074" endtime="20201029 12:44:07.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.086" endtime="20201029 12:44:07.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.084" endtime="20201029 12:44:07.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.083" endtime="20201029 12:44:07.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.726" endtime="20201029 12:44:07.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.725" endtime="20201029 12:44:07.106"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.116" endtime="20201029 12:44:07.139"></status>
</kw>
<msg timestamp="20201029 12:44:07.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.114" endtime="20201029 12:44:07.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.142" endtime="20201029 12:44:07.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.148" endtime="20201029 12:44:07.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.111" endtime="20201029 12:44:07.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.109" endtime="20201029 12:44:07.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.168" endtime="20201029 12:44:07.466"></status>
</kw>
<msg timestamp="20201029 12:44:07.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02201175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:07.164" endtime="20201029 12:44:07.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02201175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:07.471" endtime="20201029 12:44:07.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.483" endtime="20201029 12:44:07.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.158" endtime="20201029 12:44:07.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.155" endtime="20201029 12:44:07.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.493" level="INFO">${RESULT} = [{'diff': 2.365299999999848e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3166000000001546e-05}, {'diff': 2.270899999999923e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.268100000000009e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:07.489" endtime="20201029 12:44:07.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.497" level="INFO">${ACCURACY} = {'diff': [2.365299999999848e-05, 2.3221999999999826e-05, 2.3166000000001546e-05, 2.270899999999923e-05, 2.3235999999999396e-05, 2.268100000000009e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:07.494" endtime="20201029 12:44:07.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.502" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.501" endtime="20201029 12:44:07.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.505" level="INFO">VALUE: [2.365299999999848e-05, 2.3221999999999826e-05, 2.3166000000001546e-05, 2.270899999999923e-05, 2.3235999999999396e-05, 2.268100000000009e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.320899999999973e-05, 2.3207999999996787e-05, 2.27090000000027e-05, 2.2721999999999326e-05, 2.3722000000000326e-05, 2.3291999999997676e-05, 2.320899999999973e-05, 2.32229999999993e-05, 2.265300000000095e-05, 2.2707999999999756e-05, 2.3721999999996857e-05, 2.370900000000023e-05, 2.320899999999973e-05, 2.27229999999988e-05, 2.27090000000027e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.3735999999999896e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.3194000000000686e-05, 2.2694000000000186e-05, 2.27229999999988e-05, 2.320899999999973e-05, 2.3235999999999396e-05, 2.318100000000059e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.3193999999997217e-05, 2.273699999999837e-05, 2.27090000000027e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.3221999999999826e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.503" endtime="20201029 12:44:07.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.498" endtime="20201029 12:44:07.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.510" endtime="20201029 12:44:07.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.508" endtime="20201029 12:44:07.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.507" endtime="20201029 12:44:07.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.107" endtime="20201029 12:44:07.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.107" endtime="20201029 12:44:07.531"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.540" endtime="20201029 12:44:07.558"></status>
</kw>
<msg timestamp="20201029 12:44:07.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.538" endtime="20201029 12:44:07.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.560" endtime="20201029 12:44:07.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.563" endtime="20201029 12:44:07.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.535" endtime="20201029 12:44:07.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.533" endtime="20201029 12:44:07.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.572" endtime="20201029 12:44:07.859"></status>
</kw>
<msg timestamp="20201029 12:44:07.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021064319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.570" endtime="20201029 12:44:07.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021064319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.863" endtime="20201029 12:44:07.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.872" endtime="20201029 12:44:07.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.568" endtime="20201029 12:44:07.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.566" endtime="20201029 12:44:07.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.879" level="INFO">${RESULT} = [{'diff': 2.3722000000000326e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.419500000000116e-05}, {'diff': 2.3722000000000326e-05}, {'diff': 2.3708000000000756e-05}, {'diff': 2.4249999999999966e-0...</msg>
<status status="PASS" starttime="20201029 12:44:07.876" endtime="20201029 12:44:07.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.883" level="INFO">${ACCURACY} = {'diff': [2.3722000000000326e-05, 2.3735999999999896e-05, 2.419500000000116e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.4249999999999966e-05, 2.370900000000023e-05, 2.3763999999999036e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:07.880" endtime="20201029 12:44:07.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.888" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.887" endtime="20201029 12:44:07.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.891" level="INFO">VALUE: [2.3722000000000326e-05, 2.3735999999999896e-05, 2.419500000000116e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.4249999999999966e-05, 2.370900000000023e-05, 2.3763999999999036e-05, 2.4221999999997357e-05, 2.3776999999999132e-05, 2.3749999999999466e-05, 2.4208000000001256e-05, 2.4207999999997787e-05, 2.4208000000001256e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.4208000000001256e-05, 2.4721999999997857e-05, 2.4263999999999536e-05, 2.4207999999997787e-05, 2.420900000000073e-05, 2.4222000000000826e-05, 2.4207999999997787e-05, 2.420899999999726e-05, 2.37229999999998e-05, 2.372300000000327e-05, 2.4236000000000396e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.4249999999999966e-05, 2.4194000000001686e-05, 2.420900000000073e-05, 2.4207999999997787e-05, 2.4236000000000396e-05, 2.3749999999999466e-05, 2.3722000000000326e-05, 2.4236000000000396e-05, 2.4236000000000396e-05, 2.4263999999999536e-05, 2.3708000000000756e-05, 2.3708000000000756e-05, 2.3722000000000326e-05, 2.420900000000073e-05, 2.4193999999998217e-05, 2.42230000000003e-05, 2.415299999999898e-05, 2.3721999999996857e-05, 2.4207999999997787e-05, 2.4208000000001256e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.889" endtime="20201029 12:44:07.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.884" endtime="20201029 12:44:07.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.897" endtime="20201029 12:44:07.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.895" endtime="20201029 12:44:07.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.894" endtime="20201029 12:44:07.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.532" endtime="20201029 12:44:07.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.531" endtime="20201029 12:44:07.918"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.927" endtime="20201029 12:44:07.945"></status>
</kw>
<msg timestamp="20201029 12:44:07.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.925" endtime="20201029 12:44:07.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.946" endtime="20201029 12:44:07.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.949" endtime="20201029 12:44:07.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.922" endtime="20201029 12:44:07.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.920" endtime="20201029 12:44:07.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.958" endtime="20201029 12:44:08.246"></status>
</kw>
<msg timestamp="20201029 12:44:08.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.957" endtime="20201029 12:44:08.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.251" endtime="20201029 12:44:08.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.259" endtime="20201029 12:44:08.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.954" endtime="20201029 12:44:08.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.952" endtime="20201029 12:44:08.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.266" level="INFO">${RESULT} = [{'diff': 2.5236000000001396e-05}, {'diff': 2.4790999999999702e-05}, {'diff': 2.472299999999733e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.52230000000013e-05}, {'diff': 2.5152000000000507e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:08.263" endtime="20201029 12:44:08.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.271" level="INFO">${ACCURACY} = {'diff': [2.5236000000001396e-05, 2.4790999999999702e-05, 2.472299999999733e-05, 2.518099999999912e-05, 2.52230000000013e-05, 2.5152000000000507e-05, 2.4722000000001326e-05, 2.5207999999998787e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:08.267" endtime="20201029 12:44:08.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.276" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.275" endtime="20201029 12:44:08.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.279" level="INFO">VALUE: [2.5236000000001396e-05, 2.4790999999999702e-05, 2.472299999999733e-05, 2.518099999999912e-05, 2.52230000000013e-05, 2.5152000000000507e-05, 2.4722000000001326e-05, 2.5207999999998787e-05, 2.470900000000123e-05, 2.470900000000123e-05, 2.522299999999783e-05, 2.5222000000001826e-05, 2.5222000000001826e-05, 2.5221999999998357e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.468100000000209e-05, 2.4764000000000036e-05, 2.465300000000295e-05, 2.470899999999776e-05, 2.5236000000001396e-05, 2.470900000000123e-05, 2.470900000000123e-05, 2.469500000000166e-05, 2.5221999999998357e-05, 2.5235999999997927e-05, 2.4764000000000036e-05, 2.518100000000259e-05, 2.5208000000002256e-05, 2.470899999999776e-05, 2.5235999999997927e-05, 2.4750000000000466e-05, 2.4722000000001326e-05, 2.4750000000000466e-05, 2.5221999999998357e-05, 2.520899999999826e-05, 2.4707999999998287e-05, 2.5208000000002256e-05, 2.4722000000001326e-05, 2.4790999999999702e-05, 2.5236000000001396e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.4707999999998287e-05, 2.4722000000001326e-05, 2.470899999999776e-05, 2.569499999999919e-05, 2.470899999999776e-05, 2.519499999999869e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.277" endtime="20201029 12:44:08.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.272" endtime="20201029 12:44:08.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.284" endtime="20201029 12:44:08.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.282" endtime="20201029 12:44:08.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.281" endtime="20201029 12:44:08.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.919" endtime="20201029 12:44:08.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.918" endtime="20201029 12:44:08.305"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.314" endtime="20201029 12:44:08.331"></status>
</kw>
<msg timestamp="20201029 12:44:08.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.312" endtime="20201029 12:44:08.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.333" endtime="20201029 12:44:08.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.336" endtime="20201029 12:44:08.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.310" endtime="20201029 12:44:08.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.307" endtime="20201029 12:44:08.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.345" endtime="20201029 12:44:08.632"></status>
</kw>
<msg timestamp="20201029 12:44:08.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020149028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02017525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.343" endtime="20201029 12:44:08.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020149028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02017525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.637" endtime="20201029 12:44:08.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.646" endtime="20201029 12:44:08.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.341" endtime="20201029 12:44:08.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.339" endtime="20201029 12:44:08.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.652" level="INFO">${RESULT} = [{'diff': 2.6221999999999357e-05}, {'diff': 2.5680000000000147e-05}, {'diff': 2.5721999999998857e-05}, {'diff': 2.6207999999999787e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.6221999999999357e-...</msg>
<status status="PASS" starttime="20201029 12:44:08.649" endtime="20201029 12:44:08.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.657" level="INFO">${ACCURACY} = {'diff': [2.6221999999999357e-05, 2.5680000000000147e-05, 2.5721999999998857e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6221999999999357e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:08.653" endtime="20201029 12:44:08.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.661" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.660" endtime="20201029 12:44:08.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.664" level="INFO">VALUE: [2.6221999999999357e-05, 2.5680000000000147e-05, 2.5721999999998857e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.57230000000018e-05, 2.6708000000000287e-05, 2.619499999999969e-05, 2.563899999999744e-05, 2.6221999999999357e-05, 2.6735999999999427e-05, 2.5708000000002756e-05, 2.57230000000018e-05, 2.6207999999999787e-05, 2.5749999999997997e-05, 2.5721999999998857e-05, 2.570899999999876e-05, 2.570899999999876e-05, 2.623700000000187e-05, 2.5707999999999287e-05, 2.6194000000000217e-05, 2.5708000000002756e-05, 2.620899999999926e-05, 2.5722000000002326e-05, 2.6207999999999787e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.5735999999998427e-05, 2.5693999999999717e-05, 2.5750000000001466e-05, 2.569499999999919e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.5708000000002756e-05, 2.6193999999996748e-05, 2.5707999999999287e-05, 2.6194000000000217e-05, 2.62230000000023e-05, 2.5777999999997137e-05, 2.5708000000002756e-05, 2.6222000000002826e-05, 2.5693999999999717e-05, 2.5721999999998857e-05, 2.619499999999969e-05, 2.672299999999933e-05, 2.620899999999926e-05, 2.616700000000055e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.662" endtime="20201029 12:44:08.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.658" endtime="20201029 12:44:08.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.669" endtime="20201029 12:44:08.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.668" endtime="20201029 12:44:08.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.666" endtime="20201029 12:44:08.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.306" endtime="20201029 12:44:08.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.305" endtime="20201029 12:44:08.690"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.699" endtime="20201029 12:44:08.718"></status>
</kw>
<msg timestamp="20201029 12:44:08.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.698" endtime="20201029 12:44:08.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.720" endtime="20201029 12:44:08.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.722" endtime="20201029 12:44:08.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.695" endtime="20201029 12:44:08.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.693" endtime="20201029 12:44:08.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.732" endtime="20201029 12:44:09.019"></status>
</kw>
<msg timestamp="20201029 12:44:09.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.731" endtime="20201029 12:44:09.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.024" endtime="20201029 12:44:09.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.033" endtime="20201029 12:44:09.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.728" endtime="20201029 12:44:09.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.726" endtime="20201029 12:44:09.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.039" level="INFO">${RESULT} = [{'diff': 2.7207999999997318e-05}, {'diff': 2.722299999999983e-05}, {'diff': 2.7235999999999927e-05}, {'diff': 2.7708000000001287e-05}, {'diff': 2.6665999999998108e-05}, {'diff': 2.6721999999999857e-0...</msg>
<status status="PASS" starttime="20201029 12:44:09.036" endtime="20201029 12:44:09.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.044" level="INFO">${ACCURACY} = {'diff': [2.7207999999997318e-05, 2.722299999999983e-05, 2.7235999999999927e-05, 2.7708000000001287e-05, 2.6665999999998108e-05, 2.6721999999999857e-05, 2.772300000000033e-05, 2.720900000000026e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:09.041" endtime="20201029 12:44:09.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.048" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.047" endtime="20201029 12:44:09.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.051" level="INFO">VALUE: [2.7207999999997318e-05, 2.722299999999983e-05, 2.7235999999999927e-05, 2.7708000000001287e-05, 2.6665999999998108e-05, 2.6721999999999857e-05, 2.772300000000033e-05, 2.720900000000026e-05, 2.770900000000076e-05, 2.7235999999999927e-05, 2.6721999999999857e-05, 2.7263999999999067e-05, 2.6735999999999427e-05, 2.6721999999999857e-05, 2.7208000000000787e-05, 2.7264000000002536e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.6763999999998567e-05, 2.6735999999999427e-05, 2.7708000000001287e-05, 2.7207999999997318e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.7236000000003396e-05, 2.7208000000000787e-05, 2.720900000000026e-05, 2.7777999999999137e-05, 2.670899999999976e-05, 2.7222000000000357e-05, 2.7208000000000787e-05, 2.766699999999858e-05, 2.670899999999976e-05, 2.7235999999999927e-05, 2.6790999999998233e-05, 2.7222000000000357e-05, 2.7207999999997318e-05, 2.670899999999976e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.7208000000000787e-05, 2.7138999999998942e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.670899999999976e-05, 2.7207999999997318e-05, 2.7207999999997318e-05, 2.723700000000287e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.049" endtime="20201029 12:44:09.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.045" endtime="20201029 12:44:09.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.057" endtime="20201029 12:44:09.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.056" endtime="20201029 12:44:09.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.054" endtime="20201029 12:44:09.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.691" endtime="20201029 12:44:09.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.690" endtime="20201029 12:44:09.078"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.087" endtime="20201029 12:44:09.104"></status>
</kw>
<msg timestamp="20201029 12:44:09.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.086" endtime="20201029 12:44:09.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.105" endtime="20201029 12:44:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.108" endtime="20201029 12:44:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.083" endtime="20201029 12:44:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.081" endtime="20201029 12:44:09.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.117" endtime="20201029 12:44:09.405"></status>
</kw>
<msg timestamp="20201029 12:44:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.116" endtime="20201029 12:44:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.410" endtime="20201029 12:44:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.418" endtime="20201029 12:44:09.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.113" endtime="20201029 12:44:09.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.111" endtime="20201029 12:44:09.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.425" level="INFO">${RESULT} = [{'diff': 2.7722000000000857e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.8207999999998318e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.772300000000033e-0...</msg>
<status status="PASS" starttime="20201029 12:44:09.422" endtime="20201029 12:44:09.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.430" level="INFO">${ACCURACY} = {'diff': [2.7722000000000857e-05, 2.8152999999999512e-05, 2.8207999999998318e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.772300000000033e-05, 2.822300000000083e-05, 2.7722000000000857e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:09.426" endtime="20201029 12:44:09.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.435" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.434" endtime="20201029 12:44:09.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.438" level="INFO">VALUE: [2.7722000000000857e-05, 2.8152999999999512e-05, 2.8207999999998318e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.772300000000033e-05, 2.822300000000083e-05, 2.7722000000000857e-05, 2.7778000000002606e-05, 2.8221999999997888e-05, 2.7707999999997818e-05, 2.770899999999729e-05, 2.820900000000126e-05, 2.8222000000001357e-05, 2.8707999999998818e-05, 2.7708000000001287e-05, 2.820899999999779e-05, 2.8208000000001787e-05, 2.869500000000219e-05, 2.869500000000219e-05, 2.8236000000000927e-05, 2.770900000000076e-05, 2.8264000000000067e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8152999999999512e-05, 2.769499999999772e-05, 2.7736000000000427e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.8207999999998318e-05, 2.8721999999998388e-05, 2.822300000000083e-05, 2.8222000000001357e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.8749999999997528e-05, 2.8208000000001787e-05, 2.7708000000001287e-05, 2.8736000000001427e-05, 2.8222000000001357e-05, 2.7638999999999442e-05, 2.818099999999865e-05, 2.7694000000001717e-05, 2.8235999999997458e-05, 2.77369999999999e-05, 2.820900000000126e-05, 2.7693999999998248e-05, 2.8707999999998818e-05, 2.770899999999729e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.436" endtime="20201029 12:44:09.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.431" endtime="20201029 12:44:09.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.443" endtime="20201029 12:44:09.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.441" endtime="20201029 12:44:09.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.440" endtime="20201029 12:44:09.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.079" endtime="20201029 12:44:09.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.078" endtime="20201029 12:44:09.464"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.473" endtime="20201029 12:44:09.490"></status>
</kw>
<msg timestamp="20201029 12:44:09.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.471" endtime="20201029 12:44:09.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.491" endtime="20201029 12:44:09.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.494" endtime="20201029 12:44:09.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.468" endtime="20201029 12:44:09.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.466" endtime="20201029 12:44:09.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.503" endtime="20201029 12:44:09.791"></status>
</kw>
<msg timestamp="20201029 12:44:09.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.502" endtime="20201029 12:44:09.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.796" endtime="20201029 12:44:09.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.804" endtime="20201029 12:44:09.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.499" endtime="20201029 12:44:09.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.497" endtime="20201029 12:44:09.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.811" level="INFO">${RESULT} = [{'diff': 2.8722000000001857e-05}, {'diff': 2.869499999999872e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.9222000000002357e-05}, {'diff': 2.9235999999998458e-05}, {'diff': 2.9694000000000248e-0...</msg>
<status status="PASS" starttime="20201029 12:44:09.808" endtime="20201029 12:44:09.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.815" level="INFO">${ACCURACY} = {'diff': [2.8722000000001857e-05, 2.869499999999872e-05, 2.8736000000001427e-05, 2.9222000000002357e-05, 2.9235999999998458e-05, 2.9694000000000248e-05, 2.92370000000014e-05, 2.869499999999872e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:09.812" endtime="20201029 12:44:09.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.820" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.819" endtime="20201029 12:44:09.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.822" level="INFO">VALUE: [2.8722000000001857e-05, 2.869499999999872e-05, 2.8736000000001427e-05, 2.9222000000002357e-05, 2.9235999999998458e-05, 2.9694000000000248e-05, 2.92370000000014e-05, 2.869499999999872e-05, 2.9221999999998888e-05, 2.9221999999998888e-05, 2.8721999999998388e-05, 2.9277999999997167e-05, 2.872300000000133e-05, 2.9235999999998458e-05, 2.8707999999998818e-05, 2.8721999999998388e-05, 2.9776999999998194e-05, 2.8721999999998388e-05, 2.922300000000183e-05, 2.920900000000226e-05, 2.9222000000002357e-05, 2.9167000000000082e-05, 2.9207999999999318e-05, 2.8735999999997958e-05, 2.922299999999836e-05, 2.8721999999998388e-05, 2.9167000000000082e-05, 2.920899999999879e-05, 2.8721999999998388e-05, 2.868099999999915e-05, 2.8693999999999248e-05, 2.9194000000003217e-05, 2.9221999999998888e-05, 2.869499999999872e-05, 2.9249999999998028e-05, 2.8721999999998388e-05, 2.9235999999998458e-05, 2.920900000000226e-05, 2.9207999999999318e-05, 2.870899999999829e-05, 2.870899999999829e-05, 2.8722000000001857e-05, 2.9207999999999318e-05, 2.8707999999998818e-05, 2.9221999999998888e-05, 2.9305000000000303e-05, 2.922300000000183e-05, 2.866700000000305e-05, 2.8763000000001093e-05, 2.9180000000000178e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.821" endtime="20201029 12:44:09.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.816" endtime="20201029 12:44:09.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.828" endtime="20201029 12:44:09.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.826" endtime="20201029 12:44:09.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.825" endtime="20201029 12:44:09.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.465" endtime="20201029 12:44:09.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.464" endtime="20201029 12:44:09.848"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.858" endtime="20201029 12:44:09.879"></status>
</kw>
<msg timestamp="20201029 12:44:09.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.856" endtime="20201029 12:44:09.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.880" endtime="20201029 12:44:09.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.883" endtime="20201029 12:44:09.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.853" endtime="20201029 12:44:09.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.851" endtime="20201029 12:44:09.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.893" endtime="20201029 12:44:10.179"></status>
</kw>
<msg timestamp="20201029 12:44:10.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.891" endtime="20201029 12:44:10.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.184" endtime="20201029 12:44:10.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.192" endtime="20201029 12:44:10.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.889" endtime="20201029 12:44:10.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.887" endtime="20201029 12:44:10.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.199" level="INFO">${RESULT} = [{'diff': 2.9763000000002093e-05}, {'diff': 2.9707999999999818e-05}, {'diff': 3.0221999999999888e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 2.9707999999999818e-05}, {'diff': 3.0153000000001512e-...</msg>
<status status="PASS" starttime="20201029 12:44:10.196" endtime="20201029 12:44:10.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.204" level="INFO">${ACCURACY} = {'diff': [2.9763000000002093e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 3.0181000000000652e-05, 2.9707999999999818e-05, 3.0153000000001512e-05, 2.9707999999999818e-05, 2.9694000000000248e-05...</msg>
<status status="PASS" starttime="20201029 12:44:10.200" endtime="20201029 12:44:10.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.208" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.207" endtime="20201029 12:44:10.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.211" level="INFO">VALUE: [2.9763000000002093e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 3.0181000000000652e-05, 2.9707999999999818e-05, 3.0153000000001512e-05, 2.9707999999999818e-05, 2.9694000000000248e-05, 2.970900000000276e-05, 3.0221999999999888e-05, 3.0153000000001512e-05, 2.969500000000319e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 3.0235999999999458e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 3.0152999999998042e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 2.9763999999998098e-05, 2.970900000000276e-05, 3.020899999999979e-05, 2.969499999999972e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.069399999999778e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9721999999999388e-05, 3.069499999999725e-05, 3.0194000000000748e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.022299999999936e-05, 2.970899999999929e-05, 2.9722000000002857e-05, 3.070800000000082e-05, 2.9707999999999818e-05, 3.073599999999996e-05, 3.022299999999936e-05, 2.972299999999886e-05, 2.9680000000000678e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 3.0208000000000318e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.209" endtime="20201029 12:44:10.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.204" endtime="20201029 12:44:10.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.217" endtime="20201029 12:44:10.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.215" endtime="20201029 12:44:10.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.214" endtime="20201029 12:44:10.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.849" endtime="20201029 12:44:10.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.849" endtime="20201029 12:44:10.238"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.247" endtime="20201029 12:44:10.264"></status>
</kw>
<msg timestamp="20201029 12:44:10.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.245" endtime="20201029 12:44:10.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.266" endtime="20201029 12:44:10.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.268" endtime="20201029 12:44:10.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.242" endtime="20201029 12:44:10.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.240" endtime="20201029 12:44:10.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.278" endtime="20201029 12:44:10.563"></status>
</kw>
<msg timestamp="20201029 12:44:10.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02008925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:10.276" endtime="20201029 12:44:10.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02008925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:10.567" endtime="20201029 12:44:10.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.576" endtime="20201029 12:44:10.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.273" endtime="20201029 12:44:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.272" endtime="20201029 12:44:10.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.582" level="INFO">${RESULT} = [{'diff': 3.070800000000082e-05}, {'diff': 3.070900000000029e-05}, {'diff': 3.120800000000132e-05}, {'diff': 3.122199999999742e-05}, {'diff': 3.122300000000036e-05}, {'diff': 3.122300000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:10.579" endtime="20201029 12:44:10.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.587" level="INFO">${ACCURACY} = {'diff': [3.070800000000082e-05, 3.070900000000029e-05, 3.120800000000132e-05, 3.122199999999742e-05, 3.122300000000036e-05, 3.122300000000036e-05, 3.120899999999732e-05, 3.070800000000082e-05, 3.0695...</msg>
<status status="PASS" starttime="20201029 12:44:10.583" endtime="20201029 12:44:10.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.591" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.590" endtime="20201029 12:44:10.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.594" level="INFO">VALUE: [3.070800000000082e-05, 3.070900000000029e-05, 3.120800000000132e-05, 3.122199999999742e-05, 3.122300000000036e-05, 3.122300000000036e-05, 3.120899999999732e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.125000000000003e-05, 3.120800000000132e-05, 3.07639999999991e-05, 3.072299999999986e-05, 3.122199999999742e-05, 3.123600000000046e-05, 3.120800000000132e-05, 3.120800000000132e-05, 3.119500000000122e-05, 3.120800000000132e-05, 3.119399999999828e-05, 3.069400000000125e-05, 3.120900000000079e-05, 3.073599999999996e-05, 3.072199999999692e-05, 3.120800000000132e-05, 3.119400000000175e-05, 3.120799999999785e-05, 3.067999999999821e-05, 3.123600000000046e-05, 3.170799999999835e-05, 3.120899999999732e-05, 3.122200000000089e-05, 3.070800000000082e-05, 3.117999999999871e-05, 3.119499999999775e-05, 3.130600000000178e-05, 3.120800000000132e-05, 3.120900000000079e-05, 3.073599999999996e-05, 3.122199999999742e-05, 3.119500000000122e-05, 3.070799999999735e-05, 3.12639999999996e-05, 3.073599999999996e-05, 3.120900000000079e-05, 3.070900000000029e-05, 3.070799999999735e-05, 3.122200000000089e-05, 3.070800000000082e-05, 3.072200000000039e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.593" endtime="20201029 12:44:10.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.588" endtime="20201029 12:44:10.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.599" endtime="20201029 12:44:10.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.597" endtime="20201029 12:44:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.596" endtime="20201029 12:44:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.239" endtime="20201029 12:44:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.238" endtime="20201029 12:44:10.619"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.628" endtime="20201029 12:44:10.646"></status>
</kw>
<msg timestamp="20201029 12:44:10.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.627" endtime="20201029 12:44:10.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.647" endtime="20201029 12:44:10.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.650" endtime="20201029 12:44:10.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.624" endtime="20201029 12:44:10.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.622" endtime="20201029 12:44:10.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.659" endtime="20201029 12:44:10.956"></status>
</kw>
<msg timestamp="20201029 12:44:10.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.657" endtime="20201029 12:44:10.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.960" endtime="20201029 12:44:10.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.969" endtime="20201029 12:44:10.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.655" endtime="20201029 12:44:10.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.653" endtime="20201029 12:44:10.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.975" level="INFO">${RESULT} = [{'diff': 5.6458000000002284e-05}, {'diff': 3.4888999999999754e-05}, {'diff': 3.4833000000001474e-05}, {'diff': 3.545900000000157e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.490300000000279e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:10.972" endtime="20201029 12:44:10.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.979" level="INFO">${ACCURACY} = {'diff': [5.6458000000002284e-05, 3.4888999999999754e-05, 3.4833000000001474e-05, 3.545900000000157e-05, 3.473600000000049e-05, 3.490300000000279e-05, 3.526400000000013e-05, 3.551399999999691e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 12:44:10.976" endtime="20201029 12:44:10.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.984" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.983" endtime="20201029 12:44:10.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.986" level="INFO">VALUE: [5.6458000000002284e-05, 3.4888999999999754e-05, 3.4833000000001474e-05, 3.545900000000157e-05, 3.473600000000049e-05, 3.490300000000279e-05, 3.526400000000013e-05, 3.551399999999691e-05, 3.495900000000107e-05, 3.504200000000249e-05, 3.4888999999999754e-05, 3.4776999999999725e-05, 3.530600000000231e-05, 3.542999999999949e-05, 3.495900000000107e-05, 3.502799999999945e-05, 3.472200000000092e-05, 3.5346999999998074e-05, 3.468000000000221e-05, 3.548600000000124e-05, 3.552799999999995e-05, 3.5639000000000504e-05, 3.4902999999999323e-05, 3.526400000000013e-05, 3.545799999999863e-05, 3.500000000000031e-05, 3.5597000000001794e-05, 3.517999999999924e-05, 3.47779999999992e-05, 3.46250000000034e-05, 3.5416999999999393e-05, 3.470800000000135e-05, 3.518100000000218e-05, 3.5139000000000004e-05, 3.47779999999992e-05, 3.469500000000125e-05, 3.526400000000013e-05, 3.529199999999927e-05, 3.5152999999999573e-05, 3.522299999999742e-05, 3.5402999999999823e-05, 3.47779999999992e-05, 3.547200000000167e-05, 3.5402999999999823e-05, 3.4833000000001474e-05, 3.544399999999906e-05, 3.541599999999992e-05, 3.497200000000117e-05, 3.522200000000142e-05, 3.470800000000135e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.985" endtime="20201029 12:44:10.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.980" endtime="20201029 12:44:10.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.991" endtime="20201029 12:44:11.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.990" endtime="20201029 12:44:11.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.988" endtime="20201029 12:44:11.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.620" endtime="20201029 12:44:11.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.620" endtime="20201029 12:44:11.012"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.020" endtime="20201029 12:44:11.038"></status>
</kw>
<msg timestamp="20201029 12:44:11.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.019" endtime="20201029 12:44:11.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.040" endtime="20201029 12:44:11.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.042" endtime="20201029 12:44:11.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.016" endtime="20201029 12:44:11.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.014" endtime="20201029 12:44:11.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.051" endtime="20201029 12:44:11.337"></status>
</kw>
<msg timestamp="20201029 12:44:11.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.050" endtime="20201029 12:44:11.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.342" endtime="20201029 12:44:11.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.350" endtime="20201029 12:44:11.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.047" endtime="20201029 12:44:11.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.046" endtime="20201029 12:44:11.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.356" level="INFO">${RESULT} = [{'diff': 3.65979999999988e-05}, {'diff': 3.5860999999998144e-05}, {'diff': 3.570799999999888e-05}, {'diff': 3.5889000000000754e-05}, {'diff': 3.620799999999938e-05}, {'diff': 3.622200000000242e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:11.353" endtime="20201029 12:44:11.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.361" level="INFO">${ACCURACY} = {'diff': [3.65979999999988e-05, 3.5860999999998144e-05, 3.570799999999888e-05, 3.5889000000000754e-05, 3.620799999999938e-05, 3.622200000000242e-05, 3.654200000000052e-05, 3.569400000000278e-05, 3.654...</msg>
<status status="PASS" starttime="20201029 12:44:11.357" endtime="20201029 12:44:11.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.365" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.364" endtime="20201029 12:44:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.367" level="INFO">VALUE: [3.65979999999988e-05, 3.5860999999998144e-05, 3.570799999999888e-05, 3.5889000000000754e-05, 3.620799999999938e-05, 3.622200000000242e-05, 3.654200000000052e-05, 3.569400000000278e-05, 3.654199999999705e-05, 3.6167000000000143e-05, 3.5889000000000754e-05, 3.6332999999999505e-05, 3.645799999999963e-05, 3.6611000000002364e-05, 3.630599999999984e-05, 3.570799999999888e-05, 3.5818999999999435e-05, 3.630599999999984e-05, 3.6152999999997104e-05, 3.6403000000000824e-05, 3.580599999999934e-05, 3.648599999999877e-05, 3.601400000000088e-05, 3.5889000000000754e-05, 3.6417000000000394e-05, 3.57780000000002e-05, 3.636199999999812e-05, 3.6417000000000394e-05, 3.6582999999999755e-05, 3.5818999999999435e-05, 3.651400000000138e-05, 3.651400000000138e-05, 3.644400000000006e-05, 3.616600000000067e-05, 3.5846999999998574e-05, 3.581999999999891e-05, 3.6624999999998464e-05, 3.5818999999999435e-05, 3.57780000000002e-05, 3.6403000000000824e-05, 3.6139000000001004e-05, 3.593099999999946e-05, 3.6055000000000115e-05, 3.6638999999998034e-05, 3.6111000000001864e-05, 3.600000000000131e-05, 3.581999999999891e-05, 3.634799999999855e-05, 3.6625000000001934e-05, 3.631999999999941e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.366" endtime="20201029 12:44:11.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.361" endtime="20201029 12:44:11.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.439" endtime="20201029 12:44:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.437" endtime="20201029 12:44:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.436" endtime="20201029 12:44:11.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.013" endtime="20201029 12:44:11.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.012" endtime="20201029 12:44:11.459"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.468" endtime="20201029 12:44:11.486"></status>
</kw>
<msg timestamp="20201029 12:44:11.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.466" endtime="20201029 12:44:11.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.487" endtime="20201029 12:44:11.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.490" endtime="20201029 12:44:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.464" endtime="20201029 12:44:11.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.462" endtime="20201029 12:44:11.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.499" endtime="20201029 12:44:11.786"></status>
</kw>
<msg timestamp="20201029 12:44:11.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.497" endtime="20201029 12:44:11.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.790" endtime="20201029 12:44:11.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.798" endtime="20201029 12:44:11.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.495" endtime="20201029 12:44:11.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.493" endtime="20201029 12:44:11.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.805" level="INFO">${RESULT} = [{'diff': 3.7652999999998604e-05}, {'diff': 3.747299999999967e-05}, {'diff': 3.672300000000239e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.7195000000000283e-05}, {'diff': 3.670899999999935e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:11.802" endtime="20201029 12:44:11.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.810" level="INFO">${ACCURACY} = {'diff': [3.7652999999998604e-05, 3.747299999999967e-05, 3.672300000000239e-05, 3.7652999999998604e-05, 3.7195000000000283e-05, 3.670899999999935e-05, 3.683399999999948e-05, 3.7639000000002504e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:11.806" endtime="20201029 12:44:11.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.814" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.813" endtime="20201029 12:44:11.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.817" level="INFO">VALUE: [3.7652999999998604e-05, 3.747299999999967e-05, 3.672300000000239e-05, 3.7652999999998604e-05, 3.7195000000000283e-05, 3.670899999999935e-05, 3.683399999999948e-05, 3.7639000000002504e-05, 3.7181000000000713e-05, 3.745800000000063e-05, 3.690200000000185e-05, 3.751400000000238e-05, 3.722199999999995e-05, 3.6819000000000435e-05, 3.6790999999997825e-05, 3.7360999999999644e-05, 3.720800000000038e-05, 3.729200000000127e-05, 3.751400000000238e-05, 3.6931000000000463e-05, 3.7388999999998784e-05, 3.6582999999999755e-05, 3.7403000000001824e-05, 3.722199999999995e-05, 3.7583000000000755e-05, 3.723599999999952e-05, 3.6833000000000005e-05, 3.7652999999998604e-05, 3.7389000000002254e-05, 3.699999999999884e-05, 3.7681000000001214e-05, 3.72780000000017e-05, 3.6833000000000005e-05, 3.700000000000231e-05, 3.702799999999798e-05, 3.749999999999934e-05, 3.740200000000235e-05, 3.734799999999955e-05, 3.6777000000001725e-05, 3.672199999999945e-05, 3.670799999999988e-05, 3.674999999999859e-05, 3.7110999999999394e-05, 3.72780000000017e-05, 3.669400000000031e-05, 3.6846999999999575e-05, 3.7583000000000755e-05, 3.67780000000012e-05, 3.724999999999909e-05, 3.7167000000001144e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.815" endtime="20201029 12:44:11.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.811" endtime="20201029 12:44:11.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.822" endtime="20201029 12:44:11.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.820" endtime="20201029 12:44:11.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.819" endtime="20201029 12:44:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.460" endtime="20201029 12:44:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.460" endtime="20201029 12:44:11.842"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.851" endtime="20201029 12:44:11.869"></status>
</kw>
<msg timestamp="20201029 12:44:11.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.849" endtime="20201029 12:44:11.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.870" endtime="20201029 12:44:11.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.873" endtime="20201029 12:44:11.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.847" endtime="20201029 12:44:11.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.845" endtime="20201029 12:44:11.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.882" endtime="20201029 12:44:12.168"></status>
</kw>
<msg timestamp="20201029 12:44:12.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.880" endtime="20201029 12:44:12.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.173" endtime="20201029 12:44:12.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.181" endtime="20201029 12:44:12.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.878" endtime="20201029 12:44:12.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.876" endtime="20201029 12:44:12.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.188" level="INFO">${RESULT} = [{'diff': 3.822199999999748e-05}, {'diff': 3.8653000000003074e-05}, {'diff': 3.772200000000045e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.823600000000052e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.184" endtime="20201029 12:44:12.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.192" level="INFO">${ACCURACY} = {'diff': [3.822199999999748e-05, 3.8653000000003074e-05, 3.772200000000045e-05, 3.826399999999966e-05, 3.79720000000007e-05, 3.823600000000052e-05, 3.8139000000003004e-05, 3.808399999999726e-05, 3.863...</msg>
<status status="PASS" starttime="20201029 12:44:12.189" endtime="20201029 12:44:12.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.196" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.195" endtime="20201029 12:44:12.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.199" level="INFO">VALUE: [3.822199999999748e-05, 3.8653000000003074e-05, 3.772200000000045e-05, 3.826399999999966e-05, 3.79720000000007e-05, 3.823600000000052e-05, 3.8139000000003004e-05, 3.808399999999726e-05, 3.8639000000000034e-05, 3.781999999999744e-05, 3.7888999999999284e-05, 3.7762999999999686e-05, 3.792999999999852e-05, 3.840199999999988e-05, 3.826399999999966e-05, 3.8138999999999534e-05, 3.8026999999999506e-05, 3.794400000000156e-05, 3.795799999999766e-05, 3.823600000000052e-05, 3.8652999999999604e-05, 3.822200000000095e-05, 3.8639000000000034e-05, 3.8153000000002574e-05, 3.7847000000000575e-05, 3.774999999999959e-05, 3.852800000000295e-05, 3.8209000000000853e-05, 3.848700000000024e-05, 3.852799999999948e-05, 3.805600000000159e-05, 3.8459000000001103e-05, 3.854200000000252e-05, 3.8652999999999604e-05, 3.779200000000177e-05, 3.777799999999873e-05, 3.7902999999998854e-05, 3.8639000000000034e-05, 3.826399999999966e-05, 3.8597000000001325e-05, 3.802800000000245e-05, 3.8375000000000214e-05, 3.7889000000002754e-05, 3.769400000000131e-05, 3.8290999999999326e-05, 3.7944999999997564e-05, 3.8596999999997855e-05, 3.8111000000000395e-05, 3.8332999999998035e-05, 3.8694999999998314e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.197" endtime="20201029 12:44:12.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.193" endtime="20201029 12:44:12.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.204" endtime="20201029 12:44:12.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.202" endtime="20201029 12:44:12.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.201" endtime="20201029 12:44:12.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.843" endtime="20201029 12:44:12.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.843" endtime="20201029 12:44:12.224"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.233" endtime="20201029 12:44:12.252"></status>
</kw>
<msg timestamp="20201029 12:44:12.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.231" endtime="20201029 12:44:12.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.253" endtime="20201029 12:44:12.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.256" endtime="20201029 12:44:12.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.229" endtime="20201029 12:44:12.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.227" endtime="20201029 12:44:12.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.265" endtime="20201029 12:44:12.551"></status>
</kw>
<msg timestamp="20201029 12:44:12.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.263" endtime="20201029 12:44:12.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.556" endtime="20201029 12:44:12.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.565" endtime="20201029 12:44:12.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.261" endtime="20201029 12:44:12.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.259" endtime="20201029 12:44:12.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.571" level="INFO">${RESULT} = [{'diff': 3.927800000000023e-05}, {'diff': 3.922199999999848e-05}, {'diff': 3.933400000000198e-05}, {'diff': 3.895799999999866e-05}, {'diff': 3.8818999999998965e-05}, {'diff': 3.948600000000177e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:12.568" endtime="20201029 12:44:12.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.576" level="INFO">${ACCURACY} = {'diff': [3.927800000000023e-05, 3.922199999999848e-05, 3.933400000000198e-05, 3.895799999999866e-05, 3.8818999999998965e-05, 3.948600000000177e-05, 3.9555000000000146e-05, 3.9097000000001825e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:44:12.572" endtime="20201029 12:44:12.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.580" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.579" endtime="20201029 12:44:12.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.583" level="INFO">VALUE: [3.927800000000023e-05, 3.922199999999848e-05, 3.933400000000198e-05, 3.895799999999866e-05, 3.8818999999998965e-05, 3.948600000000177e-05, 3.9555000000000146e-05, 3.9097000000001825e-05, 3.8804999999999396e-05, 3.8540999999999576e-05, 3.870799999999841e-05, 3.9625000000001465e-05, 3.9195000000002284e-05, 3.920800000000238e-05, 3.9110999999997925e-05, 3.884799999999758e-05, 3.9346999999998605e-05, 3.9166999999999674e-05, 3.894399999999909e-05, 3.947199999999873e-05, 3.9347000000002075e-05, 3.94859999999983e-05, 3.951400000000091e-05, 3.9444999999999064e-05, 3.872199999999798e-05, 3.94859999999983e-05, 3.8680999999998744e-05, 3.886200000000062e-05, 3.877799999999973e-05, 3.949999999999787e-05, 3.9583000000002755e-05, 3.930599999999937e-05, 3.9027000000000506e-05, 3.9291000000000326e-05, 3.9096999999998355e-05, 3.8875000000000715e-05, 3.8902999999999854e-05, 3.8833000000002005e-05, 3.870800000000188e-05, 3.920800000000238e-05, 3.9389000000000784e-05, 3.872200000000145e-05, 3.94859999999983e-05, 3.9069000000002685e-05, 3.9096999999998355e-05, 3.873600000000102e-05, 3.9082999999998785e-05, 3.9389000000000784e-05, 3.901400000000041e-05, 3.902799999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.581" endtime="20201029 12:44:12.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.577" endtime="20201029 12:44:12.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.589" endtime="20201029 12:44:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.588" endtime="20201029 12:44:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.586" endtime="20201029 12:44:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.225" endtime="20201029 12:44:12.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.225" endtime="20201029 12:44:12.610"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.619" endtime="20201029 12:44:12.638"></status>
</kw>
<msg timestamp="20201029 12:44:12.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.617" endtime="20201029 12:44:12.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.640" endtime="20201029 12:44:12.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.643" endtime="20201029 12:44:12.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.615" endtime="20201029 12:44:12.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.612" endtime="20201029 12:44:12.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.652" endtime="20201029 12:44:12.938"></status>
</kw>
<msg timestamp="20201029 12:44:12.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.650" endtime="20201029 12:44:12.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.942" endtime="20201029 12:44:12.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.951" endtime="20201029 12:44:12.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.648" endtime="20201029 12:44:12.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.646" endtime="20201029 12:44:12.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.958" level="INFO">${RESULT} = [{'diff': 3.993000000000052e-05}, {'diff': 4.041600000000145e-05}, {'diff': 4.0333000000000035e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.004199999999708e-05}, {'diff': 4.022199999999948e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:12.954" endtime="20201029 12:44:12.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.963" level="INFO">${ACCURACY} = {'diff': [3.993000000000052e-05, 4.041600000000145e-05, 4.0333000000000035e-05, 4.024999999999862e-05, 4.004199999999708e-05, 4.022199999999948e-05, 4.0430999999997025e-05, 3.9582999999999285e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 12:44:12.959" endtime="20201029 12:44:12.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.967" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.966" endtime="20201029 12:44:12.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.970" level="INFO">VALUE: [3.993000000000052e-05, 4.041600000000145e-05, 4.0333000000000035e-05, 4.024999999999862e-05, 4.004199999999708e-05, 4.022199999999948e-05, 4.0430999999997025e-05, 3.9582999999999285e-05, 4.0417000000000924e-05, 4.008400000000273e-05, 4.0388999999998315e-05, 4.0403000000001354e-05, 4.0346999999999605e-05, 4.024999999999862e-05, 4.022200000000295e-05, 4.002799999999751e-05, 3.981999999999944e-05, 4.051400000000191e-05, 4.019400000000034e-05, 4.0445000000000064e-05, 4.029199999999733e-05, 4.033399999999951e-05, 4.01119999999984e-05, 3.973600000000202e-05, 3.9680999999999744e-05, 4.0569000000000716e-05, 4.026399999999819e-05, 3.990199999999791e-05, 4.051399999999844e-05, 4.020799999999991e-05, 4.002800000000098e-05, 3.9818999999999966e-05, 4.0431000000000494e-05, 3.9805000000000396e-05, 4.023599999999905e-05, 3.9846999999999105e-05, 4.0346999999999605e-05, 3.998600000000227e-05, 4.0347000000003075e-05, 3.9832999999999535e-05, 4.0319000000000466e-05, 4.02920000000008e-05, 4.0096999999999355e-05, 3.9972999999998704e-05, 3.9973000000002173e-05, 3.9958999999999134e-05, 3.99859999999988e-05, 4.0639000000002035e-05, 4.0110999999998925e-05, 4.013800000000206e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.969" endtime="20201029 12:44:12.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.964" endtime="20201029 12:44:12.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.975" endtime="20201029 12:44:12.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.973" endtime="20201029 12:44:12.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.972" endtime="20201029 12:44:12.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.611" endtime="20201029 12:44:12.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.610" endtime="20201029 12:44:12.996"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.005" endtime="20201029 12:44:13.024"></status>
</kw>
<msg timestamp="20201029 12:44:13.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.004" endtime="20201029 12:44:13.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.025" endtime="20201029 12:44:13.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.028" endtime="20201029 12:44:13.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.001" endtime="20201029 12:44:13.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.999" endtime="20201029 12:44:13.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.037" endtime="20201029 12:44:13.324"></status>
</kw>
<msg timestamp="20201029 12:44:13.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.036" endtime="20201029 12:44:13.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.329" endtime="20201029 12:44:13.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.338" endtime="20201029 12:44:13.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.033" endtime="20201029 12:44:13.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.031" endtime="20201029 12:44:13.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.345" level="INFO">${RESULT} = [{'diff': 4.1361000000000175e-05}, {'diff': 4.0680999999997275e-05}, {'diff': 4.083400000000001e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.1569000000001716e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:13.341" endtime="20201029 12:44:13.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.349" level="INFO">${ACCURACY} = {'diff': [4.1361000000000175e-05, 4.0680999999997275e-05, 4.083400000000001e-05, 4.09859999999998e-05, 4.108400000000026e-05, 4.1569000000001716e-05, 4.0776999999998786e-05, 4.091599999999848e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 12:44:13.346" endtime="20201029 12:44:13.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.354" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.353" endtime="20201029 12:44:13.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.356" level="INFO">VALUE: [4.1361000000000175e-05, 4.0680999999997275e-05, 4.083400000000001e-05, 4.09859999999998e-05, 4.108400000000026e-05, 4.1569000000001716e-05, 4.0776999999998786e-05, 4.091599999999848e-05, 4.1276999999999286e-05, 4.1138999999999065e-05, 4.1417000000001924e-05, 4.1347000000000605e-05, 4.127799999999876e-05, 4.1389000000002785e-05, 4.0874999999999245e-05, 4.0903000000001855e-05, 4.1388999999999315e-05, 4.149999999999987e-05, 4.102800000000198e-05, 4.1097000000000355e-05, 4.1125000000002965e-05, 4.101400000000241e-05, 4.127800000000223e-05, 4.136199999999965e-05, 4.1153000000002105e-05, 4.154200000000205e-05, 4.083400000000001e-05, 4.0790999999998356e-05, 4.1209000000000384e-05, 4.073599999999955e-05, 4.0875000000002715e-05, 4.122200000000048e-05, 4.1540999999999106e-05, 4.1097000000000355e-05, 4.149999999999987e-05, 4.077800000000173e-05, 4.091599999999848e-05, 4.1402999999998885e-05, 4.1361000000000175e-05, 4.1568999999998246e-05, 4.104199999999808e-05, 4.070800000000041e-05, 4.095799999999719e-05, 4.1445000000001064e-05, 4.1597000000000856e-05, 4.1652999999999135e-05, 4.082000000000044e-05, 4.1652999999999135e-05, 4.155600000000162e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.355" endtime="20201029 12:44:13.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.350" endtime="20201029 12:44:13.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.361" endtime="20201029 12:44:13.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.360" endtime="20201029 12:44:13.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.359" endtime="20201029 12:44:13.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.997" endtime="20201029 12:44:13.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.997" endtime="20201029 12:44:13.382"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.391" endtime="20201029 12:44:13.413"></status>
</kw>
<msg timestamp="20201029 12:44:13.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.390" endtime="20201029 12:44:13.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.414" endtime="20201029 12:44:13.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.417" endtime="20201029 12:44:13.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.387" endtime="20201029 12:44:13.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.385" endtime="20201029 12:44:13.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.426" endtime="20201029 12:44:13.713"></status>
</kw>
<msg timestamp="20201029 12:44:13.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.425" endtime="20201029 12:44:13.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.717" endtime="20201029 12:44:13.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.726" endtime="20201029 12:44:13.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.422" endtime="20201029 12:44:13.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.420" endtime="20201029 12:44:13.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.733" level="INFO">${RESULT} = [{'diff': 4.254199999999958e-05}, {'diff': 4.2639000000000565e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.1888999999999815e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.222199999999801e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:13.729" endtime="20201029 12:44:13.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.737" level="INFO">${ACCURACY} = {'diff': [4.254199999999958e-05, 4.2639000000000565e-05, 4.2625000000000995e-05, 4.1888999999999815e-05, 4.226400000000019e-05, 4.222199999999801e-05, 4.175000000000012e-05, 4.2166999999999205e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:13.734" endtime="20201029 12:44:13.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.742" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.741" endtime="20201029 12:44:13.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.744" level="INFO">VALUE: [4.254199999999958e-05, 4.2639000000000565e-05, 4.2625000000000995e-05, 4.1888999999999815e-05, 4.226400000000019e-05, 4.222199999999801e-05, 4.175000000000012e-05, 4.2166999999999205e-05, 4.2666999999999705e-05, 4.2625000000000995e-05, 4.231999999999847e-05, 4.2194999999998345e-05, 4.182000000000144e-05, 4.2680999999999275e-05, 4.233400000000151e-05, 4.2209000000001384e-05, 4.1694999999997845e-05, 4.2346999999998136e-05, 4.240200000000041e-05, 4.190199999999991e-05, 4.194399999999862e-05, 4.223600000000105e-05, 4.266600000000023e-05, 4.2027000000000037e-05, 4.1902999999999385e-05, 4.2152999999999635e-05, 4.254199999999958e-05, 4.2416999999999455e-05, 4.242999999999955e-05, 4.2097000000001356e-05, 4.179199999999883e-05, 4.2083000000001786e-05, 4.2375000000000745e-05, 4.1916999999998955e-05, 4.175000000000012e-05, 4.2097000000001356e-05, 4.156999999999772e-05, 4.227799999999976e-05, 4.2639000000000565e-05, 4.2680999999999275e-05, 4.2527000000000537e-05, 4.2402999999999885e-05, 4.2568999999999246e-05, 4.176300000000022e-05, 4.2638999999997096e-05, 4.190199999999991e-05, 4.251400000000044e-05, 4.226300000000072e-05, 4.170799999999794e-05, 4.2416999999999455e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.743" endtime="20201029 12:44:13.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.738" endtime="20201029 12:44:13.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.750" endtime="20201029 12:44:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.749" endtime="20201029 12:44:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.748" endtime="20201029 12:44:13.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.383" endtime="20201029 12:44:13.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.382" endtime="20201029 12:44:13.771"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.780" endtime="20201029 12:44:13.800"></status>
</kw>
<msg timestamp="20201029 12:44:13.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.779" endtime="20201029 12:44:13.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.802" endtime="20201029 12:44:13.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.805" endtime="20201029 12:44:13.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.776" endtime="20201029 12:44:13.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.774" endtime="20201029 12:44:13.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.814" endtime="20201029 12:44:14.099"></status>
</kw>
<msg timestamp="20201029 12:44:14.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.812" endtime="20201029 12:44:14.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.104" endtime="20201029 12:44:14.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.112" endtime="20201029 12:44:14.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.810" endtime="20201029 12:44:14.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.808" endtime="20201029 12:44:14.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.119" level="INFO">${RESULT} = [{'diff': 4.297200000000223e-05}, {'diff': 4.2694999999998845e-05}, {'diff': 4.2818999999999496e-05}, {'diff': 4.297200000000223e-05}, {'diff': 4.305599999999965e-05}, {'diff': 4.3667000000000705e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:14.116" endtime="20201029 12:44:14.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.124" level="INFO">${ACCURACY} = {'diff': [4.297200000000223e-05, 4.2694999999998845e-05, 4.2818999999999496e-05, 4.297200000000223e-05, 4.305599999999965e-05, 4.3667000000000705e-05, 4.2846999999998636e-05, 4.308400000000226e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:14.120" endtime="20201029 12:44:14.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.129" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.128" endtime="20201029 12:44:14.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.131" level="INFO">VALUE: [4.297200000000223e-05, 4.2694999999998845e-05, 4.2818999999999496e-05, 4.297200000000223e-05, 4.305599999999965e-05, 4.3667000000000705e-05, 4.2846999999998636e-05, 4.308400000000226e-05, 4.2723000000001454e-05, 4.332000000000294e-05, 4.277800000000026e-05, 4.329099999999739e-05, 4.2903000000000385e-05, 4.356999999999972e-05, 4.291600000000048e-05, 4.325000000000162e-05, 4.345799999999969e-05, 4.3624999999998526e-05, 4.2818999999999496e-05, 4.320799999999944e-05, 4.302699999999757e-05, 4.3139000000001065e-05, 4.298599999999833e-05, 4.3180999999999775e-05, 4.272199999999851e-05, 4.348599999999883e-05, 4.354200000000058e-05, 4.3125000000001495e-05, 4.329200000000033e-05, 4.320800000000291e-05, 4.273600000000155e-05, 4.279199999999983e-05, 4.3653000000001135e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.309799999999836e-05, 4.327800000000076e-05, 4.304200000000008e-05, 4.358399999999929e-05, 4.3458999999999165e-05, 4.322199999999901e-05, 4.297199999999876e-05, 4.3139000000001065e-05, 4.270799999999894e-05, 4.316600000000073e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.3332999999999566e-05, 4.327800000000076e-05, 4.3318999999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.130" endtime="20201029 12:44:14.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.125" endtime="20201029 12:44:14.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.137" endtime="20201029 12:44:14.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.135" endtime="20201029 12:44:14.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.134" endtime="20201029 12:44:14.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.772" endtime="20201029 12:44:14.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.772" endtime="20201029 12:44:14.157"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.167" endtime="20201029 12:44:14.185"></status>
</kw>
<msg timestamp="20201029 12:44:14.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.165" endtime="20201029 12:44:14.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.186" endtime="20201029 12:44:14.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.189" endtime="20201029 12:44:14.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.162" endtime="20201029 12:44:14.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.160" endtime="20201029 12:44:14.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.198" endtime="20201029 12:44:14.485"></status>
</kw>
<msg timestamp="20201029 12:44:14.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.197" endtime="20201029 12:44:14.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.490" endtime="20201029 12:44:14.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.498" endtime="20201029 12:44:14.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.194" endtime="20201029 12:44:14.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.192" endtime="20201029 12:44:14.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.505" level="INFO">${RESULT} = [{'diff': 4.424999999999915e-05}, {'diff': 4.4445000000000595e-05}, {'diff': 4.3681000000000275e-05}, {'diff': 4.454200000000158e-05}, {'diff': 4.376400000000169e-05}, {'diff': 4.384799999999911e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:14.502" endtime="20201029 12:44:14.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.510" level="INFO">${ACCURACY} = {'diff': [4.424999999999915e-05, 4.4445000000000595e-05, 4.3681000000000275e-05, 4.454200000000158e-05, 4.376400000000169e-05, 4.384799999999911e-05, 4.4402999999998416e-05, 4.4638999999999096e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:14.506" endtime="20201029 12:44:14.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.514" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.513" endtime="20201029 12:44:14.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.517" level="INFO">VALUE: [4.424999999999915e-05, 4.4445000000000595e-05, 4.3681000000000275e-05, 4.454200000000158e-05, 4.376400000000169e-05, 4.384799999999911e-05, 4.4402999999998416e-05, 4.4638999999999096e-05, 4.404099999999814e-05, 4.402800000000151e-05, 4.4347000000000136e-05, 4.4624999999999526e-05, 4.4402999999998416e-05, 4.4569000000001247e-05, 4.443000000000155e-05, 4.4152999999998166e-05, 4.419400000000087e-05, 4.398599999999933e-05, 4.4416999999997986e-05, 4.394400000000062e-05, 4.4667000000001705e-05, 4.3846999999999636e-05, 4.4638999999999096e-05, 4.3860999999999206e-05, 4.454200000000158e-05, 4.4208999999999915e-05, 4.452799999999854e-05, 4.4388999999998846e-05, 4.4110999999999456e-05, 4.3945000000000095e-05, 4.3709000000002884e-05, 4.3930999999997056e-05, 4.4208999999999915e-05, 4.408399999999979e-05, 4.405599999999718e-05, 4.4110999999999456e-05, 4.426400000000219e-05, 4.463799999999962e-05, 4.4333000000000566e-05, 4.374999999999865e-05, 4.3902999999997916e-05, 4.402800000000151e-05, 4.458299999999735e-05, 4.397199999999976e-05, 4.452799999999854e-05, 4.39999999999989e-05, 4.4360999999999706e-05, 4.4195000000000345e-05, 4.409799999999936e-05, 4.427800000000176e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.515" endtime="20201029 12:44:14.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.510" endtime="20201029 12:44:14.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.522" endtime="20201029 12:44:14.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.520" endtime="20201029 12:44:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.519" endtime="20201029 12:44:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.158" endtime="20201029 12:44:14.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.158" endtime="20201029 12:44:14.543"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.552" endtime="20201029 12:44:14.573"></status>
</kw>
<msg timestamp="20201029 12:44:14.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.550" endtime="20201029 12:44:14.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.575" endtime="20201029 12:44:14.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.579" endtime="20201029 12:44:14.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.547" endtime="20201029 12:44:14.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.545" endtime="20201029 12:44:14.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.592" endtime="20201029 12:44:14.878"></status>
</kw>
<msg timestamp="20201029 12:44:14.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.590" endtime="20201029 12:44:14.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.882" endtime="20201029 12:44:14.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.891" endtime="20201029 12:44:14.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.587" endtime="20201029 12:44:14.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.584" endtime="20201029 12:44:14.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.898" level="INFO">${RESULT} = [{'diff': 4.4959000000000665e-05}, {'diff': 4.506899999999828e-05}, {'diff': 4.527799999999929e-05}, {'diff': 4.532000000000147e-05}, {'diff': 4.527799999999929e-05}, {'diff': 4.53329999999981e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.895" endtime="20201029 12:44:14.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.902" level="INFO">${ACCURACY} = {'diff': [4.4959000000000665e-05, 4.506899999999828e-05, 4.527799999999929e-05, 4.532000000000147e-05, 4.527799999999929e-05, 4.53329999999981e-05, 4.479099999999889e-05, 4.5625000000000526e-05, 4.473...</msg>
<status status="PASS" starttime="20201029 12:44:14.899" endtime="20201029 12:44:14.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.907" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.906" endtime="20201029 12:44:14.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.909" level="INFO">VALUE: [4.4959000000000665e-05, 4.506899999999828e-05, 4.527799999999929e-05, 4.532000000000147e-05, 4.527799999999929e-05, 4.53329999999981e-05, 4.479099999999889e-05, 4.5625000000000526e-05, 4.473600000000008e-05, 4.490199999999944e-05, 4.519400000000187e-05, 4.4931000000001525e-05, 4.5375000000000276e-05, 4.4833000000001066e-05, 4.5402999999999416e-05, 4.477799999999879e-05, 4.522200000000101e-05, 4.5625000000000526e-05, 4.5333000000001566e-05, 4.5666999999999236e-05, 4.554199999999911e-05, 4.5375000000000276e-05, 4.483400000000054e-05, 4.555599999999868e-05, 4.5223000000000485e-05, 4.555599999999868e-05, 4.552700000000007e-05, 4.479100000000236e-05, 4.46939999999979e-05, 4.523599999999711e-05, 4.480499999999846e-05, 4.5083000000001316e-05, 4.55000000000004e-05, 4.530500000000243e-05, 4.5597000000001386e-05, 4.551399999999997e-05, 4.547200000000126e-05, 4.502799999999904e-05, 4.4819000000001497e-05, 4.526399999999972e-05, 4.4902999999998916e-05, 4.5375000000000276e-05, 4.455600000000115e-05, 4.5416999999998986e-05, 4.534799999999714e-05, 4.482000000000097e-05, 4.501400000000294e-05, 4.511199999999993e-05, 4.527799999999929e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.908" endtime="20201029 12:44:14.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.903" endtime="20201029 12:44:14.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.916" endtime="20201029 12:44:14.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.914" endtime="20201029 12:44:14.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.913" endtime="20201029 12:44:14.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.544" endtime="20201029 12:44:14.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.543" endtime="20201029 12:44:14.936"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.946" endtime="20201029 12:44:14.964"></status>
</kw>
<msg timestamp="20201029 12:44:14.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.944" endtime="20201029 12:44:14.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.965" endtime="20201029 12:44:14.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.968" endtime="20201029 12:44:14.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.941" endtime="20201029 12:44:14.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.939" endtime="20201029 12:44:14.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.977" endtime="20201029 12:44:15.264"></status>
</kw>
<msg timestamp="20201029 12:44:15.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.976" endtime="20201029 12:44:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.268" endtime="20201029 12:44:15.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.277" endtime="20201029 12:44:15.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.973" endtime="20201029 12:44:15.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.971" endtime="20201029 12:44:15.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.284" level="INFO">${RESULT} = [{'diff': 4.630599999999943e-05}, {'diff': 4.594400000000262e-05}, {'diff': 4.647199999999879e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.6403000000000416e-05}, {'diff': 4.666699999999677e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:15.280" endtime="20201029 12:44:15.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.289" level="INFO">${ACCURACY} = {'diff': [4.630599999999943e-05, 4.594400000000262e-05, 4.647199999999879e-05, 4.604199999999961e-05, 4.6403000000000416e-05, 4.666699999999677e-05, 4.627700000000082e-05, 4.5902999999999916e-05, 4.66...</msg>
<status status="PASS" starttime="20201029 12:44:15.285" endtime="20201029 12:44:15.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.294" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.293" endtime="20201029 12:44:15.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.296" level="INFO">VALUE: [4.630599999999943e-05, 4.594400000000262e-05, 4.647199999999879e-05, 4.604199999999961e-05, 4.6403000000000416e-05, 4.666699999999677e-05, 4.627700000000082e-05, 4.5902999999999916e-05, 4.661200000000143e-05, 4.6375000000001276e-05, 4.617999999999983e-05, 4.6653000000000666e-05, 4.633400000000204e-05, 4.662499999999806e-05, 4.570799999999847e-05, 4.604100000000014e-05, 4.665200000000119e-05, 4.572199999999804e-05, 4.648599999999836e-05, 4.629099999999692e-05, 4.601400000000047e-05, 4.56939999999989e-05, 4.627800000000029e-05, 4.654200000000011e-05, 4.604199999999961e-05, 4.647199999999879e-05, 4.602800000000004e-05, 4.5930999999999056e-05, 4.645799999999922e-05, 4.605599999999918e-05, 4.634800000000161e-05, 4.6139000000000596e-05, 4.5903000000003386e-05, 4.601400000000047e-05, 4.658399999999882e-05, 4.624999999999768e-05, 4.597200000000176e-05, 4.577700000000032e-05, 4.6611000000001956e-05, 4.6139000000000596e-05, 4.665200000000119e-05, 4.6597000000002387e-05, 4.606899999999928e-05, 4.597200000000176e-05, 4.602800000000004e-05, 4.595799999999872e-05, 4.602800000000004e-05, 4.595800000000219e-05, 4.652800000000054e-05, 4.601400000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.295" endtime="20201029 12:44:15.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.290" endtime="20201029 12:44:15.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.301" endtime="20201029 12:44:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.300" endtime="20201029 12:44:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.299" endtime="20201029 12:44:15.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.937" endtime="20201029 12:44:15.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.937" endtime="20201029 12:44:15.322"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.331" endtime="20201029 12:44:15.350"></status>
</kw>
<msg timestamp="20201029 12:44:15.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.330" endtime="20201029 12:44:15.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.352" endtime="20201029 12:44:15.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.354" endtime="20201029 12:44:15.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.327" endtime="20201029 12:44:15.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.325" endtime="20201029 12:44:15.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.364" endtime="20201029 12:44:15.651"></status>
</kw>
<msg timestamp="20201029 12:44:15.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.362" endtime="20201029 12:44:15.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.656" endtime="20201029 12:44:15.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.664" endtime="20201029 12:44:15.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.360" endtime="20201029 12:44:15.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.358" endtime="20201029 12:44:15.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.671" level="INFO">${RESULT} = [{'diff': 4.733299999999663e-05}, {'diff': 4.70000000000019e-05}, {'diff': 4.711099999999899e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.6972999999998766e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:15.668" endtime="20201029 12:44:15.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.676" level="INFO">${ACCURACY} = {'diff': [4.733299999999663e-05, 4.70000000000019e-05, 4.711099999999899e-05, 4.723599999999911e-05, 4.727800000000129e-05, 4.6972999999998766e-05, 4.679200000000036e-05, 4.71529999999977e-05, 4.74729...</msg>
<status status="PASS" starttime="20201029 12:44:15.672" endtime="20201029 12:44:15.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.680" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.679" endtime="20201029 12:44:15.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.683" level="INFO">VALUE: [4.733299999999663e-05, 4.70000000000019e-05, 4.711099999999899e-05, 4.723599999999911e-05, 4.727800000000129e-05, 4.6972999999998766e-05, 4.679200000000036e-05, 4.71529999999977e-05, 4.7472999999999266e-05, 4.740299999999795e-05, 4.6708999999998946e-05, 4.672200000000251e-05, 4.677700000000132e-05, 4.731900000000053e-05, 4.691600000000101e-05, 4.749999999999893e-05, 4.670799999999947e-05, 4.676400000000122e-05, 4.720799999999997e-05, 4.736099999999924e-05, 4.726400000000172e-05, 4.708400000000279e-05, 4.747199999999979e-05, 4.7125000000002026e-05, 4.713899999999813e-05, 4.736099999999924e-05, 4.6944999999999626e-05, 4.752799999999807e-05, 4.702800000000104e-05, 4.726400000000172e-05, 4.679100000000089e-05, 4.75139999999985e-05, 4.7445000000000126e-05, 4.765199999999872e-05, 4.677699999999785e-05, 4.7013999999998e-05, 4.722200000000301e-05, 4.673599999999861e-05, 4.75139999999985e-05, 4.718000000000083e-05, 4.677800000000079e-05, 4.675000000000165e-05, 4.702799999999757e-05, 4.754200000000111e-05, 4.7431000000000556e-05, 4.711099999999899e-05, 4.7139000000001596e-05, 4.7389000000001846e-05, 4.762499999999906e-05, 4.727799999999782e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.681" endtime="20201029 12:44:15.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.676" endtime="20201029 12:44:15.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.688" endtime="20201029 12:44:15.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.686" endtime="20201029 12:44:15.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.685" endtime="20201029 12:44:15.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.323" endtime="20201029 12:44:15.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.323" endtime="20201029 12:44:15.709"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.719" endtime="20201029 12:44:15.738"></status>
</kw>
<msg timestamp="20201029 12:44:15.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.717" endtime="20201029 12:44:15.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.740" endtime="20201029 12:44:15.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.742" endtime="20201029 12:44:15.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.715" endtime="20201029 12:44:15.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.712" endtime="20201029 12:44:15.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.752" endtime="20201029 12:44:16.038"></status>
</kw>
<msg timestamp="20201029 12:44:16.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.750" endtime="20201029 12:44:16.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.042" endtime="20201029 12:44:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.051" endtime="20201029 12:44:16.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.748" endtime="20201029 12:44:16.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.746" endtime="20201029 12:44:16.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.058" level="INFO">${RESULT} = [{'diff': 4.858300000000135e-05}, {'diff': 4.78879999999994e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.804099999999867e-05}, {'diff': 4.863899999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:16.055" endtime="20201029 12:44:16.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.062" level="INFO">${ACCURACY} = {'diff': [4.858300000000135e-05, 4.78879999999994e-05, 4.824999999999968e-05, 4.845800000000122e-05, 4.804099999999867e-05, 4.863899999999963e-05, 4.804099999999867e-05, 4.85139999999995e-05, 4.788900...</msg>
<status status="PASS" starttime="20201029 12:44:16.059" endtime="20201029 12:44:16.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.067" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.066" endtime="20201029 12:44:16.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.070" level="INFO">VALUE: [4.858300000000135e-05, 4.78879999999994e-05, 4.824999999999968e-05, 4.845800000000122e-05, 4.804099999999867e-05, 4.863899999999963e-05, 4.804099999999867e-05, 4.85139999999995e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.845800000000122e-05, 4.794399999999768e-05, 4.8167000000001736e-05, 4.772200000000004e-05, 4.812499999999956e-05, 4.788899999999888e-05, 4.826399999999925e-05, 4.85139999999995e-05, 4.786199999999921e-05, 4.802799999999857e-05, 4.776400000000222e-05, 4.7972999999999766e-05, 4.836100000000024e-05, 4.773599999999961e-05, 4.858299999999788e-05, 4.787499999999931e-05, 4.773599999999961e-05, 4.855499999999874e-05, 4.786099999999974e-05, 4.855600000000168e-05, 4.858300000000135e-05, 4.837499999999981e-05, 4.797200000000029e-05, 4.852800000000254e-05, 4.78330000000006e-05, 4.797200000000029e-05, 4.81529999999987e-05, 4.770800000000047e-05, 4.802800000000204e-05, 4.834800000000014e-05, 4.8459000000000696e-05, 4.8139000000002596e-05, 4.775000000000265e-05, 4.795799999999725e-05, 4.843000000000208e-05, 4.827699999999935e-05, 4.816599999999879e-05, 4.834700000000067e-05, 4.812499999999956e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.068" endtime="20201029 12:44:16.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.063" endtime="20201029 12:44:16.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.076" endtime="20201029 12:44:16.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.074" endtime="20201029 12:44:16.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.073" endtime="20201029 12:44:16.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.710" endtime="20201029 12:44:16.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.710" endtime="20201029 12:44:16.097"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.106" endtime="20201029 12:44:16.124"></status>
</kw>
<msg timestamp="20201029 12:44:16.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.104" endtime="20201029 12:44:16.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.126" endtime="20201029 12:44:16.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.129" endtime="20201029 12:44:16.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.101" endtime="20201029 12:44:16.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.099" endtime="20201029 12:44:16.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.138" endtime="20201029 12:44:16.423"></status>
</kw>
<msg timestamp="20201029 12:44:16.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.136" endtime="20201029 12:44:16.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.428" endtime="20201029 12:44:16.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.436" endtime="20201029 12:44:16.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.134" endtime="20201029 12:44:16.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.132" endtime="20201029 12:44:16.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.443" level="INFO">${RESULT} = [{'diff': 4.875000000000018e-05}, {'diff': 4.930599999999896e-05}, {'diff': 4.950000000000093e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.90270000000001e-05}, {'diff': 4.958399999999835e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:16.440" endtime="20201029 12:44:16.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.448" level="INFO">${ACCURACY} = {'diff': [4.875000000000018e-05, 4.930599999999896e-05, 4.950000000000093e-05, 4.884700000000117e-05, 4.90270000000001e-05, 4.958399999999835e-05, 4.931899999999906e-05, 4.934700000000167e-05, 4.87779...</msg>
<status status="PASS" starttime="20201029 12:44:16.444" endtime="20201029 12:44:16.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.453" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.452" endtime="20201029 12:44:16.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.456" level="INFO">VALUE: [4.875000000000018e-05, 4.930599999999896e-05, 4.950000000000093e-05, 4.884700000000117e-05, 4.90270000000001e-05, 4.958399999999835e-05, 4.931899999999906e-05, 4.934700000000167e-05, 4.877799999999932e-05, 4.962500000000106e-05, 4.940200000000047e-05, 4.96530000000002e-05, 4.929200000000286e-05, 4.870800000000147e-05, 4.944499999999866e-05, 4.926400000000025e-05, 4.963900000000063e-05, 4.879199999999889e-05, 4.9208999999997977e-05, 4.858399999999735e-05, 4.963900000000063e-05, 4.880600000000193e-05, 4.869499999999791e-05, 4.934700000000167e-05, 4.8707999999998e-05, 4.967999999999986e-05, 4.9014e-05, 4.944399999999918e-05, 4.95409999999967e-05, 4.95140000000005e-05, 4.93469999999982e-05, 4.952800000000007e-05, 4.966699999999977e-05, 4.937500000000081e-05, 4.905599999999871e-05, 4.869499999999791e-05, 4.962500000000106e-05, 4.955599999999921e-05, 4.93339999999981e-05, 4.9209000000001446e-05, 4.952800000000007e-05, 4.937500000000081e-05, 4.908399999999785e-05, 4.908300000000185e-05, 4.873599999999714e-05, 4.856900000000178e-05, 4.947199999999832e-05, 4.909699999999795e-05, 4.886100000000074e-05, 4.962500000000106e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.454" endtime="20201029 12:44:16.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.449" endtime="20201029 12:44:16.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.521" endtime="20201029 12:44:16.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.520" endtime="20201029 12:44:16.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.519" endtime="20201029 12:44:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.098" endtime="20201029 12:44:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.097" endtime="20201029 12:44:16.542"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.551" endtime="20201029 12:44:16.570"></status>
</kw>
<msg timestamp="20201029 12:44:16.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.550" endtime="20201029 12:44:16.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.571" endtime="20201029 12:44:16.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.574" endtime="20201029 12:44:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.547" endtime="20201029 12:44:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.545" endtime="20201029 12:44:16.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.584" endtime="20201029 12:44:16.870"></status>
</kw>
<msg timestamp="20201029 12:44:16.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.582" endtime="20201029 12:44:16.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.875" endtime="20201029 12:44:16.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.883" endtime="20201029 12:44:16.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.579" endtime="20201029 12:44:16.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.578" endtime="20201029 12:44:16.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.890" level="INFO">${RESULT} = [{'diff': 5.031999999999953e-05}, {'diff': 4.9737000000001086e-05}, {'diff': 5.037500000000181e-05}, {'diff': 4.993000000000011e-05}, {'diff': 5.063900000000163e-05}, {'diff': 5.015200000000122e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:16.887" endtime="20201029 12:44:16.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.895" level="INFO">${ACCURACY} = {'diff': [5.031999999999953e-05, 4.9737000000001086e-05, 5.037500000000181e-05, 4.993000000000011e-05, 5.063900000000163e-05, 5.015200000000122e-05, 5.059699999999945e-05, 4.981899999999956e-05, 4.979...</msg>
<status status="PASS" starttime="20201029 12:44:16.891" endtime="20201029 12:44:16.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.899" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.898" endtime="20201029 12:44:16.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.902" level="INFO">VALUE: [5.031999999999953e-05, 4.9737000000001086e-05, 5.037500000000181e-05, 4.993000000000011e-05, 5.063900000000163e-05, 5.015200000000122e-05, 5.059699999999945e-05, 4.981899999999956e-05, 4.979100000000042e-05, 5.0401999999998004e-05, 5.063899999999816e-05, 5.040299999999748e-05, 5.045799999999975e-05, 5.03469999999992e-05, 5.040300000000095e-05, 4.969399999999943e-05, 4.9945000000002626e-05, 5.045799999999975e-05, 5.009699999999895e-05, 5.054199999999717e-05, 5.033400000000257e-05, 5.009800000000189e-05, 4.969499999999891e-05, 5.043000000000061e-05, 4.977700000000085e-05, 5.038900000000138e-05, 5.045799999999975e-05, 5.0652000000001723e-05, 4.98469999999987e-05, 5.03469999999992e-05, 5.027800000000082e-05, 5.02079999999995e-05, 4.995799999999925e-05, 4.991700000000002e-05, 5.044400000000018e-05, 4.976400000000075e-05, 5.022199999999907e-05, 4.994399999999968e-05, 5.041700000000052e-05, 4.959800000000139e-05, 5.015299999999723e-05, 4.977800000000032e-05, 5.0209000000002446e-05, 4.988899999999741e-05, 5.018099999999984e-05, 5.013900000000113e-05, 5.033400000000257e-05, 5.0637999999998684e-05, 5.055499999999727e-05, 5.043000000000061e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.901" endtime="20201029 12:44:16.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.896" endtime="20201029 12:44:16.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.907" endtime="20201029 12:44:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.906" endtime="20201029 12:44:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.904" endtime="20201029 12:44:16.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.543" endtime="20201029 12:44:16.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.543" endtime="20201029 12:44:16.928"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.937" endtime="20201029 12:44:16.959"></status>
</kw>
<msg timestamp="20201029 12:44:16.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.935" endtime="20201029 12:44:16.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.960" endtime="20201029 12:44:16.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.963" endtime="20201029 12:44:16.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.933" endtime="20201029 12:44:16.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.931" endtime="20201029 12:44:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.972" endtime="20201029 12:44:17.259"></status>
</kw>
<msg timestamp="20201029 12:44:17.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.971" endtime="20201029 12:44:17.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.263" endtime="20201029 12:44:17.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.272" endtime="20201029 12:44:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.968" endtime="20201029 12:44:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.966" endtime="20201029 12:44:17.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.279" level="INFO">${RESULT} = [{'diff': 5.16669999999983e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.140299999999848e-05}, {'diff': 5.15140000000025e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.076400000000175e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:17.275" endtime="20201029 12:44:17.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.283" level="INFO">${ACCURACY} = {'diff': [5.16669999999983e-05, 5.118100000000084e-05, 5.140299999999848e-05, 5.15140000000025e-05, 5.145800000000075e-05, 5.076400000000175e-05, 5.098599999999939e-05, 5.075000000000218e-05, 5.140299...</msg>
<status status="PASS" starttime="20201029 12:44:17.280" endtime="20201029 12:44:17.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.288" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.286" endtime="20201029 12:44:17.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.290" level="INFO">VALUE: [5.16669999999983e-05, 5.118100000000084e-05, 5.140299999999848e-05, 5.15140000000025e-05, 5.145800000000075e-05, 5.076400000000175e-05, 5.098599999999939e-05, 5.075000000000218e-05, 5.140299999999848e-05, 5.062499999999859e-05, 5.120899999999998e-05, 5.148599999999989e-05, 5.104200000000114e-05, 5.0943999999997214e-05, 5.158299999999741e-05, 5.126299999999931e-05, 5.08469999999997e-05, 5.109699999999995e-05, 5.077800000000132e-05, 5.095800000000025e-05, 5.077800000000132e-05, 5.1443999999997714e-05, 5.091699999999755e-05, 5.15140000000025e-05, 5.08469999999997e-05, 5.0708e-05, 5.140299999999848e-05, 5.151399999999903e-05, 5.122200000000007e-05, 5.118100000000084e-05, 5.15279999999986e-05, 5.157000000000078e-05, 5.098599999999939e-05, 5.0708e-05, 5.075000000000218e-05, 5.080500000000099e-05, 5.104100000000167e-05, 5.072199999999957e-05, 5.163900000000263e-05, 5.106900000000081e-05, 5.156900000000131e-05, 5.162499999999959e-05, 5.088899999999841e-05, 5.104199999999767e-05, 5.095800000000025e-05, 5.149999999999946e-05, 5.129200000000139e-05, 5.143100000000109e-05, 5.126299999999931e-05, 5.08469999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.289" endtime="20201029 12:44:17.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.284" endtime="20201029 12:44:17.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.296" endtime="20201029 12:44:17.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.295" endtime="20201029 12:44:17.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.293" endtime="20201029 12:44:17.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.929" endtime="20201029 12:44:17.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.928" endtime="20201029 12:44:17.317"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.326" endtime="20201029 12:44:17.345"></status>
</kw>
<msg timestamp="20201029 12:44:17.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.325" endtime="20201029 12:44:17.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.347" endtime="20201029 12:44:17.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.350" endtime="20201029 12:44:17.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.322" endtime="20201029 12:44:17.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.320" endtime="20201029 12:44:17.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.359" endtime="20201029 12:44:17.644"></status>
</kw>
<msg timestamp="20201029 12:44:17.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:17.357" endtime="20201029 12:44:17.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:17.649" endtime="20201029 12:44:17.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.657" endtime="20201029 12:44:17.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.355" endtime="20201029 12:44:17.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.353" endtime="20201029 12:44:17.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.664" level="INFO">${RESULT} = [{'diff': 5.1943999999998214e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.233300000000163e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.2443999999998714e-05}, {'diff': 5.20409999999992e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:17.661" endtime="20201029 12:44:17.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.669" level="INFO">${ACCURACY} = {'diff': [5.1943999999998214e-05, 5.236100000000077e-05, 5.233300000000163e-05, 5.225000000000021e-05, 5.2443999999998714e-05, 5.20409999999992e-05, 5.20279999999991e-05, 5.25279999999996e-05, 5.17080...</msg>
<status status="PASS" starttime="20201029 12:44:17.665" endtime="20201029 12:44:17.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.674" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.673" endtime="20201029 12:44:17.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.677" level="INFO">VALUE: [5.1943999999998214e-05, 5.236100000000077e-05, 5.233300000000163e-05, 5.225000000000021e-05, 5.2443999999998714e-05, 5.20409999999992e-05, 5.20279999999991e-05, 5.25279999999996e-05, 5.1708000000001e-05, 5.176399999999928e-05, 5.204200000000214e-05, 5.258299999999841e-05, 5.20279999999991e-05, 5.237500000000034e-05, 5.213899999999966e-05, 5.223600000000064e-05, 5.191700000000202e-05, 5.213899999999966e-05, 5.207000000000128e-05, 5.195900000000073e-05, 5.23340000000011e-05, 5.265299999999973e-05, 5.227699999999988e-05, 5.2137999999996715e-05, 5.2221999999997604e-05, 5.213899999999966e-05, 5.222200000000107e-05, 5.2429999999999144e-05, 5.20279999999991e-05, 5.226399999999978e-05, 5.208299999999791e-05, 5.254199999999917e-05, 5.250000000000046e-05, 5.195800000000125e-05, 5.182000000000103e-05, 5.234699999999773e-05, 5.259699999999798e-05, 5.191699999999855e-05, 5.225000000000021e-05, 5.259699999999798e-05, 5.169500000000091e-05, 5.2416000000003043e-05, 5.225000000000021e-05, 5.188899999999941e-05, 5.252700000000013e-05, 5.226300000000031e-05, 5.247200000000132e-05, 5.21530000000027e-05, 5.244400000000218e-05, 5.241699999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.675" endtime="20201029 12:44:17.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.670" endtime="20201029 12:44:17.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.682" endtime="20201029 12:44:17.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.680" endtime="20201029 12:44:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.679" endtime="20201029 12:44:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.318" endtime="20201029 12:44:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.317" endtime="20201029 12:44:17.703"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.712" endtime="20201029 12:44:17.731"></status>
</kw>
<msg timestamp="20201029 12:44:17.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.710" endtime="20201029 12:44:17.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.732" endtime="20201029 12:44:17.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.735" endtime="20201029 12:44:17.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.707" endtime="20201029 12:44:17.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.705" endtime="20201029 12:44:17.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.746" endtime="20201029 12:44:18.035"></status>
</kw>
<msg timestamp="20201029 12:44:18.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.744" endtime="20201029 12:44:18.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.039" endtime="20201029 12:44:18.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.048" endtime="20201029 12:44:18.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.741" endtime="20201029 12:44:18.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.739" endtime="20201029 12:44:18.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.055" level="INFO">${RESULT} = [{'diff': 5.3179999999999894e-05}, {'diff': 5.305499999999977e-05}, {'diff': 5.318099999999937e-05}, {'diff': 5.330599999999949e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.31669999999998e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.051" endtime="20201029 12:44:18.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.059" level="INFO">${ACCURACY} = {'diff': [5.3179999999999894e-05, 5.305499999999977e-05, 5.318099999999937e-05, 5.330599999999949e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.3457999999999284e-05, 5.280599999999899e-05, 5.349...</msg>
<status status="PASS" starttime="20201029 12:44:18.056" endtime="20201029 12:44:18.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.064" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.063" endtime="20201029 12:44:18.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.066" level="INFO">VALUE: [5.3179999999999894e-05, 5.305499999999977e-05, 5.318099999999937e-05, 5.330599999999949e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.3457999999999284e-05, 5.280599999999899e-05, 5.3499999999997994e-05, 5.329199999999992e-05, 5.338900000000091e-05, 5.294500000000216e-05, 5.322300000000155e-05, 5.281999999999856e-05, 5.309800000000142e-05, 5.333299999999916e-05, 5.3471999999998854e-05, 5.358300000000288e-05, 5.352700000000113e-05, 5.293099999999912e-05, 5.327800000000035e-05, 5.362499999999812e-05, 5.30280000000001e-05, 5.304199999999967e-05, 5.2929999999999644e-05, 5.281900000000256e-05, 5.2721999999998104e-05, 5.279199999999942e-05, 5.255599999999874e-05, 5.308400000000185e-05, 5.33479999999982e-05, 5.345899999999876e-05, 5.308400000000185e-05, 5.329199999999992e-05, 5.326400000000078e-05, 5.327700000000088e-05, 5.331899999999959e-05, 5.302699999999716e-05, 5.32080000000025e-05, 5.313900000000066e-05, 5.281900000000256e-05, 5.283299999999866e-05, 5.334699999999873e-05, 5.28470000000017e-05, 5.290299999999998e-05, 5.365300000000073e-05, 5.327800000000035e-05, 5.270900000000148e-05, 5.336199999999777e-05, 5.3152000000000754e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.065" endtime="20201029 12:44:18.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.060" endtime="20201029 12:44:18.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.071" endtime="20201029 12:44:18.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.070" endtime="20201029 12:44:18.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.069" endtime="20201029 12:44:18.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.704" endtime="20201029 12:44:18.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.703" endtime="20201029 12:44:18.092"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.101" endtime="20201029 12:44:18.121"></status>
</kw>
<msg timestamp="20201029 12:44:18.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.100" endtime="20201029 12:44:18.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.122" endtime="20201029 12:44:18.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.125" endtime="20201029 12:44:18.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.097" endtime="20201029 12:44:18.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.095" endtime="20201029 12:44:18.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.134" endtime="20201029 12:44:18.421"></status>
</kw>
<msg timestamp="20201029 12:44:18.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.133" endtime="20201029 12:44:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.426" endtime="20201029 12:44:18.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.434" endtime="20201029 12:44:18.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.130" endtime="20201029 12:44:18.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.128" endtime="20201029 12:44:18.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.441" level="INFO">${RESULT} = [{'diff': 5.420900000000298e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.413900000000166e-05}, {'diff': 5.448700000000237e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.433300000000016e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:18.438" endtime="20201029 12:44:18.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.445" level="INFO">${ACCURACY} = {'diff': [5.420900000000298e-05, 5.3749999999998244e-05, 5.413900000000166e-05, 5.448700000000237e-05, 5.463900000000216e-05, 5.433300000000016e-05, 5.402700000000163e-05, 5.444500000000019e-05, 5.456...</msg>
<status status="PASS" starttime="20201029 12:44:18.442" endtime="20201029 12:44:18.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.450" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.449" endtime="20201029 12:44:18.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.453" level="INFO">VALUE: [5.420900000000298e-05, 5.3749999999998244e-05, 5.413900000000166e-05, 5.448700000000237e-05, 5.463900000000216e-05, 5.433300000000016e-05, 5.402700000000163e-05, 5.444500000000019e-05, 5.456900000000084e-05, 5.408299999999991e-05, 5.3957999999999784e-05, 5.443100000000062e-05, 5.4444000000000714e-05, 5.437499999999887e-05, 5.379200000000042e-05, 5.434699999999973e-05, 5.391700000000055e-05, 5.4679999999997925e-05, 5.41670000000008e-05, 5.3971999999999354e-05, 5.441699999999758e-05, 5.438899999999844e-05, 5.3763999999997814e-05, 5.38340000000026e-05, 5.370900000000248e-05, 5.45280000000016e-05, 5.3707999999999534e-05, 5.3985999999998924e-05, 5.4166000000001324e-05, 5.3957999999999784e-05, 5.46670000000013e-05, 5.438900000000191e-05, 5.427800000000135e-05, 5.4221999999999604e-05, 5.383299999999966e-05, 5.434699999999973e-05, 5.437499999999887e-05, 5.3707999999999534e-05, 5.4263999999998314e-05, 5.376400000000128e-05, 5.444500000000019e-05, 5.434699999999973e-05, 5.415300000000123e-05, 5.373700000000162e-05, 5.406999999999981e-05, 5.463899999999869e-05, 5.384699999999923e-05, 5.3916000000001074e-05, 5.459699999999998e-05, 5.3679999999996925e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.451" endtime="20201029 12:44:18.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.446" endtime="20201029 12:44:18.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.459" endtime="20201029 12:44:18.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.457" endtime="20201029 12:44:18.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.456" endtime="20201029 12:44:18.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.093" endtime="20201029 12:44:18.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.093" endtime="20201029 12:44:18.480"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.489" endtime="20201029 12:44:18.507"></status>
</kw>
<msg timestamp="20201029 12:44:18.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.487" endtime="20201029 12:44:18.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.509" endtime="20201029 12:44:18.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.511" endtime="20201029 12:44:18.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.485" endtime="20201029 12:44:18.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.482" endtime="20201029 12:44:18.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.521" endtime="20201029 12:44:18.808"></status>
</kw>
<msg timestamp="20201029 12:44:18.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.519" endtime="20201029 12:44:18.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.812" endtime="20201029 12:44:18.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.821" endtime="20201029 12:44:18.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.517" endtime="20201029 12:44:18.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.515" endtime="20201029 12:44:18.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.828" level="INFO">${RESULT} = [{'diff': 5.561100000000055e-05}, {'diff': 5.469499999999697e-05}, {'diff': 5.508399999999691e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.537499999999987e-05}, {'diff': 5.565299999999926e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:18.824" endtime="20201029 12:44:18.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.833" level="INFO">${ACCURACY} = {'diff': [5.561100000000055e-05, 5.469499999999697e-05, 5.508399999999691e-05, 5.4777999999998384e-05, 5.537499999999987e-05, 5.565299999999926e-05, 5.4999999999999494e-05, 5.4694000000000964e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:44:18.829" endtime="20201029 12:44:18.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.837" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.836" endtime="20201029 12:44:18.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.840" level="INFO">VALUE: [5.561100000000055e-05, 5.469499999999697e-05, 5.508399999999691e-05, 5.4777999999998384e-05, 5.537499999999987e-05, 5.565299999999926e-05, 5.4999999999999494e-05, 5.4694000000000964e-05, 5.5236000000000174e-05, 5.4957999999997315e-05, 5.5430000000002144e-05, 5.5665999999999355e-05, 5.479200000000142e-05, 5.488899999999894e-05, 5.5222000000000604e-05, 5.536099999999683e-05, 5.483400000000013e-05, 5.4944000000001214e-05, 5.509699999999701e-05, 5.50280000000021e-05, 5.507000000000081e-05, 5.5263999999999314e-05, 5.483399999999666e-05, 5.540300000000248e-05, 5.545900000000076e-05, 5.5415999999999105e-05, 5.537499999999987e-05, 5.559700000000098e-05, 5.4944000000001214e-05, 5.4972000000000354e-05, 5.512500000000309e-05, 5.558300000000141e-05, 5.5457999999997815e-05, 5.488899999999894e-05, 5.5027999999998634e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.540299999999901e-05, 5.482000000000056e-05, 5.519500000000094e-05, 5.5291999999998453e-05, 5.501400000000253e-05, 5.504200000000167e-05, 5.520900000000051e-05, 5.5236000000000174e-05, 5.563899999999969e-05, 5.563899999999969e-05, 5.561100000000055e-05, 5.480499999999805e-05, 5.508299999999744e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.839" endtime="20201029 12:44:18.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.834" endtime="20201029 12:44:18.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.845" endtime="20201029 12:44:18.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.844" endtime="20201029 12:44:18.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.842" endtime="20201029 12:44:18.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.481" endtime="20201029 12:44:18.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.480" endtime="20201029 12:44:18.866"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.875" endtime="20201029 12:44:18.894"></status>
</kw>
<msg timestamp="20201029 12:44:18.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.873" endtime="20201029 12:44:18.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.895" endtime="20201029 12:44:18.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.898" endtime="20201029 12:44:18.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.871" endtime="20201029 12:44:18.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.869" endtime="20201029 12:44:18.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.907" endtime="20201029 12:44:19.195"></status>
</kw>
<msg timestamp="20201029 12:44:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.906" endtime="20201029 12:44:19.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.199" endtime="20201029 12:44:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.208" endtime="20201029 12:44:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.903" endtime="20201029 12:44:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.901" endtime="20201029 12:44:19.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.215" level="INFO">${RESULT} = [{'diff': 5.626299999999737e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.605500000000277e-05}, {'diff': 5.584700000000123e-05}, {'diff': 5.5972000000001354e-05}, {'diff': 5.5929999999999175e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:19.211" endtime="20201029 12:44:19.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.219" level="INFO">${ACCURACY} = {'diff': [5.626299999999737e-05, 5.663900000000069e-05, 5.605500000000277e-05, 5.584700000000123e-05, 5.5972000000001354e-05, 5.5929999999999175e-05, 5.5708000000001534e-05, 5.608300000000191e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:44:19.216" endtime="20201029 12:44:19.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.224" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.223" endtime="20201029 12:44:19.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.226" level="INFO">VALUE: [5.626299999999737e-05, 5.663900000000069e-05, 5.605500000000277e-05, 5.584700000000123e-05, 5.5972000000001354e-05, 5.5929999999999175e-05, 5.5708000000001534e-05, 5.608300000000191e-05, 5.608299999999844e-05, 5.612500000000062e-05, 5.6235999999997704e-05, 5.576400000000328e-05, 5.590299999999951e-05, 5.569499999999797e-05, 5.6514000000000564e-05, 5.6041999999999204e-05, 5.641699999999958e-05, 5.645899999999829e-05, 5.659799999999798e-05, 5.612500000000062e-05, 5.5972000000001354e-05, 5.6264000000000314e-05, 5.587500000000037e-05, 5.5708000000001534e-05, 5.6179999999999425e-05, 5.636099999999783e-05, 5.656899999999937e-05, 5.561100000000055e-05, 5.662500000000112e-05, 5.588899999999994e-05, 5.60549999999993e-05, 5.640300000000001e-05, 5.6499999999997524e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.6055999999998773e-05, 5.6443999999999245e-05, 5.654099999999676e-05, 5.654100000000023e-05, 5.6528000000000134e-05, 5.6208000000002034e-05, 5.607000000000181e-05, 5.656899999999937e-05, 5.606900000000234e-05, 5.6457999999998815e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.6236000000001174e-05, 5.6236000000001174e-05, 5.6429999999999675e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.225" endtime="20201029 12:44:19.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.220" endtime="20201029 12:44:19.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.231" endtime="20201029 12:44:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.230" endtime="20201029 12:44:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.229" endtime="20201029 12:44:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.867" endtime="20201029 12:44:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.866" endtime="20201029 12:44:19.252"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.261" endtime="20201029 12:44:19.281"></status>
</kw>
<msg timestamp="20201029 12:44:19.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.260" endtime="20201029 12:44:19.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.283" endtime="20201029 12:44:19.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.286" endtime="20201029 12:44:19.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.257" endtime="20201029 12:44:19.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.255" endtime="20201029 12:44:19.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.295" endtime="20201029 12:44:19.581"></status>
</kw>
<msg timestamp="20201029 12:44:19.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021066208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.294" endtime="20201029 12:44:19.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021066208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.585" endtime="20201029 12:44:19.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.594" endtime="20201029 12:44:19.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.291" endtime="20201029 12:44:19.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.289" endtime="20201029 12:44:19.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.601" level="INFO">${RESULT} = [{'diff': 5.6999999999998024e-05}, {'diff': 5.75550000000008e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.6721999999998635e-05}, {'diff': 5.691700000000008e-05}, {'diff': 5.7486000000002424e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:19.597" endtime="20201029 12:44:19.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.605" level="INFO">${ACCURACY} = {'diff': [5.6999999999998024e-05, 5.75550000000008e-05, 5.7514000000001564e-05, 5.6721999999998635e-05, 5.691700000000008e-05, 5.7486000000002424e-05, 5.7721999999999635e-05, 5.7193999999999995e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:19.602" endtime="20201029 12:44:19.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.610" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.609" endtime="20201029 12:44:19.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.612" level="INFO">VALUE: [5.6999999999998024e-05, 5.75550000000008e-05, 5.7514000000001564e-05, 5.6721999999998635e-05, 5.691700000000008e-05, 5.7486000000002424e-05, 5.7721999999999635e-05, 5.7193999999999995e-05, 5.683299999999919e-05, 5.743100000000015e-05, 5.7278000000000884e-05, 5.758299999999994e-05, 5.747299999999886e-05, 5.738900000000144e-05, 5.697299999999836e-05, 5.711100000000205e-05, 5.704099999999726e-05, 5.743100000000015e-05, 5.68749999999979e-05, 5.7444000000000245e-05, 5.7513999999998094e-05, 5.738900000000144e-05, 5.708300000000291e-05, 5.6750000000001244e-05, 5.740300000000101e-05, 5.734699999999926e-05, 5.684699999999876e-05, 5.6749999999997774e-05, 5.7235999999998705e-05, 5.708400000000238e-05, 5.7249999999998274e-05, 5.6722000000002104e-05, 5.71809999999999e-05, 5.733299999999969e-05, 5.684699999999876e-05, 5.720899999999904e-05, 5.7388000000001965e-05, 5.758299999999994e-05, 5.7152000000001285e-05, 5.727699999999794e-05, 5.684699999999876e-05, 5.715300000000076e-05, 5.6957999999999315e-05, 5.7278000000000884e-05, 5.7471999999999385e-05, 5.740299999999754e-05, 5.713900000000119e-05, 5.7457999999999815e-05, 5.7207999999999565e-05, 5.682000000000256e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.611" endtime="20201029 12:44:19.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.606" endtime="20201029 12:44:19.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.619" endtime="20201029 12:44:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.617" endtime="20201029 12:44:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.616" endtime="20201029 12:44:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.253" endtime="20201029 12:44:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.253" endtime="20201029 12:44:19.639"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.648" endtime="20201029 12:44:19.668"></status>
</kw>
<msg timestamp="20201029 12:44:19.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.647" endtime="20201029 12:44:19.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.670" endtime="20201029 12:44:19.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.672" endtime="20201029 12:44:19.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.644" endtime="20201029 12:44:19.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.642" endtime="20201029 12:44:19.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.681" endtime="20201029 12:44:19.968"></status>
</kw>
<msg timestamp="20201029 12:44:19.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.680" endtime="20201029 12:44:19.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.972" endtime="20201029 12:44:19.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.981" endtime="20201029 12:44:19.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.677" endtime="20201029 12:44:19.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.675" endtime="20201029 12:44:19.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.988" level="INFO">${RESULT} = [{'diff': 5.815300000000176e-05}, {'diff': 5.7833999999999663e-05}, {'diff': 5.865300000000226e-05}, {'diff': 5.78619999999988e-05}, {'diff': 5.8028000000001634e-05}, {'diff': 5.8458000000000815e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:19.984" endtime="20201029 12:44:19.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.993" level="INFO">${ACCURACY} = {'diff': [5.815300000000176e-05, 5.7833999999999663e-05, 5.865300000000226e-05, 5.78619999999988e-05, 5.8028000000001634e-05, 5.8458000000000815e-05, 5.8070000000000344e-05, 5.7708000000000065e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:19.989" endtime="20201029 12:44:19.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.998" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.997" endtime="20201029 12:44:19.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.000" level="INFO">VALUE: [5.815300000000176e-05, 5.7833999999999663e-05, 5.865300000000226e-05, 5.78619999999988e-05, 5.8028000000001634e-05, 5.8458000000000815e-05, 5.8070000000000344e-05, 5.7708000000000065e-05, 5.8264000000002314e-05, 5.8151999999998816e-05, 5.7915999999998136e-05, 5.8263999999998844e-05, 5.783300000000019e-05, 5.791700000000108e-05, 5.783300000000019e-05, 5.833300000000069e-05, 5.7971999999999885e-05, 5.866700000000183e-05, 5.813899999999872e-05, 5.8000000000002494e-05, 5.8499999999999525e-05, 5.8278000000001884e-05, 5.820900000000004e-05, 5.829099999999851e-05, 5.7721999999999635e-05, 5.8263999999998844e-05, 5.7958000000000315e-05, 5.7902000000002035e-05, 5.78610000000028e-05, 5.788899999999847e-05, 5.8221999999996665e-05, 5.8014000000002064e-05, 5.7680000000000925e-05, 5.786099999999933e-05, 5.8263999999998844e-05, 5.788899999999847e-05, 5.859700000000051e-05, 5.8513999999999095e-05, 5.865300000000226e-05, 5.845900000000029e-05, 5.78480000000027e-05, 5.788900000000194e-05, 5.858300000000094e-05, 5.813899999999872e-05, 5.802699999999869e-05, 5.812499999999915e-05, 5.802699999999869e-05, 5.787500000000237e-05, 5.8042000000001204e-05, 5.858300000000094e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.999" endtime="20201029 12:44:20.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.994" endtime="20201029 12:44:20.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.006" endtime="20201029 12:44:20.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.004" endtime="20201029 12:44:20.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.003" endtime="20201029 12:44:20.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.640" endtime="20201029 12:44:20.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.640" endtime="20201029 12:44:20.027"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.036" endtime="20201029 12:44:20.055"></status>
</kw>
<msg timestamp="20201029 12:44:20.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.034" endtime="20201029 12:44:20.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.056" endtime="20201029 12:44:20.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.059" endtime="20201029 12:44:20.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.031" endtime="20201029 12:44:20.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.029" endtime="20201029 12:44:20.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.068" endtime="20201029 12:44:20.356"></status>
</kw>
<msg timestamp="20201029 12:44:20.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.067" endtime="20201029 12:44:20.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.360" endtime="20201029 12:44:20.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.369" endtime="20201029 12:44:20.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.064" endtime="20201029 12:44:20.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.062" endtime="20201029 12:44:20.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.376" level="INFO">${RESULT} = [{'diff': 5.941699999999911e-05}, {'diff': 5.8777999999998914e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.8708000000001065e-05}, {'diff': 5.9055999999998304e-05}, {'diff': 5.9207999999998095e-05...</msg>
<status status="PASS" starttime="20201029 12:44:20.372" endtime="20201029 12:44:20.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.380" level="INFO">${ACCURACY} = {'diff': [5.941699999999911e-05, 5.8777999999998914e-05, 5.938899999999997e-05, 5.8708000000001065e-05, 5.9055999999998304e-05, 5.9207999999998095e-05, 5.9584000000001414e-05, 5.965299999999979e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:20.377" endtime="20201029 12:44:20.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.384" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.383" endtime="20201029 12:44:20.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.387" level="INFO">VALUE: [5.941699999999911e-05, 5.8777999999998914e-05, 5.938899999999997e-05, 5.8708000000001065e-05, 5.9055999999998304e-05, 5.9207999999998095e-05, 5.9584000000001414e-05, 5.965299999999979e-05, 5.870900000000054e-05, 5.870899999999707e-05, 5.890299999999904e-05, 5.88749999999999e-05, 5.9665999999999886e-05, 5.9165999999999386e-05, 5.8722000000000635e-05, 5.913899999999972e-05, 5.8708000000001065e-05, 5.9222000000001135e-05, 5.9027999999999164e-05, 5.934700000000126e-05, 5.8957999999997845e-05, 5.9013999999999595e-05, 5.938899999999997e-05, 5.886100000000033e-05, 5.9527999999999665e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.941699999999911e-05, 5.9514000000000095e-05, 5.9735999999997735e-05, 5.888899999999947e-05, 5.9151999999999816e-05, 5.9471999999997915e-05, 5.884700000000076e-05, 5.90689999999984e-05, 5.9486000000000955e-05, 5.966699999999936e-05, 5.8764000000002814e-05, 5.858299999999747e-05, 5.943100000000215e-05, 5.883299999999772e-05, 5.8972000000000885e-05, 5.9486000000000955e-05, 5.8819999999997624e-05, 5.905499999999883e-05, 5.869500000000097e-05, 5.894499999999775e-05, 5.88749999999999e-05, 5.8915999999999136e-05, 5.927699999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.386" endtime="20201029 12:44:20.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.381" endtime="20201029 12:44:20.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.392" endtime="20201029 12:44:20.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.391" endtime="20201029 12:44:20.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.390" endtime="20201029 12:44:20.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.027" endtime="20201029 12:44:20.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.027" endtime="20201029 12:44:20.413"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.422" endtime="20201029 12:44:20.445"></status>
</kw>
<msg timestamp="20201029 12:44:20.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.421" endtime="20201029 12:44:20.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.446" endtime="20201029 12:44:20.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.449" endtime="20201029 12:44:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.418" endtime="20201029 12:44:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.416" endtime="20201029 12:44:20.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.459" endtime="20201029 12:44:20.745"></status>
</kw>
<msg timestamp="20201029 12:44:20.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023554319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.457" endtime="20201029 12:44:20.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023554319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.750" endtime="20201029 12:44:20.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.758" endtime="20201029 12:44:20.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.454" endtime="20201029 12:44:20.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.453" endtime="20201029 12:44:20.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.765" level="INFO">${RESULT} = [{'diff': 6.061100000000208e-05}, {'diff': 6.052699999999772e-05}, {'diff': 5.984699999999829e-05}, {'diff': 6.041700000000011e-05}, {'diff': 5.9694000000002495e-05}, {'diff': 6.0542000000000235e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:20.762" endtime="20201029 12:44:20.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.770" level="INFO">${ACCURACY} = {'diff': [6.061100000000208e-05, 6.052699999999772e-05, 5.984699999999829e-05, 6.041700000000011e-05, 5.9694000000002495e-05, 6.0542000000000235e-05, 5.990300000000004e-05, 6.013899999999725e-05, 6.00...</msg>
<status status="PASS" starttime="20201029 12:44:20.766" endtime="20201029 12:44:20.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.774" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.773" endtime="20201029 12:44:20.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.777" level="INFO">VALUE: [6.061100000000208e-05, 6.052699999999772e-05, 5.984699999999829e-05, 6.041700000000011e-05, 5.9694000000002495e-05, 6.0542000000000235e-05, 5.990300000000004e-05, 6.013899999999725e-05, 6.008299999999897e-05, 6.033299999999922e-05, 6.038900000000097e-05, 5.9777999999999915e-05, 6.061099999999861e-05, 6.0264000000000845e-05, 5.9764000000000345e-05, 6.016699999999986e-05, 5.973700000000068e-05, 5.9750000000000775e-05, 5.9902000000000566e-05, 5.979100000000001e-05, 6.058300000000294e-05, 6.013900000000072e-05, 6.037499999999793e-05, 6.0207999999999096e-05, 5.9764000000000345e-05, 6.0528000000000665e-05, 5.98750000000009e-05, 6.015300000000029e-05, 5.9708000000002065e-05, 6.040300000000054e-05, 6.063899999999775e-05, 6.063900000000122e-05, 6.058299999999947e-05, 6.0291999999999984e-05, 6.065300000000079e-05, 5.9972000000001885e-05, 5.983299999999872e-05, 5.9764000000000345e-05, 5.98750000000009e-05, 6.0514000000001095e-05, 5.9750000000000775e-05, 6.05689999999999e-05, 6.008299999999897e-05, 5.9735999999997735e-05, 5.9693999999999026e-05, 6.012500000000115e-05, 5.987499999999743e-05, 5.9986000000001455e-05, 6.0278000000000415e-05, 6.0291999999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.776" endtime="20201029 12:44:20.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.770" endtime="20201029 12:44:20.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.784" endtime="20201029 12:44:20.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.782" endtime="20201029 12:44:20.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.781" endtime="20201029 12:44:20.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.414" endtime="20201029 12:44:20.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.413" endtime="20201029 12:44:20.805"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.814" endtime="20201029 12:44:20.834"></status>
</kw>
<msg timestamp="20201029 12:44:20.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.813" endtime="20201029 12:44:20.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.835" endtime="20201029 12:44:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.838" endtime="20201029 12:44:20.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.810" endtime="20201029 12:44:20.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.808" endtime="20201029 12:44:20.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.848" endtime="20201029 12:44:21.134"></status>
</kw>
<msg timestamp="20201029 12:44:21.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.846" endtime="20201029 12:44:21.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.138" endtime="20201029 12:44:21.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.147" endtime="20201029 12:44:21.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.843" endtime="20201029 12:44:21.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.841" endtime="20201029 12:44:21.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.154" level="INFO">${RESULT} = [{'diff': 6.0569999999999374e-05}, {'diff': 6.10560000000003e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.141600000000164e-05}, {'diff': 6.1013999999998125e-05}, {'diff': 6.0749999999998305e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:21.150" endtime="20201029 12:44:21.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.159" level="INFO">${ACCURACY} = {'diff': [6.0569999999999374e-05, 6.10560000000003e-05, 6.161099999999961e-05, 6.141600000000164e-05, 6.1013999999998125e-05, 6.0749999999998305e-05, 6.113900000000172e-05, 6.138900000000197e-05, 6.12...</msg>
<status status="PASS" starttime="20201029 12:44:21.155" endtime="20201029 12:44:21.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.163" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.162" endtime="20201029 12:44:21.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.166" level="INFO">VALUE: [6.0569999999999374e-05, 6.10560000000003e-05, 6.161099999999961e-05, 6.141600000000164e-05, 6.1013999999998125e-05, 6.0749999999998305e-05, 6.113900000000172e-05, 6.138900000000197e-05, 6.126400000000184e-05, 6.126399999999838e-05, 6.081900000000015e-05, 6.151399999999863e-05, 6.123700000000218e-05, 6.0833999999999194e-05, 6.129199999999752e-05, 6.132000000000012e-05, 6.154200000000123e-05, 6.0833999999999194e-05, 6.154200000000123e-05, 6.104100000000126e-05, 6.0957999999999846e-05, 6.102699999999822e-05, 6.150000000000252e-05, 6.0764000000001345e-05, 6.161099999999961e-05, 6.115300000000129e-05, 6.131900000000065e-05, 6.083299999999972e-05, 6.129200000000098e-05, 6.158300000000047e-05, 6.154200000000123e-05, 6.115299999999782e-05, 6.137499999999893e-05, 6.1013999999998125e-05, 6.125000000000227e-05, 6.148599999999949e-05, 6.152800000000166e-05, 6.115200000000182e-05, 6.104099999999779e-05, 6.119400000000053e-05, 6.141600000000164e-05, 6.1014000000001595e-05, 6.129100000000151e-05, 6.111099999999911e-05, 6.117999999999749e-05, 6.108299999999997e-05, 6.127800000000141e-05, 6.148599999999949e-05, 6.156899999999743e-05, 6.0735999999998735e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.165" endtime="20201029 12:44:21.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.160" endtime="20201029 12:44:21.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.171" endtime="20201029 12:44:21.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.170" endtime="20201029 12:44:21.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.168" endtime="20201029 12:44:21.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.806" endtime="20201029 12:44:21.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.806" endtime="20201029 12:44:21.192"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.201" endtime="20201029 12:44:21.220"></status>
</kw>
<msg timestamp="20201029 12:44:21.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.199" endtime="20201029 12:44:21.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.222" endtime="20201029 12:44:21.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.225" endtime="20201029 12:44:21.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.197" endtime="20201029 12:44:21.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.195" endtime="20201029 12:44:21.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.234" endtime="20201029 12:44:21.520"></status>
</kw>
<msg timestamp="20201029 12:44:21.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.232" endtime="20201029 12:44:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.524" endtime="20201029 12:44:21.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.533" endtime="20201029 12:44:21.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.230" endtime="20201029 12:44:21.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.228" endtime="20201029 12:44:21.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.540" level="INFO">${RESULT} = [{'diff': 6.219399999999806e-05}, {'diff': 6.240299999999907e-05}, {'diff': 6.213899999999925e-05}, {'diff': 6.241700000000211e-05}, {'diff': 6.213900000000272e-05}, {'diff': 6.251399999999963e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:21.537" endtime="20201029 12:44:21.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.544" level="INFO">${ACCURACY} = {'diff': [6.219399999999806e-05, 6.240299999999907e-05, 6.213899999999925e-05, 6.241700000000211e-05, 6.213900000000272e-05, 6.251399999999963e-05, 6.247300000000039e-05, 6.248600000000049e-05, 6.2416...</msg>
<status status="PASS" starttime="20201029 12:44:21.541" endtime="20201029 12:44:21.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.549" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.548" endtime="20201029 12:44:21.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.551" level="INFO">VALUE: [6.219399999999806e-05, 6.240299999999907e-05, 6.213899999999925e-05, 6.241700000000211e-05, 6.213900000000272e-05, 6.251399999999963e-05, 6.247300000000039e-05, 6.248600000000049e-05, 6.241699999999864e-05, 6.190200000000257e-05, 6.245900000000082e-05, 6.17499999999993e-05, 6.245800000000135e-05, 6.227700000000294e-05, 6.195800000000085e-05, 6.17080000000006e-05, 6.200000000000302e-05, 6.1888999999999e-05, 6.22219999999972e-05, 6.191699999999814e-05, 6.244400000000178e-05, 6.172200000000017e-05, 6.179199999999802e-05, 6.190299999999857e-05, 6.218099999999796e-05, 6.258400000000094e-05, 6.16950000000005e-05, 6.211100000000011e-05, 6.222200000000067e-05, 6.22080000000011e-05, 6.24019999999996e-05, 6.187499999999943e-05, 6.25279999999992e-05, 6.242999999999874e-05, 6.198600000000346e-05, 6.240300000000254e-05, 6.173599999999974e-05, 6.231900000000165e-05, 6.232000000000112e-05, 6.169400000000103e-05, 6.254199999999877e-05, 6.190299999999857e-05, 6.227800000000241e-05, 6.23889999999995e-05, 6.22089999999971e-05, 6.168100000000093e-05, 6.20699999999974e-05, 6.198699999999946e-05, 6.252800000000266e-05, 6.169400000000103e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.550" endtime="20201029 12:44:21.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.545" endtime="20201029 12:44:21.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.628" endtime="20201029 12:44:21.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.626" endtime="20201029 12:44:21.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.625" endtime="20201029 12:44:21.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.193" endtime="20201029 12:44:21.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.192" endtime="20201029 12:44:21.648"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.658" endtime="20201029 12:44:21.678"></status>
</kw>
<msg timestamp="20201029 12:44:21.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.656" endtime="20201029 12:44:21.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.680" endtime="20201029 12:44:21.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.683" endtime="20201029 12:44:21.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.653" endtime="20201029 12:44:21.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.651" endtime="20201029 12:44:21.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.692" endtime="20201029 12:44:21.979"></status>
</kw>
<msg timestamp="20201029 12:44:21.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.690" endtime="20201029 12:44:21.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.984" endtime="20201029 12:44:21.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.992" endtime="20201029 12:44:21.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.688" endtime="20201029 12:44:21.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.686" endtime="20201029 12:44:21.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.999" level="INFO">${RESULT} = [{'diff': 6.32500000000008e-05}, {'diff': 6.336099999999789e-05}, {'diff': 6.30279999999997e-05}, {'diff': 6.30279999999997e-05}, {'diff': 6.361100000000161e-05}, {'diff': 6.297299999999742e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:21.996" endtime="20201029 12:44:21.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.003" level="INFO">${ACCURACY} = {'diff': [6.32500000000008e-05, 6.336099999999789e-05, 6.30279999999997e-05, 6.30279999999997e-05, 6.361100000000161e-05, 6.297299999999742e-05, 6.370799999999913e-05, 6.329199999999952e-05, 6.2943999...</msg>
<status status="PASS" starttime="20201029 12:44:22.000" endtime="20201029 12:44:22.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.008" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.007" endtime="20201029 12:44:22.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.011" level="INFO">VALUE: [6.32500000000008e-05, 6.336099999999789e-05, 6.30279999999997e-05, 6.30279999999997e-05, 6.361100000000161e-05, 6.297299999999742e-05, 6.370799999999913e-05, 6.329199999999952e-05, 6.29439999999988e-05, 6.270799999999813e-05, 6.27630000000004e-05, 6.27080000000016e-05, 6.330500000000308e-05, 6.331900000000265e-05, 6.329200000000298e-05, 6.326400000000038e-05, 6.32219999999982e-05, 6.311100000000111e-05, 6.334700000000179e-05, 6.29439999999988e-05, 6.35560000000028e-05, 6.331900000000265e-05, 6.270900000000107e-05, 6.270900000000107e-05, 6.30279999999997e-05, 6.331999999999866e-05, 6.28340000000012e-05, 6.308400000000144e-05, 6.301300000000065e-05, 6.345800000000235e-05, 6.302700000000022e-05, 6.362499999999771e-05, 6.348600000000149e-05, 6.33479999999978e-05, 6.32080000000021e-05, 6.290299999999957e-05, 6.309700000000154e-05, 6.305599999999884e-05, 6.347199999999845e-05, 6.297200000000142e-05, 6.338899999999703e-05, 6.331999999999866e-05, 6.359799999999804e-05, 6.291599999999967e-05, 6.32630000000009e-05, 6.356899999999943e-05, 6.284700000000129e-05, 6.327700000000047e-05, 6.333299999999875e-05, 6.320799999999863e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.009" endtime="20201029 12:44:22.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.004" endtime="20201029 12:44:22.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.017" endtime="20201029 12:44:22.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.015" endtime="20201029 12:44:22.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.014" endtime="20201029 12:44:22.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.649" endtime="20201029 12:44:22.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.649" endtime="20201029 12:44:22.038"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.047" endtime="20201029 12:44:22.066"></status>
</kw>
<msg timestamp="20201029 12:44:22.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.045" endtime="20201029 12:44:22.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.068" endtime="20201029 12:44:22.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.070" endtime="20201029 12:44:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.042" endtime="20201029 12:44:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.040" endtime="20201029 12:44:22.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.080" endtime="20201029 12:44:22.382"></status>
</kw>
<msg timestamp="20201029 12:44:22.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.078" endtime="20201029 12:44:22.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.387" endtime="20201029 12:44:22.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.395" endtime="20201029 12:44:22.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.075" endtime="20201029 12:44:22.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.073" endtime="20201029 12:44:22.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.402" level="INFO">${RESULT} = [{'diff': 6.429200000000052e-05}, {'diff': 6.401400000000113e-05}, {'diff': 6.40280000000007e-05}, {'diff': 6.377700000000097e-05}, {'diff': 6.395799999999938e-05}, {'diff': 6.427800000000095e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:22.399" endtime="20201029 12:44:22.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.407" level="INFO">${ACCURACY} = {'diff': [6.429200000000052e-05, 6.401400000000113e-05, 6.40280000000007e-05, 6.377700000000097e-05, 6.395799999999938e-05, 6.427800000000095e-05, 6.430600000000009e-05, 6.40829999999995e-05, 6.426399...</msg>
<status status="PASS" starttime="20201029 12:44:22.403" endtime="20201029 12:44:22.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.412" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.411" endtime="20201029 12:44:22.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.415" level="INFO">VALUE: [6.429200000000052e-05, 6.401400000000113e-05, 6.40280000000007e-05, 6.377700000000097e-05, 6.395799999999938e-05, 6.427800000000095e-05, 6.430600000000009e-05, 6.40829999999995e-05, 6.42639999999979e-05, 6.395799999999938e-05, 6.379200000000002e-05, 6.413900000000125e-05, 6.462500000000218e-05, 6.448600000000249e-05, 6.441699999999717e-05, 6.38479999999983e-05, 6.42500000000018e-05, 6.411199999999811e-05, 6.418099999999996e-05, 6.415200000000135e-05, 6.427700000000147e-05, 6.437499999999846e-05, 6.404099999999732e-05, 6.40280000000007e-05, 6.384699999999882e-05, 6.408300000000297e-05, 6.456899999999696e-05, 6.418099999999996e-05, 6.411099999999864e-05, 6.3889000000001e-05, 6.40829999999995e-05, 6.415300000000082e-05, 6.466699999999742e-05, 6.40419999999968e-05, 6.431999999999966e-05, 6.42219999999992e-05, 6.384700000000229e-05, 6.431900000000018e-05, 6.402799999999723e-05, 6.413899999999778e-05, 6.42219999999992e-05, 6.406899999999993e-05, 6.430600000000009e-05, 6.465300000000132e-05, 6.430600000000009e-05, 6.37080000000026e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.368099999999946e-05, 6.402799999999723e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.413" endtime="20201029 12:44:22.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.408" endtime="20201029 12:44:22.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.420" endtime="20201029 12:44:22.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.418" endtime="20201029 12:44:22.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.417" endtime="20201029 12:44:22.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.039" endtime="20201029 12:44:22.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.038" endtime="20201029 12:44:22.441"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.450" endtime="20201029 12:44:22.469"></status>
</kw>
<msg timestamp="20201029 12:44:22.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.448" endtime="20201029 12:44:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.470" endtime="20201029 12:44:22.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.473" endtime="20201029 12:44:22.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.445" endtime="20201029 12:44:22.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.443" endtime="20201029 12:44:22.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.482" endtime="20201029 12:44:22.769"></status>
</kw>
<msg timestamp="20201029 12:44:22.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.481" endtime="20201029 12:44:22.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.773" endtime="20201029 12:44:22.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.782" endtime="20201029 12:44:22.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.478" endtime="20201029 12:44:22.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.476" endtime="20201029 12:44:22.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.789" level="INFO">${RESULT} = [{'diff': 6.518100000000096e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.566700000000189e-05}, {'diff': 6.54029999999986e-05}, {'diff': 6.495800000000038e-05}, {'diff': 6.565300000000232e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:22.786" endtime="20201029 12:44:22.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.793" level="INFO">${ACCURACY} = {'diff': [6.518100000000096e-05, 6.549999999999959e-05, 6.566700000000189e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.565300000000232e-05, 6.494500000000028e-05, 6.516700000000139e-05, 6.53479...</msg>
<status status="PASS" starttime="20201029 12:44:22.790" endtime="20201029 12:44:22.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.798" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.797" endtime="20201029 12:44:22.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.800" level="INFO">VALUE: [6.518100000000096e-05, 6.549999999999959e-05, 6.566700000000189e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.565300000000232e-05, 6.494500000000028e-05, 6.516700000000139e-05, 6.53479999999998e-05, 6.49029999999981e-05, 6.520799999999716e-05, 6.52639999999989e-05, 6.552699999999925e-05, 6.47769999999985e-05, 6.50830000000005e-05, 6.54440000000013e-05, 6.516599999999845e-05, 6.497199999999995e-05, 6.54440000000013e-05, 6.565299999999885e-05, 6.491699999999767e-05, 6.565299999999885e-05, 6.495800000000038e-05, 6.473599999999927e-05, 6.520800000000063e-05, 6.476400000000188e-05, 6.549999999999959e-05, 6.48340000000032e-05, 6.512499999999921e-05, 6.52639999999989e-05, 6.554099999999882e-05, 6.498599999999952e-05, 6.55700000000009e-05, 6.545800000000088e-05, 6.53479999999998e-05, 6.47639999999984e-05, 6.502799999999823e-05, 6.520799999999716e-05, 6.538899999999903e-05, 6.473600000000274e-05, 6.537500000000293e-05, 6.538899999999903e-05, 6.55280000000022e-05, 6.548600000000002e-05, 6.52090000000001e-05, 6.468099999999699e-05, 6.473599999999927e-05, 6.568100000000146e-05, 6.483300000000025e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.799" endtime="20201029 12:44:22.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.794" endtime="20201029 12:44:22.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.806" endtime="20201029 12:44:22.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.805" endtime="20201029 12:44:22.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.803" endtime="20201029 12:44:22.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.442" endtime="20201029 12:44:22.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.441" endtime="20201029 12:44:22.827"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.837" endtime="20201029 12:44:22.856"></status>
</kw>
<msg timestamp="20201029 12:44:22.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.835" endtime="20201029 12:44:22.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.858" endtime="20201029 12:44:22.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.861" endtime="20201029 12:44:22.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.832" endtime="20201029 12:44:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.830" endtime="20201029 12:44:22.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.870" endtime="20201029 12:44:23.157"></status>
</kw>
<msg timestamp="20201029 12:44:23.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.869" endtime="20201029 12:44:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.161" endtime="20201029 12:44:23.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.170" endtime="20201029 12:44:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.866" endtime="20201029 12:44:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.864" endtime="20201029 12:44:23.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.177" level="INFO">${RESULT} = [{'diff': 6.641699999999917e-05}, {'diff': 6.581900000000168e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.618100000000196e-05}, {'diff': 6.572199999999723e-05}, {'diff': 6.595900000000085e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:23.173" endtime="20201029 12:44:23.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.181" level="INFO">${ACCURACY} = {'diff': [6.641699999999917e-05, 6.581900000000168e-05, 6.661100000000114e-05, 6.618100000000196e-05, 6.572199999999723e-05, 6.595900000000085e-05, 6.662500000000071e-05, 6.57639999999994e-05, 6.63750...</msg>
<status status="PASS" starttime="20201029 12:44:23.178" endtime="20201029 12:44:23.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.186" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.185" endtime="20201029 12:44:23.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.188" level="INFO">VALUE: [6.641699999999917e-05, 6.581900000000168e-05, 6.661100000000114e-05, 6.618100000000196e-05, 6.572199999999723e-05, 6.595900000000085e-05, 6.662500000000071e-05, 6.57639999999994e-05, 6.637500000000046e-05, 6.645900000000135e-05, 6.620799999999816e-05, 6.601399999999966e-05, 6.656899999999896e-05, 6.580500000000211e-05, 6.634699999999785e-05, 6.647200000000145e-05, 6.579199999999855e-05, 6.640300000000307e-05, 6.651400000000016e-05, 6.598600000000052e-05, 6.577799999999898e-05, 6.666699999999942e-05, 6.64029999999996e-05, 6.601400000000313e-05, 6.644499999999831e-05, 6.647300000000092e-05, 6.652700000000025e-05, 6.580499999999864e-05, 6.598600000000052e-05, 6.64159999999997e-05, 6.634699999999785e-05, 6.597200000000095e-05, 6.67090000000016e-05, 6.598600000000052e-05, 6.625000000000034e-05, 6.627800000000295e-05, 6.60419999999988e-05, 6.57639999999994e-05, 6.591700000000214e-05, 6.611200000000012e-05, 6.64029999999996e-05, 6.569500000000103e-05, 6.602699999999975e-05, 6.622199999999773e-05, 6.57639999999994e-05, 6.652700000000025e-05, 6.623600000000077e-05, 6.62220000000012e-05, 6.622199999999773e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.187" endtime="20201029 12:44:23.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.182" endtime="20201029 12:44:23.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.194" endtime="20201029 12:44:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.193" endtime="20201029 12:44:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.192" endtime="20201029 12:44:23.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.828" endtime="20201029 12:44:23.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.828" endtime="20201029 12:44:23.215"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.224" endtime="20201029 12:44:23.244"></status>
</kw>
<msg timestamp="20201029 12:44:23.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.223" endtime="20201029 12:44:23.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.246" endtime="20201029 12:44:23.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.248" endtime="20201029 12:44:23.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.220" endtime="20201029 12:44:23.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.218" endtime="20201029 12:44:23.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.258" endtime="20201029 12:44:23.544"></status>
</kw>
<msg timestamp="20201029 12:44:23.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.256" endtime="20201029 12:44:23.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.548" endtime="20201029 12:44:23.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.557" endtime="20201029 12:44:23.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.254" endtime="20201029 12:44:23.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.252" endtime="20201029 12:44:23.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.564" level="INFO">${RESULT} = [{'diff': 6.686099999999792e-05}, {'diff': 6.679199999999955e-05}, {'diff': 6.731999999999919e-05}, {'diff': 6.695900000000185e-05}, {'diff': 6.67359999999978e-05}, {'diff': 6.737500000000146e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:23.560" endtime="20201029 12:44:23.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.569" level="INFO">${ACCURACY} = {'diff': [6.686099999999792e-05, 6.679199999999955e-05, 6.731999999999919e-05, 6.695900000000185e-05, 6.67359999999978e-05, 6.737500000000146e-05, 6.754100000000082e-05, 6.67220000000017e-05, 6.748600...</msg>
<status status="PASS" starttime="20201029 12:44:23.565" endtime="20201029 12:44:23.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.575" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.574" endtime="20201029 12:44:23.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.578" level="INFO">VALUE: [6.686099999999792e-05, 6.679199999999955e-05, 6.731999999999919e-05, 6.695900000000185e-05, 6.67359999999978e-05, 6.737500000000146e-05, 6.754100000000082e-05, 6.67220000000017e-05, 6.748600000000202e-05, 6.747199999999898e-05, 6.719499999999906e-05, 6.734700000000232e-05, 6.700000000000109e-05, 6.672199999999823e-05, 6.684699999999835e-05, 6.675000000000084e-05, 6.765300000000085e-05, 6.679199999999955e-05, 6.745900000000235e-05, 6.722199999999873e-05, 6.695899999999838e-05, 6.712500000000121e-05, 6.765199999999791e-05, 6.738800000000156e-05, 6.731899999999971e-05, 6.763899999999781e-05, 6.681899999999921e-05, 6.74169999999967e-05, 6.695799999999891e-05, 6.684700000000182e-05, 6.698599999999805e-05, 6.675000000000084e-05, 6.679200000000302e-05, 6.665299999999985e-05, 6.729200000000005e-05, 6.732000000000266e-05, 6.727799999999701e-05, 6.701400000000066e-05, 6.672300000000117e-05, 6.740199999999766e-05, 6.738799999999809e-05, 6.733299999999928e-05, 6.747199999999898e-05, 6.755500000000039e-05, 6.747200000000245e-05, 6.70419999999998e-05, 6.720799999999916e-05, 6.72359999999983e-05, 6.716699999999992e-05, 6.702799999999676e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.577" endtime="20201029 12:44:23.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.571" endtime="20201029 12:44:23.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.583" endtime="20201029 12:44:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.582" endtime="20201029 12:44:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.580" endtime="20201029 12:44:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.216" endtime="20201029 12:44:23.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.216" endtime="20201029 12:44:23.604"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.613" endtime="20201029 12:44:23.632"></status>
</kw>
<msg timestamp="20201029 12:44:23.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.612" endtime="20201029 12:44:23.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.634" endtime="20201029 12:44:23.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.636" endtime="20201029 12:44:23.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.609" endtime="20201029 12:44:23.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.607" endtime="20201029 12:44:23.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.646" endtime="20201029 12:44:23.934"></status>
</kw>
<msg timestamp="20201029 12:44:23.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.644" endtime="20201029 12:44:23.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.938" endtime="20201029 12:44:23.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.947" endtime="20201029 12:44:23.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.642" endtime="20201029 12:44:23.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.640" endtime="20201029 12:44:23.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.953" level="INFO">${RESULT} = [{'diff': 6.852800000000173e-05}, {'diff': 6.806900000000046e-05}, {'diff': 6.845899999999988e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.840199999999866e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:23.950" endtime="20201029 12:44:23.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.958" level="INFO">${ACCURACY} = {'diff': [6.852800000000173e-05, 6.806900000000046e-05, 6.845899999999988e-05, 6.848599999999955e-05, 6.794400000000034e-05, 6.840199999999866e-05, 6.769400000000009e-05, 6.834699999999985e-05, 6.7889...</msg>
<status status="PASS" starttime="20201029 12:44:23.955" endtime="20201029 12:44:23.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.963" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.961" endtime="20201029 12:44:23.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.965" level="INFO">VALUE: [6.852800000000173e-05, 6.806900000000046e-05, 6.845899999999988e-05, 6.848599999999955e-05, 6.794400000000034e-05, 6.840199999999866e-05, 6.769400000000009e-05, 6.834699999999985e-05, 6.788900000000153e-05, 6.845800000000041e-05, 6.862499999999924e-05, 6.845800000000041e-05, 6.838899999999856e-05, 6.809800000000255e-05, 6.816700000000092e-05, 6.845899999999988e-05, 6.798700000000199e-05, 6.791700000000067e-05, 6.795899999999938e-05, 6.806999999999994e-05, 6.784699999999935e-05, 6.787499999999849e-05, 6.82359999999993e-05, 6.775000000000184e-05, 6.808300000000003e-05, 6.852800000000173e-05, 6.852800000000173e-05, 6.806999999999994e-05, 6.863899999999881e-05, 6.786100000000239e-05, 6.84030000000016e-05, 6.806900000000046e-05, 6.852800000000173e-05, 6.797299999999895e-05, 6.84030000000016e-05, 6.801399999999819e-05, 6.77220000000027e-05, 6.815200000000188e-05, 6.802699999999828e-05, 6.808300000000003e-05, 6.861099999999967e-05, 6.781900000000021e-05, 6.844400000000084e-05, 6.787499999999849e-05, 6.809700000000307e-05, 6.780600000000012e-05, 6.791700000000067e-05, 6.824999999999887e-05, 6.813899999999831e-05, 6.840299999999813e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.964" endtime="20201029 12:44:23.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.959" endtime="20201029 12:44:23.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.970" endtime="20201029 12:44:23.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.969" endtime="20201029 12:44:23.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.968" endtime="20201029 12:44:23.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.605" endtime="20201029 12:44:23.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.604" endtime="20201029 12:44:23.991"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.001" endtime="20201029 12:44:24.024"></status>
</kw>
<msg timestamp="20201029 12:44:24.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.999" endtime="20201029 12:44:24.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.025" endtime="20201029 12:44:24.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.028" endtime="20201029 12:44:24.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.996" endtime="20201029 12:44:24.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.994" endtime="20201029 12:44:24.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.037" endtime="20201029 12:44:24.323"></status>
</kw>
<msg timestamp="20201029 12:44:24.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.036" endtime="20201029 12:44:24.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.328" endtime="20201029 12:44:24.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.336" endtime="20201029 12:44:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.033" endtime="20201029 12:44:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.031" endtime="20201029 12:44:24.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.343" level="INFO">${RESULT} = [{'diff': 6.965299999999938e-05}, {'diff': 6.965300000000285e-05}, {'diff': 6.966700000000242e-05}, {'diff': 6.901399999999919e-05}, {'diff': 6.95420000000023e-05}, {'diff': 6.940299999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:24.340" endtime="20201029 12:44:24.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.347" level="INFO">${ACCURACY} = {'diff': [6.965299999999938e-05, 6.965300000000285e-05, 6.966700000000242e-05, 6.901399999999919e-05, 6.95420000000023e-05, 6.940299999999913e-05, 6.920800000000116e-05, 6.947300000000045e-05, 6.88340...</msg>
<status status="PASS" starttime="20201029 12:44:24.344" endtime="20201029 12:44:24.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.352" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.351" endtime="20201029 12:44:24.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.354" level="INFO">VALUE: [6.965299999999938e-05, 6.965300000000285e-05, 6.966700000000242e-05, 6.901399999999919e-05, 6.95420000000023e-05, 6.940299999999913e-05, 6.920800000000116e-05, 6.947300000000045e-05, 6.883400000000026e-05, 6.936100000000042e-05, 6.962500000000024e-05, 6.947300000000045e-05, 6.89030000000021e-05, 6.895800000000091e-05, 6.905600000000137e-05, 6.922200000000073e-05, 6.961100000000067e-05, 6.884700000000035e-05, 6.923700000000324e-05, 6.883300000000078e-05, 6.902799999999876e-05, 6.89169999999982e-05, 6.919500000000106e-05, 6.929100000000257e-05, 6.922200000000073e-05, 6.956899999999849e-05, 6.951300000000021e-05, 6.948600000000055e-05, 6.956899999999849e-05, 6.940299999999913e-05, 6.938899999999956e-05, 6.922200000000073e-05, 6.877799999999851e-05, 6.922199999999726e-05, 6.938899999999956e-05, 6.894500000000081e-05, 6.933400000000076e-05, 6.9584000000001e-05, 6.87770000000025e-05, 6.948599999999708e-05, 6.881899999999774e-05, 6.920900000000063e-05, 6.898600000000005e-05, 6.944400000000184e-05, 6.906900000000146e-05, 6.965299999999938e-05, 6.951399999999969e-05, 6.872200000000023e-05, 6.883300000000078e-05, 6.927799999999901e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.353" endtime="20201029 12:44:24.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.348" endtime="20201029 12:44:24.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.361" endtime="20201029 12:44:24.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.359" endtime="20201029 12:44:24.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.358" endtime="20201029 12:44:24.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.992" endtime="20201029 12:44:24.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.992" endtime="20201029 12:44:24.381"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.390" endtime="20201029 12:44:24.411"></status>
</kw>
<msg timestamp="20201029 12:44:24.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.389" endtime="20201029 12:44:24.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.413" endtime="20201029 12:44:24.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.417" endtime="20201029 12:44:24.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.386" endtime="20201029 12:44:24.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.384" endtime="20201029 12:44:24.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.428" endtime="20201029 12:44:24.715"></status>
</kw>
<msg timestamp="20201029 12:44:24.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.427" endtime="20201029 12:44:24.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.720" endtime="20201029 12:44:24.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.728" endtime="20201029 12:44:24.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.424" endtime="20201029 12:44:24.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.422" endtime="20201029 12:44:24.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.735" level="INFO">${RESULT} = [{'diff': 7.037499999999752e-05}, {'diff': 7.020899999999816e-05}, {'diff': 6.988900000000006e-05}, {'diff': 6.970800000000166e-05}, {'diff': 7.040200000000066e-05}, {'diff': 6.999999999999715e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:24.732" endtime="20201029 12:44:24.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.740" level="INFO">${ACCURACY} = {'diff': [7.037499999999752e-05, 7.020899999999816e-05, 6.988900000000006e-05, 6.970800000000166e-05, 7.040200000000066e-05, 6.999999999999715e-05, 6.998599999999758e-05, 6.972200000000123e-05, 7.0054...</msg>
<status status="PASS" starttime="20201029 12:44:24.736" endtime="20201029 12:44:24.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.745" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.744" endtime="20201029 12:44:24.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.747" level="INFO">VALUE: [7.037499999999752e-05, 7.020899999999816e-05, 6.988900000000006e-05, 6.970800000000166e-05, 7.040200000000066e-05, 6.999999999999715e-05, 6.998599999999758e-05, 6.972200000000123e-05, 7.005499999999942e-05, 6.987500000000049e-05, 7.038900000000056e-05, 7.065300000000038e-05, 7.01109999999977e-05, 6.980599999999865e-05, 7.043099999999927e-05, 7.065300000000038e-05, 6.979199999999908e-05, 7.045900000000188e-05, 7.000000000000062e-05, 7.002700000000028e-05, 7.006999999999847e-05, 7.065200000000091e-05, 6.984700000000135e-05, 7.022199999999826e-05, 7.001400000000019e-05, 6.976399999999994e-05, 7.040300000000013e-05, 7.004199999999933e-05, 6.982000000000169e-05, 7.05970000000021e-05, 7.027800000000001e-05, 7.05559999999994e-05, 6.991700000000267e-05, 7.048599999999808e-05, 7.063900000000081e-05, 7.009800000000108e-05, 7.030499999999967e-05, 7.015200000000041e-05, 7.026300000000096e-05, 7.040300000000013e-05, 7.023599999999783e-05, 7.045799999999894e-05, 7.025000000000087e-05, 7.001400000000019e-05, 6.969400000000209e-05, 7.034799999999786e-05, 7.004199999999933e-05, 7.019500000000206e-05, 7.04169999999997e-05, 6.987500000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.746" endtime="20201029 12:44:24.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.741" endtime="20201029 12:44:24.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.753" endtime="20201029 12:44:24.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.751" endtime="20201029 12:44:24.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.750" endtime="20201029 12:44:24.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.382" endtime="20201029 12:44:24.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.382" endtime="20201029 12:44:24.773"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.782" endtime="20201029 12:44:24.802"></status>
</kw>
<msg timestamp="20201029 12:44:24.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.781" endtime="20201029 12:44:24.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.803" endtime="20201029 12:44:24.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.806" endtime="20201029 12:44:24.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.778" endtime="20201029 12:44:24.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.776" endtime="20201029 12:44:24.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.815" endtime="20201029 12:44:25.105"></status>
</kw>
<msg timestamp="20201029 12:44:25.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.814" endtime="20201029 12:44:25.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.110" endtime="20201029 12:44:25.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.118" endtime="20201029 12:44:25.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.811" endtime="20201029 12:44:25.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.809" endtime="20201029 12:44:25.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.124" level="INFO">${RESULT} = [{'diff': 7.149999999999865e-05}, {'diff': 7.149999999999865e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.087499999999802e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.163899999999834e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:25.121" endtime="20201029 12:44:25.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.129" level="INFO">${ACCURACY} = {'diff': [7.149999999999865e-05, 7.149999999999865e-05, 7.15560000000004e-05, 7.087499999999802e-05, 7.154200000000083e-05, 7.163899999999834e-05, 7.147199999999951e-05, 7.101400000000119e-05, 7.16670...</msg>
<status status="PASS" starttime="20201029 12:44:25.125" endtime="20201029 12:44:25.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.133" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.132" endtime="20201029 12:44:25.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.135" level="INFO">VALUE: [7.149999999999865e-05, 7.149999999999865e-05, 7.15560000000004e-05, 7.087499999999802e-05, 7.154200000000083e-05, 7.163899999999834e-05, 7.147199999999951e-05, 7.101400000000119e-05, 7.166700000000095e-05, 7.075000000000137e-05, 7.133399999999929e-05, 7.140300000000113e-05, 7.081999999999922e-05, 7.127700000000153e-05, 7.080500000000017e-05, 7.101399999999772e-05, 7.102800000000076e-05, 7.166700000000095e-05, 7.07360000000018e-05, 7.151400000000169e-05, 7.07360000000018e-05, 7.127800000000101e-05, 7.09170000000002e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.094499999999934e-05, 7.134799999999886e-05, 7.120899999999916e-05, 7.076300000000146e-05, 7.058300000000253e-05, 7.090200000000116e-05, 7.072199999999876e-05, 7.113900000000131e-05, 7.106999999999947e-05, 7.144499999999984e-05, 7.101400000000119e-05, 7.158300000000006e-05, 7.112499999999827e-05, 7.165300000000138e-05, 7.108299999999956e-05, 7.10979999999986e-05, 7.127800000000101e-05, 7.070900000000213e-05, 7.084799999999836e-05, 7.098599999999858e-05, 7.149999999999865e-05, 7.100000000000162e-05, 7.165200000000191e-05, 7.154100000000135e-05, 7.136099999999895e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.134" endtime="20201029 12:44:25.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.129" endtime="20201029 12:44:25.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.141" endtime="20201029 12:44:25.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.139" endtime="20201029 12:44:25.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.138" endtime="20201029 12:44:25.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.774" endtime="20201029 12:44:25.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.774" endtime="20201029 12:44:25.161"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.170" endtime="20201029 12:44:25.191"></status>
</kw>
<msg timestamp="20201029 12:44:25.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.168" endtime="20201029 12:44:25.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.192" endtime="20201029 12:44:25.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.195" endtime="20201029 12:44:25.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.166" endtime="20201029 12:44:25.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.164" endtime="20201029 12:44:25.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.203" endtime="20201029 12:44:25.489"></status>
</kw>
<msg timestamp="20201029 12:44:25.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020555833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.202" endtime="20201029 12:44:25.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020555833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.494" endtime="20201029 12:44:25.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.502" endtime="20201029 12:44:25.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.199" endtime="20201029 12:44:25.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.198" endtime="20201029 12:44:25.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.509" level="INFO">${RESULT} = [{'diff': 7.240300000000213e-05}, {'diff': 7.256899999999802e-05}, {'diff': 7.245799999999747e-05}, {'diff': 7.184699999999988e-05}, {'diff': 7.244400000000137e-05}, {'diff': 7.198599999999958e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.505" endtime="20201029 12:44:25.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.513" level="INFO">${ACCURACY} = {'diff': [7.240300000000213e-05, 7.256899999999802e-05, 7.245799999999747e-05, 7.184699999999988e-05, 7.244400000000137e-05, 7.198599999999958e-05, 7.219500000000059e-05, 7.263899999999934e-05, 7.1931...</msg>
<status status="PASS" starttime="20201029 12:44:25.510" endtime="20201029 12:44:25.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.517" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.516" endtime="20201029 12:44:25.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.520" level="INFO">VALUE: [7.240300000000213e-05, 7.256899999999802e-05, 7.245799999999747e-05, 7.184699999999988e-05, 7.244400000000137e-05, 7.198599999999958e-05, 7.219500000000059e-05, 7.263899999999934e-05, 7.193100000000077e-05, 7.227800000000201e-05, 7.229200000000158e-05, 7.227799999999854e-05, 7.226400000000244e-05, 7.21109999999997e-05, 7.195800000000044e-05, 7.265200000000291e-05, 7.234700000000038e-05, 7.222200000000026e-05, 7.258300000000106e-05, 7.215299999999841e-05, 7.265299999999891e-05, 7.173599999999933e-05, 7.234700000000038e-05, 7.259700000000063e-05, 7.190299999999816e-05, 7.179200000000108e-05, 7.180600000000065e-05, 7.202799999999829e-05, 7.22499999999994e-05, 7.234700000000038e-05, 7.254099999999888e-05, 7.192999999999783e-05, 7.197200000000001e-05, 7.172199999999976e-05, 7.262499999999977e-05, 7.186100000000292e-05, 7.26110000000002e-05, 7.195800000000044e-05, 7.208300000000056e-05, 7.202799999999829e-05, 7.262500000000324e-05, 7.233300000000081e-05, 7.229199999999811e-05, 7.190300000000163e-05, 7.249999999999965e-05, 7.259700000000063e-05, 7.191599999999826e-05, 7.236099999999995e-05, 7.238899999999909e-05, 7.234700000000038e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.518" endtime="20201029 12:44:25.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.513" endtime="20201029 12:44:25.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.526" endtime="20201029 12:44:25.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.524" endtime="20201029 12:44:25.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.523" endtime="20201029 12:44:25.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.162" endtime="20201029 12:44:25.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.161" endtime="20201029 12:44:25.546"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.555" endtime="20201029 12:44:25.575"></status>
</kw>
<msg timestamp="20201029 12:44:25.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.553" endtime="20201029 12:44:25.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.576" endtime="20201029 12:44:25.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.579" endtime="20201029 12:44:25.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.551" endtime="20201029 12:44:25.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.549" endtime="20201029 12:44:25.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.587" endtime="20201029 12:44:25.877"></status>
</kw>
<msg timestamp="20201029 12:44:25.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.586" endtime="20201029 12:44:25.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.881" endtime="20201029 12:44:25.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.889" endtime="20201029 12:44:25.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.583" endtime="20201029 12:44:25.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.582" endtime="20201029 12:44:25.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.896" level="INFO">${RESULT} = [{'diff': 7.329199999999911e-05}, {'diff': 7.290300000000263e-05}, {'diff': 7.301399999999972e-05}, {'diff': 7.340199999999672e-05}, {'diff': 7.366600000000001e-05}, {'diff': 7.312500000000027e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.892" endtime="20201029 12:44:25.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.901" level="INFO">${ACCURACY} = {'diff': [7.329199999999911e-05, 7.290300000000263e-05, 7.301399999999972e-05, 7.340199999999672e-05, 7.366600000000001e-05, 7.312500000000027e-05, 7.359700000000163e-05, 7.313899999999984e-05, 7.3263...</msg>
<status status="PASS" starttime="20201029 12:44:25.897" endtime="20201029 12:44:25.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.905" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.904" endtime="20201029 12:44:25.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.908" level="INFO">VALUE: [7.329199999999911e-05, 7.290300000000263e-05, 7.301399999999972e-05, 7.340199999999672e-05, 7.366600000000001e-05, 7.312500000000027e-05, 7.359700000000163e-05, 7.313899999999984e-05, 7.326399999999997e-05, 7.366700000000295e-05, 7.288899999999959e-05, 7.368099999999905e-05, 7.273600000000033e-05, 7.320799999999822e-05, 7.301399999999972e-05, 7.290300000000263e-05, 7.269500000000109e-05, 7.301399999999972e-05, 7.281900000000174e-05, 7.262499999999977e-05, 7.355499999999945e-05, 7.351400000000022e-05, 7.327800000000301e-05, 7.315299999999941e-05, 7.336100000000095e-05, 7.280600000000165e-05, 7.338900000000009e-05, 7.290299999999916e-05, 7.291699999999873e-05, 7.279200000000208e-05, 7.347300000000098e-05, 7.270899999999719e-05, 7.352799999999979e-05, 7.316599999999951e-05, 7.347199999999804e-05, 7.291600000000273e-05, 7.355599999999893e-05, 7.367999999999958e-05, 7.288899999999959e-05, 7.340299999999966e-05, 7.256899999999802e-05, 7.329199999999911e-05, 7.320800000000169e-05, 7.359699999999816e-05, 7.270899999999719e-05, 7.358399999999807e-05, 7.347300000000098e-05, 7.307000000000147e-05, 7.345899999999794e-05, 7.283400000000079e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.906" endtime="20201029 12:44:25.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.902" endtime="20201029 12:44:25.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.913" endtime="20201029 12:44:25.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.911" endtime="20201029 12:44:25.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.910" endtime="20201029 12:44:25.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.547" endtime="20201029 12:44:25.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.547" endtime="20201029 12:44:25.933"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.942" endtime="20201029 12:44:25.961"></status>
</kw>
<msg timestamp="20201029 12:44:25.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.940" endtime="20201029 12:44:25.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.963" endtime="20201029 12:44:25.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.965" endtime="20201029 12:44:25.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.938" endtime="20201029 12:44:25.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.936" endtime="20201029 12:44:25.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.974" endtime="20201029 12:44:26.259"></status>
</kw>
<msg timestamp="20201029 12:44:26.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.973" endtime="20201029 12:44:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.264" endtime="20201029 12:44:26.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.272" endtime="20201029 12:44:26.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.970" endtime="20201029 12:44:26.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.968" endtime="20201029 12:44:26.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.279" level="INFO">${RESULT} = [{'diff': 7.368099999999905e-05}, {'diff': 7.356899999999902e-05}, {'diff': 7.430599999999968e-05}, {'diff': 7.41249999999978e-05}, {'diff': 7.398600000000158e-05}, {'diff': 7.469400000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:26.276" endtime="20201029 12:44:26.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.283" level="INFO">${ACCURACY} = {'diff': [7.368099999999905e-05, 7.356899999999902e-05, 7.430599999999968e-05, 7.41249999999978e-05, 7.398600000000158e-05, 7.469400000000015e-05, 7.391699999999973e-05, 7.384699999999841e-05, 7.45270...</msg>
<status status="PASS" starttime="20201029 12:44:26.280" endtime="20201029 12:44:26.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.287" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.286" endtime="20201029 12:44:26.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.290" level="INFO">VALUE: [7.368099999999905e-05, 7.356899999999902e-05, 7.430599999999968e-05, 7.41249999999978e-05, 7.398600000000158e-05, 7.469400000000015e-05, 7.391699999999973e-05, 7.384699999999841e-05, 7.452700000000131e-05, 7.436099999999848e-05, 7.440200000000119e-05, 7.468100000000005e-05, 7.388900000000059e-05, 7.451399999999775e-05, 7.39170000000032e-05, 7.451399999999775e-05, 7.422199999999879e-05, 7.408300000000256e-05, 7.45699999999995e-05, 7.438900000000109e-05, 7.384800000000136e-05, 7.408399999999857e-05, 7.426400000000097e-05, 7.429100000000063e-05, 7.445799999999947e-05, 7.46249999999983e-05, 7.380500000000317e-05, 7.369399999999915e-05, 7.384700000000188e-05, 7.418099999999955e-05, 7.39439999999994e-05, 7.372200000000176e-05, 7.370799999999872e-05, 7.440300000000066e-05, 7.413900000000084e-05, 7.438900000000109e-05, 7.395900000000191e-05, 7.388899999999712e-05, 7.408400000000204e-05, 7.397200000000201e-05, 7.433300000000281e-05, 7.454100000000088e-05, 7.370799999999872e-05, 7.395800000000244e-05, 7.42500000000014e-05, 7.3763999999997e-05, 7.377800000000004e-05, 7.463899999999787e-05, 7.465300000000091e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.288" endtime="20201029 12:44:26.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.284" endtime="20201029 12:44:26.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.295" endtime="20201029 12:44:26.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.293" endtime="20201029 12:44:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.292" endtime="20201029 12:44:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.934" endtime="20201029 12:44:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.934" endtime="20201029 12:44:26.315"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.324" endtime="20201029 12:44:26.345"></status>
</kw>
<msg timestamp="20201029 12:44:26.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.322" endtime="20201029 12:44:26.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.347" endtime="20201029 12:44:26.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.349" endtime="20201029 12:44:26.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.320" endtime="20201029 12:44:26.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.318" endtime="20201029 12:44:26.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.365" endtime="20201029 12:44:26.679"></status>
</kw>
<msg timestamp="20201029 12:44:26.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.361" endtime="20201029 12:44:26.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.683" endtime="20201029 12:44:26.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.692" endtime="20201029 12:44:26.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.358" endtime="20201029 12:44:26.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.353" endtime="20201029 12:44:26.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.698" level="INFO">${RESULT} = [{'diff': 7.501400000000172e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.556900000000102e-05}, {'diff': 7.540300000000166e-05}, {'diff': 7.519400000000065e-05}, {'diff': 7.513900000000184e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.695" endtime="20201029 12:44:26.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.703" level="INFO">${ACCURACY} = {'diff': [7.501400000000172e-05, 7.531900000000077e-05, 7.556900000000102e-05, 7.540300000000166e-05, 7.519400000000065e-05, 7.513900000000184e-05, 7.523600000000283e-05, 7.532000000000025e-05, 7.5542...</msg>
<status status="PASS" starttime="20201029 12:44:26.699" endtime="20201029 12:44:26.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.708" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.707" endtime="20201029 12:44:26.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.710" level="INFO">VALUE: [7.501400000000172e-05, 7.531900000000077e-05, 7.556900000000102e-05, 7.540300000000166e-05, 7.519400000000065e-05, 7.513900000000184e-05, 7.523600000000283e-05, 7.532000000000025e-05, 7.554200000000136e-05, 7.549999999999918e-05, 7.491700000000073e-05, 7.552800000000179e-05, 7.473600000000233e-05, 7.543000000000133e-05, 7.511099999999923e-05, 7.48050000000007e-05, 7.490300000000116e-05, 7.501399999999825e-05, 7.534699999999991e-05, 7.538899999999862e-05, 7.558400000000007e-05, 7.563899999999887e-05, 7.499999999999868e-05, 7.51249999999988e-05, 7.472199999999929e-05, 7.520899999999969e-05, 7.469499999999962e-05, 7.509699999999966e-05, 7.511099999999923e-05, 7.501400000000172e-05, 7.515199999999847e-05, 7.554100000000188e-05, 7.518000000000108e-05, 7.555499999999798e-05, 7.551399999999875e-05, 7.505600000000043e-05, 7.472199999999929e-05, 7.516700000000098e-05, 7.552800000000179e-05, 7.487499999999855e-05, 7.479200000000061e-05, 7.524999999999893e-05, 7.548699999999908e-05, 7.494499999999987e-05, 7.500000000000215e-05, 7.508399999999957e-05, 7.53890000000021e-05, 7.501400000000172e-05, 7.536099999999948e-05, 7.563899999999887e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.709" endtime="20201029 12:44:26.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.703" endtime="20201029 12:44:26.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.716" endtime="20201029 12:44:26.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.715" endtime="20201029 12:44:26.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.713" endtime="20201029 12:44:26.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.316" endtime="20201029 12:44:26.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.316" endtime="20201029 12:44:26.737"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.746" endtime="20201029 12:44:26.765"></status>
</kw>
<msg timestamp="20201029 12:44:26.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.744" endtime="20201029 12:44:26.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.767" endtime="20201029 12:44:26.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.769" endtime="20201029 12:44:26.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.741" endtime="20201029 12:44:26.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.739" endtime="20201029 12:44:26.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.779" endtime="20201029 12:44:27.065"></status>
</kw>
<msg timestamp="20201029 12:44:27.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.777" endtime="20201029 12:44:27.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.070" endtime="20201029 12:44:27.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.078" endtime="20201029 12:44:27.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.774" endtime="20201029 12:44:27.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.773" endtime="20201029 12:44:27.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.085" level="INFO">${RESULT} = [{'diff': 7.636199999999996e-05}, {'diff': 7.595800000000097e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.634700000000091e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.620800000000122e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:27.082" endtime="20201029 12:44:27.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.090" level="INFO">${ACCURACY} = {'diff': [7.636199999999996e-05, 7.595800000000097e-05, 7.597200000000054e-05, 7.634700000000091e-05, 7.599999999999968e-05, 7.620800000000122e-05, 7.576400000000247e-05, 7.620800000000122e-05, 7.6527...</msg>
<status status="PASS" starttime="20201029 12:44:27.086" endtime="20201029 12:44:27.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.095" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.094" endtime="20201029 12:44:27.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.098" level="INFO">VALUE: [7.636199999999996e-05, 7.595800000000097e-05, 7.597200000000054e-05, 7.634700000000091e-05, 7.599999999999968e-05, 7.620800000000122e-05, 7.576400000000247e-05, 7.620800000000122e-05, 7.652799999999932e-05, 7.627799999999907e-05, 7.597200000000054e-05, 7.652799999999932e-05, 7.654199999999889e-05, 7.604199999999839e-05, 7.647200000000104e-05, 7.644399999999843e-05, 7.599999999999968e-05, 7.656899999999855e-05, 7.588899999999912e-05, 7.615299999999894e-05, 7.638899999999962e-05, 7.599999999999968e-05, 7.569400000000115e-05, 7.594500000000087e-05, 7.60830000000011e-05, 7.644500000000137e-05, 7.587499999999955e-05, 7.651399999999975e-05, 7.64029999999992e-05, 7.619499999999765e-05, 7.61379999999999e-05, 7.66380000000004e-05, 7.63050000000022e-05, 7.556899999999755e-05, 7.644399999999843e-05, 7.634699999999744e-05, 7.66250000000003e-05, 7.629199999999864e-05, 7.66250000000003e-05, 7.604199999999839e-05, 7.601399999999925e-05, 7.656900000000202e-05, 7.6070000000001e-05, 7.615299999999894e-05, 7.590300000000216e-05, 7.62639999999995e-05, 7.591600000000226e-05, 7.66380000000004e-05, 7.5763999999999e-05, 7.620799999999775e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.096" endtime="20201029 12:44:27.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.091" endtime="20201029 12:44:27.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.103" endtime="20201029 12:44:27.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.101" endtime="20201029 12:44:27.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.100" endtime="20201029 12:44:27.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.738" endtime="20201029 12:44:27.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.737" endtime="20201029 12:44:27.123"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.132" endtime="20201029 12:44:27.152"></status>
</kw>
<msg timestamp="20201029 12:44:27.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.131" endtime="20201029 12:44:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.154" endtime="20201029 12:44:27.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.156" endtime="20201029 12:44:27.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.128" endtime="20201029 12:44:27.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.126" endtime="20201029 12:44:27.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.166" endtime="20201029 12:44:27.476"></status>
</kw>
<msg timestamp="20201029 12:44:27.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.164" endtime="20201029 12:44:27.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.480" endtime="20201029 12:44:27.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.489" endtime="20201029 12:44:27.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.161" endtime="20201029 12:44:27.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.160" endtime="20201029 12:44:27.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.495" level="INFO">${RESULT} = [{'diff': 7.744399999999943e-05}, {'diff': 7.718099999999908e-05}, {'diff': 7.7070000000002e-05}, {'diff': 7.724999999999746e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.698600000000111e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:27.492" endtime="20201029 12:44:27.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.500" level="INFO">${ACCURACY} = {'diff': [7.744399999999943e-05, 7.718099999999908e-05, 7.7070000000002e-05, 7.724999999999746e-05, 7.716699999999951e-05, 7.698600000000111e-05, 7.691599999999979e-05, 7.741600000000029e-05, 7.726299...</msg>
<status status="PASS" starttime="20201029 12:44:27.496" endtime="20201029 12:44:27.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.504" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.503" endtime="20201029 12:44:27.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.507" level="INFO">VALUE: [7.744399999999943e-05, 7.718099999999908e-05, 7.7070000000002e-05, 7.724999999999746e-05, 7.716699999999951e-05, 7.698600000000111e-05, 7.691599999999979e-05, 7.741600000000029e-05, 7.726299999999756e-05, 7.692999999999936e-05, 7.702700000000035e-05, 7.7457999999999e-05, 7.70830000000021e-05, 7.752800000000032e-05, 7.737500000000105e-05, 7.719400000000265e-05, 7.691699999999926e-05, 7.750000000000118e-05, 7.670900000000119e-05, 7.705599999999896e-05, 7.679200000000261e-05, 7.747300000000151e-05, 7.67770000000001e-05, 7.670799999999825e-05, 7.738900000000062e-05, 7.694399999999893e-05, 7.740200000000072e-05, 7.702799999999982e-05, 7.693099999999883e-05, 7.672199999999782e-05, 7.69449999999984e-05, 7.704199999999939e-05, 7.724999999999746e-05, 7.766700000000001e-05, 7.679199999999914e-05, 7.744500000000237e-05, 7.759800000000164e-05, 7.736099999999801e-05, 7.704099999999992e-05, 7.752699999999738e-05, 7.672200000000129e-05, 7.694500000000187e-05, 7.684699999999794e-05, 7.751400000000075e-05, 7.702799999999982e-05, 7.738900000000062e-05, 7.738899999999715e-05, 7.727800000000007e-05, 7.670900000000119e-05, 7.74030000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.506" endtime="20201029 12:44:27.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.501" endtime="20201029 12:44:27.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.512" endtime="20201029 12:44:27.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.511" endtime="20201029 12:44:27.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.509" endtime="20201029 12:44:27.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.124" endtime="20201029 12:44:27.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.124" endtime="20201029 12:44:27.533"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.542" endtime="20201029 12:44:27.565"></status>
</kw>
<msg timestamp="20201029 12:44:27.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.540" endtime="20201029 12:44:27.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.566" endtime="20201029 12:44:27.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.569" endtime="20201029 12:44:27.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.538" endtime="20201029 12:44:27.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.536" endtime="20201029 12:44:27.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.579" endtime="20201029 12:44:27.864"></status>
</kw>
<msg timestamp="20201029 12:44:27.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.577" endtime="20201029 12:44:27.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.868" endtime="20201029 12:44:27.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.877" endtime="20201029 12:44:27.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.574" endtime="20201029 12:44:27.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.572" endtime="20201029 12:44:27.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.885" level="INFO">${RESULT} = [{'diff': 7.802799999999735e-05}, {'diff': 7.808299999999962e-05}, {'diff': 7.80969999999992e-05}, {'diff': 7.858300000000012e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.770800000000272e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:27.881" endtime="20201029 12:44:27.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.890" level="INFO">${ACCURACY} = {'diff': [7.802799999999735e-05, 7.808299999999962e-05, 7.80969999999992e-05, 7.858300000000012e-05, 7.784699999999894e-05, 7.770800000000272e-05, 7.866699999999754e-05, 7.829200000000064e-05, 7.78199...</msg>
<status status="PASS" starttime="20201029 12:44:27.886" endtime="20201029 12:44:27.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.894" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.893" endtime="20201029 12:44:27.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.897" level="INFO">VALUE: [7.802799999999735e-05, 7.808299999999962e-05, 7.80969999999992e-05, 7.858300000000012e-05, 7.784699999999894e-05, 7.770800000000272e-05, 7.866699999999754e-05, 7.829200000000064e-05, 7.781999999999928e-05, 7.843100000000033e-05, 7.852699999999838e-05, 7.85969999999997e-05, 7.799999999999821e-05, 7.841600000000129e-05, 7.8458e-05, 7.820799999999975e-05, 7.784699999999894e-05, 7.769399999999968e-05, 7.802800000000082e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.816700000000051e-05, 7.852800000000132e-05, 7.833399999999935e-05, 7.786199999999799e-05, 7.852799999999785e-05, 7.845900000000294e-05, 7.86250000000023e-05, 7.772199999999882e-05, 7.841600000000129e-05, 7.820799999999975e-05, 7.823599999999889e-05, 7.791700000000026e-05, 7.858300000000012e-05, 7.808400000000257e-05, 7.802800000000082e-05, 7.824999999999846e-05, 7.773700000000133e-05, 7.769499999999915e-05, 7.770900000000219e-05, 7.834700000000291e-05, 7.847200000000304e-05, 7.811099999999876e-05, 7.82640000000015e-05, 7.823599999999889e-05, 7.783299999999937e-05, 7.797199999999907e-05, 7.784699999999894e-05, 7.820799999999975e-05, 7.805599999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.896" endtime="20201029 12:44:27.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.891" endtime="20201029 12:44:27.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.903" endtime="20201029 12:44:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.901" endtime="20201029 12:44:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.900" endtime="20201029 12:44:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.534" endtime="20201029 12:44:27.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.533" endtime="20201029 12:44:27.924"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.933" endtime="20201029 12:44:27.953"></status>
</kw>
<msg timestamp="20201029 12:44:27.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.931" endtime="20201029 12:44:27.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.954" endtime="20201029 12:44:27.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.957" endtime="20201029 12:44:27.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.929" endtime="20201029 12:44:27.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.927" endtime="20201029 12:44:27.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.966" endtime="20201029 12:44:28.253"></status>
</kw>
<msg timestamp="20201029 12:44:28.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.965" endtime="20201029 12:44:28.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.258" endtime="20201029 12:44:28.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.266" endtime="20201029 12:44:28.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.962" endtime="20201029 12:44:28.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.960" endtime="20201029 12:44:28.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.273" level="INFO">${RESULT} = [{'diff': 7.942999999999839e-05}, {'diff': 7.948600000000014e-05}, {'diff': 7.876399999999853e-05}, {'diff': 7.938900000000262e-05}, {'diff': 7.940299999999872e-05}, {'diff': 7.915299999999847e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.270" endtime="20201029 12:44:28.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.278" level="INFO">${ACCURACY} = {'diff': [7.942999999999839e-05, 7.948600000000014e-05, 7.876399999999853e-05, 7.938900000000262e-05, 7.940299999999872e-05, 7.915299999999847e-05, 7.952800000000232e-05, 7.89580000000005e-05, 7.88469...</msg>
<status status="PASS" starttime="20201029 12:44:28.274" endtime="20201029 12:44:28.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.283" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.282" endtime="20201029 12:44:28.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.286" level="INFO">VALUE: [7.942999999999839e-05, 7.948600000000014e-05, 7.876399999999853e-05, 7.938900000000262e-05, 7.940299999999872e-05, 7.915299999999847e-05, 7.952800000000232e-05, 7.89580000000005e-05, 7.884699999999994e-05, 7.934700000000044e-05, 7.891700000000126e-05, 7.874999999999896e-05, 7.968099999999811e-05, 7.894399999999746e-05, 7.891700000000126e-05, 7.90970000000002e-05, 7.912499999999933e-05, 7.911099999999976e-05, 7.891600000000179e-05, 7.951399999999928e-05, 7.872199999999982e-05, 7.90970000000002e-05, 7.948599999999667e-05, 7.929199999999817e-05, 7.947200000000057e-05, 7.91389999999989e-05, 7.883399999999985e-05, 7.901399999999878e-05, 7.895899999999997e-05, 7.959800000000017e-05, 7.886099999999951e-05, 7.884699999999994e-05, 7.967999999999864e-05, 7.906900000000106e-05, 7.874999999999896e-05, 7.930600000000121e-05, 7.924999999999946e-05, 7.918099999999761e-05, 7.95970000000007e-05, 7.958399999999713e-05, 7.948699999999961e-05, 7.965299999999897e-05, 7.877800000000157e-05, 7.876299999999906e-05, 7.940199999999925e-05, 7.911099999999976e-05, 7.880499999999777e-05, 7.930600000000121e-05, 7.94169999999983e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.284" endtime="20201029 12:44:28.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.279" endtime="20201029 12:44:28.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.291" endtime="20201029 12:44:28.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.289" endtime="20201029 12:44:28.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.288" endtime="20201029 12:44:28.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.925" endtime="20201029 12:44:28.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.924" endtime="20201029 12:44:28.312"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.321" endtime="20201029 12:44:28.340"></status>
</kw>
<msg timestamp="20201029 12:44:28.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.319" endtime="20201029 12:44:28.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.342" endtime="20201029 12:44:28.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.344" endtime="20201029 12:44:28.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.316" endtime="20201029 12:44:28.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.314" endtime="20201029 12:44:28.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.354" endtime="20201029 12:44:28.641"></status>
</kw>
<msg timestamp="20201029 12:44:28.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.352" endtime="20201029 12:44:28.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.645" endtime="20201029 12:44:28.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.654" endtime="20201029 12:44:28.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.350" endtime="20201029 12:44:28.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.348" endtime="20201029 12:44:28.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.661" level="INFO">${RESULT} = [{'diff': 8.023700000000036e-05}, {'diff': 8.020900000000122e-05}, {'diff': 8.02779999999996e-05}, {'diff': 8.034699999999798e-05}, {'diff': 7.972199999999735e-05}, {'diff': 8.002699999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:28.657" endtime="20201029 12:44:28.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.665" level="INFO">${ACCURACY} = {'diff': [8.023700000000036e-05, 8.020900000000122e-05, 8.02779999999996e-05, 8.034699999999798e-05, 7.972199999999735e-05, 8.002699999999988e-05, 7.99580000000015e-05, 8.015299999999947e-05, 8.020800...</msg>
<status status="PASS" starttime="20201029 12:44:28.662" endtime="20201029 12:44:28.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.670" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.669" endtime="20201029 12:44:28.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.672" level="INFO">VALUE: [8.023700000000036e-05, 8.020900000000122e-05, 8.02779999999996e-05, 8.034699999999798e-05, 7.972199999999735e-05, 8.002699999999988e-05, 7.99580000000015e-05, 8.015299999999947e-05, 8.020800000000175e-05, 7.997200000000107e-05, 8.052799999999985e-05, 7.986100000000051e-05, 7.970799999999778e-05, 7.997200000000107e-05, 7.970800000000125e-05, 7.984800000000042e-05, 8.040299999999972e-05, 7.982000000000128e-05, 8.012500000000033e-05, 8.048600000000114e-05, 8.054199999999942e-05, 7.972199999999735e-05, 8.01389999999999e-05, 8.066699999999954e-05, 8.015299999999947e-05, 8.061100000000126e-05, 8.01389999999999e-05, 8.052799999999985e-05, 7.988899999999965e-05, 8.000000000000021e-05, 7.970900000000072e-05, 8.058399999999813e-05, 8.026400000000003e-05, 7.981899999999834e-05, 8.038900000000015e-05, 8.02779999999996e-05, 7.998600000000064e-05, 8.031999999999831e-05, 8.023600000000089e-05, 7.973600000000039e-05, 7.976399999999953e-05, 7.986100000000051e-05, 8.019500000000165e-05, 8.062500000000083e-05, 7.99169999999988e-05, 8.026400000000003e-05, 8.052799999999985e-05, 8.052799999999985e-05, 7.983300000000138e-05, 8.038900000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.671" endtime="20201029 12:44:28.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.666" endtime="20201029 12:44:28.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.678" endtime="20201029 12:44:28.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.676" endtime="20201029 12:44:28.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.675" endtime="20201029 12:44:28.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.312" endtime="20201029 12:44:28.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.312" endtime="20201029 12:44:28.698"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.707" endtime="20201029 12:44:28.728"></status>
</kw>
<msg timestamp="20201029 12:44:28.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.706" endtime="20201029 12:44:28.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.730" endtime="20201029 12:44:28.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.732" endtime="20201029 12:44:28.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.703" endtime="20201029 12:44:28.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.701" endtime="20201029 12:44:28.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.742" endtime="20201029 12:44:29.028"></status>
</kw>
<msg timestamp="20201029 12:44:29.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.740" endtime="20201029 12:44:29.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.032" endtime="20201029 12:44:29.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.041" endtime="20201029 12:44:29.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.737" endtime="20201029 12:44:29.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.736" endtime="20201029 12:44:29.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.048" level="INFO">${RESULT} = [{'diff': 8.130599999999974e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.081999999999881e-05}, {'diff': 8.088899999999719e-05}, {'diff': 8.172199999999935e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.044" endtime="20201029 12:44:29.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.052" level="INFO">${ACCURACY} = {'diff': [8.130599999999974e-05, 8.123599999999842e-05, 8.102800000000035e-05, 8.081999999999881e-05, 8.088899999999719e-05, 8.172199999999935e-05, 8.156999999999956e-05, 8.077700000000063e-05, 8.0832...</msg>
<status status="PASS" starttime="20201029 12:44:29.049" endtime="20201029 12:44:29.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.057" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.055" endtime="20201029 12:44:29.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.059" level="INFO">VALUE: [8.130599999999974e-05, 8.123599999999842e-05, 8.102800000000035e-05, 8.081999999999881e-05, 8.088899999999719e-05, 8.172199999999935e-05, 8.156999999999956e-05, 8.077700000000063e-05, 8.08329999999989e-05, 8.16520000000015e-05, 8.138900000000115e-05, 8.147200000000257e-05, 8.108299999999916e-05, 8.076400000000053e-05, 8.145799999999953e-05, 8.080600000000271e-05, 8.076400000000053e-05, 8.133399999999888e-05, 8.159800000000217e-05, 8.166699999999708e-05, 8.109800000000167e-05, 8.140199999999778e-05, 8.118000000000014e-05, 8.148599999999867e-05, 8.081899999999934e-05, 8.101400000000078e-05, 8.149999999999824e-05, 8.16529999999975e-05, 8.104199999999992e-05, 8.165300000000097e-05, 8.148599999999867e-05, 8.10970000000022e-05, 8.057000000000203e-05, 8.086199999999752e-05, 8.12910000000007e-05, 8.093099999999936e-05, 8.083399999999838e-05, 8.109699999999873e-05, 8.158299999999966e-05, 8.084700000000195e-05, 8.151399999999781e-05, 8.14719999999991e-05, 8.122199999999885e-05, 8.165300000000097e-05, 8.1458000000003e-05, 8.101400000000078e-05, 8.158299999999966e-05, 8.090300000000022e-05, 8.162499999999837e-05, 8.091599999999685e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.058" endtime="20201029 12:44:29.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.053" endtime="20201029 12:44:29.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.065" endtime="20201029 12:44:29.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.064" endtime="20201029 12:44:29.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.062" endtime="20201029 12:44:29.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.699" endtime="20201029 12:44:29.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.699" endtime="20201029 12:44:29.086"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.095" endtime="20201029 12:44:29.116"></status>
</kw>
<msg timestamp="20201029 12:44:29.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.093" endtime="20201029 12:44:29.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.117" endtime="20201029 12:44:29.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.120" endtime="20201029 12:44:29.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.091" endtime="20201029 12:44:29.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.088" endtime="20201029 12:44:29.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.130" endtime="20201029 12:44:29.414"></status>
</kw>
<msg timestamp="20201029 12:44:29.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.128" endtime="20201029 12:44:29.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.418" endtime="20201029 12:44:29.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.427" endtime="20201029 12:44:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.125" endtime="20201029 12:44:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.123" endtime="20201029 12:44:29.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.434" level="INFO">${RESULT} = [{'diff': 8.216700000000104e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.23049999999978e-05}, {'diff': 8.234699999999998e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.258300000000066e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:29.430" endtime="20201029 12:44:29.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.439" level="INFO">${ACCURACY} = {'diff': [8.216700000000104e-05, 8.248599999999967e-05, 8.23049999999978e-05, 8.234699999999998e-05, 8.184699999999948e-05, 8.258300000000066e-05, 8.205500000000102e-05, 8.19719999999996e-05, 8.177799...</msg>
<status status="PASS" starttime="20201029 12:44:29.435" endtime="20201029 12:44:29.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.443" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.442" endtime="20201029 12:44:29.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.446" level="INFO">VALUE: [8.216700000000104e-05, 8.248599999999967e-05, 8.23049999999978e-05, 8.234699999999998e-05, 8.184699999999948e-05, 8.258300000000066e-05, 8.205500000000102e-05, 8.19719999999996e-05, 8.177799999999763e-05, 8.270900000000025e-05, 8.216699999999758e-05, 8.197299999999907e-05, 8.234799999999945e-05, 8.190300000000122e-05, 8.2459e-05, 8.26109999999998e-05, 8.17910000000012e-05, 8.204099999999798e-05, 8.206900000000059e-05, 8.252800000000185e-05, 8.252800000000185e-05, 8.216700000000104e-05, 8.202799999999788e-05, 8.223599999999942e-05, 8.255600000000099e-05, 8.225000000000246e-05, 8.211199999999877e-05, 8.2152999999998e-05, 8.215300000000147e-05, 8.220800000000028e-05, 8.177700000000163e-05, 8.21109999999993e-05, 8.22780000000016e-05, 8.205500000000102e-05, 8.236099999999955e-05, 8.19719999999996e-05, 8.176399999999806e-05, 8.252800000000185e-05, 8.266699999999808e-05, 8.225000000000246e-05, 8.204200000000092e-05, 8.240300000000172e-05, 8.220899999999975e-05, 8.208399999999963e-05, 8.245800000000053e-05, 8.173599999999892e-05, 8.195800000000003e-05, 8.234699999999998e-05, 8.245800000000053e-05, 8.195800000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.445" endtime="20201029 12:44:29.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.440" endtime="20201029 12:44:29.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.451" endtime="20201029 12:44:29.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.450" endtime="20201029 12:44:29.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.448" endtime="20201029 12:44:29.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.087" endtime="20201029 12:44:29.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.086" endtime="20201029 12:44:29.472"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.481" endtime="20201029 12:44:29.501"></status>
</kw>
<msg timestamp="20201029 12:44:29.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.480" endtime="20201029 12:44:29.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.503" endtime="20201029 12:44:29.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.505" endtime="20201029 12:44:29.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.477" endtime="20201029 12:44:29.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.475" endtime="20201029 12:44:29.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.515" endtime="20201029 12:44:29.802"></status>
</kw>
<msg timestamp="20201029 12:44:29.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.513" endtime="20201029 12:44:29.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.806" endtime="20201029 12:44:29.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.815" endtime="20201029 12:44:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.510" endtime="20201029 12:44:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.509" endtime="20201029 12:44:29.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.822" level="INFO">${RESULT} = [{'diff': 8.274999999999949e-05}, {'diff': 8.270900000000025e-05}, {'diff': 8.355499999999905e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.298600000000017e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.818" endtime="20201029 12:44:29.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.826" level="INFO">${ACCURACY} = {'diff': [8.274999999999949e-05, 8.270900000000025e-05, 8.355499999999905e-05, 8.274999999999949e-05, 8.312499999999987e-05, 8.298600000000017e-05, 8.326399999999956e-05, 8.340299999999926e-05, 8.3652...</msg>
<status status="PASS" starttime="20201029 12:44:29.823" endtime="20201029 12:44:29.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.831" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.830" endtime="20201029 12:44:29.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.833" level="INFO">VALUE: [8.274999999999949e-05, 8.270900000000025e-05, 8.355499999999905e-05, 8.274999999999949e-05, 8.312499999999987e-05, 8.298600000000017e-05, 8.326399999999956e-05, 8.340299999999926e-05, 8.365200000000003e-05, 8.32780000000026e-05, 8.302800000000235e-05, 8.279200000000167e-05, 8.307000000000106e-05, 8.322300000000032e-05, 8.337500000000012e-05, 8.333399999999741e-05, 8.340199999999978e-05, 8.313899999999944e-05, 8.354200000000242e-05, 8.363899999999994e-05, 8.28330000000009e-05, 8.354200000000242e-05, 8.290300000000222e-05, 8.299999999999974e-05, 8.308399999999716e-05, 8.352799999999938e-05, 8.35980000000007e-05, 8.352800000000285e-05, 8.358400000000113e-05, 8.322199999999738e-05, 8.33330000000014e-05, 8.304100000000245e-05, 8.334700000000098e-05, 8.345799999999806e-05, 8.317999999999867e-05, 8.293100000000136e-05, 8.272200000000035e-05, 8.302799999999888e-05, 8.341699999999883e-05, 8.331999999999784e-05, 8.327799999999913e-05, 8.273599999999992e-05, 8.36110000000008e-05, 8.301299999999984e-05, 8.350000000000024e-05, 8.302699999999941e-05, 8.317999999999867e-05, 8.333299999999794e-05, 8.34170000000023e-05, 8.301399999999931e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.832" endtime="20201029 12:44:29.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.827" endtime="20201029 12:44:29.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.839" endtime="20201029 12:44:29.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.837" endtime="20201029 12:44:29.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.836" endtime="20201029 12:44:29.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.473" endtime="20201029 12:44:29.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.472" endtime="20201029 12:44:29.859"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.868" endtime="20201029 12:44:29.890"></status>
</kw>
<msg timestamp="20201029 12:44:29.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.867" endtime="20201029 12:44:29.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.892" endtime="20201029 12:44:29.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.894" endtime="20201029 12:44:29.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.864" endtime="20201029 12:44:29.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.862" endtime="20201029 12:44:29.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.904" endtime="20201029 12:44:30.190"></status>
</kw>
<msg timestamp="20201029 12:44:30.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:29.902" endtime="20201029 12:44:30.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:30.194" endtime="20201029 12:44:30.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.203" endtime="20201029 12:44:30.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.899" endtime="20201029 12:44:30.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.898" endtime="20201029 12:44:30.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.210" level="INFO">${RESULT} = [{'diff': 8.372200000000135e-05}, {'diff': 8.423600000000142e-05}, {'diff': 8.395799999999856e-05}, {'diff': 8.409700000000173e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.39170000000028e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:30.207" endtime="20201029 12:44:30.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.214" level="INFO">${ACCURACY} = {'diff': [8.372200000000135e-05, 8.423600000000142e-05, 8.395799999999856e-05, 8.409700000000173e-05, 8.46530000000005e-05, 8.39170000000028e-05, 8.369500000000168e-05, 8.458400000000213e-05, 8.373600...</msg>
<status status="PASS" starttime="20201029 12:44:30.211" endtime="20201029 12:44:30.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.219" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.218" endtime="20201029 12:44:30.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.221" level="INFO">VALUE: [8.372200000000135e-05, 8.423600000000142e-05, 8.395799999999856e-05, 8.409700000000173e-05, 8.46530000000005e-05, 8.39170000000028e-05, 8.369500000000168e-05, 8.458400000000213e-05, 8.373600000000092e-05, 8.450000000000124e-05, 8.440199999999731e-05, 8.437500000000112e-05, 8.423600000000142e-05, 8.441699999999983e-05, 8.39720000000016e-05, 8.440300000000026e-05, 8.470799999999931e-05, 8.376400000000006e-05, 8.395799999999856e-05, 8.431999999999884e-05, 8.405599999999902e-05, 8.384799999999748e-05, 8.394499999999847e-05, 8.465200000000103e-05, 8.466700000000008e-05, 8.462500000000137e-05, 8.422199999999838e-05, 8.436100000000155e-05, 8.418099999999915e-05, 8.419499999999872e-05, 8.454199999999995e-05, 8.436100000000155e-05, 8.370899999999779e-05, 8.384799999999748e-05, 8.397300000000107e-05, 8.45980000000017e-05, 8.397300000000107e-05, 8.462500000000137e-05, 8.466700000000008e-05, 8.438899999999722e-05, 8.402799999999988e-05, 8.390299999999976e-05, 8.433399999999841e-05, 8.463899999999747e-05, 8.372199999999788e-05, 8.444399999999949e-05, 8.423600000000142e-05, 8.416699999999958e-05, 8.449999999999777e-05, 8.376400000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.220" endtime="20201029 12:44:30.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.215" endtime="20201029 12:44:30.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.228" endtime="20201029 12:44:30.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.226" endtime="20201029 12:44:30.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.225" endtime="20201029 12:44:30.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.860" endtime="20201029 12:44:30.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.860" endtime="20201029 12:44:30.248"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.257" endtime="20201029 12:44:30.278"></status>
</kw>
<msg timestamp="20201029 12:44:30.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.256" endtime="20201029 12:44:30.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.279" endtime="20201029 12:44:30.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.282" endtime="20201029 12:44:30.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.253" endtime="20201029 12:44:30.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.251" endtime="20201029 12:44:30.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.291" endtime="20201029 12:44:30.577"></status>
</kw>
<msg timestamp="20201029 12:44:30.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.290" endtime="20201029 12:44:30.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.581" endtime="20201029 12:44:30.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.590" endtime="20201029 12:44:30.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.287" endtime="20201029 12:44:30.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.285" endtime="20201029 12:44:30.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.597" level="INFO">${RESULT} = [{'diff': 8.527799999999766e-05}, {'diff': 8.552799999999791e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.54859999999992e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.509699999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:30.594" endtime="20201029 12:44:30.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.602" level="INFO">${ACCURACY} = {'diff': [8.527799999999766e-05, 8.552799999999791e-05, 8.563900000000194e-05, 8.54859999999992e-05, 8.481899999999987e-05, 8.509699999999926e-05, 8.529199999999723e-05, 8.488900000000119e-05, 8.51250...</msg>
<status status="PASS" starttime="20201029 12:44:30.598" endtime="20201029 12:44:30.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.607" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.606" endtime="20201029 12:44:30.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.609" level="INFO">VALUE: [8.527799999999766e-05, 8.552799999999791e-05, 8.563900000000194e-05, 8.54859999999992e-05, 8.481899999999987e-05, 8.509699999999926e-05, 8.529199999999723e-05, 8.488900000000119e-05, 8.512500000000187e-05, 8.543000000000092e-05, 8.541599999999788e-05, 8.547199999999963e-05, 8.556900000000062e-05, 8.552699999999844e-05, 8.552800000000138e-05, 8.5153000000001e-05, 8.547199999999963e-05, 8.472199999999888e-05, 8.54720000000031e-05, 8.551400000000181e-05, 8.552800000000138e-05, 8.494499999999947e-05, 8.523600000000242e-05, 8.527800000000113e-05, 8.548600000000267e-05, 8.473599999999845e-05, 8.483299999999944e-05, 8.490200000000128e-05, 8.494399999999999e-05, 8.557000000000009e-05, 8.548600000000267e-05, 8.513899999999797e-05, 8.501399999999784e-05, 8.522200000000285e-05, 8.490300000000076e-05, 8.530600000000027e-05, 8.458400000000213e-05, 8.501400000000131e-05, 8.54310000000004e-05, 8.504100000000098e-05, 8.537499999999865e-05, 8.547199999999963e-05, 8.566700000000108e-05, 8.472199999999888e-05, 8.474999999999802e-05, 8.488900000000119e-05, 8.4846999999999e-05, 8.487500000000162e-05, 8.515200000000153e-05, 8.49729999999986e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.608" endtime="20201029 12:44:30.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.603" endtime="20201029 12:44:30.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.615" endtime="20201029 12:44:30.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.613" endtime="20201029 12:44:30.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.612" endtime="20201029 12:44:30.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.249" endtime="20201029 12:44:30.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.249" endtime="20201029 12:44:30.635"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.644" endtime="20201029 12:44:30.664"></status>
</kw>
<msg timestamp="20201029 12:44:30.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.643" endtime="20201029 12:44:30.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.666" endtime="20201029 12:44:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.669" endtime="20201029 12:44:30.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.640" endtime="20201029 12:44:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.638" endtime="20201029 12:44:30.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.678" endtime="20201029 12:44:30.966"></status>
</kw>
<msg timestamp="20201029 12:44:30.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.676" endtime="20201029 12:44:30.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.970" endtime="20201029 12:44:30.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.979" endtime="20201029 12:44:30.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.674" endtime="20201029 12:44:30.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.672" endtime="20201029 12:44:30.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.986" level="INFO">${RESULT} = [{'diff': 8.573600000000292e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.663900000000294e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.620900000000029e-05}, {'diff': 8.652799999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:30.982" endtime="20201029 12:44:30.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.990" level="INFO">${ACCURACY} = {'diff': [8.573600000000292e-05, 8.64860000000002e-05, 8.663900000000294e-05, 8.659700000000076e-05, 8.620900000000029e-05, 8.652799999999891e-05, 8.615299999999854e-05, 8.627799999999866e-05, 8.58190...</msg>
<status status="PASS" starttime="20201029 12:44:30.987" endtime="20201029 12:44:30.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.995" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.994" endtime="20201029 12:44:30.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.997" level="INFO">VALUE: [8.573600000000292e-05, 8.64860000000002e-05, 8.663900000000294e-05, 8.659700000000076e-05, 8.620900000000029e-05, 8.652799999999891e-05, 8.615299999999854e-05, 8.627799999999866e-05, 8.581900000000087e-05, 8.576399999999859e-05, 8.586099999999958e-05, 8.663799999999999e-05, 8.63470000000005e-05, 8.649999999999977e-05, 8.6153000000002e-05, 8.622200000000038e-05, 8.66530000000025e-05, 8.647199999999716e-05, 8.587500000000262e-05, 8.633400000000041e-05, 8.584799999999948e-05, 8.59859999999997e-05, 8.64449999999975e-05, 8.641599999999888e-05, 8.597200000000013e-05, 8.623599999999995e-05, 8.61669999999981e-05, 8.652799999999891e-05, 8.601399999999884e-05, 8.627800000000213e-05, 8.654199999999848e-05, 8.609700000000026e-05, 8.633400000000041e-05, 8.586199999999905e-05, 8.642999999999845e-05, 8.637499999999965e-05, 8.602700000000241e-05, 8.627699999999919e-05, 8.591599999999838e-05, 8.59859999999997e-05, 8.577800000000163e-05, 8.613900000000244e-05, 8.570800000000031e-05, 8.658300000000119e-05, 8.570800000000031e-05, 8.59310000000009e-05, 8.591700000000133e-05, 8.627799999999866e-05, 8.624999999999952e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.996" endtime="20201029 12:44:30.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.991" endtime="20201029 12:44:30.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.003" endtime="20201029 12:44:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.001" endtime="20201029 12:44:31.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.000" endtime="20201029 12:44:31.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.636" endtime="20201029 12:44:31.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.636" endtime="20201029 12:44:31.023"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.033" endtime="20201029 12:44:31.056"></status>
</kw>
<msg timestamp="20201029 12:44:31.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.031" endtime="20201029 12:44:31.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.058" endtime="20201029 12:44:31.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.060" endtime="20201029 12:44:31.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.028" endtime="20201029 12:44:31.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.026" endtime="20201029 12:44:31.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.070" endtime="20201029 12:44:31.356"></status>
</kw>
<msg timestamp="20201029 12:44:31.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023748292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.068" endtime="20201029 12:44:31.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023748292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.361" endtime="20201029 12:44:31.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.369" endtime="20201029 12:44:31.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.066" endtime="20201029 12:44:31.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.064" endtime="20201029 12:44:31.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.376" level="INFO">${RESULT} = [{'diff': 8.69310000000019e-05}, {'diff': 8.737500000000065e-05}, {'diff': 8.756899999999915e-05}, {'diff': 8.713800000000049e-05}, {'diff': 8.684699999999754e-05}, {'diff': 8.681900000000187e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:31.373" endtime="20201029 12:44:31.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.380" level="INFO">${ACCURACY} = {'diff': [8.69310000000019e-05, 8.737500000000065e-05, 8.756899999999915e-05, 8.713800000000049e-05, 8.684699999999754e-05, 8.681900000000187e-05, 8.747199999999816e-05, 8.754199999999948e-05, 8.68190...</msg>
<status status="PASS" starttime="20201029 12:44:31.377" endtime="20201029 12:44:31.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.385" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.384" endtime="20201029 12:44:31.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.388" level="INFO">VALUE: [8.69310000000019e-05, 8.737500000000065e-05, 8.756899999999915e-05, 8.713800000000049e-05, 8.684699999999754e-05, 8.681900000000187e-05, 8.747199999999816e-05, 8.754199999999948e-05, 8.681900000000187e-05, 8.722200000000138e-05, 8.723600000000095e-05, 8.74860000000012e-05, 8.68059999999983e-05, 8.740300000000326e-05, 8.694500000000147e-05, 8.702799999999941e-05, 8.686100000000058e-05, 8.736100000000108e-05, 8.71250000000004e-05, 8.765300000000004e-05, 8.687500000000015e-05, 8.709699999999779e-05, 8.752799999999991e-05, 8.733300000000194e-05, 8.763900000000047e-05, 8.673600000000045e-05, 8.71669999999991e-05, 8.676399999999959e-05, 8.750000000000077e-05, 8.683300000000144e-05, 8.677699999999969e-05, 8.726400000000009e-05, 8.763900000000047e-05, 8.750000000000077e-05, 8.679199999999873e-05, 8.706899999999865e-05, 8.755499999999958e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.747299999999764e-05, 8.708400000000116e-05, 8.675000000000002e-05, 8.722200000000138e-05, 8.700000000000027e-05, 8.656899999999815e-05, 8.680499999999883e-05, 8.705499999999908e-05, 8.6847000000001e-05, 8.690299999999929e-05, 8.705600000000202e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.386" endtime="20201029 12:44:31.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.381" endtime="20201029 12:44:31.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.394" endtime="20201029 12:44:31.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.392" endtime="20201029 12:44:31.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.391" endtime="20201029 12:44:31.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.024" endtime="20201029 12:44:31.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.024" endtime="20201029 12:44:31.415"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.424" endtime="20201029 12:44:31.444"></status>
</kw>
<msg timestamp="20201029 12:44:31.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.422" endtime="20201029 12:44:31.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.445" endtime="20201029 12:44:31.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.448" endtime="20201029 12:44:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.419" endtime="20201029 12:44:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.417" endtime="20201029 12:44:31.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.458" endtime="20201029 12:44:31.743"></status>
</kw>
<msg timestamp="20201029 12:44:31.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.456" endtime="20201029 12:44:31.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.748" endtime="20201029 12:44:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.756" endtime="20201029 12:44:31.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.453" endtime="20201029 12:44:31.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.451" endtime="20201029 12:44:31.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.763" level="INFO">${RESULT} = [{'diff': 8.804199999999998e-05}, {'diff': 8.823600000000195e-05}, {'diff': 8.777800000000016e-05}, {'diff': 8.812499999999793e-05}, {'diff': 8.775000000000102e-05}, {'diff': 8.854200000000048e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.760" endtime="20201029 12:44:31.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.768" level="INFO">${ACCURACY} = {'diff': [8.804199999999998e-05, 8.823600000000195e-05, 8.777800000000016e-05, 8.812499999999793e-05, 8.775000000000102e-05, 8.854200000000048e-05, 8.772299999999789e-05, 8.816600000000063e-05, 8.8278...</msg>
<status status="PASS" starttime="20201029 12:44:31.764" endtime="20201029 12:44:31.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.773" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.772" endtime="20201029 12:44:31.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.775" level="INFO">VALUE: [8.804199999999998e-05, 8.823600000000195e-05, 8.777800000000016e-05, 8.812499999999793e-05, 8.775000000000102e-05, 8.854200000000048e-05, 8.772299999999789e-05, 8.816600000000063e-05, 8.827800000000066e-05, 8.8638999999998e-05, 8.797199999999866e-05, 8.786099999999811e-05, 8.863900000000147e-05, 8.827800000000066e-05, 8.865300000000104e-05, 8.775000000000102e-05, 8.81670000000001e-05, 8.786200000000105e-05, 8.775000000000102e-05, 8.779199999999973e-05, 8.845899999999907e-05, 8.830500000000033e-05, 8.836099999999861e-05, 8.836100000000208e-05, 8.769399999999927e-05, 8.797199999999866e-05, 8.868100000000018e-05, 8.83059999999998e-05, 8.758299999999872e-05, 8.829200000000023e-05, 8.819399999999977e-05, 8.822299999999839e-05, 8.802800000000041e-05, 8.852800000000091e-05, 8.804199999999998e-05, 8.783300000000244e-05, 8.800000000000127e-05, 8.844400000000002e-05, 8.819499999999925e-05, 8.841700000000036e-05, 8.808299999999922e-05, 8.791699999999986e-05, 8.840300000000079e-05, 8.787500000000115e-05, 8.854100000000101e-05, 8.827800000000066e-05, 8.836099999999861e-05, 8.76799999999997e-05, 8.855500000000058e-05, 8.841600000000088e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.774" endtime="20201029 12:44:32.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.769" endtime="20201029 12:44:32.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.212" endtime="20201029 12:44:32.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.210" endtime="20201029 12:44:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.209" endtime="20201029 12:44:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.416" endtime="20201029 12:44:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.415" endtime="20201029 12:44:32.232"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.242" endtime="20201029 12:44:32.261"></status>
</kw>
<msg timestamp="20201029 12:44:32.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.240" endtime="20201029 12:44:32.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.263" endtime="20201029 12:44:32.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.266" endtime="20201029 12:44:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.237" endtime="20201029 12:44:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.235" endtime="20201029 12:44:32.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.275" endtime="20201029 12:44:32.577"></status>
</kw>
<msg timestamp="20201029 12:44:32.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.274" endtime="20201029 12:44:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.581" endtime="20201029 12:44:32.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.590" endtime="20201029 12:44:32.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.271" endtime="20201029 12:44:32.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.269" endtime="20201029 12:44:32.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.597" level="INFO">${RESULT} = [{'diff': 8.919400000000077e-05}, {'diff': 8.870899999999932e-05}, {'diff': 8.938900000000222e-05}, {'diff': 8.937499999999918e-05}, {'diff': 8.909799999999926e-05}, {'diff': 8.902700000000194e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:32.593" endtime="20201029 12:44:32.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.601" level="INFO">${ACCURACY} = {'diff': [8.919400000000077e-05, 8.870899999999932e-05, 8.938900000000222e-05, 8.937499999999918e-05, 8.909799999999926e-05, 8.902700000000194e-05, 8.951399999999887e-05, 8.954099999999854e-05, 8.9583...</msg>
<status status="PASS" starttime="20201029 12:44:32.598" endtime="20201029 12:44:32.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.606" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.605" endtime="20201029 12:44:32.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.609" level="INFO">VALUE: [8.919400000000077e-05, 8.870899999999932e-05, 8.938900000000222e-05, 8.937499999999918e-05, 8.909799999999926e-05, 8.902700000000194e-05, 8.951399999999887e-05, 8.954099999999854e-05, 8.958300000000072e-05, 8.920800000000034e-05, 8.891600000000138e-05, 8.927800000000166e-05, 8.966699999999814e-05, 8.912499999999893e-05, 8.890300000000129e-05, 8.958299999999725e-05, 8.883399999999944e-05, 8.9638999999999e-05, 8.920899999999982e-05, 8.955499999999811e-05, 8.942999999999798e-05, 8.891599999999791e-05, 8.888900000000172e-05, 8.895800000000009e-05, 8.937499999999918e-05, 8.891699999999739e-05, 8.859699999999929e-05, 8.902799999999794e-05, 8.934700000000004e-05, 8.945900000000007e-05, 8.901400000000184e-05, 8.936099999999961e-05, 8.940300000000179e-05, 8.966600000000213e-05, 8.891600000000138e-05, 8.912499999999893e-05, 8.884699999999954e-05, 8.922199999999991e-05, 8.909699999999979e-05, 8.876400000000159e-05, 8.904200000000098e-05, 8.916699999999764e-05, 8.936099999999961e-05, 8.898599999999923e-05, 8.913900000000197e-05, 8.952800000000191e-05, 8.961099999999986e-05, 8.879099999999779e-05, 8.916599999999816e-05, 8.888900000000172e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.607" endtime="20201029 12:44:32.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.602" endtime="20201029 12:44:32.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.616" endtime="20201029 12:44:32.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.614" endtime="20201029 12:44:32.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.612" endtime="20201029 12:44:32.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.233" endtime="20201029 12:44:32.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.233" endtime="20201029 12:44:32.637"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.645" endtime="20201029 12:44:32.667"></status>
</kw>
<msg timestamp="20201029 12:44:32.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.644" endtime="20201029 12:44:32.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.668" endtime="20201029 12:44:32.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.671" endtime="20201029 12:44:32.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.641" endtime="20201029 12:44:32.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.639" endtime="20201029 12:44:32.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.680" endtime="20201029 12:44:32.966"></status>
</kw>
<msg timestamp="20201029 12:44:32.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.678" endtime="20201029 12:44:32.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.970" endtime="20201029 12:44:32.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.979" endtime="20201029 12:44:32.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.676" endtime="20201029 12:44:32.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.674" endtime="20201029 12:44:32.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.985" level="INFO">${RESULT} = [{'diff': 9.044400000000202e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.96670000000016e-05}, {'diff': 9.051399999999987e-05}, {'diff': 8.973599999999998e-05}, {'diff': 9.01389999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:32.982" endtime="20201029 12:44:32.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.989" level="INFO">${ACCURACY} = {'diff': [9.044400000000202e-05, 8.995800000000109e-05, 8.96670000000016e-05, 9.051399999999987e-05, 8.973599999999998e-05, 9.01389999999995e-05, 9.015299999999907e-05, 9.065299999999957e-05, 8.979200...</msg>
<status status="PASS" starttime="20201029 12:44:32.986" endtime="20201029 12:44:32.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.994" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.993" endtime="20201029 12:44:32.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.996" level="INFO">VALUE: [9.044400000000202e-05, 8.995800000000109e-05, 8.96670000000016e-05, 9.051399999999987e-05, 8.973599999999998e-05, 9.01389999999995e-05, 9.015299999999907e-05, 9.065299999999957e-05, 8.979200000000173e-05, 9.008400000000069e-05, 9.008400000000069e-05, 9.008299999999775e-05, 8.970799999999737e-05, 8.970800000000084e-05, 9.056999999999815e-05, 8.965300000000204e-05, 8.997200000000066e-05, 9.0639e-05, 8.977799999999869e-05, 8.970800000000084e-05, 9.058300000000172e-05, 9.027799999999919e-05, 9.009800000000026e-05, 9.034799999999704e-05, 9.012499999999993e-05, 8.984700000000054e-05, 8.974999999999955e-05, 9.058300000000172e-05, 9.019400000000177e-05, 9.040299999999932e-05, 8.976399999999912e-05, 9.043100000000193e-05, 8.976400000000259e-05, 9.015299999999907e-05, 9.004199999999851e-05, 8.990299999999882e-05, 9.045900000000107e-05, 8.991599999999891e-05, 8.983300000000097e-05, 8.988899999999925e-05, 8.983300000000097e-05, 9.015299999999907e-05, 8.974999999999955e-05, 8.977800000000216e-05, 9.023600000000048e-05, 8.984700000000054e-05, 9.01939999999983e-05, 8.974999999999955e-05, 9.007000000000112e-05, 9.015300000000254e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.995" endtime="20201029 12:44:32.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.990" endtime="20201029 12:44:32.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.002" endtime="20201029 12:44:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.001" endtime="20201029 12:44:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.999" endtime="20201029 12:44:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.638" endtime="20201029 12:44:33.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.637" endtime="20201029 12:44:33.023"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.032" endtime="20201029 12:44:33.052"></status>
</kw>
<msg timestamp="20201029 12:44:33.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.030" endtime="20201029 12:44:33.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.054" endtime="20201029 12:44:33.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.056" endtime="20201029 12:44:33.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.028" endtime="20201029 12:44:33.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.025" endtime="20201029 12:44:33.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.065" endtime="20201029 12:44:33.365"></status>
</kw>
<msg timestamp="20201029 12:44:33.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.063" endtime="20201029 12:44:33.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.369" endtime="20201029 12:44:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.377" endtime="20201029 12:44:33.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.061" endtime="20201029 12:44:33.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.059" endtime="20201029 12:44:33.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.385" level="INFO">${RESULT} = [{'diff': 9.084700000000154e-05}, {'diff': 9.10000000000008e-05}, {'diff': 9.098599999999776e-05}, {'diff': 9.166600000000066e-05}, {'diff': 9.086100000000111e-05}, {'diff': 9.095800000000209e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:33.381" endtime="20201029 12:44:33.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.389" level="INFO">${ACCURACY} = {'diff': [9.084700000000154e-05, 9.10000000000008e-05, 9.098599999999776e-05, 9.166600000000066e-05, 9.086100000000111e-05, 9.095800000000209e-05, 9.165300000000057e-05, 9.127800000000019e-05, 9.12500...</msg>
<status status="PASS" starttime="20201029 12:44:33.386" endtime="20201029 12:44:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.394" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.393" endtime="20201029 12:44:33.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.396" level="INFO">VALUE: [9.084700000000154e-05, 9.10000000000008e-05, 9.098599999999776e-05, 9.166600000000066e-05, 9.086100000000111e-05, 9.095800000000209e-05, 9.165300000000057e-05, 9.127800000000019e-05, 9.125000000000105e-05, 9.08329999999985e-05, 9.079199999999926e-05, 9.102799999999994e-05, 9.090299999999982e-05, 9.127800000000019e-05, 9.070900000000132e-05, 9.090200000000034e-05, 9.111099999999789e-05, 9.079099999999979e-05, 9.163899999999753e-05, 9.136100000000161e-05, 9.152800000000044e-05, 9.095799999999862e-05, 9.0945000000002e-05, 9.095799999999862e-05, 9.108299999999875e-05, 9.130599999999933e-05, 9.069500000000175e-05, 9.147300000000164e-05, 9.098600000000123e-05, 9.081899999999893e-05, 9.1332999999999e-05, 9.158299999999925e-05, 9.1332999999999e-05, 9.159699999999882e-05, 9.079199999999926e-05, 9.162499999999796e-05, 9.091699999999939e-05, 9.156999999999915e-05, 9.156899999999968e-05, 9.137499999999771e-05, 9.076400000000012e-05, 9.138900000000075e-05, 9.101299999999743e-05, 9.080499999999936e-05, 9.102799999999994e-05, 9.122199999999844e-05, 9.10000000000008e-05, 9.165300000000057e-05, 9.1639000000001e-05, 9.127800000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.395" endtime="20201029 12:44:33.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.390" endtime="20201029 12:44:33.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.401" endtime="20201029 12:44:33.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.400" endtime="20201029 12:44:33.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.399" endtime="20201029 12:44:33.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.024" endtime="20201029 12:44:33.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.023" endtime="20201029 12:44:33.422"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.431" endtime="20201029 12:44:33.451"></status>
</kw>
<msg timestamp="20201029 12:44:33.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.429" endtime="20201029 12:44:33.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.453" endtime="20201029 12:44:33.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.455" endtime="20201029 12:44:33.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.427" endtime="20201029 12:44:33.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.424" endtime="20201029 12:44:33.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.464" endtime="20201029 12:44:33.750"></status>
</kw>
<msg timestamp="20201029 12:44:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.463" endtime="20201029 12:44:33.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.754" endtime="20201029 12:44:33.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.762" endtime="20201029 12:44:33.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.460" endtime="20201029 12:44:33.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.458" endtime="20201029 12:44:33.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.769" level="INFO">${RESULT} = [{'diff': 9.208399999999922e-05}, {'diff': 9.238900000000175e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.234699999999957e-05}, {'diff': 9.266600000000166e-05}, {'diff': 9.177700000000122e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:33.766" endtime="20201029 12:44:33.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.773" level="INFO">${ACCURACY} = {'diff': [9.208399999999922e-05, 9.238900000000175e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.266600000000166e-05, 9.177700000000122e-05, 9.251400000000187e-05, 9.16659999999972e-05, 9.20829...</msg>
<status status="PASS" starttime="20201029 12:44:33.770" endtime="20201029 12:44:33.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.778" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.777" endtime="20201029 12:44:33.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.780" level="INFO">VALUE: [9.208399999999922e-05, 9.238900000000175e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.266600000000166e-05, 9.177700000000122e-05, 9.251400000000187e-05, 9.16659999999972e-05, 9.208299999999975e-05, 9.240300000000132e-05, 9.188899999999778e-05, 9.169499999999928e-05, 9.222199999999944e-05, 9.197300000000214e-05, 9.172300000000189e-05, 9.194499999999953e-05, 9.225000000000205e-05, 9.243000000000098e-05, 9.229100000000129e-05, 9.25139999999984e-05, 9.1945000000003e-05, 9.220899999999935e-05, 9.205499999999714e-05, 9.244399999999708e-05, 9.263899999999853e-05, 9.209699999999932e-05, 9.258399999999972e-05, 9.162499999999796e-05, 9.202700000000147e-05, 9.172199999999894e-05, 9.241599999999794e-05, 9.19719999999992e-05, 9.24719999999997e-05, 9.191700000000039e-05, 9.245800000000012e-05, 9.187499999999821e-05, 9.226399999999815e-05, 9.195799999999962e-05, 9.224999999999858e-05, 9.183399999999897e-05, 9.204100000000104e-05, 9.220799999999987e-05, 9.252700000000197e-05, 9.220799999999987e-05, 9.242999999999751e-05, 9.202800000000094e-05, 9.19719999999992e-05, 9.266700000000114e-05, 9.229100000000129e-05, 9.226399999999815e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.779" endtime="20201029 12:44:33.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.774" endtime="20201029 12:44:33.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.785" endtime="20201029 12:44:33.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.783" endtime="20201029 12:44:33.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.782" endtime="20201029 12:44:33.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.423" endtime="20201029 12:44:33.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.422" endtime="20201029 12:44:33.806"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.814" endtime="20201029 12:44:33.836"></status>
</kw>
<msg timestamp="20201029 12:44:33.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.813" endtime="20201029 12:44:33.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.838" endtime="20201029 12:44:33.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.840" endtime="20201029 12:44:33.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.810" endtime="20201029 12:44:33.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.808" endtime="20201029 12:44:33.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.849" endtime="20201029 12:44:34.135"></status>
</kw>
<msg timestamp="20201029 12:44:34.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.848" endtime="20201029 12:44:34.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.140" endtime="20201029 12:44:34.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.148" endtime="20201029 12:44:34.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.845" endtime="20201029 12:44:34.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.843" endtime="20201029 12:44:34.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.155" level="INFO">${RESULT} = [{'diff': 9.294399999999758e-05}, {'diff': 9.30139999999989e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.345800000000112e-05}, {'diff': 9.31529999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:34.151" endtime="20201029 12:44:34.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.159" level="INFO">${ACCURACY} = {'diff': [9.294399999999758e-05, 9.30139999999989e-05, 9.309700000000032e-05, 9.327799999999872e-05, 9.345800000000112e-05, 9.31529999999986e-05, 9.327799999999872e-05, 9.287499999999921e-05, 9.302799...</msg>
<status status="PASS" starttime="20201029 12:44:34.156" endtime="20201029 12:44:34.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.163" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.162" endtime="20201029 12:44:34.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.165" level="INFO">VALUE: [9.294399999999758e-05, 9.30139999999989e-05, 9.309700000000032e-05, 9.327799999999872e-05, 9.345800000000112e-05, 9.31529999999986e-05, 9.327799999999872e-05, 9.287499999999921e-05, 9.302799999999847e-05, 9.299999999999933e-05, 9.281900000000093e-05, 9.276399999999865e-05, 9.302800000000194e-05, 9.302799999999847e-05, 9.312499999999946e-05, 9.36529999999991e-05, 9.309700000000032e-05, 9.255600000000058e-05, 9.366699999999867e-05, 9.322200000000044e-05, 9.373600000000051e-05, 9.290299999999835e-05, 9.301299999999943e-05, 9.366600000000266e-05, 9.363899999999953e-05, 9.293100000000096e-05, 9.309700000000032e-05, 9.306900000000118e-05, 9.272199999999994e-05, 9.308300000000075e-05, 9.29720000000002e-05, 9.327799999999872e-05, 9.312499999999946e-05, 9.290299999999835e-05, 9.272299999999942e-05, 9.343000000000198e-05, 9.298599999999976e-05, 9.343000000000198e-05, 9.344499999999756e-05, 9.327800000000219e-05, 9.352800000000244e-05, 9.3333000000001e-05, 9.315300000000207e-05, 9.333400000000047e-05, 9.341699999999842e-05, 9.363899999999953e-05, 9.313899999999903e-05, 9.3026999999999e-05, 9.326399999999915e-05, 9.313799999999955e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.164" endtime="20201029 12:44:34.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.159" endtime="20201029 12:44:34.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.171" endtime="20201029 12:44:34.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.170" endtime="20201029 12:44:34.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.169" endtime="20201029 12:44:34.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.807" endtime="20201029 12:44:34.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.806" endtime="20201029 12:44:34.192"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.200" endtime="20201029 12:44:34.222"></status>
</kw>
<msg timestamp="20201029 12:44:34.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.199" endtime="20201029 12:44:34.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.223" endtime="20201029 12:44:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.226" endtime="20201029 12:44:34.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.196" endtime="20201029 12:44:34.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.194" endtime="20201029 12:44:34.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.234" endtime="20201029 12:44:34.520"></status>
</kw>
<msg timestamp="20201029 12:44:34.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019491889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.233" endtime="20201029 12:44:34.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019491889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.524" endtime="20201029 12:44:34.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.533" endtime="20201029 12:44:34.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.230" endtime="20201029 12:44:34.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.229" endtime="20201029 12:44:34.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.539" level="INFO">${RESULT} = [{'diff': 9.372200000000094e-05}, {'diff': 9.38469999999976e-05}, {'diff': 9.447199999999822e-05}, {'diff': 9.416700000000264e-05}, {'diff': 9.372200000000094e-05}, {'diff': 9.402799999999947e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:34.536" endtime="20201029 12:44:34.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.544" level="INFO">${ACCURACY} = {'diff': [9.372200000000094e-05, 9.38469999999976e-05, 9.447199999999822e-05, 9.416700000000264e-05, 9.372200000000094e-05, 9.402799999999947e-05, 9.459799999999782e-05, 9.402799999999947e-05, 9.39449...</msg>
<status status="PASS" starttime="20201029 12:44:34.540" endtime="20201029 12:44:34.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.548" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.547" endtime="20201029 12:44:34.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.551" level="INFO">VALUE: [9.372200000000094e-05, 9.38469999999976e-05, 9.447199999999822e-05, 9.416700000000264e-05, 9.372200000000094e-05, 9.402799999999947e-05, 9.459799999999782e-05, 9.402799999999947e-05, 9.394499999999806e-05, 9.440299999999985e-05, 9.449999999999736e-05, 9.415200000000012e-05, 9.408300000000175e-05, 9.4333999999998e-05, 9.386099999999717e-05, 9.427799999999972e-05, 9.404199999999904e-05, 9.433299999999853e-05, 9.459699999999835e-05, 9.425000000000058e-05, 9.388899999999978e-05, 9.417999999999926e-05, 9.419399999999883e-05, 9.406899999999871e-05, 9.404099999999957e-05, 9.402799999999947e-05, 9.369399999999833e-05, 9.36940000000018e-05, 9.427799999999972e-05, 9.423600000000101e-05, 9.369499999999781e-05, 9.413900000000003e-05, 9.384800000000054e-05, 9.452799999999997e-05, 9.384700000000107e-05, 9.459700000000182e-05, 9.437500000000071e-05, 9.418000000000273e-05, 9.420800000000187e-05, 9.418099999999874e-05, 9.402799999999947e-05, 9.406900000000218e-05, 9.407000000000165e-05, 9.390299999999935e-05, 9.434800000000104e-05, 9.422299999999745e-05, 9.459700000000182e-05, 9.395800000000162e-05, 9.404099999999957e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.550" endtime="20201029 12:44:34.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.545" endtime="20201029 12:44:34.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.556" endtime="20201029 12:44:34.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.554" endtime="20201029 12:44:34.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.553" endtime="20201029 12:44:34.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.193" endtime="20201029 12:44:34.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.192" endtime="20201029 12:44:34.577"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.585" endtime="20201029 12:44:34.606"></status>
</kw>
<msg timestamp="20201029 12:44:34.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.584" endtime="20201029 12:44:34.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.607" endtime="20201029 12:44:34.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.610" endtime="20201029 12:44:34.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.581" endtime="20201029 12:44:34.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.579" endtime="20201029 12:44:34.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.619" endtime="20201029 12:44:34.905"></status>
</kw>
<msg timestamp="20201029 12:44:34.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.617" endtime="20201029 12:44:34.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.909" endtime="20201029 12:44:34.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.918" endtime="20201029 12:44:34.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.615" endtime="20201029 12:44:34.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.613" endtime="20201029 12:44:34.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.924" level="INFO">${RESULT} = [{'diff': 9.518099999999974e-05}, {'diff': 9.54590000000026e-05}, {'diff': 9.483400000000197e-05}, {'diff': 9.523599999999854e-05}, {'diff': 9.563800000000205e-05}, {'diff': 9.495799999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:34.921" endtime="20201029 12:44:34.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.928" level="INFO">${ACCURACY} = {'diff': [9.518099999999974e-05, 9.54590000000026e-05, 9.483400000000197e-05, 9.523599999999854e-05, 9.563800000000205e-05, 9.495799999999915e-05, 9.486099999999817e-05, 9.48330000000025e-05, 9.502800...</msg>
<status status="PASS" starttime="20201029 12:44:34.925" endtime="20201029 12:44:34.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.933" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.932" endtime="20201029 12:44:34.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.935" level="INFO">VALUE: [9.518099999999974e-05, 9.54590000000026e-05, 9.483400000000197e-05, 9.523599999999854e-05, 9.563800000000205e-05, 9.495799999999915e-05, 9.486099999999817e-05, 9.48330000000025e-05, 9.502800000000047e-05, 9.552800000000097e-05, 9.53469999999991e-05, 9.481999999999893e-05, 9.490300000000035e-05, 9.531999999999943e-05, 9.490300000000035e-05, 9.48339999999985e-05, 9.488899999999731e-05, 9.476400000000065e-05, 9.487499999999774e-05, 9.511099999999842e-05, 9.530500000000039e-05, 9.5027999999997e-05, 9.511100000000189e-05, 9.50140000000009e-05, 9.472199999999847e-05, 9.559699999999935e-05, 9.50140000000009e-05, 9.554200000000054e-05, 9.481999999999893e-05, 9.541600000000094e-05, 9.493000000000001e-05, 9.565199999999816e-05, 9.509699999999885e-05, 9.552800000000097e-05, 9.49859999999983e-05, 9.498600000000176e-05, 9.527700000000125e-05, 9.538900000000128e-05, 9.495799999999915e-05, 9.509799999999832e-05, 9.483400000000197e-05, 9.473599999999804e-05, 9.502699999999753e-05, 9.479199999999979e-05, 9.541599999999748e-05, 9.55140000000014e-05, 9.48469999999986e-05, 9.530599999999986e-05, 9.527800000000072e-05, 9.5027999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.934" endtime="20201029 12:44:34.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.929" endtime="20201029 12:44:34.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.940" endtime="20201029 12:44:34.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.939" endtime="20201029 12:44:34.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.937" endtime="20201029 12:44:34.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.577" endtime="20201029 12:44:34.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.577" endtime="20201029 12:44:34.961"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.969" endtime="20201029 12:44:34.994"></status>
</kw>
<msg timestamp="20201029 12:44:34.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.968" endtime="20201029 12:44:34.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.995" endtime="20201029 12:44:34.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.998" endtime="20201029 12:44:34.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.965" endtime="20201029 12:44:35.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.963" endtime="20201029 12:44:35.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.007" endtime="20201029 12:44:35.293"></status>
</kw>
<msg timestamp="20201029 12:44:35.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.005" endtime="20201029 12:44:35.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.297" endtime="20201029 12:44:35.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.305" endtime="20201029 12:44:35.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.003" endtime="20201029 12:44:35.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.001" endtime="20201029 12:44:35.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.312" level="INFO">${RESULT} = [{'diff': 9.620899999999988e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.623599999999954e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.623599999999954e-05}, {'diff': 9.624999999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:35.309" endtime="20201029 12:44:35.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.316" level="INFO">${ACCURACY} = {'diff': [9.620899999999988e-05, 9.662499999999949e-05, 9.623599999999954e-05, 9.624999999999911e-05, 9.623599999999954e-05, 9.624999999999911e-05, 9.658400000000025e-05, 9.583300000000003e-05, 9.5985...</msg>
<status status="PASS" starttime="20201029 12:44:35.313" endtime="20201029 12:44:35.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.320" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.319" endtime="20201029 12:44:35.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.323" level="INFO">VALUE: [9.620899999999988e-05, 9.662499999999949e-05, 9.623599999999954e-05, 9.624999999999911e-05, 9.623599999999954e-05, 9.624999999999911e-05, 9.658400000000025e-05, 9.583300000000003e-05, 9.59859999999993e-05, 9.601399999999843e-05, 9.654199999999807e-05, 9.606900000000071e-05, 9.613900000000203e-05, 9.665299999999863e-05, 9.643000000000151e-05, 9.663899999999906e-05, 9.59859999999993e-05, 9.587499999999874e-05, 9.616700000000117e-05, 9.602800000000147e-05, 9.643100000000099e-05, 9.583300000000003e-05, 9.583300000000003e-05, 9.584700000000307e-05, 9.640299999999838e-05, 9.663899999999906e-05, 9.594399999999711e-05, 9.59019999999984e-05, 9.65270000000025e-05, 9.580500000000089e-05, 9.633300000000053e-05, 9.612499999999899e-05, 9.613900000000203e-05, 9.595899999999963e-05, 9.644400000000108e-05, 9.641700000000142e-05, 9.618100000000074e-05, 9.654199999999807e-05, 9.570899999999938e-05, 9.643099999999752e-05, 9.665199999999916e-05, 9.591599999999798e-05, 9.662499999999949e-05, 9.644399999999761e-05, 9.651399999999893e-05, 9.659700000000035e-05, 9.619400000000083e-05, 9.659700000000035e-05, 9.619500000000031e-05, 9.661099999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.321" endtime="20201029 12:44:35.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.317" endtime="20201029 12:44:35.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.328" endtime="20201029 12:44:35.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.327" endtime="20201029 12:44:35.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.326" endtime="20201029 12:44:35.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.962" endtime="20201029 12:44:35.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.961" endtime="20201029 12:44:35.349"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.358" endtime="20201029 12:44:35.379"></status>
</kw>
<msg timestamp="20201029 12:44:35.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.356" endtime="20201029 12:44:35.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.380" endtime="20201029 12:44:35.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.383" endtime="20201029 12:44:35.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.353" endtime="20201029 12:44:35.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.351" endtime="20201029 12:44:35.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.392" endtime="20201029 12:44:35.677"></status>
</kw>
<msg timestamp="20201029 12:44:35.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.390" endtime="20201029 12:44:35.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019729819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.681" endtime="20201029 12:44:35.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.690" endtime="20201029 12:44:35.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.388" endtime="20201029 12:44:35.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.386" endtime="20201029 12:44:35.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.696" level="INFO">${RESULT} = [{'diff': 9.74019999999999e-05}, {'diff': 9.702800000000247e-05}, {'diff': 9.740300000000285e-05}, {'diff': 9.725000000000011e-05}, {'diff': 9.695800000000115e-05}, {'diff': 9.744499999999809e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:35.693" endtime="20201029 12:44:35.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.701" level="INFO">${ACCURACY} = {'diff': [9.74019999999999e-05, 9.702800000000247e-05, 9.740300000000285e-05, 9.725000000000011e-05, 9.695800000000115e-05, 9.744499999999809e-05, 9.737500000000024e-05, 9.7334000000001e-05, 9.7665999...</msg>
<status status="PASS" starttime="20201029 12:44:35.697" endtime="20201029 12:44:35.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.706" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.705" endtime="20201029 12:44:35.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.708" level="INFO">VALUE: [9.74019999999999e-05, 9.702800000000247e-05, 9.740300000000285e-05, 9.725000000000011e-05, 9.695800000000115e-05, 9.744499999999809e-05, 9.737500000000024e-05, 9.7334000000001e-05, 9.766599999999973e-05, 9.71799999999988e-05, 9.73470000000011e-05, 9.683299999999756e-05, 9.690300000000235e-05, 9.713900000000303e-05, 9.741700000000242e-05, 9.701399999999943e-05, 9.736200000000014e-05, 9.707000000000118e-05, 9.713899999999956e-05, 9.690299999999888e-05, 9.72219999999975e-05, 9.695800000000115e-05, 9.74019999999999e-05, 9.768099999999877e-05, 9.67920000000018e-05, 9.740299999999938e-05, 9.68470000000006e-05, 9.711100000000042e-05, 9.656999999999721e-05, 9.69730000000002e-05, 9.687499999999974e-05, 9.699999999999986e-05, 9.744400000000208e-05, 9.722200000000097e-05, 9.736100000000067e-05, 9.67920000000018e-05, 9.738899999999981e-05, 9.723599999999707e-05, 9.736100000000067e-05, 9.722300000000045e-05, 9.755499999999917e-05, 9.758400000000125e-05, 9.6721999999997e-05, 9.740299999999938e-05, 9.765200000000016e-05, 9.752700000000003e-05, 9.747200000000122e-05, 9.70409999999991e-05, 9.683299999999756e-05, 9.737500000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.707" endtime="20201029 12:44:35.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.702" endtime="20201029 12:44:35.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.713" endtime="20201029 12:44:35.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.712" endtime="20201029 12:44:35.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.711" endtime="20201029 12:44:35.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.350" endtime="20201029 12:44:35.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.349" endtime="20201029 12:44:35.734"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.743" endtime="20201029 12:44:35.763"></status>
</kw>
<msg timestamp="20201029 12:44:35.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.741" endtime="20201029 12:44:35.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.764" endtime="20201029 12:44:35.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.767" endtime="20201029 12:44:35.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.739" endtime="20201029 12:44:35.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.736" endtime="20201029 12:44:35.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.776" endtime="20201029 12:44:36.063"></status>
</kw>
<msg timestamp="20201029 12:44:36.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.774" endtime="20201029 12:44:36.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.068" endtime="20201029 12:44:36.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.076" endtime="20201029 12:44:36.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.772" endtime="20201029 12:44:36.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.770" endtime="20201029 12:44:36.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.082" level="INFO">${RESULT} = [{'diff': 9.772299999999748e-05}, {'diff': 9.795799999999869e-05}, {'diff': 9.858299999999931e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.770799999999843e-05}, {'diff': 9.78470000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:36.079" endtime="20201029 12:44:36.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.086" level="INFO">${ACCURACY} = {'diff': [9.772299999999748e-05, 9.795799999999869e-05, 9.858299999999931e-05, 9.787499999999727e-05, 9.770799999999843e-05, 9.78470000000016e-05, 9.831999999999896e-05, 9.790299999999988e-05, 9.79170...</msg>
<status status="PASS" starttime="20201029 12:44:36.083" endtime="20201029 12:44:36.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.091" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.090" endtime="20201029 12:44:36.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.093" level="INFO">VALUE: [9.772299999999748e-05, 9.795799999999869e-05, 9.858299999999931e-05, 9.787499999999727e-05, 9.770799999999843e-05, 9.78470000000016e-05, 9.831999999999896e-05, 9.790299999999988e-05, 9.791700000000292e-05, 9.797299999999773e-05, 9.784800000000107e-05, 9.808399999999828e-05, 9.784699999999813e-05, 9.791699999999945e-05, 9.772200000000147e-05, 9.837500000000124e-05, 9.830499999999992e-05, 9.78609999999977e-05, 9.797200000000172e-05, 9.865300000000063e-05, 9.777799999999975e-05, 9.845899999999866e-05, 9.775000000000061e-05, 9.820900000000188e-05, 9.816600000000023e-05, 9.861100000000192e-05, 9.780499999999942e-05, 9.780499999999942e-05, 9.776400000000018e-05, 9.775000000000061e-05, 9.82219999999985e-05, 9.786200000000064e-05, 9.791599999999998e-05, 9.865300000000063e-05, 9.770899999999791e-05, 9.861099999999845e-05, 9.863800000000159e-05, 9.865200000000116e-05, 9.773600000000104e-05, 9.797200000000172e-05, 9.854200000000007e-05, 9.83059999999994e-05, 9.834699999999863e-05, 9.794399999999912e-05, 9.795799999999869e-05, 9.827700000000078e-05, 9.781999999999846e-05, 9.826400000000068e-05, 9.80410000000001e-05, 9.82219999999985e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.092" endtime="20201029 12:44:36.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.087" endtime="20201029 12:44:36.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.098" endtime="20201029 12:44:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.097" endtime="20201029 12:44:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.096" endtime="20201029 12:44:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.735" endtime="20201029 12:44:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.734" endtime="20201029 12:44:36.119"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.127" endtime="20201029 12:44:36.149"></status>
</kw>
<msg timestamp="20201029 12:44:36.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.126" endtime="20201029 12:44:36.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.151" endtime="20201029 12:44:36.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.153" endtime="20201029 12:44:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.123" endtime="20201029 12:44:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.121" endtime="20201029 12:44:36.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.162" endtime="20201029 12:44:36.449"></status>
</kw>
<msg timestamp="20201029 12:44:36.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.161" endtime="20201029 12:44:36.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.454" endtime="20201029 12:44:36.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.462" endtime="20201029 12:44:36.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.158" endtime="20201029 12:44:36.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.156" endtime="20201029 12:44:36.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.468" level="INFO">${RESULT} = [{'diff': 9.962499999999902e-05}, {'diff': 9.884800000000207e-05}, {'diff': 9.941700000000095e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.96670000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:36.465" endtime="20201029 12:44:36.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.472" level="INFO">${ACCURACY} = {'diff': [9.962499999999902e-05, 9.884800000000207e-05, 9.941700000000095e-05, 9.945800000000019e-05, 9.881899999999999e-05, 9.96670000000012e-05, 9.927800000000125e-05, 9.890300000000088e-05, 9.89999...</msg>
<status status="PASS" starttime="20201029 12:44:36.469" endtime="20201029 12:44:36.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.477" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.476" endtime="20201029 12:44:36.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.479" level="INFO">VALUE: [9.962499999999902e-05, 9.884800000000207e-05, 9.941700000000095e-05, 9.945800000000019e-05, 9.881899999999999e-05, 9.96670000000012e-05, 9.927800000000125e-05, 9.890300000000088e-05, 9.89999999999984e-05, 9.913899999999809e-05, 9.913899999999809e-05, 9.894400000000012e-05, 9.870799999999944e-05, 9.883299999999956e-05, 9.961099999999945e-05, 9.929200000000082e-05, 9.870799999999944e-05, 9.905600000000014e-05, 9.869499999999934e-05, 9.870900000000238e-05, 9.936200000000214e-05, 9.966600000000173e-05, 9.897199999999926e-05, 9.955500000000117e-05, 9.8721999999999e-05, 9.933300000000006e-05, 9.924999999999864e-05, 9.9028000000001e-05, 9.884699999999913e-05, 9.924999999999864e-05, 9.895900000000263e-05, 9.886200000000164e-05, 9.924999999999864e-05, 9.947199999999976e-05, 9.947199999999976e-05, 9.877800000000075e-05, 9.897199999999926e-05, 9.961100000000292e-05, 9.919400000000037e-05, 9.915300000000113e-05, 9.908299999999981e-05, 9.929200000000082e-05, 9.901400000000143e-05, 9.9028000000001e-05, 9.895899999999916e-05, 9.933300000000006e-05, 9.966600000000173e-05, 9.94020000000019e-05, 9.911099999999895e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.478" endtime="20201029 12:44:36.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.473" endtime="20201029 12:44:36.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.485" endtime="20201029 12:44:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.484" endtime="20201029 12:44:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.482" endtime="20201029 12:44:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.120" endtime="20201029 12:44:36.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.119" endtime="20201029 12:44:36.506"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.514" endtime="20201029 12:44:36.536"></status>
</kw>
<msg timestamp="20201029 12:44:36.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.513" endtime="20201029 12:44:36.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.537" endtime="20201029 12:44:36.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.540" endtime="20201029 12:44:36.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.510" endtime="20201029 12:44:36.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.508" endtime="20201029 12:44:36.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.549" endtime="20201029 12:44:36.842"></status>
</kw>
<msg timestamp="20201029 12:44:36.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:36.547" endtime="20201029 12:44:36.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:36.851" endtime="20201029 12:44:36.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.869" endtime="20201029 12:44:36.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.545" endtime="20201029 12:44:36.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.543" endtime="20201029 12:44:36.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.883" level="INFO">${RESULT} = [{'diff': 0.00010059699999999741}, {'diff': 0.00010045800000000119}, {'diff': 9.983400000000003e-05}, {'diff': 0.00010026399999999921}, {'diff': 0.00010047199999999729}, {'diff': 9.970899999999991e-05...</msg>
<status status="PASS" starttime="20201029 12:44:36.876" endtime="20201029 12:44:36.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.893" level="INFO">${ACCURACY} = {'diff': [0.00010059699999999741, 0.00010045800000000119, 9.983400000000003e-05, 0.00010026399999999921, 0.00010047199999999729, 9.970899999999991e-05, 0.00010052799999999903, 9.990299999999841e-05, 0...</msg>
<status status="PASS" starttime="20201029 12:44:36.885" endtime="20201029 12:44:36.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.902" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.900" endtime="20201029 12:44:36.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.907" level="INFO">VALUE: [0.00010059699999999741, 0.00010045800000000119, 9.983400000000003e-05, 0.00010026399999999921, 0.00010047199999999729, 9.970899999999991e-05, 0.00010052799999999903, 9.990299999999841e-05, 0.00010054099999999913, 9.981900000000099e-05, 0.00010027699999999931, 0.00010024999999999964, 0.00010011199999999942, 9.984700000000013e-05, 9.98609999999997e-05, 0.00010012499999999952, 9.973599999999957e-05, 0.00010059700000000088, 0.00010008400000000028, 0.00010033299999999759, 0.00010038900000000281, 9.98609999999997e-05, 0.00010048600000000033, 9.9722e-05, 9.969400000000087e-05, 0.00010006900000000124, 0.00010008300000000081, 0.00010027800000000225, 9.982000000000046e-05, 9.973599999999957e-05, 0.00010052799999999903, 0.00010008400000000028, 0.00010038899999999934, 9.963899999999859e-05, 9.9722e-05, 0.00010017999999999833, 0.00010051399999999946, 9.976400000000218e-05, 0.00010011099999999995, 0.0001001670000000017, 0.00010051299999999999, 9.9722e-05, 0.00010059800000000035, 0.00010024999999999964, 0.00010058400000000078, 0.00010006899999999777, 0.00010017999999999833, 0.00010022199999999704, 0.00010015299999999866, 0.00010040299999999891]</msg>
<status status="PASS" starttime="20201029 12:44:36.905" endtime="20201029 12:44:36.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.895" endtime="20201029 12:44:36.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.918" endtime="20201029 12:44:36.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.916" endtime="20201029 12:44:36.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.915" endtime="20201029 12:44:36.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.507" endtime="20201029 12:44:36.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.506" endtime="20201029 12:44:36.939"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.947" endtime="20201029 12:44:36.968"></status>
</kw>
<msg timestamp="20201029 12:44:36.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.946" endtime="20201029 12:44:36.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.970" endtime="20201029 12:44:36.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.972" endtime="20201029 12:44:36.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.943" endtime="20201029 12:44:36.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.941" endtime="20201029 12:44:36.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.981" endtime="20201029 12:44:37.268"></status>
</kw>
<msg timestamp="20201029 12:44:37.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.980" endtime="20201029 12:44:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.272" endtime="20201029 12:44:37.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.281" endtime="20201029 12:44:37.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.977" endtime="20201029 12:44:37.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.976" endtime="20201029 12:44:37.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.287" level="INFO">${RESULT} = [{'diff': 0.00010095800000000169}, {'diff': 0.00010127799999999978}, {'diff': 0.00010133299999999859}, {'diff': 0.000100722000000001}, {'diff': 0.0001008060000000019}, {'diff': 0.00010138900000000034}...</msg>
<status status="PASS" starttime="20201029 12:44:37.284" endtime="20201029 12:44:37.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.291" level="INFO">${ACCURACY} = {'diff': [0.00010095800000000169, 0.00010127799999999978, 0.00010133299999999859, 0.000100722000000001, 0.0001008060000000019, 0.00010138900000000034, 0.00010144500000000209, 0.00010126400000000021, 0...</msg>
<status status="PASS" starttime="20201029 12:44:37.288" endtime="20201029 12:44:37.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.296" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.295" endtime="20201029 12:44:37.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.298" level="INFO">VALUE: [0.00010095800000000169, 0.00010127799999999978, 0.00010133299999999859, 0.000100722000000001, 0.0001008060000000019, 0.00010138900000000034, 0.00010144500000000209, 0.00010126400000000021, 0.00010154100000000013, 0.0001012220000000015, 0.00010077699999999981, 0.00010094399999999865, 0.00010159700000000188, 0.00010129199999999935, 0.00010162499999999755, 0.00010152800000000003, 0.00010165300000000016, 0.00010101399999999996, 0.00010147199999999829, 0.000101028000000003, 0.00010123699999999708, 0.00010159699999999841, 0.00010076399999999971, 0.0001013879999999974, 0.00010127799999999978, 0.00010058400000000078, 0.00010120800000000194, 0.00010082000000000146, 0.00010120900000000141, 0.00010107000000000171, 0.00010166699999999973, 0.00010147299999999776, 0.00010147299999999776, 0.00010155600000000264, 0.00010147199999999829, 0.00010148599999999786, 0.00010081899999999852, 0.00010092999999999908, 0.00010070799999999797, 0.00010059700000000088, 0.00010090299999999941, 0.00010087500000000027, 0.00010094499999999812, 0.00010141699999999948, 0.00010133400000000153, 0.00010148600000000133, 0.00010115200000000019, 0.00010073600000000058, 0.00010134699999999816, 0.00010127799999999978]</msg>
<status status="PASS" starttime="20201029 12:44:37.297" endtime="20201029 12:44:37.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.292" endtime="20201029 12:44:37.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.303" endtime="20201029 12:44:37.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.301" endtime="20201029 12:44:37.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.300" endtime="20201029 12:44:37.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.940" endtime="20201029 12:44:37.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.939" endtime="20201029 12:44:37.323"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.332" endtime="20201029 12:44:37.354"></status>
</kw>
<msg timestamp="20201029 12:44:37.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.331" endtime="20201029 12:44:37.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.355" endtime="20201029 12:44:37.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.358" endtime="20201029 12:44:37.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.328" endtime="20201029 12:44:37.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.326" endtime="20201029 12:44:37.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.367" endtime="20201029 12:44:37.662"></status>
</kw>
<msg timestamp="20201029 12:44:37.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.365" endtime="20201029 12:44:37.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.671" endtime="20201029 12:44:37.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.689" endtime="20201029 12:44:37.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.363" endtime="20201029 12:44:37.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.361" endtime="20201029 12:44:37.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.703" level="INFO">${RESULT} = [{'diff': 0.00010197200000000226}, {'diff': 0.00010234699999999916}, {'diff': 0.00010265300000000116}, {'diff': 0.00010209800000000185}, {'diff': 0.00010212499999999805}, {'diff': 0.000102180000000000...</msg>
<status status="PASS" starttime="20201029 12:44:37.696" endtime="20201029 12:44:37.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.712" level="INFO">${ACCURACY} = {'diff': [0.00010197200000000226, 0.00010234699999999916, 0.00010265300000000116, 0.00010209800000000185, 0.00010212499999999805, 0.00010218000000000033, 0.00010209699999999891, 0.00010190300000000041...</msg>
<status status="PASS" starttime="20201029 12:44:37.705" endtime="20201029 12:44:37.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.719" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.718" endtime="20201029 12:44:37.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.721" level="INFO">VALUE: [0.00010197200000000226, 0.00010234699999999916, 0.00010265300000000116, 0.00010209800000000185, 0.00010212499999999805, 0.00010218000000000033, 0.00010209699999999891, 0.00010190300000000041, 0.00010209699999999891, 0.00010199999999999793, 0.00010197199999999879, 0.00010176400000000071, 0.00010248600000000233, 0.00010183400000000203, 0.00010259699999999941, 0.00010216700000000023, 0.00010225000000000165, 0.0001019160000000005, 0.00010220799999999947, 0.00010248600000000233, 0.00010259700000000288, 0.00010177799999999682, 0.00010179199999999985, 0.0001022359999999986, 0.00010188900000000084, 0.00010229200000000035, 0.00010179199999999985, 0.0001020000000000014, 0.00010238899999999787, 0.00010212500000000152, 0.00010233299999999959, 0.0001020000000000014, 0.00010215199999999772, 0.0001022359999999986, 0.0001022220000000025, 0.00010225000000000165, 0.00010238900000000134, 0.00010236099999999873, 0.00010265300000000116, 0.00010248699999999833, 0.00010233400000000253, 0.00010262499999999855, 0.00010229100000000088, 0.00010227799999999732, 0.00010266700000000073, 0.00010222199999999904, 0.0001022359999999986, 0.00010188900000000084, 0.00010229200000000035, 0.00010266700000000073]</msg>
<status status="PASS" starttime="20201029 12:44:37.720" endtime="20201029 12:44:37.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.713" endtime="20201029 12:44:37.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.727" endtime="20201029 12:44:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.725" endtime="20201029 12:44:37.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.724" endtime="20201029 12:44:37.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.324" endtime="20201029 12:44:37.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.324" endtime="20201029 12:44:37.747"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.756" endtime="20201029 12:44:37.777"></status>
</kw>
<msg timestamp="20201029 12:44:37.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.755" endtime="20201029 12:44:37.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.778" endtime="20201029 12:44:37.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.781" endtime="20201029 12:44:37.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.752" endtime="20201029 12:44:37.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.750" endtime="20201029 12:44:37.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.790" endtime="20201029 12:44:38.076"></status>
</kw>
<msg timestamp="20201029 12:44:38.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.788" endtime="20201029 12:44:38.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.080" endtime="20201029 12:44:38.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.088" endtime="20201029 12:44:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.786" endtime="20201029 12:44:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.784" endtime="20201029 12:44:38.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.095" level="INFO">${RESULT} = [{'diff': 0.00010282}, {'diff': 0.00010291700000000098}, {'diff': 0.00010363899999999912}, {'diff': 0.00010365300000000216}, {'diff': 0.00010316600000000176}, {'diff': 0.0001035689999999978}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:44:38.091" endtime="20201029 12:44:38.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.099" level="INFO">${ACCURACY} = {'diff': [0.00010282, 0.00010291700000000098, 0.00010363899999999912, 0.00010365300000000216, 0.00010316600000000176, 0.0001035689999999978, 0.00010329100000000188, 0.00010322200000000004, 0.000103680...</msg>
<status status="PASS" starttime="20201029 12:44:38.095" endtime="20201029 12:44:38.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.104" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.103" endtime="20201029 12:44:38.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.106" level="INFO">VALUE: [0.00010282, 0.00010291700000000098, 0.00010363899999999912, 0.00010365300000000216, 0.00010316600000000176, 0.0001035689999999978, 0.00010329100000000188, 0.00010322200000000004, 0.00010368099999999783, 0.000102722000000003, 0.00010302800000000154, 0.00010341700000000148, 0.00010294500000000012, 0.00010284799999999913, 0.00010347299999999976, 0.00010281900000000052, 0.00010363799999999965, 0.00010290199999999847, 0.00010352699999999909, 0.00010331900000000102, 0.00010282, 0.00010338900000000234, 0.00010294400000000065, 0.0001030550000000012, 0.00010340300000000191, 0.00010322200000000004, 0.0001033619999999992, 0.00010322200000000004, 0.00010352699999999909, 0.00010311099999999948, 0.00010344399999999768, 0.0001033749999999993, 0.00010363899999999912, 0.00010320800000000047, 0.00010320899999999994, 0.00010294500000000012, 0.00010359700000000041, 0.00010331900000000102, 0.00010276399999999825, 0.00010283399999999956, 0.00010302700000000206, 0.00010365200000000269, 0.00010273600000000258, 0.00010284699999999966, 0.00010272199999999954, 0.00010301400000000197, 0.00010272199999999954, 0.00010283399999999956, 0.00010327799999999832, 0.00010333400000000006]</msg>
<status status="PASS" starttime="20201029 12:44:38.105" endtime="20201029 12:44:38.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.100" endtime="20201029 12:44:38.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.111" endtime="20201029 12:44:38.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.110" endtime="20201029 12:44:38.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.108" endtime="20201029 12:44:38.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.748" endtime="20201029 12:44:38.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.748" endtime="20201029 12:44:38.132"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.140" endtime="20201029 12:44:38.162"></status>
</kw>
<msg timestamp="20201029 12:44:38.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.139" endtime="20201029 12:44:38.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.164" endtime="20201029 12:44:38.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.166" endtime="20201029 12:44:38.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.136" endtime="20201029 12:44:38.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.134" endtime="20201029 12:44:38.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.175" endtime="20201029 12:44:38.461"></status>
</kw>
<msg timestamp="20201029 12:44:38.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.173" endtime="20201029 12:44:38.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.466" endtime="20201029 12:44:38.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.474" endtime="20201029 12:44:38.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.171" endtime="20201029 12:44:38.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.169" endtime="20201029 12:44:38.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.480" level="INFO">${RESULT} = [{'diff': 0.0001043750000000003}, {'diff': 0.00010418000000000233}, {'diff': 0.00010415199999999972}, {'diff': 0.00010384700000000066}, {'diff': 0.00010397200000000079}, {'diff': 0.0001037080000000009...</msg>
<status status="PASS" starttime="20201029 12:44:38.477" endtime="20201029 12:44:38.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.484" level="INFO">${ACCURACY} = {'diff': [0.0001043750000000003, 0.00010418000000000233, 0.00010415199999999972, 0.00010384700000000066, 0.00010397200000000079, 0.00010370800000000097, 0.00010425000000000018, 0.00010436099999999726,...</msg>
<status status="PASS" starttime="20201029 12:44:38.481" endtime="20201029 12:44:38.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.489" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.488" endtime="20201029 12:44:38.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.491" level="INFO">VALUE: [0.0001043750000000003, 0.00010418000000000233, 0.00010415199999999972, 0.00010384700000000066, 0.00010397200000000079, 0.00010370800000000097, 0.00010425000000000018, 0.00010436099999999726, 0.00010466699999999926, 0.00010459699999999794, 0.00010427799999999932, 0.00010429100000000288, 0.00010411100000000048, 0.00010397200000000079, 0.00010408300000000134, 0.00010415299999999919, 0.00010376399999999925, 0.00010427800000000279, 0.00010413899999999962, 0.00010427799999999932, 0.00010441700000000248, 0.00010377799999999882, 0.00010391700000000198, 0.00010402699999999959, 0.00010444499999999815, 0.00010390199999999947, 0.00010454099999999966, 0.00010380599999999796, 0.00010465299999999969, 0.00010408300000000134, 0.00010422200000000104, 0.00010445800000000172, 0.00010397199999999732, 0.00010383400000000056, 0.00010404099999999916, 0.00010445899999999772, 0.00010443000000000258, 0.00010422199999999757, 0.00010380599999999796, 0.00010433300000000159, 0.000104514, 0.00010427799999999932, 0.00010415299999999919, 0.00010416699999999876, 0.0001041810000000018, 0.0001040559999999982, 0.00010462500000000055, 0.00010381899999999805, 0.00010356900000000127, 0.00010391699999999851]</msg>
<status status="PASS" starttime="20201029 12:44:38.490" endtime="20201029 12:44:38.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.485" endtime="20201029 12:44:38.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.496" endtime="20201029 12:44:38.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.495" endtime="20201029 12:44:38.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.493" endtime="20201029 12:44:38.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.133" endtime="20201029 12:44:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.132" endtime="20201029 12:44:38.517"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.525" endtime="20201029 12:44:38.549"></status>
</kw>
<msg timestamp="20201029 12:44:38.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.524" endtime="20201029 12:44:38.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.550" endtime="20201029 12:44:38.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.553" endtime="20201029 12:44:38.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.521" endtime="20201029 12:44:38.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.519" endtime="20201029 12:44:38.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.562" endtime="20201029 12:44:38.848"></status>
</kw>
<msg timestamp="20201029 12:44:38.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.560" endtime="20201029 12:44:38.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.852" endtime="20201029 12:44:38.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.860" endtime="20201029 12:44:38.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.558" endtime="20201029 12:44:38.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.556" endtime="20201029 12:44:38.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.867" level="INFO">${RESULT} = [{'diff': 0.00010495799999999875}, {'diff': 0.00010547200000000229}, {'diff': 0.00010530600000000293}, {'diff': 0.0001053200000000025}, {'diff': 0.00010563900000000112}, {'diff': 0.0001049860000000013...</msg>
<status status="PASS" starttime="20201029 12:44:38.864" endtime="20201029 12:44:38.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.871" level="INFO">${ACCURACY} = {'diff': [0.00010495799999999875, 0.00010547200000000229, 0.00010530600000000293, 0.0001053200000000025, 0.00010563900000000112, 0.00010498600000000136, 0.00010458400000000131, 0.00010488900000000037,...</msg>
<status status="PASS" starttime="20201029 12:44:38.868" endtime="20201029 12:44:38.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.876" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.875" endtime="20201029 12:44:38.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.878" level="INFO">VALUE: [0.00010495799999999875, 0.00010547200000000229, 0.00010530600000000293, 0.0001053200000000025, 0.00010563900000000112, 0.00010498600000000136, 0.00010458400000000131, 0.00010488900000000037, 0.0001055559999999997, 0.00010476300000000077, 0.00010536100000000173, 0.00010534699999999869, 0.00010527800000000032, 0.00010558299999999937, 0.00010520800000000247, 0.00010530599999999946, 0.00010520899999999847, 0.00010513899999999715, 0.00010494399999999918, 0.00010543000000000011, 0.00010479199999999939, 0.00010495800000000222, 0.0001050689999999993, 0.00010538900000000087, 0.00010480599999999896, 0.00010490299999999994, 0.00010511099999999801, 0.00010511100000000148, 0.00010520900000000194, 0.00010456999999999828, 0.00010495800000000222, 0.00010508300000000234, 0.00010540200000000097, 0.00010512499999999758, 0.00010491600000000004, 0.0001055559999999997, 0.00010508299999999887, 0.0001048750000000008, 0.00010530599999999946, 0.00010530599999999946, 0.00010491699999999951, 0.00010525000000000118, 0.00010491600000000004, 0.00010512500000000105, 0.00010551399999999753, 0.00010529199999999989, 0.000105207999999999, 0.00010541700000000001, 0.00010526400000000075, 0.00010502800000000007]</msg>
<status status="PASS" starttime="20201029 12:44:38.877" endtime="20201029 12:44:38.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.872" endtime="20201029 12:44:38.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.884" endtime="20201029 12:44:38.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.883" endtime="20201029 12:44:38.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.882" endtime="20201029 12:44:38.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.518" endtime="20201029 12:44:38.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.517" endtime="20201029 12:44:38.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.010" endtime="20201029 12:44:38.905"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:57.937" endtime="20201029 12:44:38.906" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.913" endtime="20201029 12:44:38.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.911" endtime="20201029 12:44:38.933"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.947" endtime="20201029 12:44:38.963"></status>
</kw>
<msg timestamp="20201029 12:44:38.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.945" endtime="20201029 12:44:38.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.964" endtime="20201029 12:44:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.969" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:38.967" endtime="20201029 12:44:38.970"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:38.942" endtime="20201029 12:44:38.970"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:38.940" endtime="20201029 12:44:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.938" endtime="20201029 12:44:38.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:38.975" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:38.974" endtime="20201029 12:44:38.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.972" endtime="20201029 12:44:38.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.938" endtime="20201029 12:44:38.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.937" endtime="20201029 12:44:38.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.977" endtime="20201029 12:44:38.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.935" endtime="20201029 12:44:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.934" endtime="20201029 12:44:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.910" endtime="20201029 12:44:38.980"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.991" endtime="20201029 12:44:39.007"></status>
</kw>
<msg timestamp="20201029 12:44:39.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.989" endtime="20201029 12:44:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.009" endtime="20201029 12:44:39.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.012" endtime="20201029 12:44:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.985" endtime="20201029 12:44:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.983" endtime="20201029 12:44:39.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.021" endtime="20201029 12:44:39.325"></status>
</kw>
<msg timestamp="20201029 12:44:39.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068525375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068548889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.020" endtime="20201029 12:44:39.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068525375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068548889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.329" endtime="20201029 12:44:39.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.338" endtime="20201029 12:44:39.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.017" endtime="20201029 12:44:39.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.015" endtime="20201029 12:44:39.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.345" level="INFO">${RESULT} = [{'diff': 2.3514000000002255e-05}, {'diff': 5.55600000000378e-06}, {'diff': 5.555999999989902e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.041999999997771e-06}, {'diff': 5.5550000000043065e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:39.341" endtime="20201029 12:44:39.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.349" level="INFO">${ACCURACY} = {'diff': [2.3514000000002255e-05, 5.55600000000378e-06, 5.555999999989902e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 5.5550000000043065e-06, 6.054999999990929e-06, 6.042000000011649e-06, 6.54...</msg>
<status status="PASS" starttime="20201029 12:44:39.346" endtime="20201029 12:44:39.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.355" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.354" endtime="20201029 12:44:39.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.357" level="INFO">VALUE: [2.3514000000002255e-05, 5.55600000000378e-06, 5.555999999989902e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 5.5550000000043065e-06, 6.054999999990929e-06, 6.042000000011649e-06, 6.541999999998271e-06, 5.554999999990429e-06, 5.541999999997271e-06, 6.0279999999912626e-06, 6.040999999998298e-06, 5.540999999997798e-06, 6.05600000000428e-06, 5.5550000000043065e-06, 5.527000000005167e-06, 6.069999999996911e-06, 6.0550000000048065e-06, 6.041999999997771e-06, 5.541999999997271e-06, 5.554999999990429e-06, 6.054999999990929e-06, 6.0550000000048065e-06, 5.5550000000043065e-06, 5.554999999990429e-06, 5.5689999999969375e-06, 5.540999999997798e-06, 6.05600000000428e-06, 6.040999999998298e-06, 6.042000000011649e-06, 6.041999999997771e-06, 5.55600000000378e-06, 5.5550000000043065e-06, 6.042000000011649e-06, 6.055999999990402e-06, 6.0139999999986316e-06, 5.541999999997271e-06, 6.0000000000060005e-06, 6.541999999998271e-06, 6.041999999997771e-06, 6.554999999991429e-06, 6.05600000000428e-06, 5.541999999997271e-06, 6.041999999997771e-06, 5.555999999989902e-06, 6.0689999999974376e-06, 5.542000000011149e-06, 5.55600000000378e-06, 6.042000000011649e-06]</msg>
<status status="PASS" starttime="20201029 12:44:39.356" endtime="20201029 12:44:39.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.350" endtime="20201029 12:44:39.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.362" endtime="20201029 12:44:39.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.360" endtime="20201029 12:44:39.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.359" endtime="20201029 12:44:39.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.981" endtime="20201029 12:44:39.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.981" endtime="20201029 12:44:39.383"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.392" endtime="20201029 12:44:39.410"></status>
</kw>
<msg timestamp="20201029 12:44:39.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.390" endtime="20201029 12:44:39.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.411" endtime="20201029 12:44:39.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.414" endtime="20201029 12:44:39.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.388" endtime="20201029 12:44:39.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.385" endtime="20201029 12:44:39.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.423" endtime="20201029 12:44:39.706"></status>
</kw>
<msg timestamp="20201029 12:44:39.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020789361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020796417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.422" endtime="20201029 12:44:39.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020789361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020796417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.711" endtime="20201029 12:44:39.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.719" endtime="20201029 12:44:39.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.419" endtime="20201029 12:44:39.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.417" endtime="20201029 12:44:39.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.726" level="INFO">${RESULT} = [{'diff': 7.056000000001811e-06}, {'diff': 7.000000000000062e-06}, {'diff': 7.028000000002671e-06}, {'diff': 7.069999999997911e-06}, {'diff': 6.569000000001407e-06}, {'diff': 6.541000000002267e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:39.723" endtime="20201029 12:44:39.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.732" level="INFO">${ACCURACY} = {'diff': [7.056000000001811e-06, 7.000000000000062e-06, 7.028000000002671e-06, 7.069999999997911e-06, 6.569000000001407e-06, 6.541000000002267e-06, 6.541000000002267e-06, 7.056000000001811e-06, 7.0549...</msg>
<status status="PASS" starttime="20201029 12:44:39.727" endtime="20201029 12:44:39.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.736" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.735" endtime="20201029 12:44:39.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.739" level="INFO">VALUE: [7.056000000001811e-06, 7.000000000000062e-06, 7.028000000002671e-06, 7.069999999997911e-06, 6.569000000001407e-06, 6.541000000002267e-06, 6.541000000002267e-06, 7.056000000001811e-06, 7.054999999998868e-06, 6.597000000000547e-06, 6.556000000001311e-06, 7.054999999998868e-06, 7.069000000001907e-06, 6.556000000001311e-06, 6.611000000000117e-06, 6.541999999998271e-06, 7.042000000002241e-06, 7.499999999997092e-06, 6.542000000001741e-06, 7.500000000000562e-06, 6.541999999998271e-06, 7.068999999998438e-06, 7.056000000001811e-06, 6.542000000001741e-06, 7.042000000002241e-06, 7.055999999998341e-06, 6.555999999997841e-06, 6.555999999997841e-06, 7.0419999999987715e-06, 6.513999999999132e-06, 6.556000000001311e-06, 7.042000000002241e-06, 6.556000000001311e-06, 7.068999999998438e-06, 6.568999999997938e-06, 6.485999999999992e-06, 7.054999999998868e-06, 6.542000000001741e-06, 6.554999999998368e-06, 7.069000000001907e-06, 7.055999999998341e-06, 6.555000000001837e-06, 6.569999999997411e-06, 6.540999999998798e-06, 6.540999999998798e-06, 7.125000000000187e-06, 6.554999999998368e-06, 7.069000000001907e-06, 7.054999999998868e-06, 7.042000000002241e-06]</msg>
<status status="PASS" starttime="20201029 12:44:39.737" endtime="20201029 12:44:39.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.732" endtime="20201029 12:44:39.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.744" endtime="20201029 12:44:39.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.742" endtime="20201029 12:44:39.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.741" endtime="20201029 12:44:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.384" endtime="20201029 12:44:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.383" endtime="20201029 12:44:39.764"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.774" endtime="20201029 12:44:39.790"></status>
</kw>
<msg timestamp="20201029 12:44:39.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.772" endtime="20201029 12:44:39.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.792" endtime="20201029 12:44:39.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.794" endtime="20201029 12:44:39.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.769" endtime="20201029 12:44:39.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.767" endtime="20201029 12:44:39.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.804" endtime="20201029 12:44:40.091"></status>
</kw>
<msg timestamp="20201029 12:44:40.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020638083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.802" endtime="20201029 12:44:40.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020638083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.095" endtime="20201029 12:44:40.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.104" endtime="20201029 12:44:40.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.800" endtime="20201029 12:44:40.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.798" endtime="20201029 12:44:40.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.110" level="INFO">${RESULT} = [{'diff': 8.027000000000728e-06}, {'diff': 7.555000000002837e-06}, {'diff': 7.568999999998938e-06}, {'diff': 8.055999999999341e-06}, {'diff': 7.555000000002837e-06}, {'diff': 8.542000000000272e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:40.107" endtime="20201029 12:44:40.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.115" level="INFO">${ACCURACY} = {'diff': [8.027000000000728e-06, 7.555000000002837e-06, 7.568999999998938e-06, 8.055999999999341e-06, 7.555000000002837e-06, 8.542000000000272e-06, 8.028000000000202e-06, 7.568999999998938e-06, 7.5689...</msg>
<status status="PASS" starttime="20201029 12:44:40.111" endtime="20201029 12:44:40.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.120" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.119" endtime="20201029 12:44:40.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.122" level="INFO">VALUE: [8.027000000000728e-06, 7.555000000002837e-06, 7.568999999998938e-06, 8.055999999999341e-06, 7.555000000002837e-06, 8.542000000000272e-06, 8.028000000000202e-06, 7.568999999998938e-06, 7.568999999998938e-06, 8.056000000002811e-06, 7.540999999999798e-06, 7.540999999999798e-06, 8.069999999998911e-06, 8.013999999997162e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.068999999999438e-06, 7.971999999998453e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.487000000001466e-06, 8.068999999999438e-06, 8.013000000001158e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.055999999999341e-06, 7.555999999998841e-06, 8.055999999999341e-06, 7.570000000001881e-06, 8.541999999996802e-06, 8.068999999999438e-06, 7.598000000001021e-06, 8.000000000001062e-06, 7.5419999999992715e-06, 8.041000000000298e-06, 7.540999999999798e-06, 8.555000000000368e-06, 7.555999999998841e-06, 8.054999999999868e-06, 7.568999999998938e-06, 8.041000000000298e-06, 8.055999999999341e-06, 7.556000000002311e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.041999999999772e-06, 7.5419999999992715e-06, 7.570000000001881e-06, 7.554999999999368e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.121" endtime="20201029 12:44:40.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.116" endtime="20201029 12:44:40.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.127" endtime="20201029 12:44:40.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.125" endtime="20201029 12:44:40.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.124" endtime="20201029 12:44:40.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.765" endtime="20201029 12:44:40.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.765" endtime="20201029 12:44:40.148"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.158" endtime="20201029 12:44:40.177"></status>
</kw>
<msg timestamp="20201029 12:44:40.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.156" endtime="20201029 12:44:40.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.178" endtime="20201029 12:44:40.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.181" endtime="20201029 12:44:40.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.153" endtime="20201029 12:44:40.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.151" endtime="20201029 12:44:40.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.190" endtime="20201029 12:44:40.475"></status>
</kw>
<msg timestamp="20201029 12:44:40.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.189" endtime="20201029 12:44:40.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.480" endtime="20201029 12:44:40.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.488" endtime="20201029 12:44:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.186" endtime="20201029 12:44:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.184" endtime="20201029 12:44:40.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.495" level="INFO">${RESULT} = [{'diff': 8.568999999999938e-06}, {'diff': 8.542000000000272e-06}, {'diff': 8.486000000001992e-06}, {'diff': 9.055000000000868e-06}, {'diff': 8.527999999997232e-06}, {'diff': 8.554999999996898e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:40.492" endtime="20201029 12:44:40.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.500" level="INFO">${ACCURACY} = {'diff': [8.568999999999938e-06, 8.542000000000272e-06, 8.486000000001992e-06, 9.055000000000868e-06, 8.527999999997232e-06, 8.554999999996898e-06, 9.056000000000342e-06, 9.056000000000342e-06, 8.5420...</msg>
<status status="PASS" starttime="20201029 12:44:40.496" endtime="20201029 12:44:40.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.504" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.503" endtime="20201029 12:44:40.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.507" level="INFO">VALUE: [8.568999999999938e-06, 8.542000000000272e-06, 8.486000000001992e-06, 9.055000000000868e-06, 8.527999999997232e-06, 8.554999999996898e-06, 9.056000000000342e-06, 9.056000000000342e-06, 8.542000000000272e-06, 9.069000000000438e-06, 9.069000000000438e-06, 8.555999999999842e-06, 9.042000000000772e-06, 8.542000000000272e-06, 8.555000000000368e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.055000000000868e-06, 8.542000000000272e-06, 8.555000000000368e-06, 9.042000000000772e-06, 8.554999999996898e-06, 9.055000000000868e-06, 8.513000000001658e-06, 8.541000000000798e-06, 8.569999999999411e-06, 9.056000000000342e-06, 8.527000000001228e-06, 9.054999999997398e-06, 9.055000000000868e-06, 8.582999999999508e-06, 8.555999999999842e-06, 9.055000000000868e-06, 9.554999999997899e-06, 8.583999999998981e-06, 8.999999999998592e-06, 8.555999999999842e-06, 9.056000000000342e-06, 8.569999999999411e-06, 9.056000000000342e-06, 8.528000000000702e-06, 9.055000000000868e-06, 8.542000000000272e-06, 9.055000000000868e-06, 9.555000000001368e-06, 9.096999999999578e-06, 9.054999999997398e-06, 8.555999999999842e-06, 8.555999999999842e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.505" endtime="20201029 12:44:40.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.500" endtime="20201029 12:44:40.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.513" endtime="20201029 12:44:40.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.511" endtime="20201029 12:44:40.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.510" endtime="20201029 12:44:40.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.149" endtime="20201029 12:44:40.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.149" endtime="20201029 12:44:40.534"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.543" endtime="20201029 12:44:40.561"></status>
</kw>
<msg timestamp="20201029 12:44:40.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.541" endtime="20201029 12:44:40.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.562" endtime="20201029 12:44:40.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.565" endtime="20201029 12:44:40.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.538" endtime="20201029 12:44:40.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.536" endtime="20201029 12:44:40.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.574" endtime="20201029 12:44:40.861"></status>
</kw>
<msg timestamp="20201029 12:44:40.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.573" endtime="20201029 12:44:40.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.865" endtime="20201029 12:44:40.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.874" endtime="20201029 12:44:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.570" endtime="20201029 12:44:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.568" endtime="20201029 12:44:40.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.881" level="INFO">${RESULT} = [{'diff': 9.540999999998329e-06}, {'diff': 1.0541999999998802e-05}, {'diff': 1.0055999999997872e-05}, {'diff': 1.0027999999998732e-05}, {'diff': 1.0055999999997872e-05}, {'diff': 9.541999999997802e-06...</msg>
<status status="PASS" starttime="20201029 12:44:40.877" endtime="20201029 12:44:40.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.886" level="INFO">${ACCURACY} = {'diff': [9.540999999998329e-06, 1.0541999999998802e-05, 1.0055999999997872e-05, 1.0027999999998732e-05, 1.0055999999997872e-05, 9.541999999997802e-06, 1.0055999999997872e-05, 1.0055000000001868e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:40.882" endtime="20201029 12:44:40.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.891" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.890" endtime="20201029 12:44:40.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.893" level="INFO">VALUE: [9.540999999998329e-06, 1.0541999999998802e-05, 1.0055999999997872e-05, 1.0027999999998732e-05, 1.0055999999997872e-05, 9.541999999997802e-06, 1.0055999999997872e-05, 1.0055000000001868e-05, 9.542000000001272e-06, 9.555000000001368e-06, 9.556000000000842e-06, 1.0041999999998302e-05, 1.0055000000001868e-05, 1.0056000000001342e-05, 9.542000000001272e-06, 9.999999999999593e-06, 9.542000000001272e-06, 1.0041999999998302e-05, 1.0542000000002272e-05, 1.0041999999998302e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0041000000002298e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 9.554999999997899e-06, 1.0013999999999162e-05, 9.540999999998329e-06, 9.555999999997372e-06, 1.0040999999998829e-05, 1.0026999999999259e-05, 1.0526999999999759e-05, 1.0040999999998829e-05, 9.527999999998232e-06, 1.0054999999998399e-05, 9.556000000000842e-06, 1.0083000000001008e-05, 9.540999999998329e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.555999999997372e-06, 9.583999999999981e-06, 9.541999999997802e-06, 1.0056000000001342e-05, 9.528000000001702e-06, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0055999999997872e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.892" endtime="20201029 12:44:40.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.887" endtime="20201029 12:44:40.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.899" endtime="20201029 12:44:40.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.897" endtime="20201029 12:44:40.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.896" endtime="20201029 12:44:40.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.535" endtime="20201029 12:44:40.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.534" endtime="20201029 12:44:40.919"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.928" endtime="20201029 12:44:40.946"></status>
</kw>
<msg timestamp="20201029 12:44:40.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.927" endtime="20201029 12:44:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.947" endtime="20201029 12:44:40.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.950" endtime="20201029 12:44:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.924" endtime="20201029 12:44:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.922" endtime="20201029 12:44:40.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.960" endtime="20201029 12:44:41.247"></status>
</kw>
<msg timestamp="20201029 12:44:41.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.958" endtime="20201029 12:44:41.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.252" endtime="20201029 12:44:41.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.260" endtime="20201029 12:44:41.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.955" endtime="20201029 12:44:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.953" endtime="20201029 12:44:41.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.267" level="INFO">${RESULT} = [{'diff': 1.1000000000000593e-05}, {'diff': 1.0625000000000218e-05}, {'diff': 1.0540999999999329e-05}, {'diff': 1.1041999999999302e-05}, {'diff': 1.0528000000002702e-05}, {'diff': 1.1042000000002772e-...</msg>
<status status="PASS" starttime="20201029 12:44:41.264" endtime="20201029 12:44:41.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.272" level="INFO">${ACCURACY} = {'diff': [1.1000000000000593e-05, 1.0625000000000218e-05, 1.0540999999999329e-05, 1.1041999999999302e-05, 1.0528000000002702e-05, 1.1042000000002772e-05, 1.0569000000001938e-05, 1.0570000000001412e-05...</msg>
<status status="PASS" starttime="20201029 12:44:41.268" endtime="20201029 12:44:41.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.276" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.275" endtime="20201029 12:44:41.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.279" level="INFO">VALUE: [1.1000000000000593e-05, 1.0625000000000218e-05, 1.0540999999999329e-05, 1.1041999999999302e-05, 1.0528000000002702e-05, 1.1042000000002772e-05, 1.0569000000001938e-05, 1.0570000000001412e-05, 1.1054999999999399e-05, 1.0540999999999329e-05, 1.1554999999999899e-05, 1.0555999999998372e-05, 1.1055999999998872e-05, 1.0986000000001023e-05, 1.0541999999998802e-05, 1.1041999999999302e-05, 1.0542000000002272e-05, 1.1027999999999732e-05, 1.0556000000001842e-05, 1.1055999999998872e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1596999999998608e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.1055000000002868e-05, 1.1514000000000663e-05, 1.0987000000000496e-05, 1.0541000000002798e-05, 1.1528000000000233e-05, 1.1040999999999829e-05, 1.0556000000001842e-05, 1.1056000000002342e-05, 1.0555999999998372e-05, 1.1041999999999302e-05, 1.0542000000002272e-05, 1.1054999999999399e-05, 1.1056000000002342e-05, 1.0541999999998802e-05, 1.1056000000002342e-05, 1.1541999999999802e-05, 1.0527999999999232e-05, 1.0986000000001023e-05, 1.0540999999999329e-05, 1.1056000000002342e-05, 1.1041999999999302e-05, 1.1027000000000259e-05, 1.0526999999999759e-05, 1.1027999999999732e-05, 1.0555000000002368e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.278" endtime="20201029 12:44:41.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.273" endtime="20201029 12:44:41.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.284" endtime="20201029 12:44:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.283" endtime="20201029 12:44:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.281" endtime="20201029 12:44:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.920" endtime="20201029 12:44:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.920" endtime="20201029 12:44:41.305"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.314" endtime="20201029 12:44:41.334"></status>
</kw>
<msg timestamp="20201029 12:44:41.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.312" endtime="20201029 12:44:41.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.335" endtime="20201029 12:44:41.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.338" endtime="20201029 12:44:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.310" endtime="20201029 12:44:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.308" endtime="20201029 12:44:41.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.347" endtime="20201029 12:44:41.635"></status>
</kw>
<msg timestamp="20201029 12:44:41.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.346" endtime="20201029 12:44:41.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.639" endtime="20201029 12:44:41.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.648" endtime="20201029 12:44:41.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.343" endtime="20201029 12:44:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.341" endtime="20201029 12:44:41.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.655" level="INFO">${RESULT} = [{'diff': 1.2042000000000302e-05}, {'diff': 1.1542000000003272e-05}, {'diff': 1.1500000000001093e-05}, {'diff': 1.2125000000001718e-05}, {'diff': 1.1541999999999802e-05}, {'diff': 1.2028000000000733e-...</msg>
<status status="PASS" starttime="20201029 12:44:41.651" endtime="20201029 12:44:41.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.659" level="INFO">${ACCURACY} = {'diff': [1.2042000000000302e-05, 1.1542000000003272e-05, 1.1500000000001093e-05, 1.2125000000001718e-05, 1.1541999999999802e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.1541999999999802e-05...</msg>
<status status="PASS" starttime="20201029 12:44:41.656" endtime="20201029 12:44:41.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.663" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.662" endtime="20201029 12:44:41.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.666" level="INFO">VALUE: [1.2042000000000302e-05, 1.1542000000003272e-05, 1.1500000000001093e-05, 1.2125000000001718e-05, 1.1541999999999802e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.2041000000000829e-05, 1.1556000000002842e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.2068999999999969e-05, 1.154099999999686e-05, 1.1610999999998178e-05, 1.152699999999729e-05, 1.1555999999999372e-05, 1.2083999999999012e-05, 1.2569999999999942e-05, 1.2041000000000829e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2042000000000302e-05, 1.1471999999998483e-05, 1.2583000000000039e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.2013999999997693e-05, 1.2082999999999539e-05, 1.1554999999999899e-05, 1.2055999999999872e-05, 1.1541000000000329e-05, 1.2055000000000399e-05, 1.2055999999999872e-05, 1.2028000000000733e-05, 1.1499999999997623e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2042000000000302e-05, 1.2055000000000399e-05, 1.2055000000000399e-05, 1.2083999999999012e-05, 1.2068999999999969e-05, 1.2028000000000733e-05, 1.2556000000000372e-05, 1.2096999999999108e-05, 1.2042000000000302e-05, 1.2596999999999609e-05, 1.1556000000002842e-05, 1.2555000000000899e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.665" endtime="20201029 12:44:41.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.660" endtime="20201029 12:44:41.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.672" endtime="20201029 12:44:41.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.671" endtime="20201029 12:44:41.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.670" endtime="20201029 12:44:41.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.306" endtime="20201029 12:44:41.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.305" endtime="20201029 12:44:41.693"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.702" endtime="20201029 12:44:41.720"></status>
</kw>
<msg timestamp="20201029 12:44:41.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.701" endtime="20201029 12:44:41.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.722" endtime="20201029 12:44:41.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.725" endtime="20201029 12:44:41.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.698" endtime="20201029 12:44:41.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.696" endtime="20201029 12:44:41.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.734" endtime="20201029 12:44:42.020"></status>
</kw>
<msg timestamp="20201029 12:44:42.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.733" endtime="20201029 12:44:42.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.024" endtime="20201029 12:44:42.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.033" endtime="20201029 12:44:42.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.730" endtime="20201029 12:44:42.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.728" endtime="20201029 12:44:42.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.040" level="INFO">${RESULT} = [{'diff': 1.2597999999999082e-05}, {'diff': 1.3070000000000442e-05}, {'diff': 1.3069000000000969e-05}, {'diff': 1.3013999999998693e-05}, {'diff': 1.255499999999743e-05}, {'diff': 1.3056000000000872e-0...</msg>
<status status="PASS" starttime="20201029 12:44:42.036" endtime="20201029 12:44:42.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.047" level="INFO">${ACCURACY} = {'diff': [1.2597999999999082e-05, 1.3070000000000442e-05, 1.3069000000000969e-05, 1.3013999999998693e-05, 1.255499999999743e-05, 1.3056000000000872e-05, 1.254099999999786e-05, 1.3042000000001303e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:42.041" endtime="20201029 12:44:42.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.052" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.051" endtime="20201029 12:44:42.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.055" level="INFO">VALUE: [1.2597999999999082e-05, 1.3070000000000442e-05, 1.3069000000000969e-05, 1.3013999999998693e-05, 1.255499999999743e-05, 1.3056000000000872e-05, 1.254099999999786e-05, 1.3042000000001303e-05, 1.3042000000001303e-05, 1.3055000000001399e-05, 1.2999999999999123e-05, 1.3027000000002259e-05, 1.2569999999999942e-05, 1.3027999999998263e-05, 1.3055000000001399e-05, 1.3041999999997833e-05, 1.255499999999743e-05, 1.3055999999997403e-05, 1.3556000000001373e-05, 1.2541000000001329e-05, 1.2555000000000899e-05, 1.2569000000000469e-05, 1.3041999999997833e-05, 1.2583000000000039e-05, 1.2541999999997333e-05, 1.2569000000000469e-05, 1.2569000000000469e-05, 1.2528000000001233e-05, 1.2556000000000372e-05, 1.2541999999997333e-05, 1.3055999999997403e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.2569999999999942e-05, 1.2513999999998193e-05, 1.3056000000000872e-05, 1.3124999999999248e-05, 1.2542000000000803e-05, 1.2556000000000372e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2527000000001759e-05, 1.355499999999843e-05, 1.3069000000000969e-05, 1.3056000000000872e-05, 1.2541999999997333e-05, 1.3069000000000969e-05, 1.3041999999997833e-05, 1.30689999999975e-05, 1.305499999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.053" endtime="20201029 12:44:42.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.048" endtime="20201029 12:44:42.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.067" endtime="20201029 12:44:42.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.065" endtime="20201029 12:44:42.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.064" endtime="20201029 12:44:42.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.694" endtime="20201029 12:44:42.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.694" endtime="20201029 12:44:42.088"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.098" endtime="20201029 12:44:42.115"></status>
</kw>
<msg timestamp="20201029 12:44:42.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.096" endtime="20201029 12:44:42.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.117" endtime="20201029 12:44:42.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.119" endtime="20201029 12:44:42.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.093" endtime="20201029 12:44:42.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.091" endtime="20201029 12:44:42.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.129" endtime="20201029 12:44:42.416"></status>
</kw>
<msg timestamp="20201029 12:44:42.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.128" endtime="20201029 12:44:42.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.420" endtime="20201029 12:44:42.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.429" endtime="20201029 12:44:42.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.125" endtime="20201029 12:44:42.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.123" endtime="20201029 12:44:42.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.436" level="INFO">${RESULT} = [{'diff': 1.3568999999998e-05}, {'diff': 1.3541999999998333e-05}, {'diff': 1.3568999999998e-05}, {'diff': 1.4042000000002303e-05}, {'diff': 1.40689999999985e-05}, {'diff': 1.3556000000001373e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:42.432" endtime="20201029 12:44:42.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.440" level="INFO">${ACCURACY} = {'diff': [1.3568999999998e-05, 1.3541999999998333e-05, 1.3568999999998e-05, 1.4042000000002303e-05, 1.40689999999985e-05, 1.3556000000001373e-05, 1.4042000000002303e-05, 1.3556000000001373e-05, 1.4040...</msg>
<status status="PASS" starttime="20201029 12:44:42.437" endtime="20201029 12:44:42.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.445" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.443" endtime="20201029 12:44:42.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.447" level="INFO">VALUE: [1.3568999999998e-05, 1.3541999999998333e-05, 1.3568999999998e-05, 1.4042000000002303e-05, 1.40689999999985e-05, 1.3556000000001373e-05, 1.4042000000002303e-05, 1.3556000000001373e-05, 1.404099999999936e-05, 1.4042000000002303e-05, 1.3569000000001469e-05, 1.3541999999998333e-05, 1.4069000000001969e-05, 1.3541999999998333e-05, 1.405499999999893e-05, 1.4041999999998833e-05, 1.3527000000002759e-05, 1.3597000000000609e-05, 1.4069999999997973e-05, 1.4055999999998403e-05, 1.4527999999999763e-05, 1.4027999999999263e-05, 1.354099999999886e-05, 1.4055999999998403e-05, 1.3555999999997903e-05, 1.3542000000001803e-05, 1.3555000000001899e-05, 1.4055000000002399e-05, 1.4055000000002399e-05, 1.4055000000002399e-05, 1.4000000000000123e-05, 1.4055000000002399e-05, 1.404099999999936e-05, 1.4056000000001873e-05, 1.355499999999843e-05, 1.3527999999998763e-05, 1.4055999999998403e-05, 1.4055000000002399e-05, 1.3541999999998333e-05, 1.3555000000001899e-05, 1.4055999999998403e-05, 1.3638999999999318e-05, 1.3569000000001469e-05, 1.4041999999998833e-05, 1.3542000000001803e-05, 1.4055999999998403e-05, 1.4056000000001873e-05, 1.4042000000002303e-05, 1.4056000000001873e-05, 1.3555999999997903e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.446" endtime="20201029 12:44:42.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.441" endtime="20201029 12:44:42.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.452" endtime="20201029 12:44:42.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.451" endtime="20201029 12:44:42.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.450" endtime="20201029 12:44:42.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.089" endtime="20201029 12:44:42.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.088" endtime="20201029 12:44:42.473"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.482" endtime="20201029 12:44:42.501"></status>
</kw>
<msg timestamp="20201029 12:44:42.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.481" endtime="20201029 12:44:42.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.502" endtime="20201029 12:44:42.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.505" endtime="20201029 12:44:42.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.478" endtime="20201029 12:44:42.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.476" endtime="20201029 12:44:42.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.514" endtime="20201029 12:44:42.800"></status>
</kw>
<msg timestamp="20201029 12:44:42.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021068472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.513" endtime="20201029 12:44:42.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021068472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.805" endtime="20201029 12:44:42.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.814" endtime="20201029 12:44:42.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.510" endtime="20201029 12:44:42.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.508" endtime="20201029 12:44:42.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.820" level="INFO">${RESULT} = [{'diff': 1.4471999999998014e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.454099999999986e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.5055999999999403e-05...</msg>
<status status="PASS" starttime="20201029 12:44:42.817" endtime="20201029 12:44:42.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.825" level="INFO">${ACCURACY} = {'diff': [1.4471999999998014e-05, 1.4555999999998903e-05, 1.454099999999986e-05, 1.5041999999999833e-05, 1.455499999999943e-05, 1.5055999999999403e-05, 1.5555999999999903e-05, 1.455499999999943e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:44:42.822" endtime="20201029 12:44:42.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.830" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.828" endtime="20201029 12:44:42.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.832" level="INFO">VALUE: [1.4471999999998014e-05, 1.4555999999998903e-05, 1.454099999999986e-05, 1.5041999999999833e-05, 1.455499999999943e-05, 1.5055999999999403e-05, 1.5555999999999903e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.5055999999999403e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.5041999999999833e-05, 1.4555000000002899e-05, 1.5069999999998973e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.5041999999999833e-05, 1.4471999999998014e-05, 1.505499999999993e-05, 1.4985999999998084e-05, 1.4555999999998903e-05, 1.4568999999999e-05, 1.4598000000001082e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.5056000000002873e-05, 1.452700000000029e-05, 1.4541999999999333e-05, 1.454099999999986e-05, 1.452700000000029e-05, 1.5069999999998973e-05, 1.50689999999995e-05, 1.4555999999998903e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.5528000000000763e-05, 1.5056000000002873e-05, 1.4555999999998903e-05, 1.5028000000000263e-05, 1.452700000000029e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.5042000000003303e-05, 1.5069999999998973e-05, 1.5056000000002873e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.831" endtime="20201029 12:44:42.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.826" endtime="20201029 12:44:42.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.838" endtime="20201029 12:44:42.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.837" endtime="20201029 12:44:42.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.835" endtime="20201029 12:44:42.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.474" endtime="20201029 12:44:42.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.473" endtime="20201029 12:44:42.859"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.868" endtime="20201029 12:44:42.886"></status>
</kw>
<msg timestamp="20201029 12:44:42.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.866" endtime="20201029 12:44:42.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.887" endtime="20201029 12:44:42.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.890" endtime="20201029 12:44:42.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.864" endtime="20201029 12:44:42.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.862" endtime="20201029 12:44:42.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.899" endtime="20201029 12:44:43.185"></status>
</kw>
<msg timestamp="20201029 12:44:43.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.898" endtime="20201029 12:44:43.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.189" endtime="20201029 12:44:43.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.198" endtime="20201029 12:44:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.895" endtime="20201029 12:44:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.893" endtime="20201029 12:44:43.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.205" level="INFO">${RESULT} = [{'diff': 1.5569e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.609699999999964e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.5527999999997294e-05}, {'diff': 1.5514000000001194e-05}, {'diff': 1...</msg>
<status status="PASS" starttime="20201029 12:44:43.201" endtime="20201029 12:44:43.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.210" level="INFO">${ACCURACY} = {'diff': [1.5569e-05, 1.555500000000043e-05, 1.609699999999964e-05, 1.555500000000043e-05, 1.5527999999997294e-05, 1.5514000000001194e-05, 1.605500000000093e-05, 1.5555999999999903e-05, 1.604099999999...</msg>
<status status="PASS" starttime="20201029 12:44:43.206" endtime="20201029 12:44:43.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.215" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.214" endtime="20201029 12:44:43.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.217" level="INFO">VALUE: [1.5569e-05, 1.555500000000043e-05, 1.609699999999964e-05, 1.555500000000043e-05, 1.5527999999997294e-05, 1.5514000000001194e-05, 1.605500000000093e-05, 1.5555999999999903e-05, 1.604099999999789e-05, 1.5542000000000333e-05, 1.5611999999998183e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.6056000000000403e-05, 1.5487000000001527e-05, 1.609700000000311e-05, 1.6028000000001263e-05, 1.5542000000000333e-05, 1.605500000000093e-05, 1.5528000000000763e-05, 1.5570000000002943e-05, 1.555500000000043e-05, 1.5569999999999473e-05, 1.6041999999997364e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.6041999999997364e-05, 1.655500000000143e-05, 1.605499999999746e-05, 1.5569999999999473e-05, 1.604100000000136e-05, 1.555500000000043e-05, 1.558300000000304e-05, 1.554100000000086e-05, 1.5569999999999473e-05, 1.558299999999957e-05, 1.5542000000000333e-05, 1.5971999999999514e-05, 1.605499999999746e-05, 1.561099999999871e-05, 1.605499999999746e-05, 1.609699999999964e-05, 1.6042000000000833e-05, 1.6056000000000403e-05, 1.555500000000043e-05, 1.6028000000001263e-05, 1.5485999999998584e-05, 1.655500000000143e-05, 1.6042000000000833e-05, 1.6542000000001333e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.216" endtime="20201029 12:44:43.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.211" endtime="20201029 12:44:43.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.223" endtime="20201029 12:44:43.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.221" endtime="20201029 12:44:43.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.220" endtime="20201029 12:44:43.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.860" endtime="20201029 12:44:43.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.859" endtime="20201029 12:44:43.244"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.253" endtime="20201029 12:44:43.269"></status>
</kw>
<msg timestamp="20201029 12:44:43.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.251" endtime="20201029 12:44:43.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.271" endtime="20201029 12:44:43.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.273" endtime="20201029 12:44:43.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.248" endtime="20201029 12:44:43.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.246" endtime="20201029 12:44:43.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.283" endtime="20201029 12:44:43.568"></status>
</kw>
<msg timestamp="20201029 12:44:43.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:43.281" endtime="20201029 12:44:43.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:43.573" endtime="20201029 12:44:43.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.582" endtime="20201029 12:44:43.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.278" endtime="20201029 12:44:43.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.277" endtime="20201029 12:44:43.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.588" level="INFO">${RESULT} = [{'diff': 1.7056000000001403e-05}, {'diff': 1.7055999999997934e-05}, {'diff': 1.655500000000143e-05}, {'diff': 1.7541999999998864e-05}, {'diff': 1.6570000000000473e-05}, {'diff': 1.7041999999998364e-0...</msg>
<status status="PASS" starttime="20201029 12:44:43.585" endtime="20201029 12:44:43.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.593" level="INFO">${ACCURACY} = {'diff': [1.7056000000001403e-05, 1.7055999999997934e-05, 1.655500000000143e-05, 1.7541999999998864e-05, 1.6570000000000473e-05, 1.7041999999998364e-05, 1.7042000000001833e-05, 1.6556000000000903e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:43.589" endtime="20201029 12:44:43.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.597" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.596" endtime="20201029 12:44:43.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.600" level="INFO">VALUE: [1.7056000000001403e-05, 1.7055999999997934e-05, 1.655500000000143e-05, 1.7541999999998864e-05, 1.6570000000000473e-05, 1.7041999999998364e-05, 1.7042000000001833e-05, 1.6556000000000903e-05, 1.7055999999997934e-05, 1.652699999999882e-05, 1.706899999999803e-05, 1.755499999999896e-05, 1.705499999999846e-05, 1.755499999999896e-05, 1.655500000000143e-05, 1.655499999999796e-05, 1.7069999999997504e-05, 1.705499999999846e-05, 1.655500000000143e-05, 1.6597999999999613e-05, 1.7527999999999294e-05, 1.656899999999753e-05, 1.6542000000001333e-05, 1.655499999999796e-05, 1.7084000000000543e-05, 1.6569000000001e-05, 1.706899999999803e-05, 1.755500000000243e-05, 1.6514000000002194e-05, 1.6542000000001333e-05, 1.7527999999999294e-05, 1.7041999999998364e-05, 1.7028000000002264e-05, 1.7070000000000973e-05, 1.6584000000000043e-05, 1.6542000000001333e-05, 1.655500000000143e-05, 1.6972000000000514e-05, 1.6527999999998294e-05, 1.7527999999999294e-05, 1.7556000000001903e-05, 1.651299999999925e-05, 1.704099999999889e-05, 1.70690000000015e-05, 1.7056000000001403e-05, 1.655500000000143e-05, 1.655499999999796e-05, 1.7056000000001403e-05, 1.6570000000000473e-05, 1.704100000000236e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.599" endtime="20201029 12:44:43.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.594" endtime="20201029 12:44:43.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.605" endtime="20201029 12:44:43.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.604" endtime="20201029 12:44:43.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.602" endtime="20201029 12:44:43.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.245" endtime="20201029 12:44:43.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.244" endtime="20201029 12:44:43.626"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.635" endtime="20201029 12:44:43.654"></status>
</kw>
<msg timestamp="20201029 12:44:43.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.633" endtime="20201029 12:44:43.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.656" endtime="20201029 12:44:43.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.658" endtime="20201029 12:44:43.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.631" endtime="20201029 12:44:43.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.629" endtime="20201029 12:44:43.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.668" endtime="20201029 12:44:43.955"></status>
</kw>
<msg timestamp="20201029 12:44:43.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.666" endtime="20201029 12:44:43.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.960" endtime="20201029 12:44:43.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.968" endtime="20201029 12:44:43.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.663" endtime="20201029 12:44:43.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.662" endtime="20201029 12:44:43.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.975" level="INFO">${RESULT} = [{'diff': 1.804099999999989e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.806899999999903e-05}, {'diff': 1.805499999999946e-05}, {'diff': 1.804099999999989e-05}, {'diff': 1.8069999999998504e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:43.972" endtime="20201029 12:44:43.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.980" level="INFO">${ACCURACY} = {'diff': [1.804099999999989e-05, 1.8027999999999794e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.804099999999989e-05, 1.8069999999998504e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:44:43.976" endtime="20201029 12:44:43.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.984" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.983" endtime="20201029 12:44:43.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.987" level="INFO">VALUE: [1.804099999999989e-05, 1.8027999999999794e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.804099999999989e-05, 1.8069999999998504e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.7527999999999294e-05, 1.755499999999896e-05, 1.804099999999989e-05, 1.8056000000002403e-05, 1.812500000000078e-05, 1.8070000000001973e-05, 1.804099999999989e-05, 1.755500000000243e-05, 1.756899999999853e-05, 1.8070000000001973e-05, 1.7541999999998864e-05, 1.8041999999999364e-05, 1.8042000000002834e-05, 1.7541999999998864e-05, 1.755500000000243e-05, 1.812499999999731e-05, 1.7555999999998434e-05, 1.8055999999998934e-05, 1.759699999999767e-05, 1.8083999999998074e-05, 1.7527999999999294e-05, 1.755499999999896e-05, 1.801300000000075e-05, 1.8055999999998934e-05, 1.805499999999946e-05, 1.7556000000001903e-05, 1.7985999999997615e-05, 1.8069999999998504e-05, 1.755499999999896e-05, 1.755499999999896e-05, 1.7986000000001084e-05, 1.755499999999896e-05, 1.805500000000293e-05, 1.804099999999989e-05, 1.802700000000032e-05, 1.855499999999996e-05, 1.7556000000001903e-05, 1.804099999999989e-05, 1.8055999999998934e-05, 1.7541999999998864e-05, 1.7555999999998434e-05, 1.8070000000001973e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.986" endtime="20201029 12:44:43.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.981" endtime="20201029 12:44:43.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.993" endtime="20201029 12:44:44.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.992" endtime="20201029 12:44:44.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.990" endtime="20201029 12:44:44.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.627" endtime="20201029 12:44:44.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.626" endtime="20201029 12:44:44.015"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.023" endtime="20201029 12:44:44.042"></status>
</kw>
<msg timestamp="20201029 12:44:44.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.022" endtime="20201029 12:44:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.043" endtime="20201029 12:44:44.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.046" endtime="20201029 12:44:44.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.019" endtime="20201029 12:44:44.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.017" endtime="20201029 12:44:44.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.055" endtime="20201029 12:44:44.354"></status>
</kw>
<msg timestamp="20201029 12:44:44.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.053" endtime="20201029 12:44:44.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.358" endtime="20201029 12:44:44.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.366" endtime="20201029 12:44:44.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.051" endtime="20201029 12:44:44.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.049" endtime="20201029 12:44:44.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.373" level="INFO">${RESULT} = [{'diff': 1.85829999999991e-05}, {'diff': 1.8528000000000294e-05}, {'diff': 1.8541999999999864e-05}, {'diff': 1.8972000000002515e-05}, {'diff': 1.855499999999996e-05}, {'diff': 1.9499999999998685e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:44.370" endtime="20201029 12:44:44.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.378" level="INFO">${ACCURACY} = {'diff': [1.85829999999991e-05, 1.8528000000000294e-05, 1.8541999999999864e-05, 1.8972000000002515e-05, 1.855499999999996e-05, 1.9499999999998685e-05, 1.854100000000039e-05, 1.855499999999996e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:44:44.374" endtime="20201029 12:44:44.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.382" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.381" endtime="20201029 12:44:44.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.385" level="INFO">VALUE: [1.85829999999991e-05, 1.8528000000000294e-05, 1.8541999999999864e-05, 1.8972000000002515e-05, 1.855499999999996e-05, 1.9499999999998685e-05, 1.854100000000039e-05, 1.855499999999996e-05, 1.854100000000039e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.8541999999999864e-05, 1.9042000000000364e-05, 1.906900000000003e-05, 1.8541999999999864e-05, 1.8556000000002904e-05, 1.8556000000002904e-05, 1.854100000000039e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.8541999999999864e-05, 1.8514000000000724e-05, 1.8555999999999434e-05, 1.9514000000001724e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.956900000000053e-05, 1.8556000000002904e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.9069999999999504e-05, 1.845900000000192e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.906900000000003e-05, 1.904100000000089e-05, 1.9055999999999934e-05, 1.854100000000039e-05, 1.9000000000001654e-05, 1.9042000000000364e-05, 1.956900000000053e-05, 1.9042000000000364e-05, 1.955500000000096e-05, 1.8485999999998115e-05, 1.9055999999999934e-05, 1.8555999999999434e-05, 1.955500000000096e-05, 1.905500000000046e-05, 1.90829999999996e-05, 1.854100000000039e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.383" endtime="20201029 12:44:44.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.379" endtime="20201029 12:44:44.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.390" endtime="20201029 12:44:44.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.388" endtime="20201029 12:44:44.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.387" endtime="20201029 12:44:44.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.016" endtime="20201029 12:44:44.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.015" endtime="20201029 12:44:44.410"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.422" endtime="20201029 12:44:44.440"></status>
</kw>
<msg timestamp="20201029 12:44:44.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.420" endtime="20201029 12:44:44.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.441" endtime="20201029 12:44:44.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.444" endtime="20201029 12:44:44.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.417" endtime="20201029 12:44:44.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.414" endtime="20201029 12:44:44.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.453" endtime="20201029 12:44:44.742"></status>
</kw>
<msg timestamp="20201029 12:44:44.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.452" endtime="20201029 12:44:44.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.747" endtime="20201029 12:44:44.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.755" endtime="20201029 12:44:44.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.449" endtime="20201029 12:44:44.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.447" endtime="20201029 12:44:44.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.762" level="INFO">${RESULT} = [{'diff': 1.9570000000000004e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 1.9556000000000434e-05}, {'diff': 1.955500000000096e-05}, {'diff': 2.0041999999997895e-05}, {'diff': 2.012500000000278e-05...</msg>
<status status="PASS" starttime="20201029 12:44:44.759" endtime="20201029 12:44:44.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.767" level="INFO">${ACCURACY} = {'diff': [1.9570000000000004e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 1.955500000000096e-05, 2.0041999999997895e-05, 2.012500000000278e-05, 1.9513999999998255e-05, 2.005500000000146e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:44.763" endtime="20201029 12:44:44.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.771" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.770" endtime="20201029 12:44:44.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.774" level="INFO">VALUE: [1.9570000000000004e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 1.955500000000096e-05, 2.0041999999997895e-05, 2.012500000000278e-05, 1.9513999999998255e-05, 2.005500000000146e-05, 2.009700000000017e-05, 2.0056000000000934e-05, 1.959699999999967e-05, 1.956900000000053e-05, 1.955499999999749e-05, 1.9555999999996965e-05, 2.0042000000001364e-05, 2.0056000000000934e-05, 2.006900000000103e-05, 1.956900000000053e-05, 2.005499999999799e-05, 2.0056000000000934e-05, 2.0055999999997465e-05, 2.0042000000001364e-05, 1.9583999999999574e-05, 1.9556000000000434e-05, 1.955500000000096e-05, 1.9486000000002585e-05, 2.005499999999799e-05, 2.055499999999849e-05, 1.9597999999999144e-05, 2.054099999999892e-05, 2.0097999999999644e-05, 2.005499999999799e-05, 2.0042000000001364e-05, 2.006900000000103e-05, 2.0084000000000074e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 2.0042000000001364e-05, 2.011099999999974e-05, 2.0042000000001364e-05, 2.0056000000000934e-05, 1.9556000000000434e-05, 2.0013999999998755e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 2.0055999999997465e-05, 1.9542000000000864e-05, 2.0014000000002224e-05, 2.004099999999842e-05, 1.956900000000053e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.773" endtime="20201029 12:44:44.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.767" endtime="20201029 12:44:44.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.780" endtime="20201029 12:44:44.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.778" endtime="20201029 12:44:44.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.777" endtime="20201029 12:44:44.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.411" endtime="20201029 12:44:44.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.411" endtime="20201029 12:44:44.801"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.810" endtime="20201029 12:44:44.829"></status>
</kw>
<msg timestamp="20201029 12:44:44.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.808" endtime="20201029 12:44:44.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.830" endtime="20201029 12:44:44.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.833" endtime="20201029 12:44:44.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.806" endtime="20201029 12:44:44.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.803" endtime="20201029 12:44:44.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.842" endtime="20201029 12:44:45.152"></status>
</kw>
<msg timestamp="20201029 12:44:45.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021254444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.841" endtime="20201029 12:44:45.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021254444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.156" endtime="20201029 12:44:45.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.165" endtime="20201029 12:44:45.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.838" endtime="20201029 12:44:45.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.836" endtime="20201029 12:44:45.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.171" level="INFO">${RESULT} = [{'diff': 2.10830000000016e-05}, {'diff': 2.055500000000196e-05}, {'diff': 2.1028000000002794e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.055499999999849e-05}, {'diff': 2.061100000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:45.168" endtime="20201029 12:44:45.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.176" level="INFO">${ACCURACY} = {'diff': [2.10830000000016e-05, 2.055500000000196e-05, 2.1028000000002794e-05, 2.10830000000016e-05, 2.055499999999849e-05, 2.061100000000024e-05, 2.0513999999999255e-05, 2.0542000000001864e-05, 2.100...</msg>
<status status="PASS" starttime="20201029 12:44:45.173" endtime="20201029 12:44:45.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.181" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.180" endtime="20201029 12:44:45.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.184" level="INFO">VALUE: [2.10830000000016e-05, 2.055500000000196e-05, 2.1028000000002794e-05, 2.10830000000016e-05, 2.055499999999849e-05, 2.061100000000024e-05, 2.0513999999999255e-05, 2.0542000000001864e-05, 2.1000000000000185e-05, 2.106899999999856e-05, 2.0556000000001434e-05, 2.1055999999998465e-05, 2.0472000000000545e-05, 2.05830000000011e-05, 2.1041999999998895e-05, 2.054099999999892e-05, 2.1055999999998465e-05, 2.1097999999997175e-05, 2.155499999999949e-05, 2.055500000000196e-05, 2.0584000000000574e-05, 2.0570000000001004e-05, 2.1070000000001504e-05, 2.055500000000196e-05, 2.056899999999806e-05, 2.05830000000011e-05, 2.0556000000001434e-05, 2.05830000000011e-05, 2.059700000000067e-05, 2.054099999999892e-05, 2.0556000000001434e-05, 2.1070000000001504e-05, 2.0499999999999685e-05, 2.054099999999892e-05, 2.155499999999949e-05, 2.1041999999998895e-05, 2.1041999999998895e-05, 2.155499999999949e-05, 2.1013999999999755e-05, 2.1041999999998895e-05, 2.101300000000028e-05, 2.1055999999998465e-05, 2.0542000000001864e-05, 2.102699999999985e-05, 2.1541999999999395e-05, 2.056900000000153e-05, 2.054099999999892e-05, 2.054099999999892e-05, 2.1555999999998965e-05, 2.1084000000001074e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.182" endtime="20201029 12:44:45.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.177" endtime="20201029 12:44:45.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.189" endtime="20201029 12:44:45.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.188" endtime="20201029 12:44:45.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.187" endtime="20201029 12:44:45.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.802" endtime="20201029 12:44:45.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.801" endtime="20201029 12:44:45.210"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.219" endtime="20201029 12:44:45.238"></status>
</kw>
<msg timestamp="20201029 12:44:45.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.218" endtime="20201029 12:44:45.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.239" endtime="20201029 12:44:45.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.242" endtime="20201029 12:44:45.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.215" endtime="20201029 12:44:45.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.213" endtime="20201029 12:44:45.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.251" endtime="20201029 12:44:45.537"></status>
</kw>
<msg timestamp="20201029 12:44:45.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.250" endtime="20201029 12:44:45.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.541" endtime="20201029 12:44:45.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.550" endtime="20201029 12:44:45.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.247" endtime="20201029 12:44:45.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.245" endtime="20201029 12:44:45.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.556" level="INFO">${RESULT} = [{'diff': 2.205499999999999e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2000000000001185e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.156900000000253e-05}, {'diff': 2.1555999999998965e-05...</msg>
<status status="PASS" starttime="20201029 12:44:45.553" endtime="20201029 12:44:45.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.564" level="INFO">${ACCURACY} = {'diff': [2.205499999999999e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.2055999999999465e-05, 2.156900000000253e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.211100000000174e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:45.558" endtime="20201029 12:44:45.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.569" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.568" endtime="20201029 12:44:45.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.571" level="INFO">VALUE: [2.205499999999999e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.2055999999999465e-05, 2.156900000000253e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.211100000000174e-05, 2.2055999999999465e-05, 2.156899999999906e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.159700000000167e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.155500000000296e-05, 2.1555999999998965e-05, 2.206900000000303e-05, 2.204100000000042e-05, 2.204100000000042e-05, 2.2056000000002934e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.1972000000002045e-05, 2.1555999999998965e-05, 2.205499999999999e-05, 2.2042000000003364e-05, 2.2056000000002934e-05, 2.1556000000002434e-05, 2.204100000000042e-05, 2.1527999999999825e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2.1556000000002434e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.1569999999998535e-05, 2.155499999999949e-05, 2.156899999999906e-05, 2.2083999999998605e-05, 2.206899999999956e-05, 2.2542000000000395e-05, 2.2500000000001685e-05, 2.20969999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.570" endtime="20201029 12:44:45.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.565" endtime="20201029 12:44:45.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.577" endtime="20201029 12:44:45.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.575" endtime="20201029 12:44:45.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.574" endtime="20201029 12:44:45.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.211" endtime="20201029 12:44:45.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.211" endtime="20201029 12:44:45.598"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.607" endtime="20201029 12:44:45.624"></status>
</kw>
<msg timestamp="20201029 12:44:45.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.605" endtime="20201029 12:44:45.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.626" endtime="20201029 12:44:45.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.628" endtime="20201029 12:44:45.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.602" endtime="20201029 12:44:45.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.600" endtime="20201029 12:44:45.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.638" endtime="20201029 12:44:45.970"></status>
</kw>
<msg timestamp="20201029 12:44:45.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.636" endtime="20201029 12:44:45.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.974" endtime="20201029 12:44:45.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.983" endtime="20201029 12:44:45.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.634" endtime="20201029 12:44:45.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.632" endtime="20201029 12:44:45.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.990" level="INFO">${RESULT} = [{'diff': 2.354100000000192e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.311099999999927e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.3540999999998452e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:45.987" endtime="20201029 12:44:45.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.994" level="INFO">${ACCURACY} = {'diff': [2.354100000000192e-05, 2.306900000000056e-05, 2.311099999999927e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.3540999999998452e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:45.991" endtime="20201029 12:44:45.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.999" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.998" endtime="20201029 12:44:45.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.002" level="INFO">VALUE: [2.354100000000192e-05, 2.306900000000056e-05, 2.311099999999927e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.3540999999998452e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.2542000000000395e-05, 2.3014000000001755e-05, 2.3055999999996996e-05, 2.2542000000000395e-05, 2.3027999999997856e-05, 2.2569999999999535e-05, 2.3055999999996996e-05, 2.3042000000000895e-05, 2.258299999999963e-05, 2.2540999999997452e-05, 2.258299999999963e-05, 2.255500000000049e-05, 2.3054999999997522e-05, 2.256900000000006e-05, 2.3056000000000465e-05, 2.3542000000001395e-05, 2.3070000000000035e-05, 2.306900000000056e-05, 2.2528000000000825e-05, 2.3042000000000895e-05, 2.3042000000000895e-05, 2.304100000000142e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.256900000000006e-05, 2.305500000000099e-05, 2.3014000000001755e-05, 2.2528000000000825e-05, 2.2555999999999965e-05, 2.3042000000000895e-05, 2.3541999999997926e-05, 2.254100000000092e-05, 2.3041999999997426e-05, 2.305500000000099e-05, 2.3056000000000465e-05, 2.2528000000000825e-05, 2.305500000000099e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.000" endtime="20201029 12:44:46.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.995" endtime="20201029 12:44:46.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.007" endtime="20201029 12:44:46.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.005" endtime="20201029 12:44:46.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.004" endtime="20201029 12:44:46.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.598" endtime="20201029 12:44:46.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.598" endtime="20201029 12:44:46.028"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.037" endtime="20201029 12:44:46.056"></status>
</kw>
<msg timestamp="20201029 12:44:46.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.036" endtime="20201029 12:44:46.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.057" endtime="20201029 12:44:46.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.060" endtime="20201029 12:44:46.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.033" endtime="20201029 12:44:46.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.031" endtime="20201029 12:44:46.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.069" endtime="20201029 12:44:46.356"></status>
</kw>
<msg timestamp="20201029 12:44:46.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.067" endtime="20201029 12:44:46.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.361" endtime="20201029 12:44:46.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.369" endtime="20201029 12:44:46.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.065" endtime="20201029 12:44:46.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.063" endtime="20201029 12:44:46.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.376" level="INFO">${RESULT} = [{'diff': 2.4554999999999022e-05}, {'diff': 2.405500000000199e-05}, {'diff': 2.3554999999998022e-05}, {'diff': 2.361099999999977e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.4028000000002325e-05...</msg>
<status status="PASS" starttime="20201029 12:44:46.373" endtime="20201029 12:44:46.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.381" level="INFO">${ACCURACY} = {'diff': [2.4554999999999022e-05, 2.405500000000199e-05, 2.3554999999998022e-05, 2.361099999999977e-05, 2.4042000000001895e-05, 2.4028000000002325e-05, 2.3556000000000965e-05, 2.4040999999998952e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:46.377" endtime="20201029 12:44:46.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.386" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.385" endtime="20201029 12:44:46.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.389" level="INFO">VALUE: [2.4554999999999022e-05, 2.405500000000199e-05, 2.3554999999998022e-05, 2.361099999999977e-05, 2.4042000000001895e-05, 2.4028000000002325e-05, 2.3556000000000965e-05, 2.4040999999998952e-05, 2.3570000000000535e-05, 2.3542000000001395e-05, 2.4042000000001895e-05, 2.4056000000001465e-05, 2.355500000000149e-05, 2.4554999999999022e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.4042000000001895e-05, 2.411100000000027e-05, 2.4084000000000605e-05, 2.4056000000001465e-05, 2.354100000000192e-05, 2.4054999999998522e-05, 2.40970000000007e-05, 2.3526999999998882e-05, 2.3541999999997926e-05, 2.405500000000199e-05, 2.3542000000001395e-05, 2.3499999999999216e-05, 2.4055999999997996e-05, 2.4041999999998426e-05, 2.355500000000149e-05, 2.4040999999998952e-05, 2.4070000000001035e-05, 2.358300000000063e-05, 2.354100000000192e-05, 2.4055999999997996e-05, 2.3527999999998356e-05, 2.3999999999999716e-05, 2.3542000000001395e-05, 2.4041999999998426e-05, 2.3999999999999716e-05, 2.3570000000000535e-05, 2.412499999999984e-05, 2.3569999999997066e-05, 2.354100000000192e-05, 2.3540999999998452e-05, 2.3555999999997496e-05, 2.4070000000001035e-05, 2.362499999999934e-05, 2.4554999999999022e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.387" endtime="20201029 12:44:46.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.382" endtime="20201029 12:44:46.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.394" endtime="20201029 12:44:46.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.392" endtime="20201029 12:44:46.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.391" endtime="20201029 12:44:46.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.029" endtime="20201029 12:44:46.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.029" endtime="20201029 12:44:46.415"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.423" endtime="20201029 12:44:46.441"></status>
</kw>
<msg timestamp="20201029 12:44:46.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.422" endtime="20201029 12:44:46.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.442" endtime="20201029 12:44:46.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.445" endtime="20201029 12:44:46.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.419" endtime="20201029 12:44:46.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.417" endtime="20201029 12:44:46.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.455" endtime="20201029 12:44:46.743"></status>
</kw>
<msg timestamp="20201029 12:44:46.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.453" endtime="20201029 12:44:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.749" endtime="20201029 12:44:46.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.757" endtime="20201029 12:44:46.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.450" endtime="20201029 12:44:46.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.448" endtime="20201029 12:44:46.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.764" level="INFO">${RESULT} = [{'diff': 2.4554999999999022e-05}, {'diff': 2.4528000000002825e-05}, {'diff': 2.4555999999998496e-05}, {'diff': 2.4526999999999882e-05}, {'diff': 2.4554999999999022e-05}, {'diff': 2.5068999999999092e-...</msg>
<status status="PASS" starttime="20201029 12:44:46.760" endtime="20201029 12:44:46.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.768" level="INFO">${ACCURACY} = {'diff': [2.4554999999999022e-05, 2.4528000000002825e-05, 2.4555999999998496e-05, 2.4526999999999882e-05, 2.4554999999999022e-05, 2.5068999999999092e-05, 2.4554999999999022e-05, 2.5055999999998996e-05...</msg>
<status status="PASS" starttime="20201029 12:44:46.765" endtime="20201029 12:44:46.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.772" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.771" endtime="20201029 12:44:46.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.775" level="INFO">VALUE: [2.4554999999999022e-05, 2.4528000000002825e-05, 2.4555999999998496e-05, 2.4526999999999882e-05, 2.4554999999999022e-05, 2.5068999999999092e-05, 2.4554999999999022e-05, 2.5055999999998996e-05, 2.5056000000002465e-05, 2.5069999999998566e-05, 2.5070000000002035e-05, 2.5082999999998662e-05, 2.5055999999998996e-05, 2.5056000000002465e-05, 2.5070000000002035e-05, 2.5056000000002465e-05, 2.5055999999998996e-05, 2.5027999999999856e-05, 2.4556000000001965e-05, 2.5555000000000022e-05, 2.5040999999999952e-05, 2.5041999999999426e-05, 2.5056000000002465e-05, 2.5054999999999522e-05, 2.4541999999998926e-05, 2.4556000000001965e-05, 2.4540999999999452e-05, 2.5026999999996913e-05, 2.5541000000000452e-05, 2.5069999999998566e-05, 2.5040999999999952e-05, 2.5040999999999952e-05, 2.4540999999999452e-05, 2.5070000000002035e-05, 2.512500000000084e-05, 2.4555999999998496e-05, 2.4500000000000216e-05, 2.4555999999998496e-05, 2.506900000000256e-05, 2.5027999999999856e-05, 2.4556000000001965e-05, 2.5000000000000716e-05, 2.4570000000001535e-05, 2.5040999999999952e-05, 2.5040999999999952e-05, 2.4570000000001535e-05, 2.5055999999998996e-05, 2.5054999999999522e-05, 2.505500000000299e-05, 2.454100000000292e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.773" endtime="20201029 12:44:46.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.769" endtime="20201029 12:44:46.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.780" endtime="20201029 12:44:46.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.778" endtime="20201029 12:44:46.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.777" endtime="20201029 12:44:46.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.416" endtime="20201029 12:44:46.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.415" endtime="20201029 12:44:46.800"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.809" endtime="20201029 12:44:46.827"></status>
</kw>
<msg timestamp="20201029 12:44:46.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.807" endtime="20201029 12:44:46.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.829" endtime="20201029 12:44:46.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.831" endtime="20201029 12:44:46.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.805" endtime="20201029 12:44:46.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.803" endtime="20201029 12:44:46.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.840" endtime="20201029 12:44:47.126"></status>
</kw>
<msg timestamp="20201029 12:44:47.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020640111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.839" endtime="20201029 12:44:47.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020640111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.130" endtime="20201029 12:44:47.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.139" endtime="20201029 12:44:47.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.836" endtime="20201029 12:44:47.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.834" endtime="20201029 12:44:47.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.145" level="INFO">${RESULT} = [{'diff': 2.5555000000000022e-05}, {'diff': 2.6069000000000092e-05}, {'diff': 2.6569000000000592e-05}, {'diff': 2.6042000000000426e-05}, {'diff': 2.6055999999999996e-05}, {'diff': 2.6013999999997817e-...</msg>
<status status="PASS" starttime="20201029 12:44:47.142" endtime="20201029 12:44:47.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.149" level="INFO">${ACCURACY} = {'diff': [2.5555000000000022e-05, 2.6069000000000092e-05, 2.6569000000000592e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.6013999999997817e-05, 2.556900000000306e-05, 2.6000000000001716e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:47.146" endtime="20201029 12:44:47.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.154" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.153" endtime="20201029 12:44:47.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.157" level="INFO">VALUE: [2.5555000000000022e-05, 2.6069000000000092e-05, 2.6569000000000592e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.6013999999997817e-05, 2.556900000000306e-05, 2.6000000000001716e-05, 2.5555000000000022e-05, 2.5555000000000022e-05, 2.5568999999999592e-05, 2.6082999999999662e-05, 2.5555999999999496e-05, 2.6082999999999662e-05, 2.5541999999999926e-05, 2.5555000000000022e-05, 2.5555000000000022e-05, 2.6556000000000496e-05, 2.5542000000003395e-05, 2.6042000000000426e-05, 2.6069000000000092e-05, 2.5556000000002965e-05, 2.5972000000002576e-05, 2.558300000000263e-05, 2.5555000000000022e-05, 2.5597999999998206e-05, 2.5568999999999592e-05, 2.6042000000000426e-05, 2.5555999999999496e-05, 2.6054999999997053e-05, 2.6041999999996956e-05, 2.5485999999998177e-05, 2.5568999999999592e-05, 2.5555000000000022e-05, 2.6069999999999566e-05, 2.6054999999997053e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.6040999999997483e-05, 2.5514000000000786e-05, 2.6055999999999996e-05, 2.6069000000000092e-05, 2.6554999999997553e-05, 2.5555000000000022e-05, 2.5541000000000452e-05, 2.6082999999999662e-05, 2.6069000000000092e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.6042000000000426e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.155" endtime="20201029 12:44:47.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.150" endtime="20201029 12:44:47.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.163" endtime="20201029 12:44:47.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.161" endtime="20201029 12:44:47.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.160" endtime="20201029 12:44:47.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.801" endtime="20201029 12:44:47.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.801" endtime="20201029 12:44:47.184"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.193" endtime="20201029 12:44:47.214"></status>
</kw>
<msg timestamp="20201029 12:44:47.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.191" endtime="20201029 12:44:47.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.217" endtime="20201029 12:44:47.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.222" endtime="20201029 12:44:47.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.189" endtime="20201029 12:44:47.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.187" endtime="20201029 12:44:47.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.241" endtime="20201029 12:44:47.534"></status>
</kw>
<msg timestamp="20201029 12:44:47.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.238" endtime="20201029 12:44:47.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.538" endtime="20201029 12:44:47.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.547" endtime="20201029 12:44:47.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.232" endtime="20201029 12:44:47.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.229" endtime="20201029 12:44:47.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.553" level="INFO">${RESULT} = [{'diff': 2.7040999999998483e-05}, {'diff': 2.7041999999997957e-05}, {'diff': 2.7055000000001522e-05}, {'diff': 2.7027999999998387e-05}, {'diff': 2.6540999999997983e-05}, {'diff': 2.7082999999997193e-...</msg>
<status status="PASS" starttime="20201029 12:44:47.550" endtime="20201029 12:44:47.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.558" level="INFO">${ACCURACY} = {'diff': [2.7040999999998483e-05, 2.7041999999997957e-05, 2.7055000000001522e-05, 2.7027999999998387e-05, 2.6540999999997983e-05, 2.7082999999997193e-05, 2.6542000000000926e-05, 2.6542000000000926e-05...</msg>
<status status="PASS" starttime="20201029 12:44:47.554" endtime="20201029 12:44:47.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.563" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.562" endtime="20201029 12:44:47.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.565" level="INFO">VALUE: [2.7040999999998483e-05, 2.7041999999997957e-05, 2.7055000000001522e-05, 2.7027999999998387e-05, 2.6540999999997983e-05, 2.7082999999997193e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.7027000000002382e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.7056000000000996e-05, 2.6554999999997553e-05, 2.7069000000001092e-05, 2.7042000000001426e-05, 2.7555000000002022e-05, 2.7054999999998053e-05, 2.6556000000000496e-05, 2.7040999999998483e-05, 2.7027000000002382e-05, 2.7026999999998913e-05, 2.7056000000000996e-05, 2.7056000000000996e-05, 2.7027999999998387e-05, 2.6555000000001022e-05, 2.6555000000001022e-05, 2.6583000000000162e-05, 2.7041999999997957e-05, 2.7083000000000662e-05, 2.6569000000000592e-05, 2.7014000000002286e-05, 2.7570000000001066e-05, 2.7570000000001066e-05, 2.6542000000000926e-05, 2.7056000000000996e-05, 2.7028000000001856e-05, 2.6528000000001356e-05, 2.7054999999998053e-05, 2.6527000000001882e-05, 2.7041000000001952e-05, 2.6556000000000496e-05, 2.7054999999998053e-05, 2.7054999999998053e-05, 2.7054999999998053e-05, 2.7026999999998913e-05, 2.7069999999997096e-05, 2.6514000000001786e-05, 2.7069000000001092e-05, 2.6556000000000496e-05, 2.6554999999997553e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.564" endtime="20201029 12:44:47.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.559" endtime="20201029 12:44:47.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.570" endtime="20201029 12:44:47.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.569" endtime="20201029 12:44:47.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.568" endtime="20201029 12:44:47.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.185" endtime="20201029 12:44:47.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.184" endtime="20201029 12:44:47.591"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.599" endtime="20201029 12:44:47.618"></status>
</kw>
<msg timestamp="20201029 12:44:47.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.598" endtime="20201029 12:44:47.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.619" endtime="20201029 12:44:47.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.622" endtime="20201029 12:44:47.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.595" endtime="20201029 12:44:47.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.593" endtime="20201029 12:44:47.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.631" endtime="20201029 12:44:47.916"></status>
</kw>
<msg timestamp="20201029 12:44:47.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.629" endtime="20201029 12:44:47.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.920" endtime="20201029 12:44:47.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.929" endtime="20201029 12:44:47.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.627" endtime="20201029 12:44:47.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.625" endtime="20201029 12:44:47.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.935" level="INFO">${RESULT} = [{'diff': 2.8041000000002952e-05}, {'diff': 2.7554999999998553e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.8541999999999457e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.8056000000001996e-...</msg>
<status status="PASS" starttime="20201029 12:44:47.932" endtime="20201029 12:44:47.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.940" level="INFO">${ACCURACY} = {'diff': [2.8041000000002952e-05, 2.7554999999998553e-05, 2.8125000000000372e-05, 2.8541999999999457e-05, 2.8000000000000247e-05, 2.8056000000001996e-05, 2.7556000000001496e-05, 2.7556000000001496e-05...</msg>
<status status="PASS" starttime="20201029 12:44:47.936" endtime="20201029 12:44:47.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.944" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.943" endtime="20201029 12:44:47.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.946" level="INFO">VALUE: [2.8041000000002952e-05, 2.7554999999998553e-05, 2.8125000000000372e-05, 2.8541999999999457e-05, 2.8000000000000247e-05, 2.8056000000001996e-05, 2.7556000000001496e-05, 2.7556000000001496e-05, 2.7542000000001926e-05, 2.7555000000002022e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.8555999999999027e-05, 2.8000000000000247e-05, 2.8055999999998527e-05, 2.7542000000001926e-05, 2.8040999999999483e-05, 2.7528000000002356e-05, 2.8040999999999483e-05, 2.8068999999998623e-05, 2.8040999999999483e-05, 2.8069000000002092e-05, 2.7541000000002452e-05, 2.7555999999998027e-05, 2.8082999999998193e-05, 2.8111000000000802e-05, 2.7570000000001066e-05, 2.8042000000002426e-05, 2.7570000000001066e-05, 2.8068999999998623e-05, 2.8056000000001996e-05, 2.7554999999998553e-05, 2.8027999999999387e-05, 2.8055999999998527e-05, 2.7527999999998887e-05, 2.8040999999999483e-05, 2.8040999999999483e-05, 2.8110999999997333e-05, 2.7570000000001066e-05, 2.8555999999999027e-05, 2.7555999999998027e-05, 2.7568999999998123e-05, 2.7540999999998983e-05, 2.8040999999999483e-05, 2.8055999999998527e-05, 2.7555999999998027e-05, 2.8054999999999053e-05, 2.8555999999999027e-05, 2.8040999999999483e-05, 2.7570000000001066e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.945" endtime="20201029 12:44:47.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.940" endtime="20201029 12:44:47.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.951" endtime="20201029 12:44:47.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.950" endtime="20201029 12:44:47.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.949" endtime="20201029 12:44:47.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.592" endtime="20201029 12:44:47.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.591" endtime="20201029 12:44:47.972"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.981" endtime="20201029 12:44:47.999"></status>
</kw>
<msg timestamp="20201029 12:44:48.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.979" endtime="20201029 12:44:48.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.001" endtime="20201029 12:44:48.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.003" endtime="20201029 12:44:48.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.977" endtime="20201029 12:44:48.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.975" endtime="20201029 12:44:48.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.012" endtime="20201029 12:44:48.297"></status>
</kw>
<msg timestamp="20201029 12:44:48.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.011" endtime="20201029 12:44:48.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.301" endtime="20201029 12:44:48.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.310" endtime="20201029 12:44:48.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.008" endtime="20201029 12:44:48.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.006" endtime="20201029 12:44:48.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.316" level="INFO">${RESULT} = [{'diff': 2.8569999999998597e-05}, {'diff': 2.9554999999997084e-05}, {'diff': 2.9097999999998236e-05}, {'diff': 2.8555999999999027e-05}, {'diff': 2.895899999999854e-05}, {'diff': 2.8540999999999983e-0...</msg>
<status status="PASS" starttime="20201029 12:44:48.313" endtime="20201029 12:44:48.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.321" level="INFO">${ACCURACY} = {'diff': [2.8569999999998597e-05, 2.9554999999997084e-05, 2.9097999999998236e-05, 2.8555999999999027e-05, 2.895899999999854e-05, 2.8540999999999983e-05, 2.9056000000002996e-05, 2.8513000000000843e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:48.317" endtime="20201029 12:44:48.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.325" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.324" endtime="20201029 12:44:48.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.328" level="INFO">VALUE: [2.8569999999998597e-05, 2.9554999999997084e-05, 2.9097999999998236e-05, 2.8555999999999027e-05, 2.895899999999854e-05, 2.8540999999999983e-05, 2.9056000000002996e-05, 2.8513000000000843e-05, 2.9055000000000053e-05, 2.8541999999999457e-05, 2.9083999999998666e-05, 2.9055000000000053e-05, 2.8569999999998597e-05, 2.8554999999999553e-05, 2.9041000000000483e-05, 2.9041000000000483e-05, 2.8541999999999457e-05, 2.9055000000000053e-05, 2.9056000000002996e-05, 2.9041999999999957e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.9096999999998763e-05, 2.8527999999999887e-05, 2.8472000000001607e-05, 2.9069000000003092e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.8569000000002592e-05, 2.8541999999999457e-05, 2.9055000000000053e-05, 2.9500000000001747e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055000000000053e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.8999999999997778e-05, 2.8555999999999027e-05, 2.8499999999997278e-05, 2.8541999999999457e-05, 2.9111000000001802e-05, 2.8542000000002926e-05, 2.8555999999999027e-05, 2.8597000000001732e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8555000000003022e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.326" endtime="20201029 12:44:48.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.321" endtime="20201029 12:44:48.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.333" endtime="20201029 12:44:48.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.332" endtime="20201029 12:44:48.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.331" endtime="20201029 12:44:48.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.973" endtime="20201029 12:44:48.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.972" endtime="20201029 12:44:48.354"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.362" endtime="20201029 12:44:48.381"></status>
</kw>
<msg timestamp="20201029 12:44:48.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.361" endtime="20201029 12:44:48.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.382" endtime="20201029 12:44:48.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.385" endtime="20201029 12:44:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.358" endtime="20201029 12:44:48.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.356" endtime="20201029 12:44:48.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.394" endtime="20201029 12:44:48.678"></status>
</kw>
<msg timestamp="20201029 12:44:48.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.392" endtime="20201029 12:44:48.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.682" endtime="20201029 12:44:48.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.691" endtime="20201029 12:44:48.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.390" endtime="20201029 12:44:48.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.388" endtime="20201029 12:44:48.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.697" level="INFO">${RESULT} = [{'diff': 3.0540999999998514e-05}, {'diff': 2.9556000000000027e-05}, {'diff': 3.0069000000000623e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 3.0068999999997154e-05}, {'diff': 2.9555000000000553e-...</msg>
<status status="PASS" starttime="20201029 12:44:48.694" endtime="20201029 12:44:48.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.702" level="INFO">${ACCURACY} = {'diff': [3.0540999999998514e-05, 2.9556000000000027e-05, 3.0069000000000623e-05, 3.0056000000000527e-05, 3.0068999999997154e-05, 2.9555000000000553e-05, 2.9569000000000123e-05, 3.0056000000000527e-05...</msg>
<status status="PASS" starttime="20201029 12:44:48.698" endtime="20201029 12:44:48.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.707" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.706" endtime="20201029 12:44:48.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.709" level="INFO">VALUE: [3.0540999999998514e-05, 2.9556000000000027e-05, 3.0069000000000623e-05, 3.0056000000000527e-05, 3.0068999999997154e-05, 2.9555000000000553e-05, 2.9569000000000123e-05, 3.0056000000000527e-05, 3.0110999999999333e-05, 2.9556000000000027e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 3.0083999999999667e-05, 3.0041000000001483e-05, 2.9569000000000123e-05, 3.0069000000000623e-05, 2.9540999999997514e-05, 3.0000000000002247e-05, 3.0027000000001913e-05, 3.055599999999756e-05, 2.9555000000000553e-05, 2.9540999999997514e-05, 3.0041000000001483e-05, 3.0069000000000623e-05, 2.9582999999999693e-05, 3.0069000000000623e-05, 3.0042000000000957e-05, 3.0056000000000527e-05, 2.948699999999818e-05, 3.0027999999997917e-05, 3.0554999999998084e-05, 2.9542000000000457e-05, 3.056900000000112e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 2.9596999999999263e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 2.9556000000000027e-05, 2.9555000000000553e-05, 3.0055000000001053e-05, 2.9528000000000887e-05, 2.9569999999999597e-05, 3.0097000000003232e-05, 3.0069000000000623e-05, 3.055600000000103e-05, 3.054200000000146e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.708" endtime="20201029 12:44:48.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.703" endtime="20201029 12:44:48.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.714" endtime="20201029 12:44:48.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.713" endtime="20201029 12:44:48.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.712" endtime="20201029 12:44:48.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.355" endtime="20201029 12:44:48.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.354" endtime="20201029 12:44:48.735"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.744" endtime="20201029 12:44:48.761"></status>
</kw>
<msg timestamp="20201029 12:44:48.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.742" endtime="20201029 12:44:48.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.762" endtime="20201029 12:44:48.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.765" endtime="20201029 12:44:48.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.740" endtime="20201029 12:44:48.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.737" endtime="20201029 12:44:48.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.774" endtime="20201029 12:44:49.062"></status>
</kw>
<msg timestamp="20201029 12:44:49.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.772" endtime="20201029 12:44:49.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.066" endtime="20201029 12:44:49.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.075" endtime="20201029 12:44:49.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.770" endtime="20201029 12:44:49.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.768" endtime="20201029 12:44:49.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.081" level="INFO">${RESULT} = [{'diff': 3.102799999999892e-05}, {'diff': 3.104199999999849e-05}, {'diff': 3.151399999999985e-05}, {'diff': 3.098600000000021e-05}, {'diff': 3.0499999999999278e-05}, {'diff': 3.054199999999799e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:49.078" endtime="20201029 12:44:49.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.085" level="INFO">${ACCURACY} = {'diff': [3.102799999999892e-05, 3.104199999999849e-05, 3.151399999999985e-05, 3.098600000000021e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.1068999999998154e-05, 3.054199999999799e-05, 3.05...</msg>
<status status="PASS" starttime="20201029 12:44:49.082" endtime="20201029 12:44:49.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.090" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.089" endtime="20201029 12:44:49.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.092" level="INFO">VALUE: [3.102799999999892e-05, 3.104199999999849e-05, 3.151399999999985e-05, 3.098600000000021e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.1068999999998154e-05, 3.054199999999799e-05, 3.0568999999997654e-05, 3.106900000000162e-05, 3.052700000000241e-05, 3.101399999999935e-05, 3.0554999999998084e-05, 3.1082999999997724e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.105599999999806e-05, 3.055500000000155e-05, 3.105599999999806e-05, 3.108400000000067e-05, 3.106900000000162e-05, 3.105600000000153e-05, 3.104199999999849e-05, 3.055500000000155e-05, 3.056900000000112e-05, 3.10700000000011e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.1554999999999084e-05, 3.109700000000076e-05, 3.104199999999849e-05, 3.055600000000103e-05, 3.0554999999998084e-05, 3.105599999999806e-05, 3.108300000000119e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.104199999999849e-05, 3.105599999999806e-05, 3.055599999999756e-05, 3.101400000000282e-05, 3.052799999999842e-05, 3.0500000000002747e-05, 3.0554999999998084e-05, 3.1054999999998584e-05, 3.105599999999806e-05, 3.055600000000103e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.091" endtime="20201029 12:44:49.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.086" endtime="20201029 12:44:49.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.097" endtime="20201029 12:44:49.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.096" endtime="20201029 12:44:49.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.095" endtime="20201029 12:44:49.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.736" endtime="20201029 12:44:49.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.735" endtime="20201029 12:44:49.118"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.126" endtime="20201029 12:44:49.148"></status>
</kw>
<msg timestamp="20201029 12:44:49.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.125" endtime="20201029 12:44:49.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.149" endtime="20201029 12:44:49.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.152" endtime="20201029 12:44:49.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.122" endtime="20201029 12:44:49.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.120" endtime="20201029 12:44:49.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.160" endtime="20201029 12:44:49.447"></status>
</kw>
<msg timestamp="20201029 12:44:49.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.159" endtime="20201029 12:44:49.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.451" endtime="20201029 12:44:49.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.462" endtime="20201029 12:44:49.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.156" endtime="20201029 12:44:49.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.155" endtime="20201029 12:44:49.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.471" level="INFO">${RESULT} = [{'diff': 3.1540999999999514e-05}, {'diff': 3.205599999999906e-05}, {'diff': 3.155600000000203e-05}, {'diff': 3.2041000000000014e-05}, {'diff': 3.1526999999999944e-05}, {'diff': 3.155599999999856e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:49.466" endtime="20201029 12:44:49.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.478" level="INFO">${ACCURACY} = {'diff': [3.1540999999999514e-05, 3.205599999999906e-05, 3.155600000000203e-05, 3.2041000000000014e-05, 3.1526999999999944e-05, 3.155599999999856e-05, 3.1540999999999514e-05, 3.2041000000000014e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:44:49.473" endtime="20201029 12:44:49.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.483" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.482" endtime="20201029 12:44:49.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.486" level="INFO">VALUE: [3.1540999999999514e-05, 3.205599999999906e-05, 3.155600000000203e-05, 3.2041000000000014e-05, 3.1526999999999944e-05, 3.155599999999856e-05, 3.1540999999999514e-05, 3.2041000000000014e-05, 3.1540999999999514e-05, 3.205599999999906e-05, 3.152799999999942e-05, 3.205600000000253e-05, 3.254199999999999e-05, 3.206999999999863e-05, 3.204199999999949e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.1526999999999944e-05, 3.2041000000000014e-05, 3.1554999999999084e-05, 3.2041000000000014e-05, 3.15700000000016e-05, 3.2041000000000014e-05, 3.156999999999813e-05, 3.205500000000305e-05, 3.155600000000203e-05, 3.255599999999956e-05, 3.156900000000212e-05, 3.154199999999899e-05, 3.1554999999999084e-05, 3.205599999999906e-05, 3.205599999999906e-05, 3.205600000000253e-05, 3.2054999999999584e-05, 3.1540999999999514e-05, 3.211100000000133e-05, 3.206999999999863e-05, 3.15700000000016e-05, 3.150000000000028e-05, 3.2068999999999154e-05, 3.155599999999856e-05, 3.155599999999856e-05, 3.1568999999998654e-05, 3.1554999999999084e-05, 3.154199999999899e-05, 3.2054999999999584e-05, 3.1554999999999084e-05, 3.205600000000253e-05, 3.2054999999999584e-05, 3.154199999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.485" endtime="20201029 12:44:49.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.479" endtime="20201029 12:44:49.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.495" endtime="20201029 12:44:49.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.493" endtime="20201029 12:44:49.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.492" endtime="20201029 12:44:49.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.119" endtime="20201029 12:44:49.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.118" endtime="20201029 12:44:49.515"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.524" endtime="20201029 12:44:49.541"></status>
</kw>
<msg timestamp="20201029 12:44:49.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.522" endtime="20201029 12:44:49.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.543" endtime="20201029 12:44:49.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.545" endtime="20201029 12:44:49.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.520" endtime="20201029 12:44:49.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.518" endtime="20201029 12:44:49.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.554" endtime="20201029 12:44:49.840"></status>
</kw>
<msg timestamp="20201029 12:44:49.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.553" endtime="20201029 12:44:49.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.844" endtime="20201029 12:44:49.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.853" endtime="20201029 12:44:49.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.550" endtime="20201029 12:44:49.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.549" endtime="20201029 12:44:49.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.859" level="INFO">${RESULT} = [{'diff': 3.2555000000000084e-05}, {'diff': 3.2541000000000514e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.304200000000049e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.255599999999956e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:49.856" endtime="20201029 12:44:49.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.864" level="INFO">${ACCURACY} = {'diff': [3.2555000000000084e-05, 3.2541000000000514e-05, 3.255599999999956e-05, 3.304200000000049e-05, 3.3082999999999724e-05, 3.255599999999956e-05, 3.252799999999695e-05, 3.252800000000042e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 12:44:49.860" endtime="20201029 12:44:49.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.869" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.868" endtime="20201029 12:44:49.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.871" level="INFO">VALUE: [3.2555000000000084e-05, 3.2541000000000514e-05, 3.255599999999956e-05, 3.304200000000049e-05, 3.3082999999999724e-05, 3.255599999999956e-05, 3.252799999999695e-05, 3.252800000000042e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.3054999999997114e-05, 3.35839999999997e-05, 3.2555000000000084e-05, 3.3096999999999294e-05, 3.3055000000000584e-05, 3.354200000000099e-05, 3.302800000000092e-05, 3.305600000000006e-05, 3.255599999999956e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.254199999999999e-05, 3.301399999999788e-05, 3.252800000000042e-05, 3.256999999999913e-05, 3.258300000000269e-05, 3.3569000000000654e-05, 3.250000000000128e-05, 3.304200000000049e-05, 3.255600000000303e-05, 3.2555000000000084e-05, 3.3069000000000154e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.355600000000056e-05, 3.256999999999913e-05, 3.2541000000000514e-05, 3.25700000000026e-05, 3.305600000000006e-05, 3.2541000000000514e-05, 3.306999999999963e-05, 3.3512999999998905e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.870" endtime="20201029 12:44:49.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.865" endtime="20201029 12:44:49.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.876" endtime="20201029 12:44:49.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.874" endtime="20201029 12:44:49.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.873" endtime="20201029 12:44:49.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.516" endtime="20201029 12:44:49.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.516" endtime="20201029 12:44:49.897"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.905" endtime="20201029 12:44:49.923"></status>
</kw>
<msg timestamp="20201029 12:44:49.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.904" endtime="20201029 12:44:49.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.924" endtime="20201029 12:44:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.927" endtime="20201029 12:44:49.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.901" endtime="20201029 12:44:49.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.899" endtime="20201029 12:44:49.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.936" endtime="20201029 12:44:50.223"></status>
</kw>
<msg timestamp="20201029 12:44:50.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01967325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:49.934" endtime="20201029 12:44:50.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01967325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:50.227" endtime="20201029 12:44:50.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.235" endtime="20201029 12:44:50.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.932" endtime="20201029 12:44:50.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.930" endtime="20201029 12:44:50.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.245" level="INFO">${RESULT} = [{'diff': 3.405600000000106e-05}, {'diff': 3.4096999999996824e-05}, {'diff': 3.407000000000063e-05}, {'diff': 3.3541000000001514e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.398599999999974e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:50.239" endtime="20201029 12:44:50.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.249" level="INFO">${ACCURACY} = {'diff': [3.405600000000106e-05, 3.4096999999996824e-05, 3.407000000000063e-05, 3.3541000000001514e-05, 3.3569000000000654e-05, 3.398599999999974e-05, 3.35839999999997e-05, 3.3624999999998934e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 12:44:50.246" endtime="20201029 12:44:50.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.256" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.255" endtime="20201029 12:44:50.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.259" level="INFO">VALUE: [3.405600000000106e-05, 3.4096999999996824e-05, 3.407000000000063e-05, 3.3541000000001514e-05, 3.3569000000000654e-05, 3.398599999999974e-05, 3.35839999999997e-05, 3.3624999999998934e-05, 3.4041000000002014e-05, 3.4082999999997254e-05, 3.4083000000000724e-05, 3.406999999999716e-05, 3.3554999999997615e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.361100000000283e-05, 3.405599999999759e-05, 3.357000000000013e-05, 3.4040999999998545e-05, 3.3555000000001084e-05, 3.4040999999998545e-05, 3.4040999999998545e-05, 3.355599999999709e-05, 3.3596999999999794e-05, 3.4026999999998975e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.4554999999998615e-05, 3.4110999999999864e-05, 3.4540999999999045e-05, 3.401399999999888e-05, 3.354200000000099e-05, 3.404200000000149e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.3610999999999364e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.4041000000002014e-05, 3.401399999999888e-05, 3.355600000000056e-05, 3.4054999999998115e-05, 3.3554999999997615e-05, 3.41250000000029e-05, 3.3555000000001084e-05, 3.4041000000002014e-05, 3.4068999999997684e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.354200000000099e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.258" endtime="20201029 12:44:50.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.250" endtime="20201029 12:44:50.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.267" endtime="20201029 12:44:50.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.266" endtime="20201029 12:44:50.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.264" endtime="20201029 12:44:50.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.898" endtime="20201029 12:44:50.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.897" endtime="20201029 12:44:50.288"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.297" endtime="20201029 12:44:50.316"></status>
</kw>
<msg timestamp="20201029 12:44:50.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.295" endtime="20201029 12:44:50.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.317" endtime="20201029 12:44:50.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.320" endtime="20201029 12:44:50.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.293" endtime="20201029 12:44:50.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.291" endtime="20201029 12:44:50.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.329" endtime="20201029 12:44:50.614"></status>
</kw>
<msg timestamp="20201029 12:44:50.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.327" endtime="20201029 12:44:50.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.618" endtime="20201029 12:44:50.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.626" endtime="20201029 12:44:50.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.325" endtime="20201029 12:44:50.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.323" endtime="20201029 12:44:50.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.633" level="INFO">${RESULT} = [{'diff': 5.122200000000007e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.119500000000041e-05}, {'diff': 5.204199999999867e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.133300000000063e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:50.630" endtime="20201029 12:44:50.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.637" level="INFO">${ACCURACY} = {'diff': [5.122200000000007e-05, 5.111099999999952e-05, 5.119500000000041e-05, 5.204199999999867e-05, 5.141700000000152e-05, 5.133300000000063e-05, 5.116600000000179e-05, 5.187499999999984e-05, 5.1318...</msg>
<status status="PASS" starttime="20201029 12:44:50.634" endtime="20201029 12:44:50.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.642" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.640" endtime="20201029 12:44:50.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.646" level="INFO">VALUE: [5.122200000000007e-05, 5.111099999999952e-05, 5.119500000000041e-05, 5.204199999999867e-05, 5.141700000000152e-05, 5.133300000000063e-05, 5.116600000000179e-05, 5.187499999999984e-05, 5.131899999999759e-05, 5.126399999999878e-05, 5.179099999999895e-05, 5.112499999999909e-05, 5.176399999999928e-05, 5.126400000000225e-05, 5.206899999999834e-05, 5.187499999999984e-05, 5.183300000000113e-05, 5.187499999999984e-05, 5.169400000000143e-05, 5.112500000000256e-05, 5.218099999999837e-05, 5.111099999999952e-05, 5.188899999999941e-05, 5.172300000000005e-05, 5.174999999999971e-05, 5.21669999999988e-05, 5.149999999999946e-05, 5.211100000000052e-05, 5.162499999999959e-05, 5.194500000000116e-05, 5.143099999999762e-05, 5.21669999999988e-05, 5.124999999999921e-05, 5.2165999999999324e-05, 5.130499999999802e-05, 5.149999999999946e-05, 5.173600000000014e-05, 5.1665999999998824e-05, 5.123599999999964e-05, 5.151399999999903e-05, 5.122200000000007e-05, 5.218000000000236e-05, 5.168099999999787e-05, 5.211100000000052e-05, 5.14729999999998e-05, 5.124999999999921e-05, 5.154200000000164e-05, 5.138899999999891e-05, 5.216700000000227e-05, 5.157000000000078e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.643" endtime="20201029 12:44:50.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.638" endtime="20201029 12:44:50.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.652" endtime="20201029 12:44:50.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.650" endtime="20201029 12:44:50.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.649" endtime="20201029 12:44:50.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.289" endtime="20201029 12:44:50.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.289" endtime="20201029 12:44:50.672"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.681" endtime="20201029 12:44:50.698"></status>
</kw>
<msg timestamp="20201029 12:44:50.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.679" endtime="20201029 12:44:50.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.700" endtime="20201029 12:44:50.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.702" endtime="20201029 12:44:50.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.677" endtime="20201029 12:44:50.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.675" endtime="20201029 12:44:50.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.711" endtime="20201029 12:44:50.998"></status>
</kw>
<msg timestamp="20201029 12:44:51.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.710" endtime="20201029 12:44:51.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.002" endtime="20201029 12:44:51.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.010" endtime="20201029 12:44:51.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.708" endtime="20201029 12:44:51.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.706" endtime="20201029 12:44:51.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.017" level="INFO">${RESULT} = [{'diff': 5.281899999999909e-05}, {'diff': 5.227699999999988e-05}, {'diff': 5.2443999999998714e-05}, {'diff': 5.2471999999997854e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.237499999999687e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:51.014" endtime="20201029 12:44:51.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.022" level="INFO">${ACCURACY} = {'diff': [5.281899999999909e-05, 5.227699999999988e-05, 5.2443999999998714e-05, 5.2471999999997854e-05, 5.2429999999999144e-05, 5.237499999999687e-05, 5.294499999999869e-05, 5.280599999999899e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 12:44:51.018" endtime="20201029 12:44:51.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.026" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.025" endtime="20201029 12:44:51.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.029" level="INFO">VALUE: [5.281899999999909e-05, 5.227699999999988e-05, 5.2443999999998714e-05, 5.2471999999997854e-05, 5.2429999999999144e-05, 5.237499999999687e-05, 5.294499999999869e-05, 5.280599999999899e-05, 5.227799999999935e-05, 5.261100000000102e-05, 5.316700000000327e-05, 5.283299999999866e-05, 5.269499999999844e-05, 5.262499999999712e-05, 5.304199999999967e-05, 5.251400000000003e-05, 5.243099999999862e-05, 5.319499999999894e-05, 5.301299999999759e-05, 5.318099999999937e-05, 5.256899999999884e-05, 5.263900000000016e-05, 5.254100000000317e-05, 5.300000000000096e-05, 5.252700000000013e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.261100000000102e-05, 5.255499999999927e-05, 5.211100000000052e-05, 5.254199999999917e-05, 5.237500000000034e-05, 5.318099999999937e-05, 5.236100000000077e-05, 5.319499999999894e-05, 5.269500000000191e-05, 5.243100000000209e-05, 5.223600000000064e-05, 5.236100000000077e-05, 5.227699999999988e-05, 5.286100000000127e-05, 5.291699999999955e-05, 5.229200000000239e-05, 5.244499999999819e-05, 5.237500000000034e-05, 5.2679999999999394e-05, 5.270900000000148e-05, 5.2943999999999214e-05, 5.3179999999999894e-05, 5.2749999999997244e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.027" endtime="20201029 12:44:51.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.023" endtime="20201029 12:44:51.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.034" endtime="20201029 12:44:51.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.032" endtime="20201029 12:44:51.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.031" endtime="20201029 12:44:51.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.673" endtime="20201029 12:44:51.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.673" endtime="20201029 12:44:51.055"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.063" endtime="20201029 12:44:51.081"></status>
</kw>
<msg timestamp="20201029 12:44:51.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.061" endtime="20201029 12:44:51.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.083" endtime="20201029 12:44:51.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.085" endtime="20201029 12:44:51.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.059" endtime="20201029 12:44:51.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.057" endtime="20201029 12:44:51.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.094" endtime="20201029 12:44:51.384"></status>
</kw>
<msg timestamp="20201029 12:44:51.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.093" endtime="20201029 12:44:51.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.388" endtime="20201029 12:44:51.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.396" endtime="20201029 12:44:51.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.090" endtime="20201029 12:44:51.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.088" endtime="20201029 12:44:51.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.403" level="INFO">${RESULT} = [{'diff': 5.3388000000001434e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.3499999999997994e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.404200000000067e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:51.400" endtime="20201029 12:44:51.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.407" level="INFO">${ACCURACY} = {'diff': [5.3388000000001434e-05, 5.361099999999855e-05, 5.3499999999997994e-05, 5.3693999999999964e-05, 5.375000000000171e-05, 5.404200000000067e-05, 5.350000000000146e-05, 5.3680000000000394e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:51.404" endtime="20201029 12:44:51.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.411" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.410" endtime="20201029 12:44:51.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.414" level="INFO">VALUE: [5.3388000000001434e-05, 5.361099999999855e-05, 5.3499999999997994e-05, 5.3693999999999964e-05, 5.375000000000171e-05, 5.404200000000067e-05, 5.350000000000146e-05, 5.3680000000000394e-05, 5.416699999999733e-05, 5.3985999999998924e-05, 5.418100000000037e-05, 5.36670000000003e-05, 5.336100000000177e-05, 5.323600000000164e-05, 5.386100000000227e-05, 5.330599999999949e-05, 5.369499999999944e-05, 5.3749999999998244e-05, 5.330599999999949e-05, 5.41670000000008e-05, 5.362499999999812e-05, 5.376300000000181e-05, 5.372300000000205e-05, 5.330500000000002e-05, 5.355500000000027e-05, 5.40410000000012e-05, 5.331899999999959e-05, 5.3680000000000394e-05, 5.375000000000171e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.393100000000012e-05, 5.409699999999948e-05, 5.3971999999999354e-05, 5.369499999999944e-05, 5.405599999999677e-05, 5.380599999999999e-05, 5.377800000000085e-05, 5.391699999999708e-05, 5.343099999999962e-05, 5.405600000000024e-05, 5.343100000000309e-05, 5.380599999999999e-05, 5.3985999999998924e-05, 5.3916000000001074e-05, 5.343099999999962e-05, 5.3415999999997105e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.312500000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.413" endtime="20201029 12:44:51.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.408" endtime="20201029 12:44:51.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.419" endtime="20201029 12:44:51.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.417" endtime="20201029 12:44:51.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.416" endtime="20201029 12:44:51.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.055" endtime="20201029 12:44:51.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.055" endtime="20201029 12:44:51.440"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.448" endtime="20201029 12:44:51.468"></status>
</kw>
<msg timestamp="20201029 12:44:51.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.447" endtime="20201029 12:44:51.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.469" endtime="20201029 12:44:51.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.472" endtime="20201029 12:44:51.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.444" endtime="20201029 12:44:51.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.442" endtime="20201029 12:44:51.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.481" endtime="20201029 12:44:51.767"></status>
</kw>
<msg timestamp="20201029 12:44:51.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.479" endtime="20201029 12:44:51.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.771" endtime="20201029 12:44:51.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.780" endtime="20201029 12:44:51.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.477" endtime="20201029 12:44:51.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.475" endtime="20201029 12:44:51.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.786" level="INFO">${RESULT} = [{'diff': 5.515299999999876e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.519499999999747e-05}, {'diff': 5.493100000000112e-05}, {'diff': 5.43609999999993e-05}, {'diff': 5.462500000000259e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:51.783" endtime="20201029 12:44:51.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.790" level="INFO">${ACCURACY} = {'diff': [5.515299999999876e-05, 5.48609999999998e-05, 5.519499999999747e-05, 5.493100000000112e-05, 5.43609999999993e-05, 5.462500000000259e-05, 5.429200000000092e-05, 5.493100000000112e-05, 5.475000...</msg>
<status status="PASS" starttime="20201029 12:44:51.787" endtime="20201029 12:44:51.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.795" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.794" endtime="20201029 12:44:51.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.797" level="INFO">VALUE: [5.515299999999876e-05, 5.48609999999998e-05, 5.519499999999747e-05, 5.493100000000112e-05, 5.43609999999993e-05, 5.462500000000259e-05, 5.429200000000092e-05, 5.493100000000112e-05, 5.475000000000271e-05, 5.4972000000000354e-05, 5.461100000000302e-05, 5.4249999999998744e-05, 5.480499999999805e-05, 5.50549999999983e-05, 5.5179999999998425e-05, 5.4429999999997675e-05, 5.480499999999805e-05, 5.481900000000109e-05, 5.480600000000099e-05, 5.4263999999998314e-05, 5.504200000000167e-05, 5.50280000000021e-05, 5.493100000000112e-05, 5.4749999999999244e-05, 5.469499999999697e-05, 5.432000000000006e-05, 5.455600000000074e-05, 5.4235999999999174e-05, 5.4777999999998384e-05, 5.519500000000094e-05, 5.473699999999915e-05, 5.512499999999962e-05, 5.486199999999927e-05, 5.480500000000152e-05, 5.4665999999998355e-05, 5.480499999999805e-05, 5.4430000000001144e-05, 5.4930000000001644e-05, 5.4722000000000104e-05, 5.4749999999999244e-05, 5.4471999999999854e-05, 5.4999999999999494e-05, 5.4749999999999244e-05, 5.497299999999983e-05, 5.466699999999783e-05, 5.519499999999747e-05, 5.511100000000005e-05, 5.4485999999999424e-05, 5.5027999999998634e-05, 5.482000000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.796" endtime="20201029 12:44:51.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.791" endtime="20201029 12:44:51.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.803" endtime="20201029 12:44:51.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.802" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.800" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.440" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.440" endtime="20201029 12:44:51.824"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.832" endtime="20201029 12:44:51.850"></status>
</kw>
<msg timestamp="20201029 12:44:51.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.831" endtime="20201029 12:44:51.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.852" endtime="20201029 12:44:51.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.854" endtime="20201029 12:44:51.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.828" endtime="20201029 12:44:51.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.826" endtime="20201029 12:44:51.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.863" endtime="20201029 12:44:52.149"></status>
</kw>
<msg timestamp="20201029 12:44:52.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.862" endtime="20201029 12:44:52.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.153" endtime="20201029 12:44:52.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.162" endtime="20201029 12:44:52.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.859" endtime="20201029 12:44:52.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.858" endtime="20201029 12:44:52.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.168" level="INFO">${RESULT} = [{'diff': 5.529200000000192e-05}, {'diff': 5.597300000000083e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.616699999999933e-05}, {'diff': 5.537499999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:52.165" endtime="20201029 12:44:52.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.173" level="INFO">${ACCURACY} = {'diff': [5.529200000000192e-05, 5.597300000000083e-05, 5.5986000000000924e-05, 5.612500000000062e-05, 5.616699999999933e-05, 5.537499999999987e-05, 5.5707999999998065e-05, 5.579099999999948e-05, 5.55...</msg>
<status status="PASS" starttime="20201029 12:44:52.169" endtime="20201029 12:44:52.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.177" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.176" endtime="20201029 12:44:52.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.180" level="INFO">VALUE: [5.529200000000192e-05, 5.597300000000083e-05, 5.5986000000000924e-05, 5.612500000000062e-05, 5.616699999999933e-05, 5.537499999999987e-05, 5.5707999999998065e-05, 5.579099999999948e-05, 5.556900000000184e-05, 5.5721999999997635e-05, 5.511100000000005e-05, 5.58610000000008e-05, 5.60549999999993e-05, 5.5943999999998745e-05, 5.609799999999748e-05, 5.6055999999998773e-05, 5.591699999999908e-05, 5.529200000000192e-05, 5.61809999999989e-05, 5.5805999999998523e-05, 5.5791999999998954e-05, 5.5305999999998023e-05, 5.5291999999998453e-05, 5.5958000000001784e-05, 5.559800000000045e-05, 5.5499999999999994e-05, 5.611099999999758e-05, 5.543100000000162e-05, 5.60549999999993e-05, 5.6000000000000494e-05, 5.558300000000141e-05, 5.5499999999999994e-05, 5.5722000000001104e-05, 5.5943999999998745e-05, 5.56670000000023e-05, 5.5791999999998954e-05, 5.561099999999708e-05, 5.6041999999999204e-05, 5.5541999999998704e-05, 5.5805999999998523e-05, 5.5305999999998023e-05, 5.5985999999997454e-05, 5.5721999999997635e-05, 5.58610000000008e-05, 5.5791999999998954e-05, 5.532000000000106e-05, 5.508400000000038e-05, 5.565299999999926e-05, 5.577699999999991e-05, 5.554200000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.179" endtime="20201029 12:44:52.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.174" endtime="20201029 12:44:52.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.191" endtime="20201029 12:44:52.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.190" endtime="20201029 12:44:52.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.188" endtime="20201029 12:44:52.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.825" endtime="20201029 12:44:52.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.824" endtime="20201029 12:44:52.212"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.221" endtime="20201029 12:44:52.240"></status>
</kw>
<msg timestamp="20201029 12:44:52.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.219" endtime="20201029 12:44:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.241" endtime="20201029 12:44:52.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.244" endtime="20201029 12:44:52.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.216" endtime="20201029 12:44:52.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.214" endtime="20201029 12:44:52.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.253" endtime="20201029 12:44:52.543"></status>
</kw>
<msg timestamp="20201029 12:44:52.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.251" endtime="20201029 12:44:52.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.548" endtime="20201029 12:44:52.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.556" endtime="20201029 12:44:52.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.249" endtime="20201029 12:44:52.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.247" endtime="20201029 12:44:52.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.563" level="INFO">${RESULT} = [{'diff': 5.654100000000023e-05}, {'diff': 5.629099999999998e-05}, {'diff': 5.68610000000018e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.6985999999998455e-05}, {'diff': 5.636099999999783e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:52.560" endtime="20201029 12:44:52.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.567" level="INFO">${ACCURACY} = {'diff': [5.654100000000023e-05, 5.629099999999998e-05, 5.68610000000018e-05, 5.637500000000087e-05, 5.6985999999998455e-05, 5.636099999999783e-05, 5.693099999999965e-05, 5.709800000000195e-05, 5.6375...</msg>
<status status="PASS" starttime="20201029 12:44:52.564" endtime="20201029 12:44:52.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.571" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.570" endtime="20201029 12:44:52.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.574" level="INFO">VALUE: [5.654100000000023e-05, 5.629099999999998e-05, 5.68610000000018e-05, 5.637500000000087e-05, 5.6985999999998455e-05, 5.636099999999783e-05, 5.693099999999965e-05, 5.709800000000195e-05, 5.637500000000087e-05, 5.704100000000073e-05, 5.662500000000112e-05, 5.684700000000223e-05, 5.6736000000001674e-05, 5.669499999999897e-05, 5.6236000000001174e-05, 5.6555999999999274e-05, 5.633299999999869e-05, 5.6999999999998024e-05, 5.6930000000000175e-05, 5.6291999999999454e-05, 5.7165999999997386e-05, 5.6764000000000814e-05, 5.6250000000000744e-05, 5.68749999999979e-05, 5.683300000000266e-05, 5.716700000000033e-05, 5.637500000000087e-05, 5.658400000000188e-05, 5.711100000000205e-05, 5.666699999999983e-05, 5.6749999999997774e-05, 5.644499999999872e-05, 5.6749999999997774e-05, 5.694500000000269e-05, 5.670900000000201e-05, 5.638900000000044e-05, 5.693099999999965e-05, 5.6249999999997274e-05, 5.647299999999786e-05, 5.66809999999994e-05, 5.65549999999998e-05, 5.6985999999998455e-05, 5.6736000000001674e-05, 5.659699999999851e-05, 5.669499999999897e-05, 5.6250000000000744e-05, 5.6514000000000564e-05, 5.6930000000000175e-05, 5.65549999999998e-05, 5.6207999999998565e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.572" endtime="20201029 12:44:52.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.568" endtime="20201029 12:44:52.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.579" endtime="20201029 12:44:52.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.577" endtime="20201029 12:44:52.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.576" endtime="20201029 12:44:52.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.213" endtime="20201029 12:44:52.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.212" endtime="20201029 12:44:52.599"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.608" endtime="20201029 12:44:52.630"></status>
</kw>
<msg timestamp="20201029 12:44:52.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.606" endtime="20201029 12:44:52.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.631" endtime="20201029 12:44:52.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.634" endtime="20201029 12:44:52.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.604" endtime="20201029 12:44:52.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.602" endtime="20201029 12:44:52.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.643" endtime="20201029 12:44:52.928"></status>
</kw>
<msg timestamp="20201029 12:44:52.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.641" endtime="20201029 12:44:52.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.932" endtime="20201029 12:44:52.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.940" endtime="20201029 12:44:52.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.639" endtime="20201029 12:44:52.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.637" endtime="20201029 12:44:52.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.947" level="INFO">${RESULT} = [{'diff': 5.8056000000000774e-05}, {'diff': 5.7402000000001535e-05}, {'diff': 5.759699999999951e-05}, {'diff': 5.780499999999758e-05}, {'diff': 5.80550000000013e-05}, {'diff': 5.762500000000212e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:52.943" endtime="20201029 12:44:52.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.951" level="INFO">${ACCURACY} = {'diff': [5.8056000000000774e-05, 5.7402000000001535e-05, 5.759699999999951e-05, 5.780499999999758e-05, 5.80550000000013e-05, 5.762500000000212e-05, 5.80689999999974e-05, 5.7444000000000245e-05, 5.713...</msg>
<status status="PASS" starttime="20201029 12:44:52.948" endtime="20201029 12:44:52.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.955" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.954" endtime="20201029 12:44:52.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.958" level="INFO">VALUE: [5.8056000000000774e-05, 5.7402000000001535e-05, 5.759699999999951e-05, 5.780499999999758e-05, 5.80550000000013e-05, 5.762500000000212e-05, 5.80689999999974e-05, 5.7444000000000245e-05, 5.713900000000119e-05, 5.730500000000055e-05, 5.713900000000119e-05, 5.758299999999994e-05, 5.7528000000001134e-05, 5.7750000000002244e-05, 5.7985999999999455e-05, 5.7292000000000454e-05, 5.8056000000000774e-05, 5.76810000000004e-05, 5.713899999999772e-05, 5.816700000000133e-05, 5.761099999999908e-05, 5.7999999999999025e-05, 5.816699999999786e-05, 5.756900000000037e-05, 5.730499999999708e-05, 5.7735999999999205e-05, 5.80550000000013e-05, 5.7735999999999205e-05, 5.734699999999926e-05, 5.711099999999858e-05, 5.7278000000000884e-05, 5.7820000000000094e-05, 5.7486000000002424e-05, 5.7485999999998955e-05, 5.7694000000000495e-05, 5.769499999999997e-05, 5.7486000000002424e-05, 5.819500000000047e-05, 5.7763999999998344e-05, 5.7485999999998955e-05, 5.7778000000001384e-05, 5.7151999999997816e-05, 5.730500000000055e-05, 5.78749999999989e-05, 5.731900000000012e-05, 5.811199999999905e-05, 5.812500000000262e-05, 5.7930000000001175e-05, 5.7721999999999635e-05, 5.783300000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.956" endtime="20201029 12:44:52.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.952" endtime="20201029 12:44:52.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.963" endtime="20201029 12:44:52.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.962" endtime="20201029 12:44:52.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.961" endtime="20201029 12:44:52.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.600" endtime="20201029 12:44:52.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.600" endtime="20201029 12:44:52.984"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.993" endtime="20201029 12:44:53.011"></status>
</kw>
<msg timestamp="20201029 12:44:53.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.991" endtime="20201029 12:44:53.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.013" endtime="20201029 12:44:53.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.015" endtime="20201029 12:44:53.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.989" endtime="20201029 12:44:53.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.987" endtime="20201029 12:44:53.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.024" endtime="20201029 12:44:53.310"></status>
</kw>
<msg timestamp="20201029 12:44:53.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019626764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.023" endtime="20201029 12:44:53.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019626764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.315" endtime="20201029 12:44:53.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.323" endtime="20201029 12:44:53.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.020" endtime="20201029 12:44:53.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.018" endtime="20201029 12:44:53.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.329" level="INFO">${RESULT} = [{'diff': 5.862500000000312e-05}, {'diff': 5.8820000000001094e-05}, {'diff': 5.894500000000122e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.918099999999843e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:53.326" endtime="20201029 12:44:53.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.334" level="INFO">${ACCURACY} = {'diff': [5.862500000000312e-05, 5.8820000000001094e-05, 5.894500000000122e-05, 5.9013999999999595e-05, 5.9000000000000025e-05, 5.918099999999843e-05, 5.9138000000000246e-05, 5.822300000000308e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:53.330" endtime="20201029 12:44:53.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.339" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.338" endtime="20201029 12:44:53.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.341" level="INFO">VALUE: [5.862500000000312e-05, 5.8820000000001094e-05, 5.894500000000122e-05, 5.9013999999999595e-05, 5.9000000000000025e-05, 5.918099999999843e-05, 5.9138000000000246e-05, 5.822300000000308e-05, 5.852699999999919e-05, 5.845900000000029e-05, 5.9000000000000025e-05, 5.8665999999998886e-05, 5.8444000000001245e-05, 5.8680000000001925e-05, 5.912500000000015e-05, 5.8485999999999955e-05, 5.8457999999997345e-05, 5.8791999999998484e-05, 5.865299999999879e-05, 5.8584000000000414e-05, 5.8556000000001274e-05, 5.8556000000001274e-05, 5.893099999999818e-05, 5.8722000000000635e-05, 5.8334000000000163e-05, 5.863900000000269e-05, 5.9000000000000025e-05, 5.8292000000001454e-05, 5.894500000000122e-05, 5.868099999999793e-05, 5.9069999999997874e-05, 5.8943999999998276e-05, 5.913899999999972e-05, 5.83749999999994e-05, 5.8735999999996735e-05, 5.8666000000002355e-05, 5.834700000000026e-05, 5.912500000000015e-05, 5.8791999999998484e-05, 5.9000000000000025e-05, 5.91810000000019e-05, 5.9027999999999164e-05, 5.9084000000000914e-05, 5.834700000000026e-05, 5.893099999999818e-05, 5.8570000000000844e-05, 5.88749999999999e-05, 5.8834000000000664e-05, 5.8471999999996915e-05, 5.869500000000097e-05]</msg>
<status status="PASS" starttime="20201029 12:44:53.340" endtime="20201029 12:44:53.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.335" endtime="20201029 12:44:53.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.346" endtime="20201029 12:44:53.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.345" endtime="20201029 12:44:53.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.344" endtime="20201029 12:44:53.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.985" endtime="20201029 12:44:53.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.984" endtime="20201029 12:44:53.367"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.375" endtime="20201029 12:44:53.394"></status>
</kw>
<msg timestamp="20201029 12:44:53.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.374" endtime="20201029 12:44:53.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.395" endtime="20201029 12:44:53.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.398" endtime="20201029 12:44:53.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.371" endtime="20201029 12:44:53.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.369" endtime="20201029 12:44:53.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.407" endtime="20201029 12:44:53.696"></status>
</kw>
<msg timestamp="20201029 12:44:53.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.405" endtime="20201029 12:44:53.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.700" endtime="20201029 12:44:53.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.709" endtime="20201029 12:44:53.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.403" endtime="20201029 12:44:53.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.401" endtime="20201029 12:44:53.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.715" level="INFO">${RESULT} = [{'diff': 6.0014000000000595e-05}, {'diff': 5.9820000000002094e-05}, {'diff': 5.9791999999999484e-05}, {'diff': 5.970899999999807e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 5.9235999999997235e-0...</msg>
<status status="PASS" starttime="20201029 12:44:53.712" endtime="20201029 12:44:53.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.719" level="INFO">${ACCURACY} = {'diff': [6.0014000000000595e-05, 5.9820000000002094e-05, 5.9791999999999484e-05, 5.970899999999807e-05, 5.9750000000000775e-05, 5.9235999999997235e-05, 5.9708000000002065e-05, 5.911100000000058e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:53.716" endtime="20201029 12:44:53.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.724" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.723" endtime="20201029 12:44:53.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.726" level="INFO">VALUE: [6.0014000000000595e-05, 5.9820000000002094e-05, 5.9791999999999484e-05, 5.970899999999807e-05, 5.9750000000000775e-05, 5.9235999999997235e-05, 5.9708000000002065e-05, 5.911100000000058e-05, 6.0000000000001025e-05, 5.9943999999999276e-05, 5.9236000000000705e-05, 5.9415999999999636e-05, 5.961100000000108e-05, 5.959700000000151e-05, 6.0042000000003204e-05, 6.0166000000000386e-05, 5.9263999999999845e-05, 6.0069999999998874e-05, 5.9958000000002315e-05, 5.9319999999998124e-05, 6.0194999999999e-05, 5.9541999999999234e-05, 5.958299999999847e-05, 5.9250000000000275e-05, 5.954099999999976e-05, 5.941699999999911e-05, 5.9305999999998554e-05, 5.9430000000002675e-05, 5.9527999999999665e-05, 5.988900000000047e-05, 5.9735999999997735e-05, 5.9958000000002315e-05, 6.009699999999854e-05, 5.987499999999743e-05, 5.9693999999999026e-05, 5.9208000000001565e-05, 5.9735999999997735e-05, 5.9527999999999665e-05, 5.966699999999936e-05, 5.9736000000001205e-05, 5.961099999999761e-05, 5.911100000000058e-05, 6.0041999999999734e-05, 5.987499999999743e-05, 5.941699999999911e-05, 5.9764000000000345e-05, 5.923700000000018e-05, 5.988900000000047e-05, 6.018099999999943e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201029 12:44:53.725" endtime="20201029 12:44:53.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.720" endtime="20201029 12:44:53.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.731" endtime="20201029 12:44:53.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.729" endtime="20201029 12:44:53.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.728" endtime="20201029 12:44:53.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.368" endtime="20201029 12:44:53.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.367" endtime="20201029 12:44:53.752"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.760" endtime="20201029 12:44:53.779"></status>
</kw>
<msg timestamp="20201029 12:44:53.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.759" endtime="20201029 12:44:53.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.781" endtime="20201029 12:44:53.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.783" endtime="20201029 12:44:53.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.756" endtime="20201029 12:44:53.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.754" endtime="20201029 12:44:53.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.792" endtime="20201029 12:44:54.077"></status>
</kw>
<msg timestamp="20201029 12:44:54.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.791" endtime="20201029 12:44:54.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.081" endtime="20201029 12:44:54.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.089" endtime="20201029 12:44:54.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.788" endtime="20201029 12:44:54.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.786" endtime="20201029 12:44:54.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.096" level="INFO">${RESULT} = [{'diff': 6.066700000000036e-05}, {'diff': 6.0514000000001095e-05}, {'diff': 6.0735999999998735e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.073700000000168e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:54.093" endtime="20201029 12:44:54.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.100" level="INFO">${ACCURACY} = {'diff': [6.066700000000036e-05, 6.0514000000001095e-05, 6.0735999999998735e-05, 6.068099999999993e-05, 6.041700000000011e-05, 6.073700000000168e-05, 6.0291999999999984e-05, 6.0916000000001136e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:44:54.097" endtime="20201029 12:44:54.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.104" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.103" endtime="20201029 12:44:54.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.107" level="INFO">VALUE: [6.066700000000036e-05, 6.0514000000001095e-05, 6.0735999999998735e-05, 6.068099999999993e-05, 6.041700000000011e-05, 6.073700000000168e-05, 6.0291999999999984e-05, 6.0916000000001136e-05, 6.0612000000001554e-05, 6.044499999999925e-05, 6.063899999999775e-05, 6.045899999999882e-05, 6.031899999999965e-05, 6.059699999999904e-05, 6.084700000000276e-05, 6.080500000000058e-05, 6.080500000000058e-05, 6.0930000000000706e-05, 6.113899999999825e-05, 6.043099999999968e-05, 6.0292000000003454e-05, 6.036099999999836e-05, 6.0806000000000054e-05, 6.0471999999998916e-05, 6.038900000000097e-05, 6.0471999999998916e-05, 6.10560000000003e-05, 6.094499999999975e-05, 6.086100000000233e-05, 6.033299999999922e-05, 6.0944000000000276e-05, 6.115199999999835e-05, 6.118000000000096e-05, 6.111099999999911e-05, 6.036099999999836e-05, 6.0485999999998485e-05, 6.0443999999999776e-05, 6.116600000000139e-05, 6.0694000000000026e-05, 6.105500000000083e-05, 6.0792000000000485e-05, 6.033300000000269e-05, 6.03750000000014e-05, 6.0555999999999804e-05, 6.084699999999929e-05, 6.0513999999997625e-05, 6.0999999999998555e-05, 6.0806000000000054e-05, 6.0291999999999984e-05, 6.093100000000018e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.106" endtime="20201029 12:44:54.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.101" endtime="20201029 12:44:54.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.113" endtime="20201029 12:44:54.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.111" endtime="20201029 12:44:54.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.110" endtime="20201029 12:44:54.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.753" endtime="20201029 12:44:54.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.752" endtime="20201029 12:44:54.133"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.142" endtime="20201029 12:44:54.161"></status>
</kw>
<msg timestamp="20201029 12:44:54.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.140" endtime="20201029 12:44:54.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.162" endtime="20201029 12:44:54.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.165" endtime="20201029 12:44:54.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.138" endtime="20201029 12:44:54.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.136" endtime="20201029 12:44:54.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.174" endtime="20201029 12:44:54.460"></status>
</kw>
<msg timestamp="20201029 12:44:54.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01958825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:54.172" endtime="20201029 12:44:54.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01958825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:54.464" endtime="20201029 12:44:54.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.472" endtime="20201029 12:44:54.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.170" endtime="20201029 12:44:54.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.168" endtime="20201029 12:44:54.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.479" level="INFO">${RESULT} = [{'diff': 6.159700000000004e-05}, {'diff': 6.130499999999761e-05}, {'diff': 6.13889999999985e-05}, {'diff': 6.205499999999836e-05}, {'diff': 6.20560000000013e-05}, {'diff': 6.187499999999943e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:54.475" endtime="20201029 12:44:54.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.483" level="INFO">${ACCURACY} = {'diff': [6.159700000000004e-05, 6.130499999999761e-05, 6.13889999999985e-05, 6.205499999999836e-05, 6.20560000000013e-05, 6.187499999999943e-05, 6.166699999999789e-05, 6.218099999999796e-05, 6.163899...</msg>
<status status="PASS" starttime="20201029 12:44:54.480" endtime="20201029 12:44:54.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.488" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.487" endtime="20201029 12:44:54.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.490" level="INFO">VALUE: [6.159700000000004e-05, 6.130499999999761e-05, 6.13889999999985e-05, 6.205499999999836e-05, 6.20560000000013e-05, 6.187499999999943e-05, 6.166699999999789e-05, 6.218099999999796e-05, 6.163899999999875e-05, 6.180600000000105e-05, 6.15560000000008e-05, 6.188900000000247e-05, 6.12499999999988e-05, 6.15560000000008e-05, 6.111099999999911e-05, 6.113800000000225e-05, 6.17080000000006e-05, 6.194400000000128e-05, 6.179100000000201e-05, 6.136099999999936e-05, 6.155499999999786e-05, 6.136099999999936e-05, 6.140299999999807e-05, 6.186099999999986e-05, 6.175000000000277e-05, 6.148599999999949e-05, 6.218099999999796e-05, 6.143100000000068e-05, 6.17499999999993e-05, 6.168100000000093e-05, 6.16950000000005e-05, 6.198599999999999e-05, 6.138799999999903e-05, 6.219499999999753e-05, 6.168100000000093e-05, 6.111099999999911e-05, 6.170799999999713e-05, 6.159700000000004e-05, 6.12499999999988e-05, 6.173599999999974e-05, 6.17499999999993e-05, 6.215300000000229e-05, 6.20829999999975e-05, 6.169400000000103e-05, 6.201399999999913e-05, 6.130500000000108e-05, 6.177799999999845e-05, 6.216699999999839e-05, 6.186099999999986e-05, 6.161099999999961e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.489" endtime="20201029 12:44:54.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.484" endtime="20201029 12:44:54.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.495" endtime="20201029 12:44:54.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.494" endtime="20201029 12:44:54.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.493" endtime="20201029 12:44:54.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.134" endtime="20201029 12:44:54.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.134" endtime="20201029 12:44:54.516"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.525" endtime="20201029 12:44:54.543"></status>
</kw>
<msg timestamp="20201029 12:44:54.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.523" endtime="20201029 12:44:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.545" endtime="20201029 12:44:54.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.547" endtime="20201029 12:44:54.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.521" endtime="20201029 12:44:54.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.519" endtime="20201029 12:44:54.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.557" endtime="20201029 12:44:54.843"></status>
</kw>
<msg timestamp="20201029 12:44:54.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.555" endtime="20201029 12:44:54.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.848" endtime="20201029 12:44:54.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.856" endtime="20201029 12:44:54.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.552" endtime="20201029 12:44:54.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.551" endtime="20201029 12:44:54.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.862" level="INFO">${RESULT} = [{'diff': 6.315299999999982e-05}, {'diff': 6.237499999999993e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.274999999999684e-05}, {'diff': 6.298600000000099e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:54.859" endtime="20201029 12:44:54.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.867" level="INFO">${ACCURACY} = {'diff': [6.315299999999982e-05, 6.237499999999993e-05, 6.250000000000006e-05, 6.301400000000013e-05, 6.274999999999684e-05, 6.298600000000099e-05, 6.30690000000024e-05, 6.256899999999843e-05, 6.29720...</msg>
<status status="PASS" starttime="20201029 12:44:54.863" endtime="20201029 12:44:54.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.871" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.870" endtime="20201029 12:44:54.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.873" level="INFO">VALUE: [6.315299999999982e-05, 6.237499999999993e-05, 6.250000000000006e-05, 6.301400000000013e-05, 6.274999999999684e-05, 6.298600000000099e-05, 6.30690000000024e-05, 6.256899999999843e-05, 6.297200000000142e-05, 6.24300000000022e-05, 6.231900000000165e-05, 6.287499999999696e-05, 6.242999999999874e-05, 6.25560000000018e-05, 6.263899999999975e-05, 6.293099999999871e-05, 6.255599999999834e-05, 6.291700000000261e-05, 6.237499999999993e-05, 6.27500000000003e-05, 6.286100000000086e-05, 6.299999999999709e-05, 6.316599999999992e-05, 6.304199999999927e-05, 6.281899999999868e-05, 6.304200000000273e-05, 6.268099999999846e-05, 6.317999999999949e-05, 6.234700000000079e-05, 6.230599999999809e-05, 6.261100000000061e-05, 6.23889999999995e-05, 6.245800000000135e-05, 6.319399999999906e-05, 6.284700000000129e-05, 6.212499999999968e-05, 6.306899999999893e-05, 6.286099999999739e-05, 6.300000000000056e-05, 6.311099999999764e-05, 6.286100000000086e-05, 6.299999999999709e-05, 6.276399999999988e-05, 6.280600000000205e-05, 6.263899999999975e-05, 6.267999999999899e-05, 6.294400000000228e-05, 6.236100000000036e-05, 6.309699999999807e-05, 6.229099999999904e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.872" endtime="20201029 12:44:54.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.867" endtime="20201029 12:44:54.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.878" endtime="20201029 12:44:54.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.877" endtime="20201029 12:44:54.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.876" endtime="20201029 12:44:54.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.517" endtime="20201029 12:44:54.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.516" endtime="20201029 12:44:54.899"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.908" endtime="20201029 12:44:54.927"></status>
</kw>
<msg timestamp="20201029 12:44:54.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.906" endtime="20201029 12:44:54.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.929" endtime="20201029 12:44:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.931" endtime="20201029 12:44:54.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.903" endtime="20201029 12:44:54.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.901" endtime="20201029 12:44:54.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.940" endtime="20201029 12:44:55.226"></status>
</kw>
<msg timestamp="20201029 12:44:55.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.939" endtime="20201029 12:44:55.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.230" endtime="20201029 12:44:55.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.238" endtime="20201029 12:44:55.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.936" endtime="20201029 12:44:55.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.935" endtime="20201029 12:44:55.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.245" level="INFO">${RESULT} = [{'diff': 6.372299999999817e-05}, {'diff': 6.386099999999839e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.341699999999964e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.366600000000042e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:55.242" endtime="20201029 12:44:55.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.249" level="INFO">${ACCURACY} = {'diff': [6.372299999999817e-05, 6.386099999999839e-05, 6.405599999999984e-05, 6.341699999999964e-05, 6.331899999999918e-05, 6.366600000000042e-05, 6.322200000000167e-05, 6.342999999999974e-05, 6.3500...</msg>
<status status="PASS" starttime="20201029 12:44:55.246" endtime="20201029 12:44:55.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.253" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.252" endtime="20201029 12:44:55.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.256" level="INFO">VALUE: [6.372299999999817e-05, 6.386099999999839e-05, 6.405599999999984e-05, 6.341699999999964e-05, 6.331899999999918e-05, 6.366600000000042e-05, 6.322200000000167e-05, 6.342999999999974e-05, 6.350000000000106e-05, 6.39439999999998e-05, 6.342999999999974e-05, 6.416700000000039e-05, 6.384699999999882e-05, 6.327799999999995e-05, 6.368099999999946e-05, 6.419499999999953e-05, 6.347199999999845e-05, 6.394500000000275e-05, 6.418099999999996e-05, 6.355599999999934e-05, 6.334800000000126e-05, 6.379200000000002e-05, 6.338800000000103e-05, 6.37089999999986e-05, 6.32500000000008e-05, 6.418000000000049e-05, 6.33890000000005e-05, 6.390199999999763e-05, 6.386099999999839e-05, 6.331900000000265e-05, 6.398600000000199e-05, 6.3582999999999e-05, 6.406899999999993e-05, 6.376400000000088e-05, 6.412499999999821e-05, 6.359699999999857e-05, 6.332000000000212e-05, 6.344499999999878e-05, 6.387500000000143e-05, 6.355599999999934e-05, 6.404200000000027e-05, 6.393099999999971e-05, 6.341699999999964e-05, 6.376400000000088e-05, 6.359699999999857e-05, 6.32500000000008e-05, 6.39020000000011e-05, 6.369399999999956e-05, 6.32500000000008e-05, 6.366699999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.254" endtime="20201029 12:44:55.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.250" endtime="20201029 12:44:55.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.262" endtime="20201029 12:44:55.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.260" endtime="20201029 12:44:55.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.259" endtime="20201029 12:44:55.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.900" endtime="20201029 12:44:55.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.899" endtime="20201029 12:44:55.283"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.291" endtime="20201029 12:44:55.310"></status>
</kw>
<msg timestamp="20201029 12:44:55.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.290" endtime="20201029 12:44:55.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.312" endtime="20201029 12:44:55.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.314" endtime="20201029 12:44:55.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.287" endtime="20201029 12:44:55.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.285" endtime="20201029 12:44:55.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.323" endtime="20201029 12:44:55.608"></status>
</kw>
<msg timestamp="20201029 12:44:55.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.322" endtime="20201029 12:44:55.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.612" endtime="20201029 12:44:55.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.620" endtime="20201029 12:44:55.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.319" endtime="20201029 12:44:55.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.317" endtime="20201029 12:44:55.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.627" level="INFO">${RESULT} = [{'diff': 6.523599999999977e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.447199999999945e-05}, {'diff': 6.473599999999927e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.461099999999914e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:55.624" endtime="20201029 12:44:55.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.632" level="INFO">${ACCURACY} = {'diff': [6.523599999999977e-05, 6.486099999999939e-05, 6.447199999999945e-05, 6.473599999999927e-05, 6.502799999999823e-05, 6.461099999999914e-05, 6.47219999999997e-05, 6.500000000000256e-05, 6.51799...</msg>
<status status="PASS" starttime="20201029 12:44:55.628" endtime="20201029 12:44:55.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.636" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.635" endtime="20201029 12:44:55.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.639" level="INFO">VALUE: [6.523599999999977e-05, 6.486099999999939e-05, 6.447199999999945e-05, 6.473599999999927e-05, 6.502799999999823e-05, 6.461099999999914e-05, 6.47219999999997e-05, 6.500000000000256e-05, 6.517999999999802e-05, 6.429200000000052e-05, 6.482000000000016e-05, 6.466700000000089e-05, 6.482000000000016e-05, 6.443100000000021e-05, 6.50419999999978e-05, 6.462500000000218e-05, 6.461099999999914e-05, 6.448700000000196e-05, 6.476400000000188e-05, 6.42639999999979e-05, 6.434699999999932e-05, 6.513899999999878e-05, 6.42639999999979e-05, 6.504100000000179e-05, 6.424999999999834e-05, 6.44440000000003e-05, 6.448599999999902e-05, 6.481899999999721e-05, 6.462500000000218e-05, 6.47639999999984e-05, 6.423599999999877e-05, 6.443100000000021e-05, 6.444499999999978e-05, 6.50419999999978e-05, 6.412500000000168e-05, 6.480499999999764e-05, 6.461200000000208e-05, 6.499999999999909e-05, 6.461099999999914e-05, 6.449999999999859e-05, 6.434700000000279e-05, 6.445799999999988e-05, 6.484699999999982e-05, 6.468000000000099e-05, 6.441700000000064e-05, 6.447199999999945e-05, 6.502799999999823e-05, 6.48479999999993e-05, 6.433399999999923e-05, 6.451400000000163e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.637" endtime="20201029 12:44:55.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.633" endtime="20201029 12:44:55.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.644" endtime="20201029 12:44:55.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.642" endtime="20201029 12:44:55.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.641" endtime="20201029 12:44:55.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.283" endtime="20201029 12:44:55.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.283" endtime="20201029 12:44:55.664"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.673" endtime="20201029 12:44:55.692"></status>
</kw>
<msg timestamp="20201029 12:44:55.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.671" endtime="20201029 12:44:55.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.693" endtime="20201029 12:44:55.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.696" endtime="20201029 12:44:55.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.669" endtime="20201029 12:44:55.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.667" endtime="20201029 12:44:55.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.705" endtime="20201029 12:44:55.992"></status>
</kw>
<msg timestamp="20201029 12:44:55.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.703" endtime="20201029 12:44:55.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.996" endtime="20201029 12:44:56.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.004" endtime="20201029 12:44:56.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.700" endtime="20201029 12:44:56.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.699" endtime="20201029 12:44:56.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.011" level="INFO">${RESULT} = [{'diff': 6.620799999999816e-05}, {'diff': 6.566599999999895e-05}, {'diff': 6.598600000000052e-05}, {'diff': 6.538899999999903e-05}, {'diff': 6.54159999999987e-05}, {'diff': 6.619399999999859e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:56.008" endtime="20201029 12:44:56.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.015" level="INFO">${ACCURACY} = {'diff': [6.620799999999816e-05, 6.566599999999895e-05, 6.598600000000052e-05, 6.538899999999903e-05, 6.54159999999987e-05, 6.619399999999859e-05, 6.566700000000189e-05, 6.581900000000168e-05, 6.58049...</msg>
<status status="PASS" starttime="20201029 12:44:56.012" endtime="20201029 12:44:56.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.019" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.018" endtime="20201029 12:44:56.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.022" level="INFO">VALUE: [6.620799999999816e-05, 6.566599999999895e-05, 6.598600000000052e-05, 6.538899999999903e-05, 6.54159999999987e-05, 6.619399999999859e-05, 6.566700000000189e-05, 6.581900000000168e-05, 6.580499999999864e-05, 6.574999999999984e-05, 6.568100000000146e-05, 6.591699999999867e-05, 6.573600000000027e-05, 6.591700000000214e-05, 6.568099999999799e-05, 6.605599999999837e-05, 6.519500000000053e-05, 6.548699999999949e-05, 6.573600000000027e-05, 6.591699999999867e-05, 6.548600000000002e-05, 6.558299999999753e-05, 6.584699999999735e-05, 6.548600000000002e-05, 6.555599999999787e-05, 6.50830000000005e-05, 6.580600000000159e-05, 6.597200000000095e-05, 6.52639999999989e-05, 6.541700000000164e-05, 6.519499999999706e-05, 6.577799999999898e-05, 6.60419999999988e-05, 6.615299999999935e-05, 6.524999999999934e-05, 6.523699999999924e-05, 6.573699999999974e-05, 6.591699999999867e-05, 6.598600000000052e-05, 6.569400000000156e-05, 6.598600000000052e-05, 6.542999999999827e-05, 6.619399999999859e-05, 6.554100000000229e-05, 6.587499999999996e-05, 6.547200000000045e-05, 6.583299999999778e-05, 6.598600000000052e-05, 6.540300000000207e-05, 6.52500000000028e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.020" endtime="20201029 12:44:56.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.016" endtime="20201029 12:44:56.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.027" endtime="20201029 12:44:56.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.025" endtime="20201029 12:44:56.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.024" endtime="20201029 12:44:56.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.665" endtime="20201029 12:44:56.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.665" endtime="20201029 12:44:56.047"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.056" endtime="20201029 12:44:56.080"></status>
</kw>
<msg timestamp="20201029 12:44:56.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.055" endtime="20201029 12:44:56.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.081" endtime="20201029 12:44:56.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.084" endtime="20201029 12:44:56.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.052" endtime="20201029 12:44:56.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.050" endtime="20201029 12:44:56.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.092" endtime="20201029 12:44:56.377"></status>
</kw>
<msg timestamp="20201029 12:44:56.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:56.091" endtime="20201029 12:44:56.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:56.381" endtime="20201029 12:44:56.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.390" endtime="20201029 12:44:56.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.088" endtime="20201029 12:44:56.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.087" endtime="20201029 12:44:56.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.396" level="INFO">${RESULT} = [{'diff': 6.648600000000102e-05}, {'diff': 6.674999999999737e-05}, {'diff': 6.662499999999724e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.680599999999912e-05}, {'diff': 6.62639999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:56.393" endtime="20201029 12:44:56.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.400" level="INFO">${ACCURACY} = {'diff': [6.648600000000102e-05, 6.674999999999737e-05, 6.662499999999724e-05, 6.684700000000182e-05, 6.680599999999912e-05, 6.62639999999999e-05, 6.715300000000035e-05, 6.693099999999924e-05, 6.62919...</msg>
<status status="PASS" starttime="20201029 12:44:56.397" endtime="20201029 12:44:56.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.405" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.404" endtime="20201029 12:44:56.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.407" level="INFO">VALUE: [6.648600000000102e-05, 6.674999999999737e-05, 6.662499999999724e-05, 6.684700000000182e-05, 6.680599999999912e-05, 6.62639999999999e-05, 6.715300000000035e-05, 6.693099999999924e-05, 6.629199999999905e-05, 6.643100000000221e-05, 6.641699999999917e-05, 6.686200000000087e-05, 6.681899999999921e-05, 6.684799999999783e-05, 6.633299999999828e-05, 6.655500000000286e-05, 6.642999999999927e-05, 6.683300000000225e-05, 6.673600000000127e-05, 6.705499999999989e-05, 6.675000000000084e-05, 6.688900000000053e-05, 6.700000000000109e-05, 6.702800000000023e-05, 6.697199999999848e-05, 6.643100000000221e-05, 6.618100000000196e-05, 6.680599999999912e-05, 6.616699999999892e-05, 6.629199999999905e-05, 6.651299999999721e-05, 6.625000000000034e-05, 6.698700000000099e-05, 6.67640000000004e-05, 6.612500000000021e-05, 6.663900000000028e-05, 6.716699999999992e-05, 6.675000000000084e-05, 6.711100000000164e-05, 6.655600000000234e-05, 6.636099999999742e-05, 6.719500000000253e-05, 6.650000000000059e-05, 6.669499999999856e-05, 6.686100000000139e-05, 6.688900000000053e-05, 6.716699999999992e-05, 6.673600000000127e-05, 6.712500000000121e-05, 6.691699999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.406" endtime="20201029 12:44:56.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.401" endtime="20201029 12:44:56.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.413" endtime="20201029 12:44:56.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.412" endtime="20201029 12:44:56.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.410" endtime="20201029 12:44:56.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.048" endtime="20201029 12:44:56.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.048" endtime="20201029 12:44:56.434"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.442" endtime="20201029 12:44:56.461"></status>
</kw>
<msg timestamp="20201029 12:44:56.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.441" endtime="20201029 12:44:56.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.463" endtime="20201029 12:44:56.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.465" endtime="20201029 12:44:56.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.438" endtime="20201029 12:44:56.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.436" endtime="20201029 12:44:56.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.474" endtime="20201029 12:44:56.759"></status>
</kw>
<msg timestamp="20201029 12:44:56.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.472" endtime="20201029 12:44:56.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.763" endtime="20201029 12:44:56.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.771" endtime="20201029 12:44:56.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.470" endtime="20201029 12:44:56.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.468" endtime="20201029 12:44:56.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.778" level="INFO">${RESULT} = [{'diff': 6.724999999999787e-05}, {'diff': 6.730600000000309e-05}, {'diff': 6.756999999999944e-05}, {'diff': 6.770899999999913e-05}, {'diff': 6.786099999999892e-05}, {'diff': 6.737500000000146e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:56.774" endtime="20201029 12:44:56.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.782" level="INFO">${ACCURACY} = {'diff': [6.724999999999787e-05, 6.730600000000309e-05, 6.756999999999944e-05, 6.770899999999913e-05, 6.786099999999892e-05, 6.737500000000146e-05, 6.737500000000146e-05, 6.788800000000206e-05, 6.7417...</msg>
<status status="PASS" starttime="20201029 12:44:56.779" endtime="20201029 12:44:56.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.787" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.786" endtime="20201029 12:44:56.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.789" level="INFO">VALUE: [6.724999999999787e-05, 6.730600000000309e-05, 6.756999999999944e-05, 6.770899999999913e-05, 6.786099999999892e-05, 6.737500000000146e-05, 6.737500000000146e-05, 6.788800000000206e-05, 6.741700000000017e-05, 6.729200000000005e-05, 6.776399999999794e-05, 6.779100000000107e-05, 6.761099999999867e-05, 6.730500000000014e-05, 6.786100000000239e-05, 6.72640000000009e-05, 6.763899999999781e-05, 6.800000000000209e-05, 6.761099999999867e-05, 6.769499999999956e-05, 6.786099999999892e-05, 6.793099999999677e-05, 6.752800000000073e-05, 6.793100000000024e-05, 6.797199999999948e-05, 6.745900000000235e-05, 6.743000000000027e-05, 6.809799999999908e-05, 6.743099999999974e-05, 6.738899999999756e-05, 6.790199999999816e-05, 6.738900000000103e-05, 6.74160000000007e-05, 6.794400000000034e-05, 6.77909999999976e-05, 6.800000000000209e-05, 6.776399999999794e-05, 6.732000000000266e-05, 6.762499999999824e-05, 6.787500000000196e-05, 6.82229999999992e-05, 6.818100000000049e-05, 6.741700000000017e-05, 6.793100000000024e-05, 6.768099999999999e-05, 6.788799999999859e-05, 6.809799999999908e-05, 6.749999999999812e-05, 6.786200000000187e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.788" endtime="20201029 12:44:56.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.783" endtime="20201029 12:44:56.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.794" endtime="20201029 12:44:56.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.793" endtime="20201029 12:44:56.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.792" endtime="20201029 12:44:56.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.435" endtime="20201029 12:44:56.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.434" endtime="20201029 12:44:56.815"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.823" endtime="20201029 12:44:56.842"></status>
</kw>
<msg timestamp="20201029 12:44:56.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.822" endtime="20201029 12:44:56.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.844" endtime="20201029 12:44:56.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.846" endtime="20201029 12:44:56.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.819" endtime="20201029 12:44:56.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.817" endtime="20201029 12:44:56.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.855" endtime="20201029 12:44:57.143"></status>
</kw>
<msg timestamp="20201029 12:44:57.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.854" endtime="20201029 12:44:57.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.147" endtime="20201029 12:44:57.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.155" endtime="20201029 12:44:57.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.851" endtime="20201029 12:44:57.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.850" endtime="20201029 12:44:57.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.162" level="INFO">${RESULT} = [{'diff': 6.901400000000266e-05}, {'diff': 6.902799999999876e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.826399999999844e-05}, {'diff': 6.90559999999979e-05}, {'diff': 6.920900000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:57.159" endtime="20201029 12:44:57.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.166" level="INFO">${ACCURACY} = {'diff': [6.901400000000266e-05, 6.902799999999876e-05, 6.87359999999998e-05, 6.826399999999844e-05, 6.90559999999979e-05, 6.920900000000063e-05, 6.899999999999962e-05, 6.893100000000124e-05, 6.824999...</msg>
<status status="PASS" starttime="20201029 12:44:57.163" endtime="20201029 12:44:57.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.170" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.169" endtime="20201029 12:44:57.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.173" level="INFO">VALUE: [6.901400000000266e-05, 6.902799999999876e-05, 6.87359999999998e-05, 6.826399999999844e-05, 6.90559999999979e-05, 6.920900000000063e-05, 6.899999999999962e-05, 6.893100000000124e-05, 6.824999999999887e-05, 6.880599999999765e-05, 6.919400000000159e-05, 6.83619999999989e-05, 6.829200000000105e-05, 6.852800000000173e-05, 6.906900000000146e-05, 6.912499999999974e-05, 6.837499999999899e-05, 6.887499999999949e-05, 6.881900000000121e-05, 6.836099999999942e-05, 6.819400000000059e-05, 6.904199999999833e-05, 6.833399999999976e-05, 6.877799999999851e-05, 6.812499999999874e-05, 6.912499999999974e-05, 6.85420000000013e-05, 6.865299999999838e-05, 6.869500000000056e-05, 6.919400000000159e-05, 6.83619999999989e-05, 6.838900000000203e-05, 6.863900000000228e-05, 6.874999999999937e-05, 6.836099999999942e-05, 6.855499999999792e-05, 6.824999999999887e-05, 6.901399999999919e-05, 6.824999999999887e-05, 6.85420000000013e-05, 6.888900000000253e-05, 6.854199999999783e-05, 6.90420000000018e-05, 6.832000000000019e-05, 6.841700000000117e-05, 6.886099999999992e-05, 6.870899999999666e-05, 6.891599999999873e-05, 6.865299999999838e-05, 6.883299999999731e-05]</msg>
<status status="PASS" starttime="20201029 12:44:57.171" endtime="20201029 12:44:57.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.167" endtime="20201029 12:44:57.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.178" endtime="20201029 12:44:57.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.176" endtime="20201029 12:44:57.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.175" endtime="20201029 12:44:57.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.816" endtime="20201029 12:44:57.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.815" endtime="20201029 12:44:57.198"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.207" endtime="20201029 12:44:57.227"></status>
</kw>
<msg timestamp="20201029 12:44:57.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.205" endtime="20201029 12:44:57.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.228" endtime="20201029 12:44:57.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.230" endtime="20201029 12:44:57.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.203" endtime="20201029 12:44:57.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.201" endtime="20201029 12:44:57.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.240" endtime="20201029 12:44:57.525"></status>
</kw>
<msg timestamp="20201029 12:44:57.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020637431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.238" endtime="20201029 12:44:57.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020637431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.529" endtime="20201029 12:44:57.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.537" endtime="20201029 12:44:57.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.235" endtime="20201029 12:44:57.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.234" endtime="20201029 12:44:57.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.544" level="INFO">${RESULT} = [{'diff': 6.934800000000033e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.931900000000171e-05}, {'diff': 6.977700000000003e-05}, {'diff': 6.962500000000024e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:57.541" endtime="20201029 12:44:57.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.548" level="INFO">${ACCURACY} = {'diff': [6.934800000000033e-05, 6.911100000000017e-05, 6.924999999999987e-05, 6.931900000000171e-05, 6.977700000000003e-05, 6.962500000000024e-05, 6.912499999999974e-05, 6.918099999999802e-05, 6.9249...</msg>
<status status="PASS" starttime="20201029 12:44:57.545" endtime="20201029 12:44:57.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.552" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.551" endtime="20201029 12:44:57.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.555" level="INFO">VALUE: [6.934800000000033e-05, 6.911100000000017e-05, 6.924999999999987e-05, 6.931900000000171e-05, 6.977700000000003e-05, 6.962500000000024e-05, 6.912499999999974e-05, 6.918099999999802e-05, 6.924999999999987e-05, 6.987500000000049e-05, 6.92360000000003e-05, 7.018099999999902e-05, 6.90970000000006e-05, 6.97499999999969e-05, 6.975000000000037e-05, 6.94299999999988e-05, 6.936100000000042e-05, 6.938800000000009e-05, 6.949999999999665e-05, 6.987500000000049e-05, 7.016599999999998e-05, 6.980499999999917e-05, 6.994399999999887e-05, 7.009699999999813e-05, 6.991599999999973e-05, 6.950000000000012e-05, 6.926399999999944e-05, 6.92360000000003e-05, 6.998600000000105e-05, 7.020900000000163e-05, 6.938899999999956e-05, 7.018100000000249e-05, 7.002799999999976e-05, 6.957000000000144e-05, 6.97360000000008e-05, 6.995799999999844e-05, 6.962499999999677e-05, 6.947299999999698e-05, 6.956899999999849e-05, 6.948600000000055e-05, 6.934700000000085e-05, 6.990200000000016e-05, 6.983299999999831e-05, 6.962500000000024e-05, 6.95559999999984e-05, 6.934699999999738e-05, 6.930600000000162e-05, 6.980600000000212e-05, 6.966699999999895e-05, 6.911100000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:44:57.554" endtime="20201029 12:44:57.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.549" endtime="20201029 12:44:57.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.567" endtime="20201029 12:44:57.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.566" endtime="20201029 12:44:57.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.564" endtime="20201029 12:44:57.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.199" endtime="20201029 12:44:57.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.199" endtime="20201029 12:44:57.588"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.596" endtime="20201029 12:44:57.616"></status>
</kw>
<msg timestamp="20201029 12:44:57.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.595" endtime="20201029 12:44:57.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.617" endtime="20201029 12:44:57.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.619" endtime="20201029 12:44:57.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.592" endtime="20201029 12:44:57.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.590" endtime="20201029 12:44:57.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.629" endtime="20201029 12:44:57.913"></status>
</kw>
<msg timestamp="20201029 12:44:57.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.627" endtime="20201029 12:44:57.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.918" endtime="20201029 12:44:57.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.926" endtime="20201029 12:44:57.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.625" endtime="20201029 12:44:57.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.623" endtime="20201029 12:44:57.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.932" level="INFO">${RESULT} = [{'diff': 7.068099999999952e-05}, {'diff': 7.022199999999826e-05}, {'diff': 7.065200000000091e-05}, {'diff': 7.047299999999798e-05}, {'diff': 7.036199999999743e-05}, {'diff': 7.087500000000149e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:57.929" endtime="20201029 12:44:57.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.937" level="INFO">${ACCURACY} = {'diff': [7.068099999999952e-05, 7.022199999999826e-05, 7.065200000000091e-05, 7.047299999999798e-05, 7.036199999999743e-05, 7.087500000000149e-05, 7.052700000000078e-05, 7.088899999999759e-05, 7.0763...</msg>
<status status="PASS" starttime="20201029 12:44:57.933" endtime="20201029 12:44:57.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.942" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.941" endtime="20201029 12:44:57.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.944" level="INFO">VALUE: [7.068099999999952e-05, 7.022199999999826e-05, 7.065200000000091e-05, 7.047299999999798e-05, 7.036199999999743e-05, 7.087500000000149e-05, 7.052700000000078e-05, 7.088899999999759e-05, 7.076399999999747e-05, 7.070800000000266e-05, 7.037499999999752e-05, 7.073599999999833e-05, 7.079200000000008e-05, 7.036099999999795e-05, 7.04169999999997e-05, 7.087499999999802e-05, 7.10559999999999e-05, 7.051399999999722e-05, 7.038899999999709e-05, 7.031999999999872e-05, 7.101299999999824e-05, 7.113900000000131e-05, 7.044399999999937e-05, 7.034699999999838e-05, 7.112500000000174e-05, 7.047200000000198e-05, 7.051400000000069e-05, 7.116600000000098e-05, 7.080599999999965e-05, 7.06109999999982e-05, 7.055600000000287e-05, 7.044499999999884e-05, 7.047299999999798e-05, 7.084700000000235e-05, 7.080600000000312e-05, 7.045799999999894e-05, 7.023599999999783e-05, 7.086099999999845e-05, 7.041600000000023e-05, 7.044399999999937e-05, 7.023599999999783e-05, 7.063900000000081e-05, 7.02910000000001e-05, 7.023599999999783e-05, 7.068000000000005e-05, 7.07910000000006e-05, 7.080500000000017e-05, 7.101399999999772e-05, 7.081899999999974e-05, 7.113900000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:44:57.943" endtime="20201029 12:44:57.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.938" endtime="20201029 12:44:57.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.949" endtime="20201029 12:44:57.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.948" endtime="20201029 12:44:57.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.947" endtime="20201029 12:44:57.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.589" endtime="20201029 12:44:57.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.588" endtime="20201029 12:44:57.970"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.979" endtime="20201029 12:44:57.998"></status>
</kw>
<msg timestamp="20201029 12:44:57.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.977" endtime="20201029 12:44:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.000" endtime="20201029 12:44:58.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.002" endtime="20201029 12:44:58.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.974" endtime="20201029 12:44:58.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.972" endtime="20201029 12:44:58.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.011" endtime="20201029 12:44:58.299"></status>
</kw>
<msg timestamp="20201029 12:44:58.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.010" endtime="20201029 12:44:58.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.303" endtime="20201029 12:44:58.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.312" endtime="20201029 12:44:58.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.007" endtime="20201029 12:44:58.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.006" endtime="20201029 12:44:58.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.319" level="INFO">${RESULT} = [{'diff': 7.188900000000206e-05}, {'diff': 7.188900000000206e-05}, {'diff': 7.136099999999895e-05}, {'diff': 7.159699999999963e-05}, {'diff': 7.149999999999865e-05}, {'diff': 7.200000000000262e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:58.315" endtime="20201029 12:44:58.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.323" level="INFO">${ACCURACY} = {'diff': [7.188900000000206e-05, 7.188900000000206e-05, 7.136099999999895e-05, 7.159699999999963e-05, 7.149999999999865e-05, 7.200000000000262e-05, 7.19439999999974e-05, 7.154200000000083e-05, 7.19309...</msg>
<status status="PASS" starttime="20201029 12:44:58.320" endtime="20201029 12:44:58.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.328" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.327" endtime="20201029 12:44:58.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.331" level="INFO">VALUE: [7.188900000000206e-05, 7.188900000000206e-05, 7.136099999999895e-05, 7.159699999999963e-05, 7.149999999999865e-05, 7.200000000000262e-05, 7.19439999999974e-05, 7.154200000000083e-05, 7.19309999999973e-05, 7.205599999999743e-05, 7.176400000000194e-05, 7.143100000000027e-05, 7.125000000000187e-05, 7.16109999999992e-05, 7.137499999999852e-05, 7.195800000000044e-05, 7.10559999999999e-05, 7.184699999999988e-05, 7.181900000000074e-05, 7.198599999999958e-05, 7.148599999999908e-05, 7.137499999999852e-05, 7.141600000000123e-05, 7.140300000000113e-05, 7.216599999999851e-05, 7.15690000000005e-05, 7.197200000000001e-05, 7.179200000000108e-05, 7.194500000000034e-05, 7.198599999999958e-05, 7.165300000000138e-05, 7.168100000000052e-05, 7.127700000000153e-05, 7.14170000000007e-05, 7.180600000000065e-05, 7.175000000000237e-05, 7.191599999999826e-05, 7.162500000000224e-05, 7.17499999999989e-05, 7.130500000000067e-05, 7.151400000000169e-05, 7.184699999999988e-05, 7.219400000000112e-05, 7.186099999999945e-05, 7.170899999999966e-05, 7.150000000000212e-05, 7.129200000000058e-05, 7.19170000000012e-05, 7.180600000000065e-05, 7.207000000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.329" endtime="20201029 12:44:58.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.324" endtime="20201029 12:44:58.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.336" endtime="20201029 12:44:58.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.334" endtime="20201029 12:44:58.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.333" endtime="20201029 12:44:58.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.971" endtime="20201029 12:44:58.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.970" endtime="20201029 12:44:58.356"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.365" endtime="20201029 12:44:58.385"></status>
</kw>
<msg timestamp="20201029 12:44:58.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.363" endtime="20201029 12:44:58.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.386" endtime="20201029 12:44:58.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.389" endtime="20201029 12:44:58.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.361" endtime="20201029 12:44:58.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.359" endtime="20201029 12:44:58.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.398" endtime="20201029 12:44:58.683"></status>
</kw>
<msg timestamp="20201029 12:44:58.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:58.396" endtime="20201029 12:44:58.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:58.687" endtime="20201029 12:44:58.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.696" endtime="20201029 12:44:58.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.394" endtime="20201029 12:44:58.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.392" endtime="20201029 12:44:58.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.702" level="INFO">${RESULT} = [{'diff': 7.30829999999981e-05}, {'diff': 7.320900000000116e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.283400000000079e-05}, {'diff': 7.29309999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:58.699" endtime="20201029 12:44:58.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.707" level="INFO">${ACCURACY} = {'diff': [7.30829999999981e-05, 7.320900000000116e-05, 7.298600000000058e-05, 7.313899999999984e-05, 7.283400000000079e-05, 7.29309999999983e-05, 7.241599999999876e-05, 7.287500000000002e-05, 7.249999...</msg>
<status status="PASS" starttime="20201029 12:44:58.703" endtime="20201029 12:44:58.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.711" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.710" endtime="20201029 12:44:58.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.714" level="INFO">VALUE: [7.30829999999981e-05, 7.320900000000116e-05, 7.298600000000058e-05, 7.313899999999984e-05, 7.283400000000079e-05, 7.29309999999983e-05, 7.241599999999876e-05, 7.287500000000002e-05, 7.249999999999965e-05, 7.236099999999995e-05, 7.270800000000119e-05, 7.305499999999895e-05, 7.236199999999943e-05, 7.21109999999997e-05, 7.28049999999987e-05, 7.313899999999984e-05, 7.283300000000131e-05, 7.22499999999994e-05, 7.275000000000337e-05, 7.229200000000158e-05, 7.288899999999959e-05, 7.284700000000088e-05, 7.320899999999769e-05, 7.319500000000159e-05, 7.270900000000066e-05, 7.231999999999725e-05, 7.284700000000088e-05, 7.24170000000017e-05, 7.265299999999891e-05, 7.301300000000024e-05, 7.309700000000113e-05, 7.301400000000319e-05, 7.236099999999995e-05, 7.226400000000244e-05, 7.298600000000058e-05, 7.273600000000033e-05, 7.237499999999952e-05, 7.24170000000017e-05, 7.297199999999754e-05, 7.229199999999811e-05, 7.212499999999927e-05, 7.237499999999952e-05, 7.232000000000072e-05, 7.222200000000026e-05, 7.269500000000109e-05, 7.25690000000015e-05, 7.243100000000127e-05, 7.29300000000023e-05, 7.305500000000242e-05, 7.22499999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.712" endtime="20201029 12:44:58.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.708" endtime="20201029 12:44:58.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.719" endtime="20201029 12:44:58.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.718" endtime="20201029 12:44:58.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.717" endtime="20201029 12:44:58.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.357" endtime="20201029 12:44:58.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.357" endtime="20201029 12:44:58.740"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.749" endtime="20201029 12:44:58.768"></status>
</kw>
<msg timestamp="20201029 12:44:58.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.747" endtime="20201029 12:44:58.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.769" endtime="20201029 12:44:58.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.772" endtime="20201029 12:44:58.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.745" endtime="20201029 12:44:58.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.743" endtime="20201029 12:44:58.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.781" endtime="20201029 12:44:59.066"></status>
</kw>
<msg timestamp="20201029 12:44:59.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.779" endtime="20201029 12:44:59.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.070" endtime="20201029 12:44:59.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.079" endtime="20201029 12:44:59.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.777" endtime="20201029 12:44:59.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.775" endtime="20201029 12:44:59.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.085" level="INFO">${RESULT} = [{'diff': 7.418099999999955e-05}, {'diff': 7.344500000000184e-05}, {'diff': 7.418099999999955e-05}, {'diff': 7.405599999999943e-05}, {'diff': 7.40829999999991e-05}, {'diff': 7.326399999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:59.082" endtime="20201029 12:44:59.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.090" level="INFO">${ACCURACY} = {'diff': [7.418099999999955e-05, 7.344500000000184e-05, 7.418099999999955e-05, 7.405599999999943e-05, 7.40829999999991e-05, 7.326399999999997e-05, 7.319399999999865e-05, 7.350000000000065e-05, 7.36249...</msg>
<status status="PASS" starttime="20201029 12:44:59.086" endtime="20201029 12:44:59.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.095" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.094" endtime="20201029 12:44:59.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.097" level="INFO">VALUE: [7.418099999999955e-05, 7.344500000000184e-05, 7.418099999999955e-05, 7.405599999999943e-05, 7.40829999999991e-05, 7.326399999999997e-05, 7.319399999999865e-05, 7.350000000000065e-05, 7.36249999999973e-05, 7.333300000000181e-05, 7.338900000000009e-05, 7.391699999999973e-05, 7.326399999999997e-05, 7.379199999999961e-05, 7.357000000000197e-05, 7.398600000000158e-05, 7.344400000000237e-05, 7.405599999999943e-05, 7.387499999999755e-05, 7.362500000000077e-05, 7.415300000000041e-05, 7.34309999999988e-05, 7.355499999999945e-05, 7.41110000000017e-05, 7.379100000000013e-05, 7.32500000000004e-05, 7.415300000000041e-05, 7.34439999999989e-05, 7.400000000000115e-05, 7.381899999999927e-05, 7.376400000000047e-05, 7.370899999999819e-05, 7.405599999999943e-05, 7.379199999999961e-05, 7.377800000000004e-05, 7.381900000000274e-05, 7.395800000000244e-05, 7.377800000000004e-05, 7.39439999999994e-05, 7.387500000000102e-05, 7.379100000000013e-05, 7.422200000000226e-05, 7.366600000000001e-05, 7.336100000000095e-05, 7.341599999999976e-05, 7.331899999999877e-05, 7.416699999999998e-05, 7.379199999999961e-05, 7.35699999999985e-05, 7.343100000000227e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.096" endtime="20201029 12:44:59.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.091" endtime="20201029 12:44:59.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.102" endtime="20201029 12:44:59.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.100" endtime="20201029 12:44:59.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.099" endtime="20201029 12:44:59.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.741" endtime="20201029 12:44:59.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.740" endtime="20201029 12:44:59.123"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.131" endtime="20201029 12:44:59.150"></status>
</kw>
<msg timestamp="20201029 12:44:59.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.130" endtime="20201029 12:44:59.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.152" endtime="20201029 12:44:59.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.154" endtime="20201029 12:44:59.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.127" endtime="20201029 12:44:59.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.125" endtime="20201029 12:44:59.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.163" endtime="20201029 12:44:59.449"></status>
</kw>
<msg timestamp="20201029 12:44:59.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.162" endtime="20201029 12:44:59.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.453" endtime="20201029 12:44:59.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.462" endtime="20201029 12:44:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.159" endtime="20201029 12:44:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.158" endtime="20201029 12:44:59.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.468" level="INFO">${RESULT} = [{'diff': 7.476400000000147e-05}, {'diff': 7.468100000000005e-05}, {'diff': 7.441600000000076e-05}, {'diff': 7.461199999999821e-05}, {'diff': 7.509799999999914e-05}, {'diff': 7.448700000000155e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:59.465" endtime="20201029 12:44:59.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.472" level="INFO">${ACCURACY} = {'diff': [7.476400000000147e-05, 7.468100000000005e-05, 7.441600000000076e-05, 7.461199999999821e-05, 7.509799999999914e-05, 7.448700000000155e-05, 7.424999999999793e-05, 7.433300000000281e-05, 7.5181...</msg>
<status status="PASS" starttime="20201029 12:44:59.469" endtime="20201029 12:44:59.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.477" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.476" endtime="20201029 12:44:59.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.479" level="INFO">VALUE: [7.476400000000147e-05, 7.468100000000005e-05, 7.441600000000076e-05, 7.461199999999821e-05, 7.509799999999914e-05, 7.448700000000155e-05, 7.424999999999793e-05, 7.433300000000281e-05, 7.518100000000055e-05, 7.465300000000091e-05, 7.504100000000138e-05, 7.474999999999843e-05, 7.432000000000272e-05, 7.51249999999988e-05, 7.483299999999984e-05, 7.455599999999993e-05, 7.473599999999886e-05, 7.480600000000018e-05, 7.430599999999968e-05, 7.46249999999983e-05, 7.441700000000023e-05, 7.476299999999853e-05, 7.498700000000205e-05, 7.51110000000027e-05, 7.511099999999923e-05, 7.48050000000007e-05, 7.517999999999761e-05, 7.443000000000033e-05, 7.499999999999868e-05, 7.44439999999999e-05, 7.51249999999988e-05, 7.465300000000091e-05, 7.487499999999855e-05, 7.466700000000048e-05, 7.463899999999787e-05, 7.486099999999898e-05, 7.46249999999983e-05, 7.473599999999886e-05, 7.434800000000186e-05, 7.445899999999894e-05, 7.433299999999934e-05, 7.488900000000159e-05, 7.505500000000095e-05, 7.437499999999805e-05, 7.462500000000177e-05, 7.501400000000172e-05, 7.505499999999748e-05, 7.452799999999732e-05, 7.46249999999983e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.478" endtime="20201029 12:44:59.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.473" endtime="20201029 12:44:59.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.484" endtime="20201029 12:44:59.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.483" endtime="20201029 12:44:59.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.482" endtime="20201029 12:44:59.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.123" endtime="20201029 12:44:59.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.123" endtime="20201029 12:44:59.505"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.514" endtime="20201029 12:44:59.536"></status>
</kw>
<msg timestamp="20201029 12:44:59.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.512" endtime="20201029 12:44:59.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.537" endtime="20201029 12:44:59.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.540" endtime="20201029 12:44:59.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.510" endtime="20201029 12:44:59.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.508" endtime="20201029 12:44:59.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.549" endtime="20201029 12:44:59.835"></status>
</kw>
<msg timestamp="20201029 12:44:59.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.547" endtime="20201029 12:44:59.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.839" endtime="20201029 12:44:59.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.848" endtime="20201029 12:44:59.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.545" endtime="20201029 12:44:59.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.543" endtime="20201029 12:44:59.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.854" level="INFO">${RESULT} = [{'diff': 7.613899999999937e-05}, {'diff': 7.513899999999837e-05}, {'diff': 7.580600000000118e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.54449999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:59.851" endtime="20201029 12:44:59.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.858" level="INFO">${ACCURACY} = {'diff': [7.613899999999937e-05, 7.513899999999837e-05, 7.580600000000118e-05, 7.530600000000068e-05, 7.577799999999857e-05, 7.54449999999969e-05, 7.568100000000105e-05, 7.51110000000027e-05, 7.543000...</msg>
<status status="PASS" starttime="20201029 12:44:59.855" endtime="20201029 12:44:59.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.863" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.862" endtime="20201029 12:44:59.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.865" level="INFO">VALUE: [7.613899999999937e-05, 7.513899999999837e-05, 7.580600000000118e-05, 7.530600000000068e-05, 7.577799999999857e-05, 7.54449999999969e-05, 7.568100000000105e-05, 7.51110000000027e-05, 7.543000000000133e-05, 7.531900000000077e-05, 7.531900000000077e-05, 7.548599999999961e-05, 7.541699999999776e-05, 7.591599999999879e-05, 7.56249999999993e-05, 7.55830000000006e-05, 7.532000000000025e-05, 7.581900000000127e-05, 7.61249999999998e-05, 7.52500000000024e-05, 7.536099999999948e-05, 7.599999999999968e-05, 7.609700000000066e-05, 7.524999999999893e-05, 7.559799999999964e-05, 7.590199999999922e-05, 7.550000000000265e-05, 7.574999999999943e-05, 7.579100000000213e-05, 7.568000000000158e-05, 7.59440000000014e-05, 7.615299999999894e-05, 7.548599999999961e-05, 7.59310000000013e-05, 7.569400000000115e-05, 7.588899999999912e-05, 7.555599999999746e-05, 7.590300000000216e-05, 7.580599999999771e-05, 7.555600000000093e-05, 7.530600000000068e-05, 7.605599999999796e-05, 7.555500000000145e-05, 7.561200000000268e-05, 7.605500000000195e-05, 7.556900000000102e-05, 7.579099999999866e-05, 7.594399999999793e-05, 7.611100000000023e-05, 7.537500000000252e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.864" endtime="20201029 12:44:59.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.859" endtime="20201029 12:44:59.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.871" endtime="20201029 12:44:59.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.869" endtime="20201029 12:44:59.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.868" endtime="20201029 12:44:59.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.506" endtime="20201029 12:44:59.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.505" endtime="20201029 12:44:59.891"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.900" endtime="20201029 12:44:59.920"></status>
</kw>
<msg timestamp="20201029 12:44:59.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.899" endtime="20201029 12:44:59.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.921" endtime="20201029 12:44:59.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.924" endtime="20201029 12:44:59.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.896" endtime="20201029 12:44:59.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.894" endtime="20201029 12:44:59.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.932" endtime="20201029 12:45:00.218"></status>
</kw>
<msg timestamp="20201029 12:45:00.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.931" endtime="20201029 12:45:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.222" endtime="20201029 12:45:00.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.231" endtime="20201029 12:45:00.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.929" endtime="20201029 12:45:00.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.927" endtime="20201029 12:45:00.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.237" level="INFO">${RESULT} = [{'diff': 7.70839999999981e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.638899999999962e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.691599999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:00.234" endtime="20201029 12:45:00.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.242" level="INFO">${ACCURACY} = {'diff': [7.70839999999981e-05, 7.624999999999993e-05, 7.675000000000043e-05, 7.638899999999962e-05, 7.725000000000093e-05, 7.691599999999979e-05, 7.700000000000068e-05, 7.693000000000283e-05, 7.65409...</msg>
<status status="PASS" starttime="20201029 12:45:00.238" endtime="20201029 12:45:00.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.247" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.246" endtime="20201029 12:45:00.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.249" level="INFO">VALUE: [7.70839999999981e-05, 7.624999999999993e-05, 7.675000000000043e-05, 7.638899999999962e-05, 7.725000000000093e-05, 7.691599999999979e-05, 7.700000000000068e-05, 7.693000000000283e-05, 7.654099999999942e-05, 7.661100000000073e-05, 7.650000000000018e-05, 7.637500000000005e-05, 7.650000000000018e-05, 7.647300000000051e-05, 7.648600000000061e-05, 7.680599999999871e-05, 7.64310000000018e-05, 7.686100000000098e-05, 7.630599999999821e-05, 7.716699999999951e-05, 7.7151999999997e-05, 7.638899999999962e-05, 7.695800000000197e-05, 7.633299999999787e-05, 7.719399999999918e-05, 7.702699999999688e-05, 7.722200000000179e-05, 7.622200000000079e-05, 7.71250000000008e-05, 7.719499999999865e-05, 7.680600000000218e-05, 7.661100000000073e-05, 7.62639999999995e-05, 7.643099999999833e-05, 7.637500000000005e-05, 7.622300000000026e-05, 7.684800000000089e-05, 7.718099999999908e-05, 7.636100000000048e-05, 7.637500000000005e-05, 7.698600000000111e-05, 7.656899999999855e-05, 7.661100000000073e-05, 7.647199999999757e-05, 7.642999999999886e-05, 7.679200000000261e-05, 7.655599999999846e-05, 7.6457999999998e-05, 7.61249999999998e-05, 7.666699999999901e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.248" endtime="20201029 12:45:00.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.243" endtime="20201029 12:45:00.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.254" endtime="20201029 12:45:00.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.252" endtime="20201029 12:45:00.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.251" endtime="20201029 12:45:00.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.892" endtime="20201029 12:45:00.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.892" endtime="20201029 12:45:00.275"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.283" endtime="20201029 12:45:00.302"></status>
</kw>
<msg timestamp="20201029 12:45:00.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.282" endtime="20201029 12:45:00.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.304" endtime="20201029 12:45:00.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.306" endtime="20201029 12:45:00.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.279" endtime="20201029 12:45:00.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.277" endtime="20201029 12:45:00.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.316" endtime="20201029 12:45:00.603"></status>
</kw>
<msg timestamp="20201029 12:45:00.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.314" endtime="20201029 12:45:00.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.607" endtime="20201029 12:45:00.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.615" endtime="20201029 12:45:00.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.311" endtime="20201029 12:45:00.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.310" endtime="20201029 12:45:00.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.622" level="INFO">${RESULT} = [{'diff': 7.727800000000007e-05}, {'diff': 7.797199999999907e-05}, {'diff': 7.795899999999897e-05}, {'diff': 7.797299999999854e-05}, {'diff': 7.750000000000118e-05}, {'diff': 7.769399999999968e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:00.618" endtime="20201029 12:45:00.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.626" level="INFO">${ACCURACY} = {'diff': [7.727800000000007e-05, 7.797199999999907e-05, 7.795899999999897e-05, 7.797299999999854e-05, 7.750000000000118e-05, 7.769399999999968e-05, 7.718099999999908e-05, 7.786100000000198e-05, 7.7527...</msg>
<status status="PASS" starttime="20201029 12:45:00.623" endtime="20201029 12:45:00.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.630" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.629" endtime="20201029 12:45:00.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.633" level="INFO">VALUE: [7.727800000000007e-05, 7.797199999999907e-05, 7.795899999999897e-05, 7.797299999999854e-05, 7.750000000000118e-05, 7.769399999999968e-05, 7.718099999999908e-05, 7.786100000000198e-05, 7.752700000000085e-05, 7.741600000000029e-05, 7.787499999999808e-05, 7.78189999999998e-05, 7.801400000000125e-05, 7.773599999999839e-05, 7.80839999999991e-05, 7.737500000000105e-05, 7.804200000000039e-05, 7.762499999999783e-05, 7.723599999999789e-05, 7.756999999999903e-05, 7.755599999999946e-05, 7.761100000000173e-05, 7.70830000000021e-05, 7.787500000000155e-05, 7.752800000000032e-05, 7.71250000000008e-05, 7.709700000000166e-05, 7.712499999999733e-05, 7.741600000000029e-05, 7.804200000000039e-05, 7.794399999999993e-05, 7.751400000000075e-05, 7.723599999999789e-05, 7.755499999999999e-05, 7.74449999999989e-05, 7.773599999999839e-05, 7.777699999999763e-05, 7.741699999999976e-05, 7.792999999999689e-05, 7.780599999999971e-05, 7.823599999999889e-05, 7.797199999999907e-05, 7.777800000000057e-05, 7.722199999999832e-05, 7.712499999999733e-05, 7.713900000000037e-05, 7.72640000000005e-05, 7.804199999999692e-05, 7.747300000000151e-05, 7.731999999999878e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.631" endtime="20201029 12:45:00.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.627" endtime="20201029 12:45:00.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.638" endtime="20201029 12:45:00.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.636" endtime="20201029 12:45:00.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.635" endtime="20201029 12:45:00.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.275" endtime="20201029 12:45:00.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.275" endtime="20201029 12:45:00.658"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.667" endtime="20201029 12:45:00.688"></status>
</kw>
<msg timestamp="20201029 12:45:00.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.665" endtime="20201029 12:45:00.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.689" endtime="20201029 12:45:00.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.692" endtime="20201029 12:45:00.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.663" endtime="20201029 12:45:00.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.661" endtime="20201029 12:45:00.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.700" endtime="20201029 12:45:00.986"></status>
</kw>
<msg timestamp="20201029 12:45:00.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.699" endtime="20201029 12:45:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.990" endtime="20201029 12:45:00.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.998" endtime="20201029 12:45:01.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.696" endtime="20201029 12:45:01.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.695" endtime="20201029 12:45:01.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.005" level="INFO">${RESULT} = [{'diff': 7.879199999999767e-05}, {'diff': 7.912499999999933e-05}, {'diff': 7.841700000000076e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.875000000000243e-05}, {'diff': 7.824999999999846e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:01.002" endtime="20201029 12:45:01.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.009" level="INFO">${ACCURACY} = {'diff': [7.879199999999767e-05, 7.912499999999933e-05, 7.841700000000076e-05, 7.834699999999944e-05, 7.875000000000243e-05, 7.824999999999846e-05, 7.881899999999734e-05, 7.863900000000187e-05, 7.8458...</msg>
<status status="PASS" starttime="20201029 12:45:01.006" endtime="20201029 12:45:01.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.013" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.012" endtime="20201029 12:45:01.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.016" level="INFO">VALUE: [7.879199999999767e-05, 7.912499999999933e-05, 7.841700000000076e-05, 7.834699999999944e-05, 7.875000000000243e-05, 7.824999999999846e-05, 7.881899999999734e-05, 7.863900000000187e-05, 7.8458e-05, 7.891599999999832e-05, 7.913900000000237e-05, 7.898599999999964e-05, 7.861099999999926e-05, 7.905599999999749e-05, 7.919399999999771e-05, 7.913900000000237e-05, 7.888899999999865e-05, 7.904200000000139e-05, 7.879200000000114e-05, 7.898599999999964e-05, 7.886100000000298e-05, 7.868000000000111e-05, 7.843100000000033e-05, 7.91250000000028e-05, 7.880499999999777e-05, 7.855500000000099e-05, 7.905499999999802e-05, 7.824999999999846e-05, 7.854100000000142e-05, 7.873600000000286e-05, 7.899999999999921e-05, 7.880600000000071e-05, 7.849999999999871e-05, 7.870899999999972e-05, 7.850000000000218e-05, 7.845899999999947e-05, 7.854199999999742e-05, 7.893100000000083e-05, 7.882000000000028e-05, 7.843000000000086e-05, 7.906899999999759e-05, 7.89580000000005e-05, 7.861099999999926e-05, 7.834699999999944e-05, 7.89030000000017e-05, 7.834700000000291e-05, 7.888899999999865e-05, 7.847199999999957e-05, 7.906899999999759e-05, 7.866700000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.015" endtime="20201029 12:45:01.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.010" endtime="20201029 12:45:01.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.022" endtime="20201029 12:45:01.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.020" endtime="20201029 12:45:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.019" endtime="20201029 12:45:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.659" endtime="20201029 12:45:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.659" endtime="20201029 12:45:01.042"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.051" endtime="20201029 12:45:01.070"></status>
</kw>
<msg timestamp="20201029 12:45:01.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.049" endtime="20201029 12:45:01.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.072" endtime="20201029 12:45:01.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.074" endtime="20201029 12:45:01.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.047" endtime="20201029 12:45:01.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.045" endtime="20201029 12:45:01.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.083" endtime="20201029 12:45:01.368"></status>
</kw>
<msg timestamp="20201029 12:45:01.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:01.082" endtime="20201029 12:45:01.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:01.372" endtime="20201029 12:45:01.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.381" endtime="20201029 12:45:01.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.079" endtime="20201029 12:45:01.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.078" endtime="20201029 12:45:01.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.387" level="INFO">${RESULT} = [{'diff': 7.966699999999854e-05}, {'diff': 7.968099999999811e-05}, {'diff': 7.97909999999992e-05}, {'diff': 7.923699999999936e-05}, {'diff': 7.984800000000042e-05}, {'diff': 7.936100000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:01.384" endtime="20201029 12:45:01.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.392" level="INFO">${ACCURACY} = {'diff': [7.966699999999854e-05, 7.968099999999811e-05, 7.97909999999992e-05, 7.923699999999936e-05, 7.984800000000042e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.961100000000026e-05, 7.95830...</msg>
<status status="PASS" starttime="20201029 12:45:01.388" endtime="20201029 12:45:01.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.397" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.396" endtime="20201029 12:45:01.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.399" level="INFO">VALUE: [7.966699999999854e-05, 7.968099999999811e-05, 7.97909999999992e-05, 7.923699999999936e-05, 7.984800000000042e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.961100000000026e-05, 7.958300000000113e-05, 8.011100000000076e-05, 7.924999999999946e-05, 8.005599999999849e-05, 8.00840000000011e-05, 7.962499999999983e-05, 7.998600000000064e-05, 7.943099999999786e-05, 7.969500000000115e-05, 8.018100000000208e-05, 8.000000000000021e-05, 7.984700000000094e-05, 7.937499999999958e-05, 7.990299999999922e-05, 7.941599999999882e-05, 8.008300000000163e-05, 8.004099999999945e-05, 7.986100000000051e-05, 7.949999999999971e-05, 7.938899999999915e-05, 7.976399999999953e-05, 7.980600000000171e-05, 7.998600000000064e-05, 7.963900000000287e-05, 7.997300000000054e-05, 7.99169999999988e-05, 7.909799999999967e-05, 7.97909999999992e-05, 7.936199999999949e-05, 8.005599999999849e-05, 7.942999999999839e-05, 7.925000000000293e-05, 7.998600000000064e-05, 7.942999999999839e-05, 7.944399999999796e-05, 7.981899999999834e-05, 7.979199999999867e-05, 7.976399999999953e-05, 8.004199999999892e-05, 7.988900000000312e-05, 7.961100000000026e-05, 7.94169999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.398" endtime="20201029 12:45:01.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.393" endtime="20201029 12:45:01.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.404" endtime="20201029 12:45:01.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.403" endtime="20201029 12:45:01.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.401" endtime="20201029 12:45:01.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.043" endtime="20201029 12:45:01.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.043" endtime="20201029 12:45:01.425"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.433" endtime="20201029 12:45:01.453"></status>
</kw>
<msg timestamp="20201029 12:45:01.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.432" endtime="20201029 12:45:01.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.455" endtime="20201029 12:45:01.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.457" endtime="20201029 12:45:01.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.429" endtime="20201029 12:45:01.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.427" endtime="20201029 12:45:01.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.466" endtime="20201029 12:45:01.753"></status>
</kw>
<msg timestamp="20201029 12:45:01.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.465" endtime="20201029 12:45:01.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.757" endtime="20201029 12:45:01.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.765" endtime="20201029 12:45:01.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.462" endtime="20201029 12:45:01.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.460" endtime="20201029 12:45:01.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.772" level="INFO">${RESULT} = [{'diff': 8.038900000000015e-05}, {'diff': 8.080499999999977e-05}, {'diff': 8.073599999999792e-05}, {'diff': 8.026400000000003e-05}, {'diff': 8.059800000000117e-05}, {'diff': 8.05970000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:01.769" endtime="20201029 12:45:01.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.776" level="INFO">${ACCURACY} = {'diff': [8.038900000000015e-05, 8.080499999999977e-05, 8.073599999999792e-05, 8.026400000000003e-05, 8.059800000000117e-05, 8.05970000000017e-05, 8.070900000000172e-05, 8.120899999999875e-05, 8.08610...</msg>
<status status="PASS" starttime="20201029 12:45:01.773" endtime="20201029 12:45:01.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.780" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.779" endtime="20201029 12:45:01.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.783" level="INFO">VALUE: [8.038900000000015e-05, 8.080499999999977e-05, 8.073599999999792e-05, 8.026400000000003e-05, 8.059800000000117e-05, 8.05970000000017e-05, 8.070900000000172e-05, 8.120899999999875e-05, 8.086100000000151e-05, 8.105599999999949e-05, 8.106899999999959e-05, 8.095799999999903e-05, 8.033300000000188e-05, 8.105500000000002e-05, 8.06390000000004e-05, 8.07780000000001e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.116700000000004e-05, 8.050000000000071e-05, 8.037500000000058e-05, 8.069500000000215e-05, 8.084700000000195e-05, 8.081999999999881e-05, 8.076400000000053e-05, 8.104199999999992e-05, 8.069499999999868e-05, 8.106899999999959e-05, 8.062500000000083e-05, 8.06390000000004e-05, 8.088900000000065e-05, 8.02909999999997e-05, 8.075000000000096e-05, 8.120799999999928e-05, 8.055600000000246e-05, 8.05840000000016e-05, 8.037500000000058e-05, 8.111100000000177e-05, 8.111100000000177e-05, 8.084700000000195e-05, 8.066699999999954e-05, 8.062500000000083e-05, 8.104199999999992e-05, 8.066600000000007e-05, 8.104199999999992e-05, 8.091600000000032e-05, 8.034699999999798e-05, 8.015299999999947e-05, 8.080499999999977e-05, 8.099999999999774e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.781" endtime="20201029 12:45:01.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.777" endtime="20201029 12:45:01.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.788" endtime="20201029 12:45:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.786" endtime="20201029 12:45:01.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.785" endtime="20201029 12:45:01.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.426" endtime="20201029 12:45:01.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.425" endtime="20201029 12:45:01.808"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.817" endtime="20201029 12:45:01.837"></status>
</kw>
<msg timestamp="20201029 12:45:01.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.816" endtime="20201029 12:45:01.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.839" endtime="20201029 12:45:01.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.841" endtime="20201029 12:45:01.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.813" endtime="20201029 12:45:01.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.811" endtime="20201029 12:45:01.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.850" endtime="20201029 12:45:02.139"></status>
</kw>
<msg timestamp="20201029 12:45:02.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.849" endtime="20201029 12:45:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.143" endtime="20201029 12:45:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.151" endtime="20201029 12:45:02.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.846" endtime="20201029 12:45:02.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.844" endtime="20201029 12:45:02.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.158" level="INFO">${RESULT} = [{'diff': 8.126399999999756e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.111100000000177e-05}, {'diff': 8.204100000000145e-05}, {'diff': 8.201399999999831e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:02.155" endtime="20201029 12:45:02.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.162" level="INFO">${ACCURACY} = {'diff': [8.126399999999756e-05, 8.209699999999973e-05, 8.143000000000039e-05, 8.111100000000177e-05, 8.204100000000145e-05, 8.201399999999831e-05, 8.181900000000034e-05, 8.112500000000133e-05, 8.2181...</msg>
<status status="PASS" starttime="20201029 12:45:02.159" endtime="20201029 12:45:02.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.167" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.166" endtime="20201029 12:45:02.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.169" level="INFO">VALUE: [8.126399999999756e-05, 8.209699999999973e-05, 8.143000000000039e-05, 8.111100000000177e-05, 8.204100000000145e-05, 8.201399999999831e-05, 8.181900000000034e-05, 8.112500000000133e-05, 8.218100000000061e-05, 8.130599999999974e-05, 8.12780000000006e-05, 8.205600000000049e-05, 8.154200000000042e-05, 8.138900000000115e-05, 8.201400000000178e-05, 8.130599999999974e-05, 8.126400000000103e-05, 8.186099999999905e-05, 8.176399999999806e-05, 8.216600000000157e-05, 8.187500000000208e-05, 8.187500000000208e-05, 8.141699999999683e-05, 8.111100000000177e-05, 8.193100000000036e-05, 8.138900000000115e-05, 8.148600000000214e-05, 8.129200000000017e-05, 8.131999999999931e-05, 8.174999999999849e-05, 8.211199999999877e-05, 8.172199999999935e-05, 8.130500000000027e-05, 8.163800000000193e-05, 8.138900000000115e-05, 8.143000000000039e-05, 8.136099999999855e-05, 8.209699999999973e-05, 8.125000000000146e-05, 8.183400000000285e-05, 8.193100000000036e-05, 8.216699999999758e-05, 8.219500000000018e-05, 8.180600000000024e-05, 8.129200000000017e-05, 8.120899999999875e-05, 8.154200000000042e-05, 8.137500000000158e-05, 8.174999999999849e-05, 8.150000000000171e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.168" endtime="20201029 12:45:02.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.163" endtime="20201029 12:45:02.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.175" endtime="20201029 12:45:02.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.173" endtime="20201029 12:45:02.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.172" endtime="20201029 12:45:02.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.809" endtime="20201029 12:45:02.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.809" endtime="20201029 12:45:02.196"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.204" endtime="20201029 12:45:02.224"></status>
</kw>
<msg timestamp="20201029 12:45:02.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.203" endtime="20201029 12:45:02.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.225" endtime="20201029 12:45:02.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.228" endtime="20201029 12:45:02.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.200" endtime="20201029 12:45:02.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.198" endtime="20201029 12:45:02.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.237" endtime="20201029 12:45:02.523"></status>
</kw>
<msg timestamp="20201029 12:45:02.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:02.235" endtime="20201029 12:45:02.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:02.528" endtime="20201029 12:45:02.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.536" endtime="20201029 12:45:02.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.232" endtime="20201029 12:45:02.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.231" endtime="20201029 12:45:02.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.542" level="INFO">${RESULT} = [{'diff': 8.28330000000009e-05}, {'diff': 8.306900000000159e-05}, {'diff': 8.283400000000038e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.293100000000136e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:02.539" endtime="20201029 12:45:02.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.547" level="INFO">${ACCURACY} = {'diff': [8.28330000000009e-05, 8.306900000000159e-05, 8.283400000000038e-05, 8.273599999999992e-05, 8.248599999999967e-05, 8.293100000000136e-05, 8.238899999999869e-05, 8.254199999999795e-05, 8.24729...</msg>
<status status="PASS" starttime="20201029 12:45:02.543" endtime="20201029 12:45:02.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.552" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.551" endtime="20201029 12:45:02.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.554" level="INFO">VALUE: [8.28330000000009e-05, 8.306900000000159e-05, 8.283400000000038e-05, 8.273599999999992e-05, 8.248599999999967e-05, 8.293100000000136e-05, 8.238899999999869e-05, 8.254199999999795e-05, 8.247299999999957e-05, 8.272299999999982e-05, 8.297300000000007e-05, 8.319399999999824e-05, 8.274999999999949e-05, 8.26659999999986e-05, 8.213899999999844e-05, 8.28049999999983e-05, 8.22910000000017e-05, 8.255500000000152e-05, 8.28330000000009e-05, 8.237499999999912e-05, 8.312499999999987e-05, 8.279099999999873e-05, 8.312499999999987e-05, 8.312499999999987e-05, 8.287499999999962e-05, 8.212499999999887e-05, 8.256899999999762e-05, 8.259700000000023e-05, 8.276400000000253e-05, 8.243000000000139e-05, 8.229099999999823e-05, 8.258300000000066e-05, 8.218100000000061e-05, 8.248599999999967e-05, 8.273599999999992e-05, 8.308400000000063e-05, 8.244500000000043e-05, 8.317999999999867e-05, 8.270900000000025e-05, 8.274999999999949e-05, 8.244499999999697e-05, 8.229200000000117e-05, 8.292999999999842e-05, 8.290200000000275e-05, 8.226400000000203e-05, 8.286100000000005e-05, 8.318000000000214e-05, 8.236099999999955e-05, 8.22780000000016e-05, 8.306899999999812e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.553" endtime="20201029 12:45:02.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.548" endtime="20201029 12:45:02.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.565" endtime="20201029 12:45:02.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.564" endtime="20201029 12:45:02.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.563" endtime="20201029 12:45:02.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.196" endtime="20201029 12:45:02.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.196" endtime="20201029 12:45:02.586"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.595" endtime="20201029 12:45:02.614"></status>
</kw>
<msg timestamp="20201029 12:45:02.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.593" endtime="20201029 12:45:02.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.615" endtime="20201029 12:45:02.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.618" endtime="20201029 12:45:02.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.591" endtime="20201029 12:45:02.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.589" endtime="20201029 12:45:02.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.627" endtime="20201029 12:45:02.931"></status>
</kw>
<msg timestamp="20201029 12:45:02.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.625" endtime="20201029 12:45:02.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.941" endtime="20201029 12:45:02.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.961" endtime="20201029 12:45:02.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.623" endtime="20201029 12:45:02.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.621" endtime="20201029 12:45:02.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.971" level="INFO">${RESULT} = [{'diff': 8.32919999999987e-05}, {'diff': 8.372199999999788e-05}, {'diff': 8.394500000000193e-05}, {'diff': 8.357000000000156e-05}, {'diff': 8.334700000000098e-05}, {'diff': 8.348600000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:02.967" endtime="20201029 12:45:02.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.975" level="INFO">${ACCURACY} = {'diff': [8.32919999999987e-05, 8.372199999999788e-05, 8.394500000000193e-05, 8.357000000000156e-05, 8.334700000000098e-05, 8.348600000000067e-05, 8.406999999999859e-05, 8.305599999999802e-05, 8.36660...</msg>
<status status="PASS" starttime="20201029 12:45:02.972" endtime="20201029 12:45:02.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.980" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.979" endtime="20201029 12:45:02.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.982" level="INFO">VALUE: [8.32919999999987e-05, 8.372199999999788e-05, 8.394500000000193e-05, 8.357000000000156e-05, 8.334700000000098e-05, 8.348600000000067e-05, 8.406999999999859e-05, 8.305599999999802e-05, 8.366600000000307e-05, 8.41660000000001e-05, 8.392999999999942e-05, 8.355500000000252e-05, 8.398600000000117e-05, 8.386100000000105e-05, 8.400000000000074e-05, 8.331900000000184e-05, 8.330600000000174e-05, 8.351399999999981e-05, 8.348600000000067e-05, 8.326399999999956e-05, 8.384800000000095e-05, 8.402799999999988e-05, 8.337500000000012e-05, 8.324999999999999e-05, 8.355499999999905e-05, 8.409700000000173e-05, 8.394400000000246e-05, 8.33049999999988e-05, 8.32919999999987e-05, 8.337500000000012e-05, 8.36110000000008e-05, 8.366699999999908e-05, 8.36110000000008e-05, 8.386100000000105e-05, 8.324999999999999e-05, 8.34309999999984e-05, 8.343000000000239e-05, 8.332000000000131e-05, 8.338800000000021e-05, 8.323600000000042e-05, 8.387500000000062e-05, 8.338899999999969e-05, 8.359700000000123e-05, 8.398600000000117e-05, 8.356899999999862e-05, 8.375000000000049e-05, 8.326399999999956e-05, 8.340299999999926e-05, 8.36249999999969e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.981" endtime="20201029 12:45:02.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.976" endtime="20201029 12:45:02.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.988" endtime="20201029 12:45:03.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.986" endtime="20201029 12:45:03.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.985" endtime="20201029 12:45:03.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.587" endtime="20201029 12:45:03.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.586" endtime="20201029 12:45:03.008"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.018" endtime="20201029 12:45:03.040"></status>
</kw>
<msg timestamp="20201029 12:45:03.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.016" endtime="20201029 12:45:03.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.042" endtime="20201029 12:45:03.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.045" endtime="20201029 12:45:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.013" endtime="20201029 12:45:03.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.011" endtime="20201029 12:45:03.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.054" endtime="20201029 12:45:03.340"></status>
</kw>
<msg timestamp="20201029 12:45:03.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.053" endtime="20201029 12:45:03.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.344" endtime="20201029 12:45:03.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.353" endtime="20201029 12:45:03.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.050" endtime="20201029 12:45:03.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.048" endtime="20201029 12:45:03.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.360" level="INFO">${RESULT} = [{'diff': 8.472199999999888e-05}, {'diff': 8.43330000000024e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.491700000000033e-05}, {'diff': 8.483399999999891e-05}, {'diff': 8.454199999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:03.356" endtime="20201029 12:45:03.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.364" level="INFO">${ACCURACY} = {'diff': [8.472199999999888e-05, 8.43330000000024e-05, 8.42919999999997e-05, 8.491700000000033e-05, 8.483399999999891e-05, 8.454199999999995e-05, 8.49309999999999e-05, 8.49859999999987e-05, 8.42360000...</msg>
<status status="PASS" starttime="20201029 12:45:03.361" endtime="20201029 12:45:03.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.369" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.368" endtime="20201029 12:45:03.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.371" level="INFO">VALUE: [8.472199999999888e-05, 8.43330000000024e-05, 8.42919999999997e-05, 8.491700000000033e-05, 8.483399999999891e-05, 8.454199999999995e-05, 8.49309999999999e-05, 8.49859999999987e-05, 8.423600000000142e-05, 8.429100000000023e-05, 8.494399999999999e-05, 8.472200000000235e-05, 8.413899999999697e-05, 8.468000000000017e-05, 8.476400000000106e-05, 8.513899999999797e-05, 8.518100000000015e-05, 8.491699999999686e-05, 8.509799999999873e-05, 8.505500000000055e-05, 8.49309999999999e-05, 8.518100000000015e-05, 8.438900000000069e-05, 8.423600000000142e-05, 8.505500000000055e-05, 8.437500000000112e-05, 8.43049999999998e-05, 8.431899999999937e-05, 8.43469999999985e-05, 8.442999999999992e-05, 8.456899999999962e-05, 8.463900000000094e-05, 8.456999999999909e-05, 8.440300000000026e-05, 8.425000000000099e-05, 8.436200000000102e-05, 8.512500000000187e-05, 8.466700000000008e-05, 8.49859999999987e-05, 8.505500000000055e-05, 8.506900000000012e-05, 8.440300000000026e-05, 8.455500000000005e-05, 8.475000000000149e-05, 8.506900000000012e-05, 8.456899999999962e-05, 8.506999999999959e-05, 8.486099999999858e-05, 8.488899999999772e-05, 8.499999999999827e-05]</msg>
<status status="PASS" starttime="20201029 12:45:03.370" endtime="20201029 12:45:03.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.365" endtime="20201029 12:45:03.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.378" endtime="20201029 12:45:03.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.376" endtime="20201029 12:45:03.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.375" endtime="20201029 12:45:03.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.009" endtime="20201029 12:45:03.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.009" endtime="20201029 12:45:03.399"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.408" endtime="20201029 12:45:03.428"></status>
</kw>
<msg timestamp="20201029 12:45:03.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.406" endtime="20201029 12:45:03.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.430" endtime="20201029 12:45:03.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.432" endtime="20201029 12:45:03.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.404" endtime="20201029 12:45:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.402" endtime="20201029 12:45:03.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.442" endtime="20201029 12:45:03.728"></status>
</kw>
<msg timestamp="20201029 12:45:03.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.440" endtime="20201029 12:45:03.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.732" endtime="20201029 12:45:03.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.741" endtime="20201029 12:45:03.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.438" endtime="20201029 12:45:03.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.436" endtime="20201029 12:45:03.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.747" level="INFO">${RESULT} = [{'diff': 8.611099999999983e-05}, {'diff': 8.545899999999954e-05}, {'diff': 8.568100000000065e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.56799999999977e-05}, {'diff': 8.563900000000194e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:03.744" endtime="20201029 12:45:03.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.753" level="INFO">${ACCURACY} = {'diff': [8.611099999999983e-05, 8.545899999999954e-05, 8.568100000000065e-05, 8.545800000000006e-05, 8.56799999999977e-05, 8.563900000000194e-05, 8.597200000000013e-05, 8.543000000000092e-05, 8.58049...</msg>
<status status="PASS" starttime="20201029 12:45:03.748" endtime="20201029 12:45:03.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.757" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.756" endtime="20201029 12:45:03.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.760" level="INFO">VALUE: [8.611099999999983e-05, 8.545899999999954e-05, 8.568100000000065e-05, 8.545800000000006e-05, 8.56799999999977e-05, 8.563900000000194e-05, 8.597200000000013e-05, 8.543000000000092e-05, 8.580499999999783e-05, 8.618000000000167e-05, 8.581900000000087e-05, 8.520799999999981e-05, 8.572199999999988e-05, 8.54310000000004e-05, 8.536099999999908e-05, 8.554200000000095e-05, 8.61669999999981e-05, 8.555499999999758e-05, 8.582000000000034e-05, 8.569400000000074e-05, 8.519400000000024e-05, 8.605499999999808e-05, 8.568000000000117e-05, 8.531900000000037e-05, 8.529199999999723e-05, 8.591599999999838e-05, 8.549999999999877e-05, 8.513900000000144e-05, 8.605600000000102e-05, 8.573599999999945e-05, 8.568099999999718e-05, 8.541700000000083e-05, 8.538800000000221e-05, 8.558399999999966e-05, 8.600000000000274e-05, 8.605600000000102e-05, 8.618000000000167e-05, 8.524999999999852e-05, 8.526400000000156e-05, 8.616700000000158e-05, 8.569399999999727e-05, 8.59859999999997e-05, 8.557000000000009e-05, 8.609700000000026e-05, 8.557000000000009e-05, 8.520799999999981e-05, 8.538900000000169e-05, 8.569500000000022e-05, 8.570899999999979e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201029 12:45:03.759" endtime="20201029 12:45:03.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.753" endtime="20201029 12:45:03.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.765" endtime="20201029 12:45:03.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.764" endtime="20201029 12:45:03.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.762" endtime="20201029 12:45:03.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.400" endtime="20201029 12:45:03.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.399" endtime="20201029 12:45:03.786"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.795" endtime="20201029 12:45:03.815"></status>
</kw>
<msg timestamp="20201029 12:45:03.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.793" endtime="20201029 12:45:03.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.816" endtime="20201029 12:45:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.819" endtime="20201029 12:45:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.791" endtime="20201029 12:45:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.789" endtime="20201029 12:45:03.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.828" endtime="20201029 12:45:04.115"></status>
</kw>
<msg timestamp="20201029 12:45:04.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.827" endtime="20201029 12:45:04.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.119" endtime="20201029 12:45:04.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.128" endtime="20201029 12:45:04.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.824" endtime="20201029 12:45:04.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.822" endtime="20201029 12:45:04.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.135" level="INFO">${RESULT} = [{'diff': 8.665299999999904e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.620800000000081e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:04.131" endtime="20201029 12:45:04.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.139" level="INFO">${ACCURACY} = {'diff': [8.665299999999904e-05, 8.719399999999877e-05, 8.691699999999886e-05, 8.624999999999952e-05, 8.636100000000008e-05, 8.620800000000081e-05, 8.668100000000165e-05, 8.613899999999897e-05, 8.6431...</msg>
<status status="PASS" starttime="20201029 12:45:04.136" endtime="20201029 12:45:04.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.144" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.143" endtime="20201029 12:45:04.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.147" level="INFO">VALUE: [8.665299999999904e-05, 8.719399999999877e-05, 8.691699999999886e-05, 8.624999999999952e-05, 8.636100000000008e-05, 8.620800000000081e-05, 8.668100000000165e-05, 8.613899999999897e-05, 8.64310000000014e-05, 8.684800000000048e-05, 8.645800000000106e-05, 8.630499999999833e-05, 8.704199999999898e-05, 8.704099999999951e-05, 8.683299999999797e-05, 8.637499999999965e-05, 8.636100000000008e-05, 8.676399999999959e-05, 8.700000000000027e-05, 8.681999999999787e-05, 8.708400000000116e-05, 8.66249999999999e-05, 8.700000000000027e-05, 8.623699999999943e-05, 8.691699999999886e-05, 8.71799999999992e-05, 8.677799999999916e-05, 8.629099999999876e-05, 8.669400000000174e-05, 8.673599999999698e-05, 8.624999999999952e-05, 8.66249999999999e-05, 8.683300000000144e-05, 8.632000000000084e-05, 8.63470000000005e-05, 8.670799999999784e-05, 8.636100000000008e-05, 8.622200000000038e-05, 8.638899999999922e-05, 8.706999999999812e-05, 8.626400000000256e-05, 8.63189999999979e-05, 8.66799999999987e-05, 8.631900000000137e-05, 8.622200000000038e-05, 8.644400000000149e-05, 8.645800000000106e-05, 8.623599999999995e-05, 8.643099999999793e-05, 8.643099999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.145" endtime="20201029 12:45:04.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.140" endtime="20201029 12:45:04.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.152" endtime="20201029 12:45:04.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.150" endtime="20201029 12:45:04.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.149" endtime="20201029 12:45:04.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.787" endtime="20201029 12:45:04.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.786" endtime="20201029 12:45:04.173"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.182" endtime="20201029 12:45:04.204"></status>
</kw>
<msg timestamp="20201029 12:45:04.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.180" endtime="20201029 12:45:04.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.205" endtime="20201029 12:45:04.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.208" endtime="20201029 12:45:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.178" endtime="20201029 12:45:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.176" endtime="20201029 12:45:04.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.218" endtime="20201029 12:45:04.505"></status>
</kw>
<msg timestamp="20201029 12:45:04.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.216" endtime="20201029 12:45:04.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.509" endtime="20201029 12:45:04.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.518" endtime="20201029 12:45:04.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.213" endtime="20201029 12:45:04.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.211" endtime="20201029 12:45:04.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.525" level="INFO">${RESULT} = [{'diff': 8.752799999999991e-05}, {'diff': 8.819500000000272e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.756899999999915e-05}, {'diff': 8.711100000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:04.522" endtime="20201029 12:45:04.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.529" level="INFO">${ACCURACY} = {'diff': [8.752799999999991e-05, 8.819500000000272e-05, 8.736099999999761e-05, 8.76250000000009e-05, 8.756899999999915e-05, 8.711100000000083e-05, 8.805500000000008e-05, 8.729199999999923e-05, 8.79439...</msg>
<status status="PASS" starttime="20201029 12:45:04.526" endtime="20201029 12:45:04.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.534" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.533" endtime="20201029 12:45:04.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.537" level="INFO">VALUE: [8.752799999999991e-05, 8.819500000000272e-05, 8.736099999999761e-05, 8.76250000000009e-05, 8.756899999999915e-05, 8.711100000000083e-05, 8.805500000000008e-05, 8.729199999999923e-05, 8.794399999999952e-05, 8.76799999999997e-05, 8.811100000000183e-05, 8.779100000000026e-05, 8.823599999999848e-05, 8.737500000000065e-05, 8.76250000000009e-05, 8.81800000000002e-05, 8.726400000000009e-05, 8.815300000000054e-05, 8.76669999999996e-05, 8.788900000000072e-05, 8.818099999999968e-05, 8.715200000000006e-05, 8.79860000000017e-05, 8.722300000000086e-05, 8.713899999999997e-05, 8.723600000000095e-05, 8.777700000000069e-05, 8.725000000000052e-05, 8.74860000000012e-05, 8.768099999999918e-05, 8.779199999999973e-05, 8.776400000000059e-05, 8.751399999999687e-05, 8.76669999999996e-05, 8.818099999999968e-05, 8.793099999999943e-05, 8.791699999999986e-05, 8.713799999999702e-05, 8.773599999999798e-05, 8.791600000000038e-05, 8.79999999999978e-05, 8.805500000000008e-05, 8.816600000000063e-05, 8.737499999999718e-05, 8.754199999999948e-05, 8.806899999999965e-05, 8.711100000000083e-05, 8.797299999999814e-05, 8.809699999999879e-05, 8.787499999999768e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.535" endtime="20201029 12:45:04.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.530" endtime="20201029 12:45:04.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.546" endtime="20201029 12:45:04.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.544" endtime="20201029 12:45:04.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.541" endtime="20201029 12:45:04.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.174" endtime="20201029 12:45:04.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.173" endtime="20201029 12:45:04.567"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.576" endtime="20201029 12:45:04.597"></status>
</kw>
<msg timestamp="20201029 12:45:04.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.575" endtime="20201029 12:45:04.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.598" endtime="20201029 12:45:04.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.601" endtime="20201029 12:45:04.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.572" endtime="20201029 12:45:04.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.570" endtime="20201029 12:45:04.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.610" endtime="20201029 12:45:04.897"></status>
</kw>
<msg timestamp="20201029 12:45:04.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020581403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020670194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.609" endtime="20201029 12:45:04.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020581403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020670194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.901" endtime="20201029 12:45:04.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.910" endtime="20201029 12:45:04.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.606" endtime="20201029 12:45:04.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.604" endtime="20201029 12:45:04.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.917" level="INFO">${RESULT} = [{'diff': 8.879099999999779e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.904100000000151e-05}, {'diff': 8.893000000000095e-05}, {'diff': 8.854200000000048e-05}, {'diff': 8.876399999999812e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:04.913" endtime="20201029 12:45:04.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.922" level="INFO">${ACCURACY} = {'diff': [8.879099999999779e-05, 8.83189999999999e-05, 8.904100000000151e-05, 8.893000000000095e-05, 8.854200000000048e-05, 8.876399999999812e-05, 8.855600000000005e-05, 8.884800000000248e-05, 8.91800...</msg>
<status status="PASS" starttime="20201029 12:45:04.918" endtime="20201029 12:45:04.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.927" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.926" endtime="20201029 12:45:04.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.929" level="INFO">VALUE: [8.879099999999779e-05, 8.83189999999999e-05, 8.904100000000151e-05, 8.893000000000095e-05, 8.854200000000048e-05, 8.876399999999812e-05, 8.855600000000005e-05, 8.884800000000248e-05, 8.91800000000012e-05, 8.873600000000245e-05, 8.879100000000126e-05, 8.869499999999975e-05, 8.919499999999678e-05, 8.904200000000098e-05, 8.907000000000012e-05, 8.825000000000152e-05, 8.8638999999998e-05, 8.909699999999979e-05, 8.823599999999848e-05, 8.855500000000058e-05, 8.904200000000098e-05, 8.843099999999993e-05, 8.89999999999988e-05, 8.922299999999939e-05, 8.875000000000202e-05, 8.837500000000165e-05, 8.918100000000068e-05, 8.822299999999839e-05, 8.91389999999985e-05, 8.866699999999714e-05, 8.894400000000052e-05, 8.844400000000002e-05, 8.897199999999966e-05, 8.88190000000004e-05, 8.904100000000151e-05, 8.912499999999893e-05, 8.843099999999993e-05, 8.884699999999954e-05, 8.908399999999969e-05, 8.902800000000141e-05, 8.901399999999837e-05, 8.902799999999794e-05, 8.831999999999937e-05, 8.86120000000018e-05, 8.870799999999984e-05, 8.919400000000077e-05, 8.911099999999936e-05, 8.874999999999855e-05, 8.837499999999818e-05, 8.8638999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.928" endtime="20201029 12:45:04.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.923" endtime="20201029 12:45:04.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.935" endtime="20201029 12:45:04.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.933" endtime="20201029 12:45:04.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.932" endtime="20201029 12:45:04.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.568" endtime="20201029 12:45:04.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.567" endtime="20201029 12:45:04.956"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.965" endtime="20201029 12:45:04.986"></status>
</kw>
<msg timestamp="20201029 12:45:04.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.963" endtime="20201029 12:45:04.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.987" endtime="20201029 12:45:04.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.990" endtime="20201029 12:45:04.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.960" endtime="20201029 12:45:04.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.958" endtime="20201029 12:45:04.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.999" endtime="20201029 12:45:05.287"></status>
</kw>
<msg timestamp="20201029 12:45:05.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.997" endtime="20201029 12:45:05.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.291" endtime="20201029 12:45:05.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.300" endtime="20201029 12:45:05.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.995" endtime="20201029 12:45:05.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.993" endtime="20201029 12:45:05.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.307" level="INFO">${RESULT} = [{'diff': 8.988899999999925e-05}, {'diff': 8.998600000000023e-05}, {'diff': 8.966599999999866e-05}, {'diff': 8.93190000000009e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.993100000000143e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:05.303" endtime="20201029 12:45:05.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.311" level="INFO">${ACCURACY} = {'diff': [8.988899999999925e-05, 8.998600000000023e-05, 8.966599999999866e-05, 8.93190000000009e-05, 8.976399999999912e-05, 8.993100000000143e-05, 8.96250000000029e-05, 8.958400000000019e-05, 8.993100...</msg>
<status status="PASS" starttime="20201029 12:45:05.308" endtime="20201029 12:45:05.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.316" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.315" endtime="20201029 12:45:05.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.318" level="INFO">VALUE: [8.988899999999925e-05, 8.998600000000023e-05, 8.966599999999866e-05, 8.93190000000009e-05, 8.976399999999912e-05, 8.993100000000143e-05, 8.96250000000029e-05, 8.958400000000019e-05, 8.993100000000143e-05, 8.998600000000023e-05, 8.93060000000008e-05, 8.982000000000087e-05, 9.004199999999851e-05, 8.938900000000222e-05, 9.01519999999996e-05, 8.980500000000183e-05, 9.006899999999818e-05, 8.955500000000158e-05, 9.007000000000112e-05, 8.922199999999991e-05, 8.954200000000148e-05, 8.938900000000222e-05, 8.972200000000041e-05, 8.966699999999814e-05, 8.917999999999773e-05, 8.938799999999927e-05, 8.987499999999968e-05, 8.995800000000109e-05, 8.959699999999682e-05, 8.961099999999986e-05, 8.925000000000252e-05, 9.002799999999894e-05, 8.972200000000041e-05, 8.977800000000216e-05, 8.983400000000044e-05, 8.912499999999893e-05, 8.956999999999715e-05, 8.926300000000262e-05, 8.924999999999905e-05, 8.936099999999961e-05, 8.933300000000047e-05, 8.965299999999857e-05, 8.980499999999836e-05, 8.955500000000158e-05, 8.929099999999829e-05, 8.948599999999973e-05, 8.922199999999991e-05, 8.995799999999762e-05, 9.011100000000036e-05, 8.933399999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:45:05.317" endtime="20201029 12:45:05.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.312" endtime="20201029 12:45:05.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.324" endtime="20201029 12:45:05.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.322" endtime="20201029 12:45:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.321" endtime="20201029 12:45:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.957" endtime="20201029 12:45:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.956" endtime="20201029 12:45:05.345"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.354" endtime="20201029 12:45:05.374"></status>
</kw>
<msg timestamp="20201029 12:45:05.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.352" endtime="20201029 12:45:05.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.376" endtime="20201029 12:45:05.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.379" endtime="20201029 12:45:05.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.349" endtime="20201029 12:45:05.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.347" endtime="20201029 12:45:05.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.388" endtime="20201029 12:45:05.675"></status>
</kw>
<msg timestamp="20201029 12:45:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021213375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021303625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.387" endtime="20201029 12:45:05.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021213375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021303625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.679" endtime="20201029 12:45:05.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.688" endtime="20201029 12:45:05.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.384" endtime="20201029 12:45:05.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.382" endtime="20201029 12:45:05.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.695" level="INFO">${RESULT} = [{'diff': 9.025000000000005e-05}, {'diff': 9.037500000000018e-05}, {'diff': 9.030599999999833e-05}, {'diff': 9.079199999999926e-05}, {'diff': 9.094399999999905e-05}, {'diff': 9.082000000000187e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:05.691" endtime="20201029 12:45:05.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.699" level="INFO">${ACCURACY} = {'diff': [9.025000000000005e-05, 9.037500000000018e-05, 9.030599999999833e-05, 9.079199999999926e-05, 9.094399999999905e-05, 9.082000000000187e-05, 9.0945000000002e-05, 9.043100000000193e-05, 9.044399...</msg>
<status status="PASS" starttime="20201029 12:45:05.696" endtime="20201029 12:45:05.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.703" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.702" endtime="20201029 12:45:05.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.706" level="INFO">VALUE: [9.025000000000005e-05, 9.037500000000018e-05, 9.030599999999833e-05, 9.079199999999926e-05, 9.094399999999905e-05, 9.082000000000187e-05, 9.0945000000002e-05, 9.043100000000193e-05, 9.044399999999855e-05, 9.056899999999868e-05, 9.093099999999896e-05, 9.043000000000245e-05, 9.067999999999923e-05, 9.081899999999893e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.065299999999957e-05, 9.120799999999887e-05, 9.022200000000091e-05, 9.105599999999908e-05, 9.045900000000107e-05, 9.047200000000116e-05, 9.03199999999979e-05, 9.104199999999951e-05, 9.05000000000003e-05, 9.023699999999996e-05, 9.047200000000116e-05, 9.094399999999905e-05, 9.112500000000093e-05, 9.061100000000086e-05, 9.080499999999936e-05, 9.056999999999815e-05, 9.055599999999858e-05, 9.04450000000015e-05, 9.083300000000197e-05, 9.015300000000254e-05, 9.10000000000008e-05, 9.118099999999921e-05, 9.037500000000018e-05, 9.04870000000002e-05, 9.030500000000233e-05, 9.084699999999807e-05, 9.106899999999918e-05, 9.086100000000111e-05, 9.090299999999982e-05, 9.036099999999714e-05, 9.025000000000005e-05, 9.05000000000003e-05, 9.091699999999939e-05, 9.107000000000212e-05]</msg>
<status status="PASS" starttime="20201029 12:45:05.705" endtime="20201029 12:45:05.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.700" endtime="20201029 12:45:05.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.712" endtime="20201029 12:45:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.711" endtime="20201029 12:45:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.709" endtime="20201029 12:45:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.346" endtime="20201029 12:45:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.345" endtime="20201029 12:45:05.733"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.742" endtime="20201029 12:45:05.762"></status>
</kw>
<msg timestamp="20201029 12:45:05.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.741" endtime="20201029 12:45:05.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.764" endtime="20201029 12:45:05.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.766" endtime="20201029 12:45:05.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.738" endtime="20201029 12:45:05.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.736" endtime="20201029 12:45:05.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.776" endtime="20201029 12:45:06.062"></status>
</kw>
<msg timestamp="20201029 12:45:06.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.774" endtime="20201029 12:45:06.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.066" endtime="20201029 12:45:06.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.075" endtime="20201029 12:45:06.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.772" endtime="20201029 12:45:06.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.770" endtime="20201029 12:45:06.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.082" level="INFO">${RESULT} = [{'diff': 9.173599999999851e-05}, {'diff': 9.204200000000051e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.142999999999998e-05}, {'diff': 9.174999999999808e-05}, {'diff': 9.198599999999876e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:06.079" endtime="20201029 12:45:06.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.087" level="INFO">${ACCURACY} = {'diff': [9.173599999999851e-05, 9.204200000000051e-05, 9.1639000000001e-05, 9.142999999999998e-05, 9.174999999999808e-05, 9.198599999999876e-05, 9.19589999999991e-05, 9.15000000000013e-05, 9.21250000...</msg>
<status status="PASS" starttime="20201029 12:45:06.083" endtime="20201029 12:45:06.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.092" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.091" endtime="20201029 12:45:06.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.095" level="INFO">VALUE: [9.173599999999851e-05, 9.204200000000051e-05, 9.1639000000001e-05, 9.142999999999998e-05, 9.174999999999808e-05, 9.198599999999876e-05, 9.19589999999991e-05, 9.15000000000013e-05, 9.212500000000193e-05, 9.161099999999839e-05, 9.130599999999933e-05, 9.186099999999864e-05, 9.205500000000061e-05, 9.156899999999968e-05, 9.130499999999986e-05, 9.180499999999689e-05, 9.142999999999998e-05, 9.1639000000001e-05, 9.205500000000061e-05, 9.112499999999746e-05, 9.177800000000069e-05, 9.137499999999771e-05, 9.191599999999744e-05, 9.212499999999846e-05, 9.215300000000107e-05, 9.180599999999983e-05, 9.175000000000155e-05, 9.124999999999758e-05, 9.149999999999783e-05, 9.198599999999876e-05, 9.195799999999962e-05, 9.206900000000018e-05, 9.218100000000021e-05, 9.218099999999674e-05, 9.187499999999821e-05, 9.169499999999928e-05, 9.124999999999758e-05, 9.186100000000211e-05, 9.148699999999774e-05, 9.197299999999867e-05, 9.138800000000127e-05, 9.161100000000186e-05, 9.140200000000084e-05, 9.13199999999989e-05, 9.130499999999986e-05, 9.141600000000041e-05, 9.187499999999821e-05, 9.156899999999968e-05, 9.14719999999987e-05, 9.112500000000093e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.093" endtime="20201029 12:45:06.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.088" endtime="20201029 12:45:06.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.100" endtime="20201029 12:45:06.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.098" endtime="20201029 12:45:06.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.097" endtime="20201029 12:45:06.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.734" endtime="20201029 12:45:06.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.733" endtime="20201029 12:45:06.121"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.130" endtime="20201029 12:45:06.150"></status>
</kw>
<msg timestamp="20201029 12:45:06.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.128" endtime="20201029 12:45:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.151" endtime="20201029 12:45:06.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.154" endtime="20201029 12:45:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.125" endtime="20201029 12:45:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.123" endtime="20201029 12:45:06.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.163" endtime="20201029 12:45:06.451"></status>
</kw>
<msg timestamp="20201029 12:45:06.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.162" endtime="20201029 12:45:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.455" endtime="20201029 12:45:06.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.464" endtime="20201029 12:45:06.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.159" endtime="20201029 12:45:06.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.157" endtime="20201029 12:45:06.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.471" level="INFO">${RESULT} = [{'diff': 9.308300000000075e-05}, {'diff': 9.244500000000003e-05}, {'diff': 9.236099999999914e-05}, {'diff': 9.3026999999999e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.298599999999976e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:06.467" endtime="20201029 12:45:06.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.475" level="INFO">${ACCURACY} = {'diff': [9.308300000000075e-05, 9.244500000000003e-05, 9.236099999999914e-05, 9.3026999999999e-05, 9.280600000000083e-05, 9.298599999999976e-05, 9.229100000000129e-05, 9.298599999999976e-05, 9.229099...</msg>
<status status="PASS" starttime="20201029 12:45:06.472" endtime="20201029 12:45:06.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.480" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.479" endtime="20201029 12:45:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.482" level="INFO">VALUE: [9.308300000000075e-05, 9.244500000000003e-05, 9.236099999999914e-05, 9.3026999999999e-05, 9.280600000000083e-05, 9.298599999999976e-05, 9.229100000000129e-05, 9.298599999999976e-05, 9.229099999999782e-05, 9.274999999999908e-05, 9.266700000000114e-05, 9.299999999999933e-05, 9.244500000000003e-05, 9.305600000000108e-05, 9.28200000000004e-05, 9.255499999999764e-05, 9.262499999999896e-05, 9.317999999999826e-05, 9.312499999999946e-05, 9.304200000000151e-05, 9.273599999999951e-05, 9.262499999999896e-05, 9.2639000000002e-05, 9.231899999999696e-05, 9.319399999999783e-05, 9.280600000000083e-05, 9.266699999999767e-05, 9.287499999999921e-05, 9.255600000000058e-05, 9.291699999999792e-05, 9.223599999999901e-05, 9.245800000000012e-05, 9.230600000000033e-05, 9.254200000000101e-05, 9.312499999999946e-05, 9.258300000000025e-05, 9.273599999999951e-05, 9.28330000000005e-05, 9.305499999999814e-05, 9.295800000000062e-05, 9.257000000000015e-05, 9.261099999999939e-05, 9.261099999999939e-05, 9.323600000000001e-05, 9.280600000000083e-05, 9.274999999999908e-05, 9.226399999999815e-05, 9.244400000000055e-05, 9.234700000000304e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.481" endtime="20201029 12:45:06.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.476" endtime="20201029 12:45:06.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.488" endtime="20201029 12:45:06.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.486" endtime="20201029 12:45:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.485" endtime="20201029 12:45:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.122" endtime="20201029 12:45:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.121" endtime="20201029 12:45:06.509"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.518" endtime="20201029 12:45:06.541"></status>
</kw>
<msg timestamp="20201029 12:45:06.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.516" endtime="20201029 12:45:06.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.543" endtime="20201029 12:45:06.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.546" endtime="20201029 12:45:06.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.513" endtime="20201029 12:45:06.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.511" endtime="20201029 12:45:06.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.555" endtime="20201029 12:45:06.841"></status>
</kw>
<msg timestamp="20201029 12:45:06.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023718542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02381225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:06.554" endtime="20201029 12:45:06.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023718542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02381225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:06.846" endtime="20201029 12:45:06.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.855" endtime="20201029 12:45:06.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.551" endtime="20201029 12:45:06.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.549" endtime="20201029 12:45:06.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.861" level="INFO">${RESULT} = [{'diff': 9.370800000000137e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.354199999999854e-05}, {'diff': 9.400000000000033e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:06.858" endtime="20201029 12:45:06.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.866" level="INFO">${ACCURACY} = {'diff': [9.370800000000137e-05, 9.398600000000076e-05, 9.355600000000158e-05, 9.330600000000133e-05, 9.354199999999854e-05, 9.400000000000033e-05, 9.337499999999971e-05, 9.336199999999961e-05, 9.4181...</msg>
<status status="PASS" starttime="20201029 12:45:06.863" endtime="20201029 12:45:06.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.870" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.869" endtime="20201029 12:45:06.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.873" level="INFO">VALUE: [9.370800000000137e-05, 9.398600000000076e-05, 9.355600000000158e-05, 9.330600000000133e-05, 9.354199999999854e-05, 9.400000000000033e-05, 9.337499999999971e-05, 9.336199999999961e-05, 9.418100000000221e-05, 9.362499999999996e-05, 9.337499999999971e-05, 9.380500000000236e-05, 9.377800000000269e-05, 9.349999999999983e-05, 9.36529999999991e-05, 9.343100000000146e-05, 9.361100000000039e-05, 9.387500000000021e-05, 9.373600000000051e-05, 9.344500000000103e-05, 9.312499999999946e-05, 9.375000000000008e-05, 9.367999999999876e-05, 9.361100000000039e-05, 9.379100000000279e-05, 9.359700000000082e-05, 9.347199999999722e-05, 9.416699999999917e-05, 9.361100000000039e-05, 9.340299999999885e-05, 9.340299999999885e-05, 9.345800000000112e-05, 9.40139999999999e-05, 9.363899999999953e-05, 9.394500000000153e-05, 9.394400000000205e-05, 9.337499999999971e-05, 9.326399999999915e-05, 9.361100000000039e-05, 9.311099999999989e-05, 9.343000000000198e-05, 9.312499999999946e-05, 9.344400000000155e-05, 9.326399999999915e-05, 9.398600000000076e-05, 9.405599999999861e-05, 9.323600000000001e-05, 9.356999999999768e-05, 9.330599999999786e-05, 9.363800000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.872" endtime="20201029 12:45:06.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.867" endtime="20201029 12:45:06.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.879" endtime="20201029 12:45:06.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.878" endtime="20201029 12:45:06.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.876" endtime="20201029 12:45:06.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.509" endtime="20201029 12:45:06.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.509" endtime="20201029 12:45:06.900"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.909" endtime="20201029 12:45:06.929"></status>
</kw>
<msg timestamp="20201029 12:45:06.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.907" endtime="20201029 12:45:06.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.931" endtime="20201029 12:45:06.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.933" endtime="20201029 12:45:06.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.905" endtime="20201029 12:45:06.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.902" endtime="20201029 12:45:06.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.943" endtime="20201029 12:45:07.228"></status>
</kw>
<msg timestamp="20201029 12:45:07.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.941" endtime="20201029 12:45:07.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.232" endtime="20201029 12:45:07.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.241" endtime="20201029 12:45:07.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.939" endtime="20201029 12:45:07.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.937" endtime="20201029 12:45:07.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.248" level="INFO">${RESULT} = [{'diff': 9.509700000000232e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.469499999999881e-05}, {'diff': 9.483400000000197e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.463900000000053e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:07.245" endtime="20201029 12:45:07.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.253" level="INFO">${ACCURACY} = {'diff': [9.509700000000232e-05, 9.486100000000164e-05, 9.469499999999881e-05, 9.483400000000197e-05, 9.486100000000164e-05, 9.463900000000053e-05, 9.425000000000058e-05, 9.504200000000004e-05, 9.5082...</msg>
<status status="PASS" starttime="20201029 12:45:07.249" endtime="20201029 12:45:07.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.258" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.257" endtime="20201029 12:45:07.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.260" level="INFO">VALUE: [9.509700000000232e-05, 9.486100000000164e-05, 9.469499999999881e-05, 9.483400000000197e-05, 9.486100000000164e-05, 9.463900000000053e-05, 9.425000000000058e-05, 9.504200000000004e-05, 9.508299999999928e-05, 9.45140000000004e-05, 9.499999999999786e-05, 9.513900000000103e-05, 9.486100000000164e-05, 9.52079999999994e-05, 9.493000000000001e-05, 9.469499999999881e-05, 9.437500000000071e-05, 9.491699999999992e-05, 9.49590000000021e-05, 9.518099999999974e-05, 9.463800000000105e-05, 9.462500000000096e-05, 9.436100000000114e-05, 9.511099999999842e-05, 9.46660000000002e-05, 9.488900000000078e-05, 9.46660000000002e-05, 9.455499999999964e-05, 9.462500000000096e-05, 9.426400000000015e-05, 9.44859999999978e-05, 9.469499999999881e-05, 9.462500000000096e-05, 9.486200000000111e-05, 9.520800000000287e-05, 9.518000000000026e-05, 9.480499999999989e-05, 9.48469999999986e-05, 9.452799999999997e-05, 9.442999999999951e-05, 9.46940000000028e-05, 9.480599999999936e-05, 9.519499999999931e-05, 9.494499999999906e-05, 9.475000000000108e-05, 9.48469999999986e-05, 9.519499999999931e-05, 9.437500000000071e-05, 9.511200000000136e-05, 9.420899999999788e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.259" endtime="20201029 12:45:07.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.254" endtime="20201029 12:45:07.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.265" endtime="20201029 12:45:07.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.264" endtime="20201029 12:45:07.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.263" endtime="20201029 12:45:07.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.901" endtime="20201029 12:45:07.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.900" endtime="20201029 12:45:07.286"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.295" endtime="20201029 12:45:07.316"></status>
</kw>
<msg timestamp="20201029 12:45:07.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.294" endtime="20201029 12:45:07.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.317" endtime="20201029 12:45:07.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.320" endtime="20201029 12:45:07.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.291" endtime="20201029 12:45:07.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.289" endtime="20201029 12:45:07.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.330" endtime="20201029 12:45:07.616"></status>
</kw>
<msg timestamp="20201029 12:45:07.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.328" endtime="20201029 12:45:07.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.620" endtime="20201029 12:45:07.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.629" endtime="20201029 12:45:07.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.325" endtime="20201029 12:45:07.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.323" endtime="20201029 12:45:07.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.636" level="INFO">${RESULT} = [{'diff': 9.588799999999884e-05}, {'diff': 9.595800000000015e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.612500000000246e-05}, {'diff': 9.593099999999702e-05}, {'diff': 9.615299999999813e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:07.633" endtime="20201029 12:45:07.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.640" level="INFO">${ACCURACY} = {'diff': [9.588799999999884e-05, 9.595800000000015e-05, 9.593100000000049e-05, 9.612500000000246e-05, 9.593099999999702e-05, 9.615299999999813e-05, 9.574999999999861e-05, 9.605599999999714e-05, 9.6056...</msg>
<status status="PASS" starttime="20201029 12:45:07.637" endtime="20201029 12:45:07.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.645" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.644" endtime="20201029 12:45:07.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.648" level="INFO">VALUE: [9.588799999999884e-05, 9.595800000000015e-05, 9.593100000000049e-05, 9.612500000000246e-05, 9.593099999999702e-05, 9.615299999999813e-05, 9.574999999999861e-05, 9.605599999999714e-05, 9.605600000000061e-05, 9.59859999999993e-05, 9.593000000000101e-05, 9.554200000000054e-05, 9.604200000000104e-05, 9.577800000000122e-05, 9.606900000000071e-05, 9.579099999999785e-05, 9.580500000000089e-05, 9.523600000000201e-05, 9.568099999999677e-05, 9.555600000000011e-05, 9.604200000000104e-05, 9.54859999999988e-05, 9.607000000000018e-05, 9.520900000000235e-05, 9.523600000000201e-05, 9.619499999999684e-05, 9.538899999999781e-05, 9.616599999999823e-05, 9.599999999999886e-05, 9.574999999999861e-05, 9.569400000000033e-05, 9.523600000000201e-05, 9.537499999999824e-05, 9.558299999999978e-05, 9.545899999999913e-05, 9.544500000000303e-05, 9.597199999999972e-05, 9.561099999999892e-05, 9.554200000000054e-05, 9.597199999999972e-05, 9.599999999999886e-05, 9.594400000000058e-05, 9.568000000000076e-05, 9.580500000000089e-05, 9.56799999999973e-05, 9.529199999999682e-05, 9.562500000000196e-05, 9.537500000000171e-05, 9.61669999999977e-05, 9.543099999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.646" endtime="20201029 12:45:07.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.641" endtime="20201029 12:45:07.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.659" endtime="20201029 12:45:07.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.658" endtime="20201029 12:45:07.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.656" endtime="20201029 12:45:07.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.287" endtime="20201029 12:45:07.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.287" endtime="20201029 12:45:07.680"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.689" endtime="20201029 12:45:07.711"></status>
</kw>
<msg timestamp="20201029 12:45:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.688" endtime="20201029 12:45:07.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.713" endtime="20201029 12:45:07.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.715" endtime="20201029 12:45:07.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.685" endtime="20201029 12:45:07.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.683" endtime="20201029 12:45:07.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.725" endtime="20201029 12:45:08.011"></status>
</kw>
<msg timestamp="20201029 12:45:08.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021253889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.723" endtime="20201029 12:45:08.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021253889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.015" endtime="20201029 12:45:08.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.024" endtime="20201029 12:45:08.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.720" endtime="20201029 12:45:08.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.719" endtime="20201029 12:45:08.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.031" level="INFO">${RESULT} = [{'diff': 9.694500000000106e-05}, {'diff': 9.63470000000001e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.663900000000253e-05}, {'diff': 9.711199999999989e-05}, {'diff': 9.673600000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:08.028" endtime="20201029 12:45:08.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.036" level="INFO">${ACCURACY} = {'diff': [9.694500000000106e-05, 9.63470000000001e-05, 9.674999999999961e-05, 9.663900000000253e-05, 9.711199999999989e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.711100000000042e-05, 9.70139...</msg>
<status status="PASS" starttime="20201029 12:45:08.032" endtime="20201029 12:45:08.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.040" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.039" endtime="20201029 12:45:08.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.043" level="INFO">VALUE: [9.694500000000106e-05, 9.63470000000001e-05, 9.674999999999961e-05, 9.663900000000253e-05, 9.711199999999989e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.711100000000042e-05, 9.701399999999943e-05, 9.684699999999713e-05, 9.705599999999814e-05, 9.693100000000149e-05, 9.645800000000065e-05, 9.715299999999913e-05, 9.720900000000088e-05, 9.627799999999825e-05, 9.654200000000154e-05, 9.676400000000265e-05, 9.699999999999986e-05, 9.69860000000003e-05, 9.622199999999997e-05, 9.624999999999911e-05, 9.626400000000215e-05, 9.681900000000146e-05, 9.662499999999949e-05, 9.711100000000042e-05, 9.661099999999992e-05, 9.674999999999961e-05, 9.694500000000106e-05, 9.64859999999998e-05, 9.699999999999986e-05, 9.668100000000124e-05, 9.631899999999749e-05, 9.683300000000103e-05, 9.688899999999931e-05, 9.694399999999812e-05, 9.709699999999738e-05, 9.622199999999997e-05, 9.636099999999967e-05, 9.686100000000017e-05, 9.661099999999992e-05, 9.674999999999961e-05, 9.613899999999856e-05, 9.69860000000003e-05, 9.679199999999832e-05, 9.694400000000158e-05, 9.624999999999911e-05, 9.643000000000151e-05, 9.687499999999974e-05, 9.673600000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.041" endtime="20201029 12:45:08.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.036" endtime="20201029 12:45:08.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.049" endtime="20201029 12:45:08.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.047" endtime="20201029 12:45:08.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.046" endtime="20201029 12:45:08.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.681" endtime="20201029 12:45:08.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.680" endtime="20201029 12:45:08.070"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.079" endtime="20201029 12:45:08.100"></status>
</kw>
<msg timestamp="20201029 12:45:08.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.077" endtime="20201029 12:45:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.101" endtime="20201029 12:45:08.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.104" endtime="20201029 12:45:08.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.074" endtime="20201029 12:45:08.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.072" endtime="20201029 12:45:08.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.114" endtime="20201029 12:45:08.399"></status>
</kw>
<msg timestamp="20201029 12:45:08.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.112" endtime="20201029 12:45:08.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.404" endtime="20201029 12:45:08.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.412" endtime="20201029 12:45:08.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.109" endtime="20201029 12:45:08.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.107" endtime="20201029 12:45:08.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.419" level="INFO">${RESULT} = [{'diff': 9.784699999999813e-05}, {'diff': 9.792999999999955e-05}, {'diff': 9.761100000000092e-05}, {'diff': 9.815300000000013e-05}, {'diff': 9.777799999999975e-05}, {'diff': 9.78059999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:08.416" endtime="20201029 12:45:08.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.424" level="INFO">${ACCURACY} = {'diff': [9.784699999999813e-05, 9.792999999999955e-05, 9.761100000000092e-05, 9.815300000000013e-05, 9.777799999999975e-05, 9.78059999999989e-05, 9.775000000000061e-05, 9.730600000000186e-05, 9.74169...</msg>
<status status="PASS" starttime="20201029 12:45:08.420" endtime="20201029 12:45:08.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.429" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.428" endtime="20201029 12:45:08.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.432" level="INFO">VALUE: [9.784699999999813e-05, 9.792999999999955e-05, 9.761100000000092e-05, 9.815300000000013e-05, 9.777799999999975e-05, 9.78059999999989e-05, 9.775000000000061e-05, 9.730600000000186e-05, 9.741699999999895e-05, 9.747200000000122e-05, 9.727799999999925e-05, 9.781899999999899e-05, 9.809699999999838e-05, 9.725000000000011e-05, 9.816599999999676e-05, 9.806900000000271e-05, 9.79999999999974e-05, 9.79860000000013e-05, 9.779199999999932e-05, 9.756899999999874e-05, 9.805600000000261e-05, 9.712499999999999e-05, 9.815300000000013e-05, 9.800000000000086e-05, 9.738800000000034e-05, 9.731900000000196e-05, 9.773600000000104e-05, 9.750000000000036e-05, 9.761100000000092e-05, 9.750000000000036e-05, 9.737500000000024e-05, 9.741699999999895e-05, 9.788900000000031e-05, 9.755600000000211e-05, 9.818099999999927e-05, 9.74999999999969e-05, 9.726399999999968e-05, 9.812500000000099e-05, 9.761200000000039e-05, 9.738899999999981e-05, 9.805499999999967e-05, 9.798599999999782e-05, 9.744400000000208e-05, 9.770799999999843e-05, 9.797200000000172e-05, 9.743100000000199e-05, 9.78059999999989e-05, 9.786100000000117e-05, 9.777799999999975e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.430" endtime="20201029 12:45:08.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.425" endtime="20201029 12:45:08.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.437" endtime="20201029 12:45:08.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.435" endtime="20201029 12:45:08.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.434" endtime="20201029 12:45:08.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.071" endtime="20201029 12:45:08.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.070" endtime="20201029 12:45:08.458"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.468" endtime="20201029 12:45:08.489"></status>
</kw>
<msg timestamp="20201029 12:45:08.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.466" endtime="20201029 12:45:08.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.491" endtime="20201029 12:45:08.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.493" endtime="20201029 12:45:08.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.463" endtime="20201029 12:45:08.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.460" endtime="20201029 12:45:08.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.503" endtime="20201029 12:45:08.790"></status>
</kw>
<msg timestamp="20201029 12:45:08.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.501" endtime="20201029 12:45:08.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.795" endtime="20201029 12:45:08.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.803" endtime="20201029 12:45:08.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.498" endtime="20201029 12:45:08.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.497" endtime="20201029 12:45:08.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.810" level="INFO">${RESULT} = [{'diff': 9.906999999999971e-05}, {'diff': 9.880500000000042e-05}, {'diff': 9.894400000000012e-05}, {'diff': 9.86800000000003e-05}, {'diff': 9.901400000000143e-05}, {'diff': 9.823600000000154e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:08.807" endtime="20201029 12:45:08.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.815" level="INFO">${ACCURACY} = {'diff': [9.906999999999971e-05, 9.880500000000042e-05, 9.894400000000012e-05, 9.86800000000003e-05, 9.901400000000143e-05, 9.823600000000154e-05, 9.900000000000186e-05, 9.84860000000018e-05, 9.869399...</msg>
<status status="PASS" starttime="20201029 12:45:08.811" endtime="20201029 12:45:08.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.819" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.818" endtime="20201029 12:45:08.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.822" level="INFO">VALUE: [9.906999999999971e-05, 9.880500000000042e-05, 9.894400000000012e-05, 9.86800000000003e-05, 9.901400000000143e-05, 9.823600000000154e-05, 9.900000000000186e-05, 9.84860000000018e-05, 9.869399999999987e-05, 9.862499999999802e-05, 9.893100000000002e-05, 9.879200000000032e-05, 9.855599999999964e-05, 9.862500000000149e-05, 9.858299999999931e-05, 9.880500000000042e-05, 9.91800000000008e-05, 9.883299999999956e-05, 9.912499999999852e-05, 9.89999999999984e-05, 9.856999999999921e-05, 9.837499999999777e-05, 9.843099999999952e-05, 9.893100000000002e-05, 9.887499999999827e-05, 9.92219999999995e-05, 9.88479999999986e-05, 9.902700000000153e-05, 9.894400000000012e-05, 9.891600000000098e-05, 9.830499999999992e-05, 9.922200000000297e-05, 9.879200000000032e-05, 9.874999999999814e-05, 9.827800000000025e-05, 9.891700000000045e-05, 9.861099999999845e-05, 9.918100000000027e-05, 9.900000000000186e-05, 9.848599999999832e-05, 9.844499999999909e-05, 9.845899999999866e-05, 9.89999999999984e-05, 9.86800000000003e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.811099999999795e-05, 9.915300000000113e-05, 9.886100000000217e-05, 9.8334000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.820" endtime="20201029 12:45:08.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.815" endtime="20201029 12:45:08.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.827" endtime="20201029 12:45:08.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.825" endtime="20201029 12:45:08.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.824" endtime="20201029 12:45:08.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.459" endtime="20201029 12:45:08.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.458" endtime="20201029 12:45:08.848"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.857" endtime="20201029 12:45:08.879"></status>
</kw>
<msg timestamp="20201029 12:45:08.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.855" endtime="20201029 12:45:08.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.881" endtime="20201029 12:45:08.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.883" endtime="20201029 12:45:08.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.853" endtime="20201029 12:45:08.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.850" endtime="20201029 12:45:08.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.893" endtime="20201029 12:45:09.180"></status>
</kw>
<msg timestamp="20201029 12:45:09.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.891" endtime="20201029 12:45:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.184" endtime="20201029 12:45:09.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.193" endtime="20201029 12:45:09.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.889" endtime="20201029 12:45:09.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.887" endtime="20201029 12:45:09.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.199" level="INFO">${RESULT} = [{'diff': 0.00010012499999999952}, {'diff': 9.912499999999852e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.913900000000156e-05}, {'diff': 9.930499999999745e-05}, {'diff': 9.937500000000224e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:09.196" endtime="20201029 12:45:09.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.204" level="INFO">${ACCURACY} = {'diff': [0.00010012499999999952, 9.912499999999852e-05, 9.912499999999852e-05, 9.913900000000156e-05, 9.930499999999745e-05, 9.937500000000224e-05, 9.998599999999983e-05, 9.93609999999992e-05, 0.0001...</msg>
<status status="PASS" starttime="20201029 12:45:09.201" endtime="20201029 12:45:09.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.208" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.207" endtime="20201029 12:45:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.211" level="INFO">VALUE: [0.00010012499999999952, 9.912499999999852e-05, 9.912499999999852e-05, 9.913900000000156e-05, 9.930499999999745e-05, 9.937500000000224e-05, 9.998599999999983e-05, 9.93609999999992e-05, 0.0001000419999999981, 9.950000000000236e-05, 0.00010020800000000094, 9.96809999999973e-05, 9.980499999999795e-05, 9.969400000000087e-05, 9.956899999999727e-05, 9.974999999999914e-05, 9.938899999999834e-05, 9.9722e-05, 9.987499999999927e-05, 9.98060000000009e-05, 9.966699999999773e-05, 9.977800000000175e-05, 9.954200000000107e-05, 9.956900000000074e-05, 9.95419999999976e-05, 9.997200000000026e-05, 9.926400000000168e-05, 9.930500000000092e-05, 9.979200000000132e-05, 9.931899999999702e-05, 9.980499999999795e-05, 9.997299999999973e-05, 9.988900000000231e-05, 9.933399999999953e-05, 9.951399999999846e-05, 9.931999999999996e-05, 9.970800000000044e-05, 9.931900000000049e-05, 9.9722e-05, 9.980499999999795e-05, 9.994400000000112e-05, 9.940299999999791e-05, 9.976299999999924e-05, 9.993100000000102e-05, 0.00010005599999999767, 9.993099999999755e-05, 9.969500000000034e-05, 9.994500000000059e-05, 9.924999999999864e-05, 9.9722e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.209" endtime="20201029 12:45:09.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.205" endtime="20201029 12:45:09.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.217" endtime="20201029 12:45:09.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.216" endtime="20201029 12:45:09.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.214" endtime="20201029 12:45:09.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.849" endtime="20201029 12:45:09.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.848" endtime="20201029 12:45:09.238"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.247" endtime="20201029 12:45:09.268"></status>
</kw>
<msg timestamp="20201029 12:45:09.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.245" endtime="20201029 12:45:09.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.270" endtime="20201029 12:45:09.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.272" endtime="20201029 12:45:09.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.243" endtime="20201029 12:45:09.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.241" endtime="20201029 12:45:09.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.282" endtime="20201029 12:45:09.570"></status>
</kw>
<msg timestamp="20201029 12:45:09.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.280" endtime="20201029 12:45:09.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.574" endtime="20201029 12:45:09.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.583" endtime="20201029 12:45:09.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.278" endtime="20201029 12:45:09.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.276" endtime="20201029 12:45:09.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.589" level="INFO">${RESULT} = [{'diff': 0.00010031899999999802}, {'diff': 0.00010013900000000256}, {'diff': 0.00010055600000000164}, {'diff': 0.00010055599999999817}, {'diff': 0.00010113900000000009}, {'diff': 0.000100290999999998...</msg>
<status status="PASS" starttime="20201029 12:45:09.586" endtime="20201029 12:45:09.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.595" level="INFO">${ACCURACY} = {'diff': [0.00010031899999999802, 0.00010013900000000256, 0.00010055600000000164, 0.00010055599999999817, 0.00010113900000000009, 0.00010029099999999888, 0.00010045800000000119, 0.00010116599999999976...</msg>
<status status="PASS" starttime="20201029 12:45:09.591" endtime="20201029 12:45:09.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.599" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.598" endtime="20201029 12:45:09.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.602" level="INFO">VALUE: [0.00010031899999999802, 0.00010013900000000256, 0.00010055600000000164, 0.00010055599999999817, 0.00010113900000000009, 0.00010029099999999888, 0.00010045800000000119, 0.00010116599999999976, 0.00010020799999999747, 0.0001003060000000014, 0.00010108300000000181, 0.00010055600000000164, 0.00010105600000000214, 0.00010108400000000128, 0.0001011809999999988, 0.00010104200000000257, 0.00010059800000000035, 0.00010073600000000058, 0.00010083399999999756, 0.00010055500000000217, 0.0001008610000000007, 0.00010075000000000014, 0.00010038899999999934, 0.00010018100000000127, 0.00010075000000000014, 0.00010056999999999774, 0.0001003610000000002, 0.00010098600000000083, 0.00010101399999999996, 0.0001005410000000026, 0.00010054099999999913, 0.00010095800000000169, 0.00010040199999999944, 0.00010048599999999686, 0.00010112499999999705, 0.0001010549999999992, 0.0001008610000000007, 0.00010080599999999842, 0.0001011809999999988, 0.00010093099999999855, 0.00010061100000000045, 0.00010063800000000012, 0.00010044399999999815, 0.00010101399999999996, 0.00010037500000000324, 0.00010092999999999908, 0.00010030499999999845, 0.00010079199999999885, 0.00010043099999999805, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201029 12:45:09.600" endtime="20201029 12:45:09.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.596" endtime="20201029 12:45:09.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.607" endtime="20201029 12:45:09.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.605" endtime="20201029 12:45:09.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.604" endtime="20201029 12:45:09.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.239" endtime="20201029 12:45:09.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.238" endtime="20201029 12:45:09.628"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.637" endtime="20201029 12:45:09.658"></status>
</kw>
<msg timestamp="20201029 12:45:09.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.635" endtime="20201029 12:45:09.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.660" endtime="20201029 12:45:09.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.663" endtime="20201029 12:45:09.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.633" endtime="20201029 12:45:09.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.630" endtime="20201029 12:45:09.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.672" endtime="20201029 12:45:09.958"></status>
</kw>
<msg timestamp="20201029 12:45:09.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.670" endtime="20201029 12:45:09.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.963" endtime="20201029 12:45:09.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.971" endtime="20201029 12:45:09.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.668" endtime="20201029 12:45:09.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.666" endtime="20201029 12:45:09.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.978" level="INFO">${RESULT} = [{'diff': 0.00010163899999999712}, {'diff': 0.00010205599999999967}, {'diff': 0.0001019160000000005}, {'diff': 0.00010209699999999891}, {'diff': 0.0001021809999999998}, {'diff': 0.00010158299999999884...</msg>
<status status="PASS" starttime="20201029 12:45:09.975" endtime="20201029 12:45:09.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.982" level="INFO">${ACCURACY} = {'diff': [0.00010163899999999712, 0.00010205599999999967, 0.0001019160000000005, 0.00010209699999999891, 0.0001021809999999998, 0.00010158299999999884, 0.00010136099999999773, 0.00010116699999999923, ...</msg>
<status status="PASS" starttime="20201029 12:45:09.979" endtime="20201029 12:45:09.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.987" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.986" endtime="20201029 12:45:09.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.989" level="INFO">VALUE: [0.00010163899999999712, 0.00010205599999999967, 0.0001019160000000005, 0.00010209699999999891, 0.0001021809999999998, 0.00010158299999999884, 0.00010136099999999773, 0.00010116699999999923, 0.00010113900000000009, 0.00010201400000000097, 0.00010147199999999829, 0.0001020550000000002, 0.00010148599999999786, 0.00010143100000000252, 0.00010144400000000262, 0.00010141699999999948, 0.00010106999999999824, 0.00010126400000000021, 0.0001018749999999978, 0.00010140199999999697, 0.00010198600000000183, 0.00010197200000000226, 0.00010159700000000188, 0.00010129199999999935, 0.00010190300000000041, 0.00010179200000000332, 0.00010180599999999942, 0.00010195899999999869, 0.00010194499999999912, 0.00010137500000000077, 0.00010147300000000123, 0.0001021939999999999, 0.00010201400000000097, 0.00010142999999999958, 0.0001022359999999986, 0.00010181899999999952, 0.00010195799999999922, 0.0001016809999999993, 0.00010179199999999985, 0.00010112500000000052, 0.00010124999999999718, 0.00010152700000000056, 0.00010170799999999897, 0.00010155599999999917, 0.0001021809999999998, 0.00010180499999999995, 0.0001021939999999999, 0.00010173600000000158, 0.0001012359999999976, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201029 12:45:09.988" endtime="20201029 12:45:09.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.983" endtime="20201029 12:45:09.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.995" endtime="20201029 12:45:10.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.993" endtime="20201029 12:45:10.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.992" endtime="20201029 12:45:10.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.629" endtime="20201029 12:45:10.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.628" endtime="20201029 12:45:10.016"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.025" endtime="20201029 12:45:10.049"></status>
</kw>
<msg timestamp="20201029 12:45:10.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.023" endtime="20201029 12:45:10.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.050" endtime="20201029 12:45:10.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.053" endtime="20201029 12:45:10.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.020" endtime="20201029 12:45:10.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.018" endtime="20201029 12:45:10.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.062" endtime="20201029 12:45:10.348"></status>
</kw>
<msg timestamp="20201029 12:45:10.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02394125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:10.061" endtime="20201029 12:45:10.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02394125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:10.353" endtime="20201029 12:45:10.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.361" endtime="20201029 12:45:10.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.058" endtime="20201029 12:45:10.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.056" endtime="20201029 12:45:10.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.368" level="INFO">${RESULT} = [{'diff': 0.00010295800000000022}, {'diff': 0.00010229200000000035}, {'diff': 0.00010243100000000005}, {'diff': 0.00010315299999999819}, {'diff': 0.00010236099999999873}, {'diff': 0.000102500000000001...</msg>
<status status="PASS" starttime="20201029 12:45:10.365" endtime="20201029 12:45:10.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.372" level="INFO">${ACCURACY} = {'diff': [0.00010295800000000022, 0.00010229200000000035, 0.00010243100000000005, 0.00010315299999999819, 0.00010236099999999873, 0.0001025000000000019, 0.0001027359999999991, 0.00010234799999999863, ...</msg>
<status status="PASS" starttime="20201029 12:45:10.369" endtime="20201029 12:45:10.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.377" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.376" endtime="20201029 12:45:10.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.379" level="INFO">VALUE: [0.00010295800000000022, 0.00010229200000000035, 0.00010243100000000005, 0.00010315299999999819, 0.00010236099999999873, 0.0001025000000000019, 0.0001027359999999991, 0.00010234799999999863, 0.00010318000000000133, 0.0001023749999999983, 0.00010295800000000022, 0.00010254100000000113, 0.00010301400000000197, 0.00010273699999999858, 0.00010212499999999805, 0.00010224999999999818, 0.00010279200000000085, 0.0001023749999999983, 0.00010229199999999689, 0.00010213900000000109, 0.00010268099999999683, 0.00010297199999999979, 0.00010258299999999984, 0.00010266600000000126, 0.00010270799999999997, 0.00010230500000000045, 0.00010241700000000048, 0.00010294500000000012, 0.00010240200000000144, 0.00010279199999999739, 0.00010291699999999751, 0.00010277700000000181, 0.00010261099999999898, 0.00010263800000000212, 0.00010230500000000045, 0.00010261099999999898, 0.0001030550000000012, 0.00010227800000000078, 0.00010213900000000109, 0.0001025420000000006, 0.0001031810000000008, 0.00010249999999999843, 0.00010234699999999916, 0.00010304099999999816, 0.00010280600000000042, 0.0001028749999999988, 0.00010305499999999773, 0.00010261099999999898, 0.00010312499999999905, 0.00010261100000000245]</msg>
<status status="PASS" starttime="20201029 12:45:10.378" endtime="20201029 12:45:10.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.373" endtime="20201029 12:45:10.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.385" endtime="20201029 12:45:10.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.384" endtime="20201029 12:45:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.383" endtime="20201029 12:45:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.017" endtime="20201029 12:45:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.016" endtime="20201029 12:45:10.406"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.415" endtime="20201029 12:45:10.436"></status>
</kw>
<msg timestamp="20201029 12:45:10.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.414" endtime="20201029 12:45:10.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.438" endtime="20201029 12:45:10.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.441" endtime="20201029 12:45:10.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.411" endtime="20201029 12:45:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.409" endtime="20201029 12:45:10.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.450" endtime="20201029 12:45:10.736"></status>
</kw>
<msg timestamp="20201029 12:45:10.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.448" endtime="20201029 12:45:10.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.741" endtime="20201029 12:45:10.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.749" endtime="20201029 12:45:10.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.446" endtime="20201029 12:45:10.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.444" endtime="20201029 12:45:10.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.756" level="INFO">${RESULT} = [{'diff': 0.00010412500000000005}, {'diff': 0.00010348599999999986}, {'diff': 0.00010411100000000048}, {'diff': 0.00010343099999999758}, {'diff': 0.00010341700000000148}, {'diff': 0.000104026999999999...</msg>
<status status="PASS" starttime="20201029 12:45:10.753" endtime="20201029 12:45:10.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.761" level="INFO">${ACCURACY} = {'diff': [0.00010412500000000005, 0.00010348599999999986, 0.00010411100000000048, 0.00010343099999999758, 0.00010341700000000148, 0.00010402699999999959, 0.0001040559999999982, 0.0001033749999999993, ...</msg>
<status status="PASS" starttime="20201029 12:45:10.757" endtime="20201029 12:45:10.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.766" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.764" endtime="20201029 12:45:10.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.768" level="INFO">VALUE: [0.00010412500000000005, 0.00010348599999999986, 0.00010411100000000048, 0.00010343099999999758, 0.00010341700000000148, 0.00010402699999999959, 0.0001040559999999982, 0.0001033749999999993, 0.00010381900000000152, 0.0001035000000000029, 0.000103513999999999, 0.00010359700000000041, 0.00010408299999999787, 0.00010343000000000158, 0.00010357000000000074, 0.00010380599999999796, 0.00010405600000000167, 0.00010324999999999918, 0.00010372300000000001, 0.0001040550000000022, 0.00010405600000000167, 0.0001041940000000019, 0.00010340300000000191, 0.00010367999999999836, 0.00010393000000000208, 0.00010419399999999843, 0.0001037079999999975, 0.00010374999999999968, 0.00010356999999999728, 0.00010336099999999973, 0.00010322299999999951, 0.00010405600000000167, 0.00010342999999999811, 0.0001039160000000025, 0.00010331900000000102, 0.00010365299999999869, 0.00010362500000000302, 0.00010338899999999887, 0.00010398600000000036, 0.00010363899999999912, 0.00010349999999999943, 0.00010355600000000117, 0.00010340300000000191, 0.00010319399999999743, 0.00010329200000000135, 0.00010418099999999833, 0.00010401300000000002, 0.00010331900000000102, 0.00010330500000000145, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201029 12:45:10.767" endtime="20201029 12:45:10.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.762" endtime="20201029 12:45:10.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.773" endtime="20201029 12:45:10.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.772" endtime="20201029 12:45:10.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.771" endtime="20201029 12:45:10.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.407" endtime="20201029 12:45:10.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.407" endtime="20201029 12:45:10.794"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.803" endtime="20201029 12:45:10.824"></status>
</kw>
<msg timestamp="20201029 12:45:10.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.802" endtime="20201029 12:45:10.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.826" endtime="20201029 12:45:10.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.828" endtime="20201029 12:45:10.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.799" endtime="20201029 12:45:10.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.797" endtime="20201029 12:45:10.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.838" endtime="20201029 12:45:11.125"></status>
</kw>
<msg timestamp="20201029 12:45:11.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.836" endtime="20201029 12:45:11.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.129" endtime="20201029 12:45:11.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.138" endtime="20201029 12:45:11.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.834" endtime="20201029 12:45:11.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.832" endtime="20201029 12:45:11.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.144" level="INFO">${RESULT} = [{'diff': 0.00010495899999999822}, {'diff': 0.00010501399999999703}, {'diff': 0.00010512500000000105}, {'diff': 0.00010442999999999911}, {'diff': 0.00010447199999999782}, {'diff': 0.000104138999999999...</msg>
<status status="PASS" starttime="20201029 12:45:11.141" endtime="20201029 12:45:11.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.148" level="INFO">${ACCURACY} = {'diff': [0.00010495899999999822, 0.00010501399999999703, 0.00010512500000000105, 0.00010442999999999911, 0.00010447199999999782, 0.00010413899999999962, 0.0001045689999999988, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201029 12:45:11.145" endtime="20201029 12:45:11.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.153" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.152" endtime="20201029 12:45:11.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.156" level="INFO">VALUE: [0.00010495899999999822, 0.00010501399999999703, 0.00010512500000000105, 0.00010442999999999911, 0.00010447199999999782, 0.00010413899999999962, 0.0001045689999999988, 0.0001042360000000006, 0.00010518099999999933, 0.00010518099999999933, 0.0001050140000000005, 0.0001051810000000028, 0.00010494399999999918, 0.00010430600000000192, 0.00010492999999999961, 0.00010444399999999868, 0.00010430499999999898, 0.00010499999999999746, 0.00010442999999999911, 0.00010498599999999789, 0.00010441699999999901, 0.00010488900000000037, 0.00010457000000000174, 0.0001042499999999967, 0.00010426300000000027, 0.00010436100000000073, 0.00010479099999999991, 0.00010492999999999961, 0.00010519399999999943, 0.00010440199999999997, 0.00010491699999999951, 0.00010461100000000098, 0.00010481999999999853, 0.0001047079999999985, 0.00010462500000000055, 0.000104514, 0.00010461100000000098, 0.0001045559999999987, 0.00010517999999999986, 0.00010504100000000016, 0.00010494399999999918, 0.00010505499999999973, 0.00010431899999999855, 0.00010497200000000179, 0.0001050559999999992, 0.00010463899999999665, 0.0001051949999999989, 0.00010494500000000212, 0.00010454199999999914, 0.00010475000000000068]</msg>
<status status="PASS" starttime="20201029 12:45:11.154" endtime="20201029 12:45:11.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.149" endtime="20201029 12:45:11.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.161" endtime="20201029 12:45:11.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.159" endtime="20201029 12:45:11.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.158" endtime="20201029 12:45:11.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.795" endtime="20201029 12:45:11.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.795" endtime="20201029 12:45:11.182"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.191" endtime="20201029 12:45:11.213"></status>
</kw>
<msg timestamp="20201029 12:45:11.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.189" endtime="20201029 12:45:11.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.215" endtime="20201029 12:45:11.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.217" endtime="20201029 12:45:11.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.187" endtime="20201029 12:45:11.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.184" endtime="20201029 12:45:11.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.227" endtime="20201029 12:45:11.514"></status>
</kw>
<msg timestamp="20201029 12:45:11.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.225" endtime="20201029 12:45:11.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.519" endtime="20201029 12:45:11.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.527" endtime="20201029 12:45:11.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.223" endtime="20201029 12:45:11.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.221" endtime="20201029 12:45:11.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.534" level="INFO">${RESULT} = [{'diff': 0.0001057079999999995}, {'diff': 0.00010604200000000064}, {'diff': 0.00010575000000000168}, {'diff': 0.0001060560000000002}, {'diff': 0.00010580599999999996}, {'diff': 0.00010522300000000151...</msg>
<status status="PASS" starttime="20201029 12:45:11.531" endtime="20201029 12:45:11.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.538" level="INFO">${ACCURACY} = {'diff': [0.0001057079999999995, 0.00010604200000000064, 0.00010575000000000168, 0.0001060560000000002, 0.00010580599999999996, 0.00010522300000000151, 0.0001058889999999979, 0.00010618000000000086, 0...</msg>
<status status="PASS" starttime="20201029 12:45:11.535" endtime="20201029 12:45:11.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.543" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.542" endtime="20201029 12:45:11.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.545" level="INFO">VALUE: [0.0001057079999999995, 0.00010604200000000064, 0.00010575000000000168, 0.0001060560000000002, 0.00010580599999999996, 0.00010522300000000151, 0.0001058889999999979, 0.00010618000000000086, 0.00010537499999999783, 0.00010568000000000036, 0.00010554100000000066, 0.00010580500000000048, 0.00010568099999999983, 0.00010544500000000262, 0.0001058750000000018, 0.00010548599999999839, 0.00010527699999999737, 0.00010552700000000109, 0.00010599999999999846, 0.00010512500000000105, 0.00010594399999999671, 0.00010568000000000036, 0.00010579100000000091, 0.00010555600000000318, 0.00010561099999999851, 0.00010576399999999778, 0.00010593100000000008, 0.00010559799999999842, 0.00010548599999999839, 0.00010562499999999808, 0.00010575000000000168, 0.00010579200000000039, 0.00010598599999999889, 0.0001057499999999982, 0.00010608299999999987, 0.00010598599999999889, 0.00010575000000000168, 0.00010593100000000008, 0.00010587499999999833, 0.00010595899999999922, 0.00010523599999999814, 0.00010587499999999833, 0.00010590200000000147, 0.00010580599999999996, 0.00010555500000000023, 0.00010608299999999987, 0.00010543000000000011, 0.00010529100000000041, 0.0001060690000000003, 0.00010608299999999987]</msg>
<status status="PASS" starttime="20201029 12:45:11.544" endtime="20201029 12:45:11.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.539" endtime="20201029 12:45:11.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.551" endtime="20201029 12:45:11.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.550" endtime="20201029 12:45:11.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.549" endtime="20201029 12:45:11.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.183" endtime="20201029 12:45:11.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.182" endtime="20201029 12:45:11.572"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.581" endtime="20201029 12:45:11.602"></status>
</kw>
<msg timestamp="20201029 12:45:11.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.580" endtime="20201029 12:45:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.604" endtime="20201029 12:45:11.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.606" endtime="20201029 12:45:11.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.577" endtime="20201029 12:45:11.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.575" endtime="20201029 12:45:11.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.616" endtime="20201029 12:45:11.902"></status>
</kw>
<msg timestamp="20201029 12:45:11.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.614" endtime="20201029 12:45:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.907" endtime="20201029 12:45:11.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.915" endtime="20201029 12:45:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.612" endtime="20201029 12:45:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.610" endtime="20201029 12:45:11.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.922" level="INFO">${RESULT} = [{'diff': 0.00010713899999999915}, {'diff': 0.00010638900000000187}, {'diff': 0.00010705599999999774}, {'diff': 0.0001070690000000013}, {'diff': 0.00010643100000000058}, {'diff': 0.0001070419999999981...</msg>
<status status="PASS" starttime="20201029 12:45:11.919" endtime="20201029 12:45:11.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.927" level="INFO">${ACCURACY} = {'diff': [0.00010713899999999915, 0.00010638900000000187, 0.00010705599999999774, 0.0001070690000000013, 0.00010643100000000058, 0.00010704199999999817, 0.00010658399999999985, 0.00010701299999999955,...</msg>
<status status="PASS" starttime="20201029 12:45:11.923" endtime="20201029 12:45:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.932" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.931" endtime="20201029 12:45:11.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.934" level="INFO">VALUE: [0.00010713899999999915, 0.00010638900000000187, 0.00010705599999999774, 0.0001070690000000013, 0.00010643100000000058, 0.00010704199999999817, 0.00010658399999999985, 0.00010701299999999955, 0.00010669399999999746, 0.00010630500000000098, 0.00010680500000000148, 0.00010686100000000323, 0.00010701399999999903, 0.00010655599999999724, 0.000106208, 0.00010649999999999896, 0.0001070279999999986, 0.00010711100000000001, 0.00010704200000000164, 0.00010701399999999903, 0.00010673599999999964, 0.00010701399999999903, 0.00010623599999999914, 0.0001067499999999992, 0.00010694399999999771, 0.00010637499999999883, 0.00010718099999999786, 0.00010627799999999785, 0.00010720900000000047, 0.00010691699999999804, 0.00010712499999999958, 0.0001067499999999992, 0.00010647199999999982, 0.00010712500000000305, 0.00010666600000000179, 0.00010681900000000105, 0.00010697200000000032, 0.00010680499999999801, 0.00010630600000000046, 0.0001062499999999987, 0.0001063339999999996, 0.0001067499999999992, 0.0001070140000000025, 0.00010666700000000126, 0.0001067080000000005, 0.00010693000000000161, 0.00010694400000000118, 0.00010686099999999976, 0.00010687499999999933, 0.00010701399999999903]</msg>
<status status="PASS" starttime="20201029 12:45:11.933" endtime="20201029 12:45:11.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.928" endtime="20201029 12:45:11.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.940" endtime="20201029 12:45:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.938" endtime="20201029 12:45:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.937" endtime="20201029 12:45:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.573" endtime="20201029 12:45:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.573" endtime="20201029 12:45:11.960"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.970" endtime="20201029 12:45:11.991"></status>
</kw>
<msg timestamp="20201029 12:45:11.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.968" endtime="20201029 12:45:11.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.993" endtime="20201029 12:45:11.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.996" endtime="20201029 12:45:11.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.965" endtime="20201029 12:45:11.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.963" endtime="20201029 12:45:11.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.005" endtime="20201029 12:45:12.292"></status>
</kw>
<msg timestamp="20201029 12:45:12.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.003" endtime="20201029 12:45:12.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.296" endtime="20201029 12:45:12.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.305" endtime="20201029 12:45:12.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.001" endtime="20201029 12:45:12.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.999" endtime="20201029 12:45:12.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.311" level="INFO">${RESULT} = [{'diff': 0.00010811100000000101}, {'diff': 0.00010772200000000107}, {'diff': 0.00010706899999999783}, {'diff': 0.00010798600000000089}, {'diff': 0.00010784700000000119}, {'diff': 0.000107681000000001...</msg>
<status status="PASS" starttime="20201029 12:45:12.308" endtime="20201029 12:45:12.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:12.316" level="INFO">${ACCURACY} = {'diff': [0.00010811100000000101, 0.00010772200000000107, 0.00010706899999999783, 0.00010798600000000089, 0.00010784700000000119, 0.00010768100000000183, 0.0001080560000000022, 0.00010743099999999811,...</msg>
<status status="PASS" starttime="20201029 12:45:12.312" endtime="20201029 12:45:12.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.320" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:45:12.319" endtime="20201029 12:45:12.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.323" level="INFO">VALUE: [0.00010811100000000101, 0.00010772200000000107, 0.00010706899999999783, 0.00010798600000000089, 0.00010784700000000119, 0.00010768100000000183, 0.0001080560000000022, 0.00010743099999999811, 0.00010763899999999965, 0.00010751300000000005, 0.00010761099999999704, 0.0001074019999999995, 0.00010794400000000218, 0.0001073889999999994, 0.00010761099999999704, 0.00010734700000000069, 0.0001080829999999984, 0.00010762500000000008, 0.00010726399999999928, 0.00010744499999999768, 0.0001073889999999994, 0.00010723600000000014, 0.00010793099999999861, 0.00010819400000000243, 0.0001073889999999994, 0.00010791700000000251, 0.00010727799999999885, 0.00010794400000000218, 0.00010792999999999914, 0.0001073889999999994, 0.00010811099999999754, 0.00010707000000000078, 0.00010812499999999711, 0.00010800000000000046, 0.00010754199999999867, 0.00010795799999999828, 0.00010727800000000232, 0.00010780500000000248, 0.00010787500000000033, 0.00010783299999999815, 0.00010766600000000279, 0.00010779199999999892, 0.00010740299999999897, 0.00010790299999999947, 0.00010722200000000057, 0.00010751399999999953, 0.00010787499999999686, 0.00010782000000000153, 0.00010777799999999935, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201029 12:45:12.321" endtime="20201029 12:45:12.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.316" endtime="20201029 12:45:12.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.328" endtime="20201029 12:45:12.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.326" endtime="20201029 12:45:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.325" endtime="20201029 12:45:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.961" endtime="20201029 12:45:12.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.961" endtime="20201029 12:45:12.349"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.358" endtime="20201029 12:45:12.380"></status>
</kw>
<msg timestamp="20201029 12:45:12.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.356" endtime="20201029 12:45:12.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.382" endtime="20201029 12:45:12.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.385" endtime="20201029 12:45:12.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.353" endtime="20201029 12:45:12.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.351" endtime="20201029 12:45:12.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.394" endtime="20201029 12:45:12.680"></status>
</kw>
<msg timestamp="20201029 12:45:12.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.392" endtime="20201029 12:45:12.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.685" endtime="20201029 12:45:12.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.693" endtime="20201029 12:45:12.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.390" endtime="20201029 12:45:12.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.388" endtime="20201029 12:45:12.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.700" level="INFO">${RESULT} = [{'diff': 0.00010890199999999753}, {'diff': 0.00010919399999999996}, {'diff': 0.00010886100000000176}, {'diff': 0.0001083890000000004}, {'diff': 0.00010908399999999888}, {'diff': 0.0001090139999999975...</msg>
<status status="PASS" starttime="20201029 12:45:12.697" endtime="20201029 12:45:12.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:12.704" level="INFO">${ACCURACY} = {'diff': [0.00010890199999999753, 0.00010919399999999996, 0.00010886100000000176, 0.0001083890000000004, 0.00010908399999999888, 0.00010901399999999756, 0.0001090829999999994, 0.00010862500000000108, ...</msg>
<status status="PASS" starttime="20201029 12:45:12.701" endtime="20201029 12:45:12.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.709" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:45:12.708" endtime="20201029 12:45:12.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.711" level="INFO">VALUE: [0.00010890199999999753, 0.00010919399999999996, 0.00010886100000000176, 0.0001083890000000004, 0.00010908399999999888, 0.00010901399999999756, 0.0001090829999999994, 0.00010862500000000108, 0.00010875000000000121, 0.00010880599999999949, 0.00010816700000000276, 0.00010837500000000083, 0.00010891700000000004, 0.00010841699999999954, 0.00010919399999999996, 0.0001090549999999968, 0.00010881899999999958, 0.00010880500000000001, 0.00010866699999999979, 0.00010813900000000015, 0.00010874999999999774, 0.00010836100000000126, 0.00010857000000000228, 0.00010880500000000001, 0.00010912500000000158, 0.00010850000000000096, 0.00010873600000000164, 0.00010823600000000114, 0.00010899999999999799, 0.00010827799999999985, 0.00010837500000000083, 0.00010898599999999842, 0.00010881999999999906, 0.00010898599999999842, 0.00010862500000000108, 0.00010915199999999778, 0.00010867999999999989, 0.00010851300000000105, 0.00010915300000000072, 0.00010887500000000133, 0.00010845799999999878, 0.00010856899999999933, 0.00010837500000000083, 0.00010900000000000146, 0.0001083340000000016, 0.00010837499999999736, 0.00010854199999999967, 0.00010826400000000028, 0.00010812500000000058, 0.00010886099999999829]</msg>
<status status="PASS" starttime="20201029 12:45:12.710" endtime="20201029 12:45:12.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.705" endtime="20201029 12:45:12.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.723" endtime="20201029 12:45:12.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.722" endtime="20201029 12:45:12.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.720" endtime="20201029 12:45:12.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.350" endtime="20201029 12:45:12.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.349" endtime="20201029 12:45:12.744"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.753" endtime="20201029 12:45:12.774"></status>
</kw>
<msg timestamp="20201029 12:45:12.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.752" endtime="20201029 12:45:12.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.776" endtime="20201029 12:45:12.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.778" endtime="20201029 12:45:12.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.749" endtime="20201029 12:45:12.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.747" endtime="20201029 12:45:12.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.788" endtime="20201029 12:45:13.074"></status>
</kw>
<msg timestamp="20201029 12:45:13.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.786" endtime="20201029 12:45:13.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.078" endtime="20201029 12:45:13.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.086" endtime="20201029 12:45:13.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.783" endtime="20201029 12:45:13.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.782" endtime="20201029 12:45:13.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.093" level="INFO">${RESULT} = [{'diff': 0.00010983300000000015}, {'diff': 0.00010951400000000153}, {'diff': 0.00010980599999999702}, {'diff': 0.00010974999999999874}, {'diff': 0.00010912500000000158}, {'diff': 0.000109124999999998...</msg>
<status status="PASS" starttime="20201029 12:45:13.090" endtime="20201029 12:45:13.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.098" level="INFO">${ACCURACY} = {'diff': [0.00010983300000000015, 0.00010951400000000153, 0.00010980599999999702, 0.00010974999999999874, 0.00010912500000000158, 0.00010912499999999811, 0.00010994500000000018, 0.00010976400000000178...</msg>
<status status="PASS" starttime="20201029 12:45:13.094" endtime="20201029 12:45:13.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.103" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.102" endtime="20201029 12:45:13.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.106" level="INFO">VALUE: [0.00010983300000000015, 0.00010951400000000153, 0.00010980599999999702, 0.00010974999999999874, 0.00010912500000000158, 0.00010912499999999811, 0.00010994500000000018, 0.00010976400000000178, 0.00010944400000000021, 0.00010911099999999854, 0.00010993000000000114, 0.00010998600000000289, 0.00010944499999999968, 0.00010923600000000214, 0.0001095699999999998, 0.00010937500000000183, 0.00010977800000000135, 0.00010974999999999874, 0.00010980600000000049, 0.00010938799999999846, 0.00010954099999999772, 0.00010949999999999849, 0.00010956900000000033, 0.0001100700000000003, 0.00010944400000000021, 0.00010943100000000011, 0.00011012499999999911, 0.00010984699999999972, 0.0001097219999999996, 0.000110209, 0.00010937499999999836, 0.00010968000000000089, 0.00010974999999999874, 0.00010988899999999843, 0.00010998599999999942, 0.00010950000000000196, 0.00010913900000000115, 0.00010955600000000024, 0.00010925000000000171, 0.00010954200000000067, 0.00010958399999999938, 0.00010931999999999956, 0.00010930599999999999, 0.00010991600000000157, 0.00010983399999999963, 0.00010973600000000264, 0.00010977700000000187, 0.00010962500000000208, 0.00010931900000000008, 0.00010927800000000085]</msg>
<status status="PASS" starttime="20201029 12:45:13.104" endtime="20201029 12:45:13.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.099" endtime="20201029 12:45:13.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.111" endtime="20201029 12:45:13.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.109" endtime="20201029 12:45:13.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.108" endtime="20201029 12:45:13.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.745" endtime="20201029 12:45:13.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.745" endtime="20201029 12:45:13.131"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.141" endtime="20201029 12:45:13.162"></status>
</kw>
<msg timestamp="20201029 12:45:13.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.139" endtime="20201029 12:45:13.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.163" endtime="20201029 12:45:13.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.166" endtime="20201029 12:45:13.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.136" endtime="20201029 12:45:13.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.134" endtime="20201029 12:45:13.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.176" endtime="20201029 12:45:13.463"></status>
</kw>
<msg timestamp="20201029 12:45:13.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.174" endtime="20201029 12:45:13.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.468" endtime="20201029 12:45:13.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.476" endtime="20201029 12:45:13.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.171" endtime="20201029 12:45:13.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.169" endtime="20201029 12:45:13.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.483" level="INFO">${RESULT} = [{'diff': 0.00011116699999999882}, {'diff': 0.00011070800000000103}, {'diff': 0.00011023599999999967}, {'diff': 0.00011029100000000194}, {'diff': 0.00011013899999999868}, {'diff': 0.000110249999999999...</msg>
<status status="PASS" starttime="20201029 12:45:13.480" endtime="20201029 12:45:13.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.487" level="INFO">${ACCURACY} = {'diff': [0.00011116699999999882, 0.00011070800000000103, 0.00011023599999999967, 0.00011029100000000194, 0.00011013899999999868, 0.00011024999999999924, 0.00011112499999999664, 0.0001105419999999982,...</msg>
<status status="PASS" starttime="20201029 12:45:13.484" endtime="20201029 12:45:13.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.492" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.491" endtime="20201029 12:45:13.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.494" level="INFO">VALUE: [0.00011116699999999882, 0.00011070800000000103, 0.00011023599999999967, 0.00011029100000000194, 0.00011013899999999868, 0.00011024999999999924, 0.00011112499999999664, 0.0001105419999999982, 0.00011101399999999956, 0.00011024999999999924, 0.00011048599999999992, 0.00011079200000000192, 0.0001105549999999983, 0.00011061100000000004, 0.00011044400000000121, 0.00011065300000000222, 0.00011086100000000029, 0.00011119400000000196, 0.00011111100000000054, 0.00011074999999999974, 0.000110596999999997, 0.00011086100000000029, 0.00011055599999999777, 0.00011044500000000068, 0.00011111100000000054, 0.00011119399999999849, 0.00011099999999999999, 0.00011116599999999935, 0.00011054200000000167, 0.00011026399999999881, 0.00011079199999999845, 0.00011036099999999979, 0.00011052799999999863, 0.00011104200000000217, 0.00011080600000000149, 0.00011098600000000042, 0.00011067999999999842, 0.00011038899999999893, 0.00011081899999999811, 0.0001105830000000009, 0.00011063900000000265, 0.00011099999999999999, 0.00011093099999999814, 0.00011094500000000118, 0.00011036099999999979, 0.00011104200000000217, 0.00011032000000000056, 0.00011044399999999774, 0.00011113800000000021, 0.00011080600000000149]</msg>
<status status="PASS" starttime="20201029 12:45:13.493" endtime="20201029 12:45:13.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.488" endtime="20201029 12:45:13.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.500" endtime="20201029 12:45:13.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.498" endtime="20201029 12:45:13.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.497" endtime="20201029 12:45:13.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.132" endtime="20201029 12:45:13.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.132" endtime="20201029 12:45:13.520"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.530" endtime="20201029 12:45:13.555"></status>
</kw>
<msg timestamp="20201029 12:45:13.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.528" endtime="20201029 12:45:13.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.557" endtime="20201029 12:45:13.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.559" endtime="20201029 12:45:13.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.525" endtime="20201029 12:45:13.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.523" endtime="20201029 12:45:13.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.569" endtime="20201029 12:45:13.855"></status>
</kw>
<msg timestamp="20201029 12:45:13.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.567" endtime="20201029 12:45:13.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.859" endtime="20201029 12:45:13.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.867" endtime="20201029 12:45:13.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.564" endtime="20201029 12:45:13.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.563" endtime="20201029 12:45:13.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.874" level="INFO">${RESULT} = [{'diff': 0.00011138899999999993}, {'diff': 0.00011155599999999877}, {'diff': 0.00011209800000000145}, {'diff': 0.0001112220000000011}, {'diff': 0.00011186100000000129}, {'diff': 0.0001118059999999990...</msg>
<status status="PASS" starttime="20201029 12:45:13.871" endtime="20201029 12:45:13.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.878" level="INFO">${ACCURACY} = {'diff': [0.00011138899999999993, 0.00011155599999999877, 0.00011209800000000145, 0.0001112220000000011, 0.00011186100000000129, 0.00011180599999999902, 0.00011215300000000025, 0.00011175000000000074,...</msg>
<status status="PASS" starttime="20201029 12:45:13.875" endtime="20201029 12:45:13.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.883" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.882" endtime="20201029 12:45:13.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.885" level="INFO">VALUE: [0.00011138899999999993, 0.00011155599999999877, 0.00011209800000000145, 0.0001112220000000011, 0.00011186100000000129, 0.00011180599999999902, 0.00011215300000000025, 0.00011175000000000074, 0.0001112220000000011, 0.0001115549999999993, 0.00011204200000000317, 0.00011158299999999843, 0.0001115549999999993, 0.00011184700000000172, 0.00011176399999999684, 0.00011144500000000168, 0.00011175000000000074, 0.00011213900000000068, 0.00011132000000000156, 0.00011126400000000328, 0.0001120549999999998, 0.0001114159999999996, 0.00011192999999999967, 0.00011165299999999975, 0.00011191699999999957, 0.00011156900000000233, 0.00011216699999999982, 0.00011176400000000031, 0.0001117359999999977, 0.00011179099999999997, 0.00011205600000000274, 0.00011186200000000077, 0.00011187500000000086, 0.00011112500000000011, 0.0001120549999999998, 0.00011113899999999968, 0.00011148599999999745, 0.00011162500000000061, 0.00011180599999999902, 0.00011156999999999834, 0.00011179199999999945, 0.00011183400000000163, 0.00011113800000000021, 0.00011198700000000089, 0.00011151400000000006, 0.00011130499999999904, 0.00011201400000000056, 0.00011180499999999954, 0.00011143000000000264, 0.00011208400000000188]</msg>
<status status="PASS" starttime="20201029 12:45:13.884" endtime="20201029 12:45:13.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.879" endtime="20201029 12:45:13.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.892" endtime="20201029 12:45:13.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.890" endtime="20201029 12:45:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.889" endtime="20201029 12:45:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.521" endtime="20201029 12:45:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.521" endtime="20201029 12:45:13.912"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.922" endtime="20201029 12:45:13.944"></status>
</kw>
<msg timestamp="20201029 12:45:13.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.920" endtime="20201029 12:45:13.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.945" endtime="20201029 12:45:13.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.948" endtime="20201029 12:45:13.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.917" endtime="20201029 12:45:13.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.915" endtime="20201029 12:45:13.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.957" endtime="20201029 12:45:14.245"></status>
</kw>
<msg timestamp="20201029 12:45:14.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:13.956" endtime="20201029 12:45:14.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:14.250" endtime="20201029 12:45:14.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.258" endtime="20201029 12:45:14.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.953" endtime="20201029 12:45:14.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.951" endtime="20201029 12:45:14.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:14.265" level="INFO">${RESULT} = [{'diff': 0.00011294400000000024}, {'diff': 0.00011248599999999845}, {'diff': 0.0001123619999999978}, {'diff': 0.00011305600000000027}, {'diff': 0.00011212499999999764}, {'diff': 0.0001127229999999986...</msg>
<status status="PASS" starttime="20201029 12:45:14.262" endtime="20201029 12:45:14.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:14.270" level="INFO">${ACCURACY} = {'diff': [0.00011294400000000024, 0.00011248599999999845, 0.0001123619999999978, 0.00011305600000000027, 0.00011212499999999764, 0.0001127229999999986, 0.00011263899999999771, 0.0001127359999999987, 0...</msg>
<status status="PASS" starttime="20201029 12:45:14.266" endtime="20201029 12:45:14.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.275" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:45:14.274" endtime="20201029 12:45:14.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.277" level="INFO">VALUE: [0.00011294400000000024, 0.00011248599999999845, 0.0001123619999999978, 0.00011305600000000027, 0.00011212499999999764, 0.0001127229999999986, 0.00011263899999999771, 0.0001127359999999987, 0.0001123749999999979, 0.00011317999999999745, 0.00011262499999999814, 0.00011231899999999961, 0.00011224999999999777, 0.00011244500000000268, 0.00011229100000000047, 0.00011269499999999946, 0.00011268000000000042, 0.00011301300000000208, 0.0001122359999999982, 0.00011273600000000217, 0.00011248599999999845, 0.00011223600000000167, 0.00011265299999999728, 0.00011237500000000136, 0.00011225000000000124, 0.00011266700000000032, 0.00011219499999999896, 0.00011231999999999909, 0.00011238799999999799, 0.00011261200000000152, 0.00011316600000000135, 0.00011266600000000085, 0.00011244399999999974, 0.00011258299999999943, 0.00011275000000000174, 0.00011298600000000242, 0.00011227800000000038, 0.00011251400000000106, 0.0001128749999999984, 0.00011213900000000068, 0.00011279200000000045, 0.00011244399999999974, 0.00011230599999999952, 0.00011275000000000174, 0.00011256899999999986, 0.00011304100000000122, 0.00011281900000000011, 0.00011236100000000179, 0.0001125700000000028, 0.00011273600000000217]</msg>
<status status="PASS" starttime="20201029 12:45:14.276" endtime="20201029 12:45:14.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.271" endtime="20201029 12:45:14.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.282" endtime="20201029 12:45:14.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.281" endtime="20201029 12:45:14.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.280" endtime="20201029 12:45:14.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.913" endtime="20201029 12:45:14.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.913" endtime="20201029 12:45:14.303"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.312" endtime="20201029 12:45:14.334"></status>
</kw>
<msg timestamp="20201029 12:45:14.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.311" endtime="20201029 12:45:14.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.336" endtime="20201029 12:45:14.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.338" endtime="20201029 12:45:14.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.308" endtime="20201029 12:45:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.306" endtime="20201029 12:45:14.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.348" endtime="20201029 12:45:14.635"></status>
</kw>
<msg timestamp="20201029 12:45:14.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.346" endtime="20201029 12:45:14.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.639" endtime="20201029 12:45:14.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.648" endtime="20201029 12:45:14.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.343" endtime="20201029 12:45:14.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.342" endtime="20201029 12:45:14.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:14.655" level="INFO">${RESULT} = [{'diff': 0.00011333300000000018}, {'diff': 0.00011369500000000046}, {'diff': 0.00011354099999999825}, {'diff': 0.00011363899999999871}, {'diff': 0.00011408400000000041}, {'diff': 0.000113402000000002...</msg>
<status status="PASS" starttime="20201029 12:45:14.651" endtime="20201029 12:45:14.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:14.659" level="INFO">${ACCURACY} = {'diff': [0.00011333300000000018, 0.00011369500000000046, 0.00011354099999999825, 0.00011363899999999871, 0.00011408400000000041, 0.00011340200000000203, 0.00011362499999999914, 0.00011350000000000249...</msg>
<status status="PASS" starttime="20201029 12:45:14.656" endtime="20201029 12:45:14.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.663" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:45:14.662" endtime="20201029 12:45:14.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.666" level="INFO">VALUE: [0.00011333300000000018, 0.00011369500000000046, 0.00011354099999999825, 0.00011363899999999871, 0.00011408400000000041, 0.00011340200000000203, 0.00011362499999999914, 0.00011350000000000249, 0.00011338900000000193, 0.000113597, 0.00011336100000000279, 0.00011336099999999932, 0.00011407000000000084, 0.00011324999999999877, 0.00011330600000000052, 0.00011349999999999902, 0.00011393100000000114, 0.00011309800000000245, 0.00011312499999999864, 0.00011357000000000034, 0.00011341700000000107, 0.00011334699999999975, 0.00011344400000000074, 0.00011324999999999877, 0.00011394399999999777, 0.00011399999999999952, 0.00011418100000000139, 0.00011312499999999864, 0.00011418100000000139, 0.00011394400000000124, 0.00011336099999999932, 0.00011369400000000099, 0.00011362500000000261, 0.00011380499999999807, 0.00011330500000000104, 0.00011406900000000136, 0.00011383400000000016, 0.00011318000000000092, 0.00011326399999999834, 0.00011408299999999746, 0.00011343100000000064, 0.00011327699999999843, 0.00011312500000000211, 0.00011334699999999975, 0.00011354100000000172, 0.00011337500000000236, 0.0001138749999999994, 0.00011411100000000007, 0.0001138749999999994, 0.00011418099999999792]</msg>
<status status="PASS" starttime="20201029 12:45:14.665" endtime="20201029 12:45:14.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.660" endtime="20201029 12:45:14.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.671" endtime="20201029 12:45:14.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.670" endtime="20201029 12:45:14.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.668" endtime="20201029 12:45:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.304" endtime="20201029 12:45:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.304" endtime="20201029 12:45:14.692"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.701" endtime="20201029 12:45:14.724"></status>
</kw>
<msg timestamp="20201029 12:45:14.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.700" endtime="20201029 12:45:14.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.726" endtime="20201029 12:45:14.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.728" endtime="20201029 12:45:14.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.697" endtime="20201029 12:45:14.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.695" endtime="20201029 12:45:14.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.738" endtime="20201029 12:45:15.024"></status>
</kw>
<msg timestamp="20201029 12:45:15.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021503583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.736" endtime="20201029 12:45:15.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021503583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.028" endtime="20201029 12:45:15.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.037" endtime="20201029 12:45:15.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.734" endtime="20201029 12:45:15.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.732" endtime="20201029 12:45:15.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.044" level="INFO">${RESULT} = [{'diff': 0.00011483400000000116}, {'diff': 0.0001150559999999988}, {'diff': 0.00011484699999999778}, {'diff': 0.00011419400000000149}, {'diff': 0.00011462499999999667}, {'diff': 0.0001145409999999992...</msg>
<status status="PASS" starttime="20201029 12:45:15.041" endtime="20201029 12:45:15.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.048" level="INFO">${ACCURACY} = {'diff': [0.00011483400000000116, 0.0001150559999999988, 0.00011484699999999778, 0.00011419400000000149, 0.00011462499999999667, 0.00011454099999999925, 0.00011455499999999882, 0.00011483300000000168,...</msg>
<status status="PASS" starttime="20201029 12:45:15.045" endtime="20201029 12:45:15.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.053" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.052" endtime="20201029 12:45:15.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.055" level="INFO">VALUE: [0.00011483400000000116, 0.0001150559999999988, 0.00011484699999999778, 0.00011419400000000149, 0.00011462499999999667, 0.00011454099999999925, 0.00011455499999999882, 0.00011483300000000168, 0.00011462500000000014, 0.00011426399999999934, 0.00011507000000000184, 0.00011481899999999864, 0.00011520899999999806, 0.00011429199999999848, 0.00011457000000000134, 0.00011484699999999778, 0.00011517999999999945, 0.00011484700000000125, 0.0001150689999999989, 0.00011450000000000002, 0.00011481899999999864, 0.00011448600000000045, 0.0001148750000000004, 0.00011450000000000002, 0.00011445900000000078, 0.00011504199999999923, 0.00011462500000000014, 0.00011450000000000002, 0.00011483299999999821, 0.00011486100000000082, 0.00011462500000000014, 0.00011519400000000249, 0.00011427799999999891, 0.00011412499999999964, 0.00011443099999999817, 0.00011438899999999946, 0.00011430499999999857, 0.00011505499999999932, 0.00011512500000000064, 0.00011517999999999945, 0.00011458299999999796, 0.00011505499999999932, 0.00011444399999999827, 0.00011518099999999892, 0.00011495800000000181, 0.00011429199999999848, 0.00011444500000000121, 0.00011448600000000045, 0.00011413900000000268, 0.00011455499999999882]</msg>
<status status="PASS" starttime="20201029 12:45:15.054" endtime="20201029 12:45:15.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.049" endtime="20201029 12:45:15.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.061" endtime="20201029 12:45:15.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.060" endtime="20201029 12:45:15.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.059" endtime="20201029 12:45:15.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.693" endtime="20201029 12:45:15.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.693" endtime="20201029 12:45:15.082"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.091" endtime="20201029 12:45:15.113"></status>
</kw>
<msg timestamp="20201029 12:45:15.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.090" endtime="20201029 12:45:15.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.115" endtime="20201029 12:45:15.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.117" endtime="20201029 12:45:15.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.087" endtime="20201029 12:45:15.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.085" endtime="20201029 12:45:15.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.127" endtime="20201029 12:45:15.413"></status>
</kw>
<msg timestamp="20201029 12:45:15.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.125" endtime="20201029 12:45:15.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.417" endtime="20201029 12:45:15.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.426" endtime="20201029 12:45:15.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.123" endtime="20201029 12:45:15.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.121" endtime="20201029 12:45:15.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.432" level="INFO">${RESULT} = [{'diff': 0.00011598599999999848}, {'diff': 0.00011581999999999912}, {'diff': 0.00011512500000000064}, {'diff': 0.00011538900000000046}, {'diff': 0.00011615300000000078}, {'diff': 0.000115443999999999...</msg>
<status status="PASS" starttime="20201029 12:45:15.429" endtime="20201029 12:45:15.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.437" level="INFO">${ACCURACY} = {'diff': [0.00011598599999999848, 0.00011581999999999912, 0.00011512500000000064, 0.00011538900000000046, 0.00011615300000000078, 0.00011544399999999927, 0.00011595799999999934, 0.00011536100000000132...</msg>
<status status="PASS" starttime="20201029 12:45:15.433" endtime="20201029 12:45:15.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.442" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.441" endtime="20201029 12:45:15.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.445" level="INFO">VALUE: [0.00011598599999999848, 0.00011581999999999912, 0.00011512500000000064, 0.00011538900000000046, 0.00011615300000000078, 0.00011544399999999927, 0.00011595799999999934, 0.00011536100000000132, 0.00011616700000000035, 0.00011618099999999992, 0.00011606999999999937, 0.00011563900000000071, 0.00011576300000000136, 0.00011609799999999851, 0.00011599999999999805, 0.00011618000000000045, 0.00011562499999999767, 0.00011551400000000059, 0.00011598600000000195, 0.00011512500000000064, 0.00011580599999999955, 0.00011606999999999937, 0.00011575000000000127, 0.00011572299999999813, 0.00011576400000000084, 0.00011567999999999995, 0.00011576400000000084, 0.0001155689999999994, 0.00011554100000000025, 0.00011566699999999985, 0.00011508299999999846, 0.00011581999999999912, 0.00011608399999999894, 0.00011551399999999712, 0.00011557000000000234, 0.00011573599999999823, 0.00011565300000000028, 0.0001156109999999981, 0.00011550000000000102, 0.00011531899999999914, 0.00011620800000000306, 0.00011619499999999949, 0.00011579199999999998, 0.00011526400000000034, 0.00011530600000000252, 0.0001155559999999993, 0.00011540200000000056, 0.00011522299999999763, 0.00011600000000000152, 0.00011594399999999977]</msg>
<status status="PASS" starttime="20201029 12:45:15.443" endtime="20201029 12:45:15.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.438" endtime="20201029 12:45:15.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.450" endtime="20201029 12:45:15.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.448" endtime="20201029 12:45:15.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.447" endtime="20201029 12:45:15.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.083" endtime="20201029 12:45:15.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.082" endtime="20201029 12:45:15.471"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.480" endtime="20201029 12:45:15.501"></status>
</kw>
<msg timestamp="20201029 12:45:15.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.478" endtime="20201029 12:45:15.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.503" endtime="20201029 12:45:15.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.505" endtime="20201029 12:45:15.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.476" endtime="20201029 12:45:15.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.473" endtime="20201029 12:45:15.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.515" endtime="20201029 12:45:15.803"></status>
</kw>
<msg timestamp="20201029 12:45:15.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.513" endtime="20201029 12:45:15.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.808" endtime="20201029 12:45:15.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.816" endtime="20201029 12:45:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.510" endtime="20201029 12:45:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.509" endtime="20201029 12:45:15.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.823" level="INFO">${RESULT} = [{'diff': 0.00011722200000000016}, {'diff': 0.00011704200000000123}, {'diff': 0.00011644499999999974}, {'diff': 0.00011654100000000125}, {'diff': 0.00011654200000000073}, {'diff': 0.000116931000000000...</msg>
<status status="PASS" starttime="20201029 12:45:15.820" endtime="20201029 12:45:15.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.827" level="INFO">${ACCURACY} = {'diff': [0.00011722200000000016, 0.00011704200000000123, 0.00011644499999999974, 0.00011654100000000125, 0.00011654200000000073, 0.00011693100000000067, 0.00011688799999999902, 0.00011627799999999744...</msg>
<status status="PASS" starttime="20201029 12:45:15.824" endtime="20201029 12:45:15.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.832" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.831" endtime="20201029 12:45:15.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.834" level="INFO">VALUE: [0.00011722200000000016, 0.00011704200000000123, 0.00011644499999999974, 0.00011654100000000125, 0.00011654200000000073, 0.00011693100000000067, 0.00011688799999999902, 0.00011627799999999744, 0.0001163750000000019, 0.00011625000000000177, 0.0001167499999999988, 0.00011627800000000091, 0.00011698599999999948, 0.00011637499999999842, 0.00011641699999999713, 0.0001166109999999991, 0.0001169170000000011, 0.00011719500000000049, 0.00011625000000000177, 0.00011719400000000102, 0.00011649999999999855, 0.00011719400000000102, 0.00011718100000000092, 0.00011676400000000184, 0.00011718100000000092, 0.00011682000000000012, 0.00011665199999999834, 0.00011701399999999862, 0.0001164170000000006, 0.00011717999999999798, 0.00011712500000000264, 0.00011625000000000177, 0.00011686100000000282, 0.00011644400000000027, 0.00011625000000000177, 0.00011704200000000123, 0.00011656999999999987, 0.0001168750000000024, 0.00011649999999999855, 0.00011711199999999908, 0.00011700000000000252, 0.00011694400000000077, 0.00011686099999999935, 0.00011645799999999984, 0.00011686099999999935, 0.0001168889999999985, 0.00011676400000000184, 0.00011708400000000341, 0.0001163750000000019, 0.00011699999999999905]</msg>
<status status="PASS" starttime="20201029 12:45:15.833" endtime="20201029 12:45:15.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.828" endtime="20201029 12:45:15.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.839" endtime="20201029 12:45:15.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.838" endtime="20201029 12:45:15.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.837" endtime="20201029 12:45:15.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.472" endtime="20201029 12:45:15.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.471" endtime="20201029 12:45:15.860"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.869" endtime="20201029 12:45:15.891"></status>
</kw>
<msg timestamp="20201029 12:45:15.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.868" endtime="20201029 12:45:15.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.893" endtime="20201029 12:45:15.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.896" endtime="20201029 12:45:15.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.865" endtime="20201029 12:45:15.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.863" endtime="20201029 12:45:15.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.905" endtime="20201029 12:45:16.192"></status>
</kw>
<msg timestamp="20201029 12:45:16.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.904" endtime="20201029 12:45:16.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.196" endtime="20201029 12:45:16.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.205" endtime="20201029 12:45:16.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.901" endtime="20201029 12:45:16.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.899" endtime="20201029 12:45:16.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.211" level="INFO">${RESULT} = [{'diff': 0.00011740299999999856}, {'diff': 0.00011770800000000109}, {'diff': 0.00011754099999999879}, {'diff': 0.00011798600000000048}, {'diff': 0.0001172499999999993}, {'diff': 0.0001173479999999997...</msg>
<status status="PASS" starttime="20201029 12:45:16.208" endtime="20201029 12:45:16.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.216" level="INFO">${ACCURACY} = {'diff': [0.00011740299999999856, 0.00011770800000000109, 0.00011754099999999879, 0.00011798600000000048, 0.0001172499999999993, 0.00011734799999999976, 0.00011787499999999992, 0.00011773599999999676,...</msg>
<status status="PASS" starttime="20201029 12:45:16.212" endtime="20201029 12:45:16.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.220" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.219" endtime="20201029 12:45:16.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.223" level="INFO">VALUE: [0.00011740299999999856, 0.00011770800000000109, 0.00011754099999999879, 0.00011798600000000048, 0.0001172499999999993, 0.00011734799999999976, 0.00011787499999999992, 0.00011773599999999676, 0.00011766700000000185, 0.00011713899999999874, 0.00011776399999999937, 0.00011791699999999863, 0.00011744499999999727, 0.00011809699999999757, 0.00011819399999999855, 0.00011723599999999973, 0.00011801399999999962, 0.00011726400000000234, 0.00011818099999999845, 0.00011800000000000005, 0.0001177910000000025, 0.00011777799999999894, 0.00011782000000000112, 0.00011737499999999942, 0.00011816599999999941, 0.00011726400000000234, 0.00011797199999999744, 0.00011712499999999917, 0.00011731900000000114, 0.00011754199999999826, 0.00011744500000000074, 0.00011780600000000155, 0.00011730600000000105, 0.00011751299999999965, 0.00011798600000000048, 0.00011791599999999916, 0.00011749999999999955, 0.0001175690000000014, 0.00011773600000000023, 0.0001172499999999993, 0.00011800000000000005, 0.00011762499999999967, 0.00011712499999999917, 0.00011748599999999998, 0.00011709700000000003, 0.00011748599999999998, 0.00011713899999999874, 0.000117291000000002, 0.00011759700000000053, 0.00011730600000000105]</msg>
<status status="PASS" starttime="20201029 12:45:16.221" endtime="20201029 12:45:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.216" endtime="20201029 12:45:16.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.229" endtime="20201029 12:45:16.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.227" endtime="20201029 12:45:16.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.226" endtime="20201029 12:45:16.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.861" endtime="20201029 12:45:16.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.861" endtime="20201029 12:45:16.250"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.259" endtime="20201029 12:45:16.280"></status>
</kw>
<msg timestamp="20201029 12:45:16.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.257" endtime="20201029 12:45:16.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.282" endtime="20201029 12:45:16.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.285" endtime="20201029 12:45:16.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.254" endtime="20201029 12:45:16.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.252" endtime="20201029 12:45:16.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.294" endtime="20201029 12:45:16.581"></status>
</kw>
<msg timestamp="20201029 12:45:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.293" endtime="20201029 12:45:16.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.585" endtime="20201029 12:45:16.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.595" endtime="20201029 12:45:16.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.290" endtime="20201029 12:45:16.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.288" endtime="20201029 12:45:16.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.601" level="INFO">${RESULT} = [{'diff': 0.00011866599999999991}, {'diff': 0.00011822199999999769}, {'diff': 0.00011829099999999954}, {'diff': 0.00011837500000000042}, {'diff': 0.00011883299999999875}, {'diff': 0.000118764000000000...</msg>
<status status="PASS" starttime="20201029 12:45:16.598" endtime="20201029 12:45:16.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.606" level="INFO">${ACCURACY} = {'diff': [0.00011866599999999991, 0.00011822199999999769, 0.00011829099999999954, 0.00011837500000000042, 0.00011883299999999875, 0.00011876400000000037, 0.00011887499999999745, 0.00011888899999999702...</msg>
<status status="PASS" starttime="20201029 12:45:16.602" endtime="20201029 12:45:16.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.611" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.610" endtime="20201029 12:45:16.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.614" level="INFO">VALUE: [0.00011866599999999991, 0.00011822199999999769, 0.00011829099999999954, 0.00011837500000000042, 0.00011883299999999875, 0.00011876400000000037, 0.00011887499999999745, 0.00011888899999999702, 0.00011902800000000019, 0.00011862500000000067, 0.00011897199999999844, 0.00011918099999999945, 0.00011829099999999954, 0.0001187500000000008, 0.00011850000000000055, 0.00011897199999999844, 0.00011842999999999923, 0.00011894499999999877, 0.00011872200000000166, 0.00011918099999999945, 0.00011848599999999751, 0.00011829199999999901, 0.00011887500000000092, 0.00011866699999999938, 0.00011905499999999986, 0.00011900000000000105, 0.00011836100000000085, 0.00011883300000000221, 0.00011902800000000019, 0.00011918099999999945, 0.00011912500000000117, 0.00011905599999999933, 0.00011836100000000085, 0.00011844500000000174, 0.00011836099999999738, 0.00011912500000000117, 0.0001183049999999991, 0.00011900000000000105, 0.00011900000000000105, 0.00011876400000000037, 0.000118389, 0.00011857000000000187, 0.00011844499999999827, 0.00011866699999999938, 0.000118389, 0.00011912500000000117, 0.00011866599999999991, 0.00011890200000000059, 0.00011906899999999943, 0.00011848599999999751]</msg>
<status status="PASS" starttime="20201029 12:45:16.612" endtime="20201029 12:45:16.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.607" endtime="20201029 12:45:16.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.619" endtime="20201029 12:45:16.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.617" endtime="20201029 12:45:16.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.616" endtime="20201029 12:45:16.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.251" endtime="20201029 12:45:16.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.250" endtime="20201029 12:45:16.640"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.649" endtime="20201029 12:45:16.671"></status>
</kw>
<msg timestamp="20201029 12:45:16.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.647" endtime="20201029 12:45:16.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.672" endtime="20201029 12:45:16.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.675" endtime="20201029 12:45:16.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.645" endtime="20201029 12:45:16.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.642" endtime="20201029 12:45:16.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.684" endtime="20201029 12:45:16.972"></status>
</kw>
<msg timestamp="20201029 12:45:16.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020691764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.683" endtime="20201029 12:45:16.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020691764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.976" endtime="20201029 12:45:16.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.985" endtime="20201029 12:45:16.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.680" endtime="20201029 12:45:16.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.678" endtime="20201029 12:45:16.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.991" level="INFO">${RESULT} = [{'diff': 0.00011983299999999975}, {'diff': 0.00011980600000000008}, {'diff': 0.00011950000000000155}, {'diff': 0.0001200699999999999}, {'diff': 0.00011937500000000142}, {'diff': 0.0001194160000000006...</msg>
<status status="PASS" starttime="20201029 12:45:16.988" endtime="20201029 12:45:16.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.996" level="INFO">${ACCURACY} = {'diff': [0.00011983299999999975, 0.00011980600000000008, 0.00011950000000000155, 0.0001200699999999999, 0.00011937500000000142, 0.00011941600000000066, 0.00011986099999999889, 0.00011962500000000167,...</msg>
<status status="PASS" starttime="20201029 12:45:16.992" endtime="20201029 12:45:16.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.000" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.999" endtime="20201029 12:45:17.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.003" level="INFO">VALUE: [0.00011983299999999975, 0.00011980600000000008, 0.00011950000000000155, 0.0001200699999999999, 0.00011937500000000142, 0.00011941600000000066, 0.00011986099999999889, 0.00011962500000000167, 0.00011995799999999987, 0.00011954199999999679, 0.00012019500000000002, 0.0001196249999999982, 0.00011966699999999691, 0.00011912500000000117, 0.00011908400000000194, 0.00011986099999999889, 0.00011981900000000018, 0.00011995799999999987, 0.00011915300000000031, 0.0001196249999999982, 0.00011981900000000018, 0.00011955599999999983, 0.00012005600000000033, 0.00011969499999999952, 0.00011922299999999816, 0.00011930600000000305, 0.000119389000000001, 0.00011947199999999894, 0.0001198890000000015, 0.00011962500000000167, 0.00011950000000000155, 0.0001195699999999994, 0.0001199310000000002, 0.000119695000000003, 0.00011980600000000008, 0.00012000000000000205, 0.00011929200000000001, 0.00011967999999999701, 0.00011981900000000018, 0.00011951400000000112, 0.00011965300000000081, 0.00011940300000000056, 0.00011930600000000305, 0.00012018100000000045, 0.00011987500000000192, 0.00011979199999999704, 0.00012000000000000205, 0.000119776999999998, 0.00011959700000000253, 0.00012005600000000033]</msg>
<status status="PASS" starttime="20201029 12:45:17.002" endtime="20201029 12:45:17.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.997" endtime="20201029 12:45:17.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.008" endtime="20201029 12:45:17.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.007" endtime="20201029 12:45:17.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.006" endtime="20201029 12:45:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.640" endtime="20201029 12:45:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.640" endtime="20201029 12:45:17.029"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.038" endtime="20201029 12:45:17.063"></status>
</kw>
<msg timestamp="20201029 12:45:17.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.037" endtime="20201029 12:45:17.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.065" endtime="20201029 12:45:17.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.068" endtime="20201029 12:45:17.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.034" endtime="20201029 12:45:17.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.032" endtime="20201029 12:45:17.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.077" endtime="20201029 12:45:17.364"></status>
</kw>
<msg timestamp="20201029 12:45:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.076" endtime="20201029 12:45:17.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.368" endtime="20201029 12:45:17.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.376" endtime="20201029 12:45:17.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.073" endtime="20201029 12:45:17.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.071" endtime="20201029 12:45:17.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.383" level="INFO">${RESULT} = [{'diff': 0.00012098600000000001}, {'diff': 0.00012099999999999958}, {'diff': 0.00012074999999999933}, {'diff': 0.00012086099999999989}, {'diff': 0.00012055600000000083}, {'diff': 0.000120887999999999...</msg>
<status status="PASS" starttime="20201029 12:45:17.380" endtime="20201029 12:45:17.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.387" level="INFO">${ACCURACY} = {'diff': [0.00012098600000000001, 0.00012099999999999958, 0.00012074999999999933, 0.00012086099999999989, 0.00012055600000000083, 0.00012088799999999955, 0.00012101399999999915, 0.00012080499999999814...</msg>
<status status="PASS" starttime="20201029 12:45:17.384" endtime="20201029 12:45:17.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.392" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.391" endtime="20201029 12:45:17.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.395" level="INFO">VALUE: [0.00012098600000000001, 0.00012099999999999958, 0.00012074999999999933, 0.00012086099999999989, 0.00012055600000000083, 0.00012088799999999955, 0.00012101399999999915, 0.00012080499999999814, 0.0001206249999999992, 0.0001206249999999992, 0.00012120899999999712, 0.00012105600000000133, 0.00012088899999999903, 0.00012113899999999928, 0.00012033300000000025, 0.00012012500000000217, 0.00012083299999999728, 0.00012099999999999958, 0.00012118000000000198, 0.00012098600000000001, 0.00012041700000000113, 0.00012066600000000191, 0.00012073599999999976, 0.00012044500000000027, 0.00012037499999999896, 0.00012055600000000083, 0.00012124999999999983, 0.00012099999999999958, 0.00012056900000000093, 0.00012030499999999764, 0.00012081900000000118, 0.00012065300000000181, 0.00012104200000000176, 0.00012101400000000262, 0.00012079099999999857, 0.00012073599999999976, 0.0001211249999999997, 0.00012061099999999964, 0.00012043000000000123, 0.00012081900000000118, 0.00012048599999999951, 0.00012083299999999728, 0.00012069500000000052, 0.0001207090000000001, 0.00012049999999999908, 0.00012056999999999693, 0.00012066700000000138, 0.00012119500000000102, 0.00012119400000000155, 0.00012080499999999814]</msg>
<status status="PASS" starttime="20201029 12:45:17.393" endtime="20201029 12:45:17.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.388" endtime="20201029 12:45:17.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.401" endtime="20201029 12:45:17.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.399" endtime="20201029 12:45:17.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.398" endtime="20201029 12:45:17.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.030" endtime="20201029 12:45:17.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.029" endtime="20201029 12:45:17.422"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.431" endtime="20201029 12:45:17.451"></status>
</kw>
<msg timestamp="20201029 12:45:17.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.429" endtime="20201029 12:45:17.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.453" endtime="20201029 12:45:17.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.456" endtime="20201029 12:45:17.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.426" endtime="20201029 12:45:17.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.424" endtime="20201029 12:45:17.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.465" endtime="20201029 12:45:17.751"></status>
</kw>
<msg timestamp="20201029 12:45:17.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.464" endtime="20201029 12:45:17.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.755" endtime="20201029 12:45:17.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.764" endtime="20201029 12:45:17.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.461" endtime="20201029 12:45:17.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.459" endtime="20201029 12:45:17.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.771" level="INFO">${RESULT} = [{'diff': 0.00012206900000000243}, {'diff': 0.00012148600000000051}, {'diff': 0.00012206899999999896}, {'diff': 0.00012172200000000119}, {'diff': 0.0001211249999999997}, {'diff': 0.0001217500000000003...</msg>
<status status="PASS" starttime="20201029 12:45:17.767" endtime="20201029 12:45:17.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.776" level="INFO">${ACCURACY} = {'diff': [0.00012206900000000243, 0.00012148600000000051, 0.00012206899999999896, 0.00012172200000000119, 0.0001211249999999997, 0.00012175000000000033, 0.00012123600000000026, 0.00012105600000000133,...</msg>
<status status="PASS" starttime="20201029 12:45:17.772" endtime="20201029 12:45:17.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.780" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.779" endtime="20201029 12:45:17.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.783" level="INFO">VALUE: [0.00012206900000000243, 0.00012148600000000051, 0.00012206899999999896, 0.00012172200000000119, 0.0001211249999999997, 0.00012175000000000033, 0.00012123600000000026, 0.00012105600000000133, 0.00012211100000000114, 0.00012218100000000245, 0.00012204199999999929, 0.00012191599999999969, 0.00012211100000000114, 0.00012174999999999686, 0.00012204199999999929, 0.0001216250000000002, 0.00012154199999999879, 0.00012205599999999886, 0.00012155600000000183, 0.0001219449999999983, 0.00012200000000000058, 0.00012173600000000076, 0.0001210969999999971, 0.00012138899999999953, 0.00012205499999999939, 0.00012161100000000064, 0.00012137499999999996, 0.00012173600000000076, 0.00012198600000000101, 0.00012168099999999848, 0.0001215830000000015, 0.0001221120000000006, 0.00012188900000000003, 0.00012213900000000028, 0.00012192999999999926, 0.0001221799999999995, 0.00012193099999999873, 0.00012204199999999929, 0.00012115299999999884, 0.00012184700000000132, 0.00012143099999999823, 0.00012140200000000309, 0.0001212370000000032, 0.0001218189999999987, 0.000122083000000002, 0.00012111100000000014, 0.00012205499999999939, 0.00012148600000000051, 0.00012183299999999828, 0.00012130600000000158]</msg>
<status status="PASS" starttime="20201029 12:45:17.781" endtime="20201029 12:45:17.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.777" endtime="20201029 12:45:17.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.795" endtime="20201029 12:45:17.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.793" endtime="20201029 12:45:17.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.791" endtime="20201029 12:45:17.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.422" endtime="20201029 12:45:17.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.422" endtime="20201029 12:45:17.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.980" endtime="20201029 12:45:17.816"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:38.907" endtime="20201029 12:45:17.816" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:55.506" endtime="20201029 12:45:17.820"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.875" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:17.883" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:18.881" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:17.873" endtime="20201029 12:45:18.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.885" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:45:18.883" endtime="20201029 12:45:19.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.872" endtime="20201029 12:45:19.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.892" endtime="20201029 12:45:20.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.889" endtime="20201029 12:45:20.123"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.136" endtime="20201029 12:45:20.157"></status>
</kw>
<msg timestamp="20201029 12:45:20.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.134" endtime="20201029 12:45:20.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.158" endtime="20201029 12:45:20.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:20.161" endtime="20201029 12:45:20.164"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:20.131" endtime="20201029 12:45:20.165"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:20.129" endtime="20201029 12:45:20.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.128" endtime="20201029 12:45:20.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:20.169" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:20.169" endtime="20201029 12:45:20.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.166" endtime="20201029 12:45:20.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.127" endtime="20201029 12:45:20.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.127" endtime="20201029 12:45:20.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.171" endtime="20201029 12:45:20.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.125" endtime="20201029 12:45:20.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.174" endtime="20201029 12:45:20.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.124" endtime="20201029 12:45:20.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.871" endtime="20201029 12:45:20.177"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.183" endtime="20201029 12:45:20.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.181" endtime="20201029 12:45:20.204"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.227" endtime="20201029 12:45:20.244"></status>
</kw>
<msg timestamp="20201029 12:45:20.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.225" endtime="20201029 12:45:20.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.246" endtime="20201029 12:45:20.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.251" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:20.248" endtime="20201029 12:45:20.252"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:20.222" endtime="20201029 12:45:20.253"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:20.218" endtime="20201029 12:45:20.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.215" endtime="20201029 12:45:20.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:20.258" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:20.257" endtime="20201029 12:45:20.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.254" endtime="20201029 12:45:20.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.213" endtime="20201029 12:45:20.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.211" endtime="20201029 12:45:20.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.259" endtime="20201029 12:45:20.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.209" endtime="20201029 12:45:20.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.205" endtime="20201029 12:45:20.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.180" endtime="20201029 12:45:20.263"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.271" endtime="20201029 12:45:26.398"></status>
</kw>
<msg timestamp="20201029 12:45:26.399" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.270" endtime="20201029 12:45:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.401" endtime="20201029 12:45:26.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.407" endtime="20201029 12:45:26.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.267" endtime="20201029 12:45:26.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.265" endtime="20201029 12:45:26.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.419" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:45:26.415" endtime="20201029 12:45:26.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.428" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:26.426" endtime="20201029 12:45:26.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.433" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:26.431" endtime="20201029 12:45:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.420" endtime="20201029 12:45:26.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.444" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:26.441" endtime="20201029 12:45:26.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.448" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:26.446" endtime="20201029 12:45:26.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.436" endtime="20201029 12:45:26.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.459" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:26.457" endtime="20201029 12:45:26.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.464" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:45:26.461" endtime="20201029 12:45:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.452" endtime="20201029 12:45:26.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.472" endtime="20201029 12:45:26.768"></status>
</kw>
<msg timestamp="20201029 12:45:26.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078017458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178109097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.471" endtime="20201029 12:45:26.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078017458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178109097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.772" endtime="20201029 12:45:26.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.780" endtime="20201029 12:45:26.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.468" endtime="20201029 12:45:26.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.466" endtime="20201029 12:45:26.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:26.786" level="INFO">${FILTERED} = [{'diff': 0.100091639}, {'diff': 0.09994875000000003}, {'diff': 0.100008708}, {'diff': 0.100008708}, {'diff': 0.10000870800000006}, {'diff': 0.1000086939999999}, {'diff': 0.100008722}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 12:45:26.783" endtime="20201029 12:45:26.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.790" level="INFO">${RESULT} = {'diff': [0.100091639, 0.09994875000000003, 0.100008708, 0.100008708, 0.10000870800000006, 0.1000086939999999, 0.100008722, 0.10000870799999995, 0.10000876300000006, 5.410000001315751e-07, 0.100009236...</msg>
<status status="PASS" starttime="20201029 12:45:26.787" endtime="20201029 12:45:26.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.795" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:26.793" endtime="20201029 12:45:26.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.797" level="INFO">VALUE: [0.100091639, 0.09994875000000003, 0.100008708, 0.100008708, 0.10000870800000006, 0.1000086939999999, 0.100008722, 0.10000870799999995, 0.10000876300000006, 5.410000001315751e-07, 0.100009236, 0.10000920800000013, 0.10000874999999998, 0.10000922199999995, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000916599999998, 0.10000869400000001, 0.1000087220000001, 0.100009236, 0.10000872199999966, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919500000016, 0.10000870899999992, 0.10000874999999976, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10000918099999989, 0.10000870899999992, 0.1000087229999993, 0.1000087220000001, 5.410000003536197e-07, 0.10000927799999992]</msg>
<status status="PASS" starttime="20201029 12:45:26.796" endtime="20201029 12:45:26.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.791" endtime="20201029 12:45:26.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.263" endtime="20201029 12:45:26.798"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:20.177" endtime="20201029 12:45:26.799" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.806" endtime="20201029 12:45:26.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.805" endtime="20201029 12:45:26.826"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.841" endtime="20201029 12:45:26.860"></status>
</kw>
<msg timestamp="20201029 12:45:26.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.840" endtime="20201029 12:45:26.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.861" endtime="20201029 12:45:26.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.866" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:26.864" endtime="20201029 12:45:26.867"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:26.837" endtime="20201029 12:45:26.867"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:26.834" endtime="20201029 12:45:26.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.832" endtime="20201029 12:45:26.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:26.872" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:26.871" endtime="20201029 12:45:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.869" endtime="20201029 12:45:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.832" endtime="20201029 12:45:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.831" endtime="20201029 12:45:26.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.874" endtime="20201029 12:45:26.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.829" endtime="20201029 12:45:26.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.827" endtime="20201029 12:45:26.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.803" endtime="20201029 12:45:26.877"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.885" endtime="20201029 12:45:33.012"></status>
</kw>
<msg timestamp="20201029 12:45:33.013" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.884" endtime="20201029 12:45:33.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.016" endtime="20201029 12:45:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.022" endtime="20201029 12:45:33.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.881" endtime="20201029 12:45:33.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.879" endtime="20201029 12:45:33.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.034" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:45:33.030" endtime="20201029 12:45:33.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.044" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:33.042" endtime="20201029 12:45:33.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.049" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:33.046" endtime="20201029 12:45:33.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.037" endtime="20201029 12:45:33.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.059" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:33.057" endtime="20201029 12:45:33.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.064" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:33.062" endtime="20201029 12:45:33.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.052" endtime="20201029 12:45:33.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.076" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:33.072" endtime="20201029 12:45:33.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.081" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:45:33.079" endtime="20201029 12:45:33.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.067" endtime="20201029 12:45:33.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.098" endtime="20201029 12:45:33.396"></status>
</kw>
<msg timestamp="20201029 12:45:33.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068740458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.094" endtime="20201029 12:45:33.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068740458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.400" endtime="20201029 12:45:33.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.407" endtime="20201029 12:45:33.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.089" endtime="20201029 12:45:33.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.085" endtime="20201029 12:45:33.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:33.414" level="INFO">${FILTERED} = [{'diff': 0.100098473}, {'diff': 0.09994376399999999}, {'diff': 0.10000772200000002}, {'diff': 0.100007805}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000822200000004}, {'diff': 0.1000097359999999...</msg>
<status status="PASS" starttime="20201029 12:45:33.411" endtime="20201029 12:45:33.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.418" level="INFO">${RESULT} = {'diff': [0.100098473, 0.09994376399999999, 0.10000772200000002, 0.100007805, 5.419999999922709e-07, 0.10000822200000004, 0.10000973599999996, 0.10000768100000001, 0.1000097499999999, 5.41000000131575...</msg>
<status status="PASS" starttime="20201029 12:45:33.415" endtime="20201029 12:45:33.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.422" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:33.421" endtime="20201029 12:45:33.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.425" level="INFO">VALUE: [0.100098473, 0.09994376399999999, 0.10000772200000002, 0.100007805, 5.419999999922709e-07, 0.10000822200000004, 0.10000973599999996, 0.10000768100000001, 0.1000097499999999, 5.410000001315751e-07, 0.10000820900000007, 5.409999999095305e-07, 0.10001022200000009, 0.10000769499999995, 0.10000822200000004, 0.1000097219999998, 0.10000772200000041, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001022199999987, 0.10000769399999987, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000823599999986, 0.10000817999999967, 0.10000970799999997, 0.10000768100000013, 0.10000972200000025, 0.10000769499999995, 0.10000970900000006, 0.10000770900000022, 0.10000972200000025, 0.1000076950000004, 0.10000970900000006, 0.10000769499999951, 0.10000973599999963, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 0.10001024999999952, 0.1000077079999997]</msg>
<status status="PASS" starttime="20201029 12:45:33.423" endtime="20201029 12:45:33.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.419" endtime="20201029 12:45:33.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.877" endtime="20201029 12:45:33.426"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:26.801" endtime="20201029 12:45:33.427" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:33.434" endtime="20201029 12:45:33.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.432" endtime="20201029 12:45:33.455"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.468" endtime="20201029 12:45:33.485"></status>
</kw>
<msg timestamp="20201029 12:45:33.486" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.467" endtime="20201029 12:45:33.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.487" endtime="20201029 12:45:33.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.492" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:33.490" endtime="20201029 12:45:33.492"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:33.464" endtime="20201029 12:45:33.493"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:33.461" endtime="20201029 12:45:33.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.460" endtime="20201029 12:45:33.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:33.497" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:33.497" endtime="20201029 12:45:33.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.494" endtime="20201029 12:45:33.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.459" endtime="20201029 12:45:33.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.459" endtime="20201029 12:45:33.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.499" endtime="20201029 12:45:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.457" endtime="20201029 12:45:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.455" endtime="20201029 12:45:33.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.431" endtime="20201029 12:45:33.502"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.510" endtime="20201029 12:45:39.637"></status>
</kw>
<msg timestamp="20201029 12:45:39.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.509" endtime="20201029 12:45:39.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.640" endtime="20201029 12:45:39.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.646" endtime="20201029 12:45:39.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.506" endtime="20201029 12:45:39.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.504" endtime="20201029 12:45:39.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.657" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:45:39.653" endtime="20201029 12:45:39.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.669" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:39.667" endtime="20201029 12:45:39.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.674" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:39.672" endtime="20201029 12:45:39.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.660" endtime="20201029 12:45:39.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.684" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:39.682" endtime="20201029 12:45:39.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.689" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:39.687" endtime="20201029 12:45:39.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.677" endtime="20201029 12:45:39.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.696" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:39.695" endtime="20201029 12:45:39.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.698" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:45:39.697" endtime="20201029 12:45:39.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.692" endtime="20201029 12:45:39.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.706" endtime="20201029 12:45:39.996"></status>
</kw>
<msg timestamp="20201029 12:45:39.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065372889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165504736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.704" endtime="20201029 12:45:39.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065372889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165504736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.000" endtime="20201029 12:45:40.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.008" endtime="20201029 12:45:40.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.701" endtime="20201029 12:45:40.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.700" endtime="20201029 12:45:40.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:40.014" level="INFO">${FILTERED} = [{'diff': 0.10013184700000001}, {'diff': 0.10004279099999999}, {'diff': 0.09987902800000004}, {'diff': 0.100009236}, {'diff': 0.10000873599999993}, {'diff': 5.420000001032932e-07}, {'diff': 5.40999999...</msg>
<status status="PASS" starttime="20201029 12:45:40.011" endtime="20201029 12:45:40.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.021" level="INFO">${RESULT} = {'diff': [0.10013184700000001, 0.10004279099999999, 0.09987902800000004, 0.100009236, 0.10000873599999993, 5.420000001032932e-07, 5.409999999095305e-07, 5.410000000205528e-07, 0.10000920899999999, 0.1...</msg>
<status status="PASS" starttime="20201029 12:45:40.015" endtime="20201029 12:45:40.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.026" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:40.025" endtime="20201029 12:45:40.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.028" level="INFO">VALUE: [0.10013184700000001, 0.10004279099999999, 0.09987902800000004, 0.100009236, 0.10000873599999993, 5.420000001032932e-07, 5.409999999095305e-07, 5.410000000205528e-07, 0.10000920899999999, 0.10000869499999987, 0.10000870800000006, 0.10000874999999998, 0.10000922199999995, 0.10000869400000001, 0.10000870800000006, 0.1000087220000001, 0.10000869400000001, 0.10000867999999974, 0.10000870799999984, 0.1000087220000001, 0.10000870799999984, 0.10000876400000003, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000925000000027, 5.419999999922709e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000872199999966, 0.10000868000000018, 0.10000870799999984, 0.1000087220000001, 0.10000869400000045, 0.10000874999999976, 0.10000922299999981, 0.1000087220000001, 0.10000870799999984, 0.10000869499999965, 0.1000087220000001]</msg>
<status status="PASS" starttime="20201029 12:45:40.027" endtime="20201029 12:45:40.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.022" endtime="20201029 12:45:40.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.503" endtime="20201029 12:45:40.030"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:33.429" endtime="20201029 12:45:40.030" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:40.037" endtime="20201029 12:45:40.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.036" endtime="20201029 12:45:40.057"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.071" endtime="20201029 12:45:40.088"></status>
</kw>
<msg timestamp="20201029 12:45:40.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.069" endtime="20201029 12:45:40.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.090" endtime="20201029 12:45:40.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.095" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:40.093" endtime="20201029 12:45:40.095"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:40.066" endtime="20201029 12:45:40.096"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:40.064" endtime="20201029 12:45:40.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.062" endtime="20201029 12:45:40.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:40.100" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:40.100" endtime="20201029 12:45:40.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.098" endtime="20201029 12:45:40.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.062" endtime="20201029 12:45:40.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.061" endtime="20201029 12:45:40.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.102" endtime="20201029 12:45:40.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.060" endtime="20201029 12:45:40.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.058" endtime="20201029 12:45:40.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.034" endtime="20201029 12:45:40.105"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.115" endtime="20201029 12:45:46.242"></status>
</kw>
<msg timestamp="20201029 12:45:46.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.113" endtime="20201029 12:45:46.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.245" endtime="20201029 12:45:46.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.251" endtime="20201029 12:45:46.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.109" endtime="20201029 12:45:46.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.107" endtime="20201029 12:45:46.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.263" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:45:46.258" endtime="20201029 12:45:46.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.272" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:46.269" endtime="20201029 12:45:46.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.276" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:46.274" endtime="20201029 12:45:46.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.264" endtime="20201029 12:45:46.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.287" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:46.284" endtime="20201029 12:45:46.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.291" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:46.289" endtime="20201029 12:45:46.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.279" endtime="20201029 12:45:46.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.301" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:46.299" endtime="20201029 12:45:46.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.306" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:45:46.304" endtime="20201029 12:45:46.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.294" endtime="20201029 12:45:46.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.322" endtime="20201029 12:45:46.619"></status>
</kw>
<msg timestamp="20201029 12:45:46.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067462528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167690278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.319" endtime="20201029 12:45:46.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067462528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167690278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.622" endtime="20201029 12:45:46.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.630" endtime="20201029 12:45:46.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.313" endtime="20201029 12:45:46.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.309" endtime="20201029 12:45:46.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:46.637" level="INFO">${FILTERED} = [{'diff': 0.10022775}, {'diff': 0.10004825}, {'diff': 0.099780125}, {'diff': 0.10000970800000003}, {'diff': 5.419999999922709e-07}, {'diff': 0.10001020800000004}, {'diff': 0.10000869400000001}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:46.634" endtime="20201029 12:45:46.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.642" level="INFO">${RESULT} = {'diff': [0.10022775, 0.10004825, 0.099780125, 0.10000970800000003, 5.419999999922709e-07, 0.10001020800000004, 0.10000869400000001, 0.10000772199999997, 0.10000875000000009, 0.10000922199999995, 0.10...</msg>
<status status="PASS" starttime="20201029 12:45:46.638" endtime="20201029 12:45:46.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.646" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:46.645" endtime="20201029 12:45:46.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.649" level="INFO">VALUE: [0.10022775, 0.10004825, 0.099780125, 0.10000970800000003, 5.419999999922709e-07, 0.10001020800000004, 0.10000869400000001, 0.10000772199999997, 0.10000875000000009, 0.10000922199999995, 0.10000770799999992, 0.1000087500000002, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000918099999989, 0.10000770800000014, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000924999999983, 0.10000969400000015, 0.10000870799999984, 0.10000769399999987, 0.1000087220000001, 0.10000972200000025, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000102359999997, 0.10000870799999984, 0.10000769399999943, 0.10000870799999984, 0.10000970799999997, 0.10000869400000045, 0.1000077500000005, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10000919400000008]</msg>
<status status="PASS" starttime="20201029 12:45:46.647" endtime="20201029 12:45:46.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.643" endtime="20201029 12:45:46.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.106" endtime="20201029 12:45:46.650"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:40.032" endtime="20201029 12:45:46.651" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:46.658" endtime="20201029 12:45:46.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.656" endtime="20201029 12:45:46.678"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.691" endtime="20201029 12:45:46.710"></status>
</kw>
<msg timestamp="20201029 12:45:46.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.689" endtime="20201029 12:45:46.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.713" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.711" endtime="20201029 12:45:46.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.716" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:46.714" endtime="20201029 12:45:46.716"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:46.687" endtime="20201029 12:45:46.718"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:46.684" endtime="20201029 12:45:46.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.683" endtime="20201029 12:45:46.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:46.722" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:46.722" endtime="20201029 12:45:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.720" endtime="20201029 12:45:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.682" endtime="20201029 12:45:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.681" endtime="20201029 12:45:46.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.724" endtime="20201029 12:45:46.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.680" endtime="20201029 12:45:46.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.678" endtime="20201029 12:45:46.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.655" endtime="20201029 12:45:46.727"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.735" endtime="20201029 12:45:52.861"></status>
</kw>
<msg timestamp="20201029 12:45:52.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.733" endtime="20201029 12:45:52.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.867" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.864" endtime="20201029 12:45:52.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.869" endtime="20201029 12:45:52.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.731" endtime="20201029 12:45:52.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.729" endtime="20201029 12:45:52.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.885" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:45:52.876" endtime="20201029 12:45:52.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.894" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:52.892" endtime="20201029 12:45:52.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.898" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:52.896" endtime="20201029 12:45:52.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.887" endtime="20201029 12:45:52.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.908" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:52.906" endtime="20201029 12:45:52.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.912" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:52.911" endtime="20201029 12:45:52.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.901" endtime="20201029 12:45:52.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.922" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:52.920" endtime="20201029 12:45:52.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.927" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:45:52.925" endtime="20201029 12:45:52.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.916" endtime="20201029 12:45:52.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.942" endtime="20201029 12:45:53.235"></status>
</kw>
<msg timestamp="20201029 12:45:53.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.939" endtime="20201029 12:45:53.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.239" endtime="20201029 12:45:53.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.246" endtime="20201029 12:45:53.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.933" endtime="20201029 12:45:53.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.930" endtime="20201029 12:45:53.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:53.252" level="INFO">${FILTERED} = [{'diff': 0.10034123600000001}, {'diff': 0.100054125}, {'diff': 5.419999999922709e-07}, {'diff': 5.42000000047782e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419...</msg>
<status status="PASS" starttime="20201029 12:45:53.249" endtime="20201029 12:45:53.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.256" level="INFO">${RESULT} = {'diff': [0.10034123600000001, 0.100054125, 5.419999999922709e-07, 5.42000000047782e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-...</msg>
<status status="PASS" starttime="20201029 12:45:53.253" endtime="20201029 12:45:53.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.260" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:53.259" endtime="20201029 12:45:53.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.262" level="INFO">VALUE: [0.10034123600000001, 0.100054125, 5.419999999922709e-07, 5.42000000047782e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000092079999999, 5.419999999922709e-07, 0.100009236, 0.10000919400000008, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000918099999989, 0.10000869500000009, 0.10000869500000009, 0.10000870899999992, 0.10000876400000003, 0.100009236, 0.10000869500000009, 0.10000869400000001, 0.10000872199999966, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922199999973, 0.1000087220000001, 0.100009236, 0.10000870800000072, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.100009236, 0.10000870800000072, 0.1000087220000001, 0.1000086799999993, 0.10000870799999984, 0.10000870799999984]</msg>
<status status="PASS" starttime="20201029 12:45:53.261" endtime="20201029 12:45:53.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.257" endtime="20201029 12:45:53.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.727" endtime="20201029 12:45:53.264"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:46.652" endtime="20201029 12:45:53.265" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.271" endtime="20201029 12:45:53.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.270" endtime="20201029 12:45:53.291"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.305" endtime="20201029 12:45:53.323"></status>
</kw>
<msg timestamp="20201029 12:45:53.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.303" endtime="20201029 12:45:53.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.325" endtime="20201029 12:45:53.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:53.327" endtime="20201029 12:45:53.330"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.300" endtime="20201029 12:45:53.330"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.298" endtime="20201029 12:45:53.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.296" endtime="20201029 12:45:53.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:53.335" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:53.334" endtime="20201029 12:45:53.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.332" endtime="20201029 12:45:53.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.295" endtime="20201029 12:45:53.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.295" endtime="20201029 12:45:53.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.337" endtime="20201029 12:45:53.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.293" endtime="20201029 12:45:53.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.292" endtime="20201029 12:45:53.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.268" endtime="20201029 12:45:53.339"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.348" endtime="20201029 12:45:59.473"></status>
</kw>
<msg timestamp="20201029 12:45:59.474" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.346" endtime="20201029 12:45:59.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.476" endtime="20201029 12:45:59.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.482" endtime="20201029 12:45:59.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.343" endtime="20201029 12:45:59.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.342" endtime="20201029 12:45:59.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.493" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:45:59.489" endtime="20201029 12:45:59.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.502" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:59.500" endtime="20201029 12:45:59.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.506" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:59.504" endtime="20201029 12:45:59.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.495" endtime="20201029 12:45:59.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.516" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:59.514" endtime="20201029 12:45:59.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.520" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:59.518" endtime="20201029 12:45:59.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.509" endtime="20201029 12:45:59.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.530" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:59.528" endtime="20201029 12:45:59.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.534" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:45:59.532" endtime="20201029 12:45:59.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.523" endtime="20201029 12:45:59.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.552" endtime="20201029 12:45:59.853"></status>
</kw>
<msg timestamp="20201029 12:45:59.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066168625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.549" endtime="20201029 12:45:59.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066168625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.857" endtime="20201029 12:45:59.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.865" endtime="20201029 12:45:59.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.541" endtime="20201029 12:45:59.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.537" endtime="20201029 12:45:59.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:59.871" level="INFO">${FILTERED} = [{'diff': 0.100488708}, {'diff': 0.10005509699999998}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.100009236}, {'diff': 5.419999999922...</msg>
<status status="PASS" starttime="20201029 12:45:59.868" endtime="20201029 12:45:59.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.875" level="INFO">${RESULT} = {'diff': [0.100488708, 0.10005509699999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419...</msg>
<status status="PASS" starttime="20201029 12:45:59.872" endtime="20201029 12:45:59.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.879" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:59.878" endtime="20201029 12:45:59.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.882" level="INFO">VALUE: [0.100488708, 0.10005509699999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000918000000003, 0.10000870800000006, 0.10000869400000001, 0.1000087220000001, 0.10000869400000001, 0.10000870799999984, 0.10000869500000009, 0.10000870899999992, 0.10000870899999992, 0.1000087220000001, 0.10000873599999993, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000919499999972, 0.10000919500000016, 0.10000870799999984, 0.10000870799999984, 0.10000870799999984, 0.1000087220000001, 0.10000869499999965, 0.10000869399999956, 0.10000870799999984, 0.10000869399999956, 0.10000872199999922, 0.10000870799999984, 0.10000870799999984, 0.1000087220000001, 0.10000869399999956]</msg>
<status status="PASS" starttime="20201029 12:45:59.880" endtime="20201029 12:45:59.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.876" endtime="20201029 12:45:59.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.340" endtime="20201029 12:45:59.883"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:53.266" endtime="20201029 12:45:59.884" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:17.830" endtime="20201029 12:45:59.891"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:43:06.445" endtime="20201029 12:45:59.923"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
