<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:01.426" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.338" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:03.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:04.467" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:03.337" endtime="20201029 09:33:04.468"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.474" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:33:04.471" endtime="20201029 09:33:05.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.335" endtime="20201029 09:33:05.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:05.480" endtime="20201029 09:33:05.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.478" endtime="20201029 09:33:05.694"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.709" endtime="20201029 09:33:05.730"></status>
</kw>
<msg timestamp="20201029 09:33:05.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.707" endtime="20201029 09:33:05.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.731" endtime="20201029 09:33:05.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:05.734" endtime="20201029 09:33:05.737"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.705" endtime="20201029 09:33:05.737"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.702" endtime="20201029 09:33:05.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.701" endtime="20201029 09:33:05.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:05.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:05.742" endtime="20201029 09:33:05.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.740" endtime="20201029 09:33:05.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.700" endtime="20201029 09:33:05.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.699" endtime="20201029 09:33:05.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.745" endtime="20201029 09:33:05.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.697" endtime="20201029 09:33:05.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.748" endtime="20201029 09:33:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.695" endtime="20201029 09:33:05.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.334" endtime="20201029 09:33:05.750"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:05.756" endtime="20201029 09:33:05.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.755" endtime="20201029 09:33:05.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.790" endtime="20201029 09:33:05.809"></status>
</kw>
<msg timestamp="20201029 09:33:05.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.789" endtime="20201029 09:33:05.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.811" endtime="20201029 09:33:05.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.815" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:05.813" endtime="20201029 09:33:05.816"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.786" endtime="20201029 09:33:05.817"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.784" endtime="20201029 09:33:05.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.782" endtime="20201029 09:33:05.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:05.821" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:05.820" endtime="20201029 09:33:05.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.818" endtime="20201029 09:33:05.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.781" endtime="20201029 09:33:05.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.780" endtime="20201029 09:33:05.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.823" endtime="20201029 09:33:05.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.779" endtime="20201029 09:33:05.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.777" endtime="20201029 09:33:05.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.754" endtime="20201029 09:33:05.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.833" endtime="20201029 09:33:05.847"></status>
</kw>
<msg timestamp="20201029 09:33:05.847" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.831" endtime="20201029 09:33:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.850" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.849" endtime="20201029 09:33:05.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.851" endtime="20201029 09:33:05.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.828" endtime="20201029 09:33:05.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.827" endtime="20201029 09:33:05.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.858" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:05.857" endtime="20201029 09:33:05.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.860" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:33:05.859" endtime="20201029 09:33:05.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.854" endtime="20201029 09:33:05.860"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:05.751" endtime="20201029 09:33:05.861" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:02.736" endtime="20201029 09:33:05.863"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.918" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:05.926" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:06.999" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:05.916" endtime="20201029 09:33:07.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.003" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:33:07.001" endtime="20201029 09:33:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.915" endtime="20201029 09:33:08.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:08.010" endtime="20201029 09:33:08.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.007" endtime="20201029 09:33:08.328"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.341" endtime="20201029 09:33:08.361"></status>
</kw>
<msg timestamp="20201029 09:33:08.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.340" endtime="20201029 09:33:08.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.363" endtime="20201029 09:33:08.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.367" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:08.365" endtime="20201029 09:33:08.368"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.337" endtime="20201029 09:33:08.368"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.335" endtime="20201029 09:33:08.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.334" endtime="20201029 09:33:08.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:08.373" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:08.372" endtime="20201029 09:33:08.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.370" endtime="20201029 09:33:08.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.333" endtime="20201029 09:33:08.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.332" endtime="20201029 09:33:08.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.374" endtime="20201029 09:33:08.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.331" endtime="20201029 09:33:08.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.377" endtime="20201029 09:33:08.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.329" endtime="20201029 09:33:08.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.913" endtime="20201029 09:33:08.379"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:08.386" endtime="20201029 09:33:08.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.383" endtime="20201029 09:33:08.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.424" endtime="20201029 09:33:08.446"></status>
</kw>
<msg timestamp="20201029 09:33:08.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.421" endtime="20201029 09:33:08.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.452" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.449" endtime="20201029 09:33:08.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.457" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:08.453" endtime="20201029 09:33:08.457"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.417" endtime="20201029 09:33:08.458"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.413" endtime="20201029 09:33:08.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.411" endtime="20201029 09:33:08.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:08.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:08.465" endtime="20201029 09:33:08.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.462" endtime="20201029 09:33:08.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.410" endtime="20201029 09:33:08.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.409" endtime="20201029 09:33:08.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.469" endtime="20201029 09:33:08.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.408" endtime="20201029 09:33:08.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.406" endtime="20201029 09:33:08.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.382" endtime="20201029 09:33:08.474"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.489" endtime="20201029 09:33:08.507"></status>
</kw>
<msg timestamp="20201029 09:33:08.508" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.486" endtime="20201029 09:33:08.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.509" endtime="20201029 09:33:08.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.514" endtime="20201029 09:33:08.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.482" endtime="20201029 09:33:08.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.479" endtime="20201029 09:33:08.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.531" endtime="20201029 09:33:08.806"></status>
</kw>
<msg timestamp="20201029 09:33:08.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094732861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.528" endtime="20201029 09:33:08.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094732861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.809" endtime="20201029 09:33:08.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.815" endtime="20201029 09:33:08.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.524" endtime="20201029 09:33:08.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.520" endtime="20201029 09:33:08.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.821" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.527999999993763e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.402999999988168e-06}, {'diff': 5.26400000000482e-06}, {'diff': 6.597000000010955e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:08.818" endtime="20201029 09:33:08.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.824" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.778000000000952e-06, 8.527999999993763e-06, 1.0333000000001258e-05, 6.402999999988168e-06, 5.26400000000482e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.777...</msg>
<status status="PASS" starttime="20201029 09:33:08.821" endtime="20201029 09:33:08.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.827" endtime="20201029 09:33:08.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.831" level="INFO">VALUE: [8.778000000000952e-06, 8.527999999993763e-06, 1.0333000000001258e-05, 6.402999999988168e-06, 5.26400000000482e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.777999999999952e-06, 8.723000000002146e-06, 6.791000000005987e-06, 9.833000000000758e-06, 9.971999999996983e-06, 7.346999999990889e-06, 6.0550000000048065e-06, 7.0280000000061404e-06, 7.958000000002352e-06, 7.167000000002366e-06, 7.58400000000492e-06, 4.583000000002446e-06, 8.58400000000592e-06, 7.694999999988128e-06, 1.0333000000001258e-05, 9.277000000001978e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.829" endtime="20201029 09:33:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.825" endtime="20201029 09:33:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.477" endtime="20201029 09:33:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.476" endtime="20201029 09:33:08.832"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.840" endtime="20201029 09:33:08.855"></status>
</kw>
<msg timestamp="20201029 09:33:08.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.838" endtime="20201029 09:33:08.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.856" endtime="20201029 09:33:08.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.858" endtime="20201029 09:33:08.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.836" endtime="20201029 09:33:08.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.834" endtime="20201029 09:33:08.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.868" endtime="20201029 09:33:09.190"></status>
</kw>
<msg timestamp="20201029 09:33:09.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094732861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.867" endtime="20201029 09:33:09.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094732861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.194" endtime="20201029 09:33:09.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.203" endtime="20201029 09:33:09.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.864" endtime="20201029 09:33:09.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.863" endtime="20201029 09:33:09.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.209" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.527999999993763e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.402999999988168e-06}, {'diff': 5.26400000000482e-06}, {'diff': 6.597000000010955e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:09.206" endtime="20201029 09:33:09.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.213" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.778000000000952e-06, 8.527999999993763e-06, 1.0333000000001258e-05, 6.402999999988168e-06, 5.26400000000482e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.777...</msg>
<status status="PASS" starttime="20201029 09:33:09.210" endtime="20201029 09:33:09.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.218" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.216" endtime="20201029 09:33:09.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.220" level="INFO">VALUE: [8.778000000000952e-06, 8.527999999993763e-06, 1.0333000000001258e-05, 6.402999999988168e-06, 5.26400000000482e-06, 6.597000000010955e-06, 4.583000000002446e-06, 1.0889000000000038e-05, 7.777999999999952e-06, 8.723000000002146e-06, 6.791000000005987e-06, 9.833000000000758e-06, 9.971999999996983e-06, 7.346999999990889e-06, 6.0550000000048065e-06, 7.0280000000061404e-06, 7.958000000002352e-06, 7.167000000002366e-06, 7.58400000000492e-06, 4.583000000002446e-06, 8.58400000000592e-06, 7.694999999988128e-06, 1.0333000000001258e-05, 9.277000000001978e-06, 8.222000000002172e-06, 8.471999999981605e-06, 8.347000000019644e-06, 8.693999999975777e-06, 6.777000000013356e-06, 7.2220000000289275e-06, 8.652999999969602e-06, 9.943999999983966e-06, 7.833999999984353e-06, 4.347999999987362e-06, 1.094499999998444e-05, 8.333000000027013e-06, 6.0550000000048065e-06, 8.472000000037117e-06, 9.028000000022018e-06, 9.90299999997779e-06, 8.457999999988974e-06, 7.276999999972222e-06, 7.2779999999994516e-06, 1.0653000000027113e-05, 5.833999999982353e-06, 1.0402999999992169e-05, 8.153000000010735e-06, 7.346999999990889e-06, 6.402999999988168e-06, 9.45800000001773e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.219" endtime="20201029 09:33:09.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.214" endtime="20201029 09:33:09.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.833" endtime="20201029 09:33:09.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.832" endtime="20201029 09:33:09.222"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.230" endtime="20201029 09:33:09.245"></status>
</kw>
<msg timestamp="20201029 09:33:09.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.229" endtime="20201029 09:33:09.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.248" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.246" endtime="20201029 09:33:09.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.249" endtime="20201029 09:33:09.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.226" endtime="20201029 09:33:09.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.224" endtime="20201029 09:33:09.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.265" endtime="20201029 09:33:09.574"></status>
</kw>
<msg timestamp="20201029 09:33:09.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094916236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094926069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.261" endtime="20201029 09:33:09.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094916236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094926069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.579" endtime="20201029 09:33:09.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.591" endtime="20201029 09:33:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.257" endtime="20201029 09:33:09.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.253" endtime="20201029 09:33:09.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.602" level="INFO">${RESULT} = [{'diff': 9.833000000000758e-06}, {'diff': 9.971999999996983e-06}, {'diff': 7.346999999990889e-06}, {'diff': 6.0550000000048065e-06}, {'diff': 7.0280000000061404e-06}, {'diff': 7.958000000002352e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:09.598" endtime="20201029 09:33:09.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.610" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.833000000000758e-06, 9.971999999996983e-06, 7.346999999990889e-06, 6.0550000000048065e-06, 7.0280000000061404e-06, 7.958000000002352e-06, 7.167000000002366e-06, 7.58400000000492e-06, 4.583...</msg>
<status status="PASS" starttime="20201029 09:33:09.603" endtime="20201029 09:33:09.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.617" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.615" endtime="20201029 09:33:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.620" level="INFO">VALUE: [9.833000000000758e-06, 9.971999999996983e-06, 7.346999999990889e-06, 6.0550000000048065e-06, 7.0280000000061404e-06, 7.958000000002352e-06, 7.167000000002366e-06, 7.58400000000492e-06, 4.583000000002446e-06, 8.58400000000592e-06, 7.694999999988128e-06, 1.0333000000001258e-05, 9.277000000001978e-06, 8.222000000002172e-06, 8.471999999981605e-06, 8.347000000019644e-06, 8.693999999975777e-06, 6.777000000013356e-06, 7.2220000000289275e-06, 8.652999999969602e-06, 9.943999999983966e-06, 7.833999999984353e-06, 4.347999999987362e-06, 1.094499999998444e-05, 8.333000000027013e-06, 6.0550000000048065e-06, 8.472000000037117e-06, 9.028000000022018e-06, 9.90299999997779e-06, 8.457999999988974e-06, 7.276999999972222e-06, 7.2779999999994516e-06, 1.0653000000027113e-05, 5.833999999982353e-06, 1.0402999999992169e-05, 8.153000000010735e-06, 7.346999999990889e-06, 6.402999999988168e-06, 9.45800000001773e-06, 6.778000000040585e-06, 1.0222000000004172e-05, 7.556000000019658e-06, 8.528000000063152e-06, 8.596999999999078e-06, 7.791999999895438e-06, 7.528000000034396e-06, 8.083999999963787e-06, 7.528000000034396e-06, 7.721999999987794e-06, 6.5269999999229e-06, 1.0084000000021298e-05, 7.1120000000313155e-06, 6.833000000039391e-06, 4.8329999999818796e-06, 6.152000000092528e-06, 8.027000000021545e-06, 6.33399999994122e-06, 1.1542000000086539e-05, 8.971999999940472e-06, 8.81900000004876e-06, 6.5140000000685205e-06, 8.694000000031288e-06, 6.20900000003477e-06, 6.819999999962967e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.619" endtime="20201029 09:33:09.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.611" endtime="20201029 09:33:09.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.223" endtime="20201029 09:33:09.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.223" endtime="20201029 09:33:09.622"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.629" endtime="20201029 09:33:09.644"></status>
</kw>
<msg timestamp="20201029 09:33:09.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.628" endtime="20201029 09:33:09.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.647" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.645" endtime="20201029 09:33:09.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.648" endtime="20201029 09:33:09.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.625" endtime="20201029 09:33:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.624" endtime="20201029 09:33:09.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.657" endtime="20201029 09:33:09.975"></status>
</kw>
<msg timestamp="20201029 09:33:09.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.435150278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.435156333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.655" endtime="20201029 09:33:09.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.435150278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.435156333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.980" endtime="20201029 09:33:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.995" endtime="20201029 09:33:09.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.653" endtime="20201029 09:33:09.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.651" endtime="20201029 09:33:09.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.005" level="INFO">${RESULT} = [{'diff': 6.0550000000048065e-06}, {'diff': 8.472000000037117e-06}, {'diff': 9.028000000022018e-06}, {'diff': 9.90299999997779e-06}, {'diff': 8.457999999988974e-06}, {'diff': 7.276999999972222e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:09.999" endtime="20201029 09:33:10.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.012" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.0550000000048065e-06, 8.472000000037117e-06, 9.028000000022018e-06, 9.90299999997779e-06, 8.457999999988974e-06, 7.276999999972222e-06, 7.2779999999994516e-06, 1.0653000000027113e-05, 5.83...</msg>
<status status="PASS" starttime="20201029 09:33:10.006" endtime="20201029 09:33:10.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.017" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.015" endtime="20201029 09:33:10.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.020" level="INFO">VALUE: [6.0550000000048065e-06, 8.472000000037117e-06, 9.028000000022018e-06, 9.90299999997779e-06, 8.457999999988974e-06, 7.276999999972222e-06, 7.2779999999994516e-06, 1.0653000000027113e-05, 5.833999999982353e-06, 1.0402999999992169e-05, 8.153000000010735e-06, 7.346999999990889e-06, 6.402999999988168e-06, 9.45800000001773e-06, 6.778000000040585e-06, 1.0222000000004172e-05, 7.556000000019658e-06, 8.528000000063152e-06, 8.596999999999078e-06, 7.791999999895438e-06, 7.528000000034396e-06, 8.083999999963787e-06, 7.528000000034396e-06, 7.721999999987794e-06, 6.5269999999229e-06, 1.0084000000021298e-05, 7.1120000000313155e-06, 6.833000000039391e-06, 4.8329999999818796e-06, 6.152000000092528e-06, 8.027000000021545e-06, 6.33399999994122e-06, 1.1542000000086539e-05, 8.971999999940472e-06, 8.81900000004876e-06, 6.5140000000685205e-06, 8.694000000031288e-06, 6.20900000003477e-06, 6.819999999962967e-06, 9.708999999968881e-06, 7.096999999900433e-06, 7.528000000034396e-06, 7.472000000063872e-06, 9.957999999921086e-06, 1.0026999999857011e-05, 1.0264000000148599e-05, 6.513999999846476e-06, 4.209000000088281e-06, 7.2779999999994516e-06, 8.777999999987074e-06, 6.19500000009765e-06, 9.208000000038297e-06, 9.472999999982079e-06, 1.033399999994522e-05, 8.221999999946661e-06, 4.944000000062232e-06, 6.959000000028581e-06, 9.22300000016918e-06, 5.569000000038571e-06, 7.443999999967588e-06, 9.903000000033302e-06, 1.0958000000060863e-05, 6.958999999806537e-06, 6.944999999980439e-06]</msg>
<status status="PASS" starttime="20201029 09:33:10.018" endtime="20201029 09:33:10.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.013" endtime="20201029 09:33:10.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.623" endtime="20201029 09:33:10.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.622" endtime="20201029 09:33:10.022"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.030" endtime="20201029 09:33:10.044"></status>
</kw>
<msg timestamp="20201029 09:33:10.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.028" endtime="20201029 09:33:10.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.046" endtime="20201029 09:33:10.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.048" endtime="20201029 09:33:10.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.025" endtime="20201029 09:33:10.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.024" endtime="20201029 09:33:10.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.057" endtime="20201029 09:33:10.361"></status>
</kw>
<msg timestamp="20201029 09:33:10.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.814492347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.814502431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.056" endtime="20201029 09:33:10.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.814492347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.814502431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.366" endtime="20201029 09:33:10.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.376" endtime="20201029 09:33:10.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.053" endtime="20201029 09:33:10.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.051" endtime="20201029 09:33:10.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.383" level="INFO">${RESULT} = [{'diff': 1.0084000000021298e-05}, {'diff': 7.1120000000313155e-06}, {'diff': 6.833000000039391e-06}, {'diff': 4.8329999999818796e-06}, {'diff': 6.152000000092528e-06}, {'diff': 8.027000000021545e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:10.379" endtime="20201029 09:33:10.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.388" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0084000000021298e-05, 7.1120000000313155e-06, 6.833000000039391e-06, 4.8329999999818796e-06, 6.152000000092528e-06, 8.027000000021545e-06, 6.33399999994122e-06, 1.1542000000086539e-05, 8.9...</msg>
<status status="PASS" starttime="20201029 09:33:10.384" endtime="20201029 09:33:10.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.392" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.391" endtime="20201029 09:33:10.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.395" level="INFO">VALUE: [1.0084000000021298e-05, 7.1120000000313155e-06, 6.833000000039391e-06, 4.8329999999818796e-06, 6.152000000092528e-06, 8.027000000021545e-06, 6.33399999994122e-06, 1.1542000000086539e-05, 8.971999999940472e-06, 8.81900000004876e-06, 6.5140000000685205e-06, 8.694000000031288e-06, 6.20900000003477e-06, 6.819999999962967e-06, 9.708999999968881e-06, 7.096999999900433e-06, 7.528000000034396e-06, 7.472000000063872e-06, 9.957999999921086e-06, 1.0026999999857011e-05, 1.0264000000148599e-05, 6.513999999846476e-06, 4.209000000088281e-06, 7.2779999999994516e-06, 8.777999999987074e-06, 6.19500000009765e-06, 9.208000000038297e-06, 9.472999999982079e-06, 1.033399999994522e-05, 8.221999999946661e-06, 4.944000000062232e-06, 6.959000000028581e-06, 9.22300000016918e-06, 5.569000000038571e-06, 7.443999999967588e-06, 9.903000000033302e-06, 1.0958000000060863e-05, 6.958999999806537e-06, 6.944999999980439e-06, 8.028000000104285e-06, 7.95900000016836e-06, 7.985999999959859e-06, 7.625000000066606e-06, 7.110999999948575e-06, 5.15300000003549e-06, 6.6389999999749705e-06, 8.097000000040211e-06, 1.1096999999793411e-05, 6.76399999988142e-06, 9.472000000121383e-06, 7.1660000000584034e-06, 8.082999999992069e-06, 7.193999999932643e-06, 7.347000000157422e-06, 6.750000000055323e-06, 5.30599999981618e-06, 8.97199999982945e-06, 9.76400000007871e-06, 5.778000000011829e-06, 8.860999999971142e-06, 8.263999999869043e-06, 1.1166999999812077e-05, 6.777999999929563e-06, 7.403000000127946e-06]</msg>
<status status="PASS" starttime="20201029 09:33:10.393" endtime="20201029 09:33:10.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.389" endtime="20201029 09:33:10.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.022" endtime="20201029 09:33:10.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.022" endtime="20201029 09:33:10.396"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.404" endtime="20201029 09:33:10.418"></status>
</kw>
<msg timestamp="20201029 09:33:10.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.403" endtime="20201029 09:33:10.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.419" endtime="20201029 09:33:10.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.422" endtime="20201029 09:33:10.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.400" endtime="20201029 09:33:10.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.398" endtime="20201029 09:33:10.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.431" endtime="20201029 09:33:10.738"></status>
</kw>
<msg timestamp="20201029 09:33:10.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.201166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.201173056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.429" endtime="20201029 09:33:10.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.201166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.201173056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.742" endtime="20201029 09:33:10.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.752" endtime="20201029 09:33:10.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.427" endtime="20201029 09:33:10.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.425" endtime="20201029 09:33:10.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.759" level="INFO">${RESULT} = [{'diff': 6.19500000009765e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.472999999982079e-06}, {'diff': 1.033399999994522e-05}, {'diff': 8.221999999946661e-06}, {'diff': 4.944000000062232e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:10.756" endtime="20201029 09:33:10.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.766" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.19500000009765e-06, 9.208000000038297e-06, 9.472999999982079e-06, 1.033399999994522e-05, 8.221999999946661e-06, 4.944000000062232e-06, 6.959000000028581e-06, 9.22300000016918e-06, 5.569000...</msg>
<status status="PASS" starttime="20201029 09:33:10.760" endtime="20201029 09:33:10.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.770" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.769" endtime="20201029 09:33:10.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.773" level="INFO">VALUE: [6.19500000009765e-06, 9.208000000038297e-06, 9.472999999982079e-06, 1.033399999994522e-05, 8.221999999946661e-06, 4.944000000062232e-06, 6.959000000028581e-06, 9.22300000016918e-06, 5.569000000038571e-06, 7.443999999967588e-06, 9.903000000033302e-06, 1.0958000000060863e-05, 6.958999999806537e-06, 6.944999999980439e-06, 8.028000000104285e-06, 7.95900000016836e-06, 7.985999999959859e-06, 7.625000000066606e-06, 7.110999999948575e-06, 5.15300000003549e-06, 6.6389999999749705e-06, 8.097000000040211e-06, 1.1096999999793411e-05, 6.76399999988142e-06, 9.472000000121383e-06, 7.1660000000584034e-06, 8.082999999992069e-06, 7.193999999932643e-06, 7.347000000157422e-06, 6.750000000055323e-06, 5.30599999981618e-06, 8.97199999982945e-06, 9.76400000007871e-06, 5.778000000011829e-06, 8.860999999971142e-06, 8.263999999869043e-06, 1.1166999999812077e-05, 6.777999999929563e-06, 7.403000000127946e-06, 9.98600000001737e-06, 6.847000000087533e-06, 5.846999999947755e-06, 5.527999999976885e-06, 1.0222999999864868e-05, 5.97200000007625e-06, 9.01300000011318e-06, 8.958000000003352e-06, 5.403000000070435e-06, 9.959000000003826e-06, 9.847000000062778e-06, 1.0443999999942832e-05, 7.320000000143878e-06, 9.902000000172606e-06, 7.097999999983173e-06, 7.348000000018118e-06, 8.542000000000272e-06, 6.083000000156602e-06, 7.833000000179169e-06, 7.528000000034396e-06, 6.667000000071255e-06, 9.528000000091907e-06, 9.51399999982172e-06, 9.028000000022018e-06, 6.847000000087533e-06]</msg>
<status status="PASS" starttime="20201029 09:33:10.771" endtime="20201029 09:33:10.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.767" endtime="20201029 09:33:10.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.397" endtime="20201029 09:33:10.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.397" endtime="20201029 09:33:10.774"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.782" endtime="20201029 09:33:10.796"></status>
</kw>
<msg timestamp="20201029 09:33:10.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.781" endtime="20201029 09:33:10.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.799" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.797" endtime="20201029 09:33:10.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.800" endtime="20201029 09:33:10.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.778" endtime="20201029 09:33:10.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.776" endtime="20201029 09:33:10.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.809" endtime="20201029 09:33:11.116"></status>
</kw>
<msg timestamp="20201029 09:33:11.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.591047528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.591054694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.807" endtime="20201029 09:33:11.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.591047528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.591054694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.121" endtime="20201029 09:33:11.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.131" endtime="20201029 09:33:11.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.805" endtime="20201029 09:33:11.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.803" endtime="20201029 09:33:11.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.137" level="INFO">${RESULT} = [{'diff': 7.1660000000584034e-06}, {'diff': 8.082999999992069e-06}, {'diff': 7.193999999932643e-06}, {'diff': 7.347000000157422e-06}, {'diff': 6.750000000055323e-06}, {'diff': 5.30599999981618e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:11.134" endtime="20201029 09:33:11.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.142" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.1660000000584034e-06, 8.082999999992069e-06, 7.193999999932643e-06, 7.347000000157422e-06, 6.750000000055323e-06, 5.30599999981618e-06, 8.97199999982945e-06, 9.76400000007871e-06, 5.778000...</msg>
<status status="PASS" starttime="20201029 09:33:11.138" endtime="20201029 09:33:11.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.146" endtime="20201029 09:33:11.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.149" level="INFO">VALUE: [7.1660000000584034e-06, 8.082999999992069e-06, 7.193999999932643e-06, 7.347000000157422e-06, 6.750000000055323e-06, 5.30599999981618e-06, 8.97199999982945e-06, 9.76400000007871e-06, 5.778000000011829e-06, 8.860999999971142e-06, 8.263999999869043e-06, 1.1166999999812077e-05, 6.777999999929563e-06, 7.403000000127946e-06, 9.98600000001737e-06, 6.847000000087533e-06, 5.846999999947755e-06, 5.527999999976885e-06, 1.0222999999864868e-05, 5.97200000007625e-06, 9.01300000011318e-06, 8.958000000003352e-06, 5.403000000070435e-06, 9.959000000003826e-06, 9.847000000062778e-06, 1.0443999999942832e-05, 7.320000000143878e-06, 9.902000000172606e-06, 7.097999999983173e-06, 7.348000000018118e-06, 8.542000000000272e-06, 6.083000000156602e-06, 7.833000000179169e-06, 7.528000000034396e-06, 6.667000000071255e-06, 9.528000000091907e-06, 9.51399999982172e-06, 9.028000000022018e-06, 6.847000000087533e-06, 6.59799999969124e-06, 9.152999999706424e-06, 7.944000000037477e-06, 7.082999999852291e-06, 1.0472000000039117e-05, 7.388999999857759e-06, 6.472000000368183e-06, 6.568999999956304e-06, 8.695000000003006e-06, 9.847000000284822e-06, 9.06899999986166e-06, 7.736000000146959e-06, 8.541999999778227e-06, 7.416999999954044e-06, 7.596999999748277e-06, 5.2770000000812445e-06, 1.1916999999694866e-05, 1.1388999999972782e-05, 5.15300000003549e-06, 8.91700000016371e-06, 7.2770000003608e-06, 8.347000000075155e-06, 8.138000000101897e-06, 7.152999999870957e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.148" endtime="20201029 09:33:11.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.143" endtime="20201029 09:33:11.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.775" endtime="20201029 09:33:11.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.775" endtime="20201029 09:33:11.150"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.159" endtime="20201029 09:33:11.173"></status>
</kw>
<msg timestamp="20201029 09:33:11.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.158" endtime="20201029 09:33:11.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.175" endtime="20201029 09:33:11.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.177" endtime="20201029 09:33:11.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.154" endtime="20201029 09:33:11.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.153" endtime="20201029 09:33:11.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.186" endtime="20201029 09:33:11.496"></status>
</kw>
<msg timestamp="20201029 09:33:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.955917264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.955927708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.185" endtime="20201029 09:33:11.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.955917264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.955927708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.501" endtime="20201029 09:33:11.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.510" endtime="20201029 09:33:11.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.182" endtime="20201029 09:33:11.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.181" endtime="20201029 09:33:11.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.517" level="INFO">${RESULT} = [{'diff': 1.0443999999942832e-05}, {'diff': 7.320000000143878e-06}, {'diff': 9.902000000172606e-06}, {'diff': 7.097999999983173e-06}, {'diff': 7.348000000018118e-06}, {'diff': 8.542000000000272e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:11.514" endtime="20201029 09:33:11.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.522" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0443999999942832e-05, 7.320000000143878e-06, 9.902000000172606e-06, 7.097999999983173e-06, 7.348000000018118e-06, 8.542000000000272e-06, 6.083000000156602e-06, 7.833000000179169e-06, 7.528...</msg>
<status status="PASS" starttime="20201029 09:33:11.518" endtime="20201029 09:33:11.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.526" endtime="20201029 09:33:11.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.529" level="INFO">VALUE: [1.0443999999942832e-05, 7.320000000143878e-06, 9.902000000172606e-06, 7.097999999983173e-06, 7.348000000018118e-06, 8.542000000000272e-06, 6.083000000156602e-06, 7.833000000179169e-06, 7.528000000034396e-06, 6.667000000071255e-06, 9.528000000091907e-06, 9.51399999982172e-06, 9.028000000022018e-06, 6.847000000087533e-06, 6.59799999969124e-06, 9.152999999706424e-06, 7.944000000037477e-06, 7.082999999852291e-06, 1.0472000000039117e-05, 7.388999999857759e-06, 6.472000000368183e-06, 6.568999999956304e-06, 8.695000000003006e-06, 9.847000000284822e-06, 9.06899999986166e-06, 7.736000000146959e-06, 8.541999999778227e-06, 7.416999999954044e-06, 7.596999999748277e-06, 5.2770000000812445e-06, 1.1916999999694866e-05, 1.1388999999972782e-05, 5.15300000003549e-06, 8.91700000016371e-06, 7.2770000003608e-06, 8.347000000075155e-06, 8.138000000101897e-06, 7.152999999870957e-06, 6.903000000058057e-06, 7.611000000018464e-06, 6.083999999795253e-06, 8.652999999636535e-06, 8.582999999617869e-06, 1.0346999999910622e-05, 6.111000000252886e-06, 9.485999999725436e-06, 8.666999999906722e-06, 1.13470000000504e-05, 7.971999999689672e-06, 1.1415999999986326e-05, 8.959000000086093e-06, 1.0430000000116735e-05, 1.040300000010319e-05, 8.653000000080624e-06, 6.721999999736994e-06, 4.694000000249332e-06, 6.917000000328244e-06, 8.014000000056143e-06, 9.652999999776313e-06, 8.098000000344996e-06, 8.193999999850377e-06, 8.263999999869043e-06, 8.514000000126032e-06, 7.028000000186552e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.528" endtime="20201029 09:33:11.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.524" endtime="20201029 09:33:11.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.151" endtime="20201029 09:33:11.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.151" endtime="20201029 09:33:11.531"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.539" endtime="20201029 09:33:11.553"></status>
</kw>
<msg timestamp="20201029 09:33:11.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.537" endtime="20201029 09:33:11.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.554" endtime="20201029 09:33:11.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.557" endtime="20201029 09:33:11.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.535" endtime="20201029 09:33:11.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.533" endtime="20201029 09:33:11.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.565" endtime="20201029 09:33:11.877"></status>
</kw>
<msg timestamp="20201029 09:33:11.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.321065778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.321073514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.564" endtime="20201029 09:33:11.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.321065778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.321073514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.882" endtime="20201029 09:33:11.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.892" endtime="20201029 09:33:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.561" endtime="20201029 09:33:11.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.560" endtime="20201029 09:33:11.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.899" level="INFO">${RESULT} = [{'diff': 7.736000000146959e-06}, {'diff': 8.541999999778227e-06}, {'diff': 7.416999999954044e-06}, {'diff': 7.596999999748277e-06}, {'diff': 5.2770000000812445e-06}, {'diff': 1.1916999999694866e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:11.895" endtime="20201029 09:33:11.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.905" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.736000000146959e-06, 8.541999999778227e-06, 7.416999999954044e-06, 7.596999999748277e-06, 5.2770000000812445e-06, 1.1916999999694866e-05, 1.1388999999972782e-05, 5.15300000003549e-06, 8.91...</msg>
<status status="PASS" starttime="20201029 09:33:11.900" endtime="20201029 09:33:11.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.909" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.908" endtime="20201029 09:33:11.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.911" level="INFO">VALUE: [7.736000000146959e-06, 8.541999999778227e-06, 7.416999999954044e-06, 7.596999999748277e-06, 5.2770000000812445e-06, 1.1916999999694866e-05, 1.1388999999972782e-05, 5.15300000003549e-06, 8.91700000016371e-06, 7.2770000003608e-06, 8.347000000075155e-06, 8.138000000101897e-06, 7.152999999870957e-06, 6.903000000058057e-06, 7.611000000018464e-06, 6.083999999795253e-06, 8.652999999636535e-06, 8.582999999617869e-06, 1.0346999999910622e-05, 6.111000000252886e-06, 9.485999999725436e-06, 8.666999999906722e-06, 1.13470000000504e-05, 7.971999999689672e-06, 1.1415999999986326e-05, 8.959000000086093e-06, 1.0430000000116735e-05, 1.040300000010319e-05, 8.653000000080624e-06, 6.721999999736994e-06, 4.694000000249332e-06, 6.917000000328244e-06, 8.014000000056143e-06, 9.652999999776313e-06, 8.098000000344996e-06, 8.193999999850377e-06, 8.263999999869043e-06, 8.514000000126032e-06, 7.028000000186552e-06, 9.638999999950215e-06, 7.763999999799154e-06, 6.084000000239342e-06, 7.221999999806883e-06, 9.665999999963759e-06, 8.097000000262256e-06, 5.2230000000541565e-06, 8.387999999914797e-06, 5.472000000228405e-06, 8.944999999815906e-06, 7.3050000000129955e-06, 5.874999999821995e-06, 6.582999999782402e-06, 9.235999999912536e-06, 6.763999999659376e-06, 6.943999999897699e-06, 6.6939999996407096e-06, 9.903000000033302e-06, 6.971999999993983e-06, 8.402999999823635e-06, 8.97199999982945e-06, 6.207999999841007e-06, 5.30599999981618e-06, 9.096999999957944e-06, 7.902999999753746e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.910" endtime="20201029 09:33:11.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.906" endtime="20201029 09:33:11.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.532" endtime="20201029 09:33:11.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.531" endtime="20201029 09:33:11.913"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.921" endtime="20201029 09:33:11.935"></status>
</kw>
<msg timestamp="20201029 09:33:11.936" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.919" endtime="20201029 09:33:11.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.937" endtime="20201029 09:33:11.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.939" endtime="20201029 09:33:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.917" endtime="20201029 09:33:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.915" endtime="20201029 09:33:11.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.949" endtime="20201029 09:33:12.261"></status>
</kw>
<msg timestamp="20201029 09:33:12.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689007597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.948" endtime="20201029 09:33:12.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689007597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.266" endtime="20201029 09:33:12.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.275" endtime="20201029 09:33:12.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.944" endtime="20201029 09:33:12.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.942" endtime="20201029 09:33:12.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.282" level="INFO">${RESULT} = [{'diff': 8.959000000086093e-06}, {'diff': 1.0430000000116735e-05}, {'diff': 1.040300000010319e-05}, {'diff': 8.653000000080624e-06}, {'diff': 6.721999999736994e-06}, {'diff': 4.694000000249332e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:12.279" endtime="20201029 09:33:12.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.287" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.959000000086093e-06, 1.0430000000116735e-05, 1.040300000010319e-05, 8.653000000080624e-06, 6.721999999736994e-06, 4.694000000249332e-06, 6.917000000328244e-06, 8.014000000056143e-06, 9.652...</msg>
<status status="PASS" starttime="20201029 09:33:12.283" endtime="20201029 09:33:12.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.290" endtime="20201029 09:33:12.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.294" level="INFO">VALUE: [8.959000000086093e-06, 1.0430000000116735e-05, 1.040300000010319e-05, 8.653000000080624e-06, 6.721999999736994e-06, 4.694000000249332e-06, 6.917000000328244e-06, 8.014000000056143e-06, 9.652999999776313e-06, 8.098000000344996e-06, 8.193999999850377e-06, 8.263999999869043e-06, 8.514000000126032e-06, 7.028000000186552e-06, 9.638999999950215e-06, 7.763999999799154e-06, 6.084000000239342e-06, 7.221999999806883e-06, 9.665999999963759e-06, 8.097000000262256e-06, 5.2230000000541565e-06, 8.387999999914797e-06, 5.472000000228405e-06, 8.944999999815906e-06, 7.3050000000129955e-06, 5.874999999821995e-06, 6.582999999782402e-06, 9.235999999912536e-06, 6.763999999659376e-06, 6.943999999897699e-06, 6.6939999996407096e-06, 9.903000000033302e-06, 6.971999999993983e-06, 8.402999999823635e-06, 8.97199999982945e-06, 6.207999999841007e-06, 5.30599999981618e-06, 9.096999999957944e-06, 7.902999999753746e-06, 1.065299999991609e-05, 9.834000000097376e-06, 6.083000000156602e-06, 9.903000000033302e-06, 9.138000000241675e-06, 1.1223000000004646e-05, 1.0542000000057783e-05, 7.555999999908636e-06, 8.040999999625598e-06, 5.041000000094442e-06, 7.472999999702523e-06, 7.639000000114748e-06, 9.347999999853585e-06, 8.778000000209119e-06, 8.708000000190452e-06, 8.847000000145044e-06, 5.695000000027761e-06, 7.1939999997105986e-06, 6.653000000245157e-06, 7.861000000275453e-06, 6.277999999859674e-06, 7.639000000114748e-06, 8.735999999842647e-06, 6.7500000002773675e-06, 8.72200000001655e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.292" endtime="20201029 09:33:12.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.288" endtime="20201029 09:33:12.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.914" endtime="20201029 09:33:12.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.913" endtime="20201029 09:33:12.296"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.305" endtime="20201029 09:33:12.319"></status>
</kw>
<msg timestamp="20201029 09:33:12.320" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.303" endtime="20201029 09:33:12.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.321" endtime="20201029 09:33:12.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.323" endtime="20201029 09:33:12.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.300" endtime="20201029 09:33:12.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.299" endtime="20201029 09:33:12.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.332" endtime="20201029 09:33:12.647"></status>
</kw>
<msg timestamp="20201029 09:33:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.055974875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.05598075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:12.331" endtime="20201029 09:33:12.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.055974875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.05598075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:12.652" endtime="20201029 09:33:12.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.661" endtime="20201029 09:33:12.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.328" endtime="20201029 09:33:12.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.326" endtime="20201029 09:33:12.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.668" level="INFO">${RESULT} = [{'diff': 5.874999999821995e-06}, {'diff': 6.582999999782402e-06}, {'diff': 9.235999999912536e-06}, {'diff': 6.763999999659376e-06}, {'diff': 6.943999999897699e-06}, {'diff': 6.6939999996407096e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:12.665" endtime="20201029 09:33:12.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.874999999821995e-06, 6.582999999782402e-06, 9.235999999912536e-06, 6.763999999659376e-06, 6.943999999897699e-06, 6.6939999996407096e-06, 9.903000000033302e-06, 6.971999999993983e-06, 8.402...</msg>
<status status="PASS" starttime="20201029 09:33:12.669" endtime="20201029 09:33:12.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.678" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.677" endtime="20201029 09:33:12.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.681" level="INFO">VALUE: [5.874999999821995e-06, 6.582999999782402e-06, 9.235999999912536e-06, 6.763999999659376e-06, 6.943999999897699e-06, 6.6939999996407096e-06, 9.903000000033302e-06, 6.971999999993983e-06, 8.402999999823635e-06, 8.97199999982945e-06, 6.207999999841007e-06, 5.30599999981618e-06, 9.096999999957944e-06, 7.902999999753746e-06, 1.065299999991609e-05, 9.834000000097376e-06, 6.083000000156602e-06, 9.903000000033302e-06, 9.138000000241675e-06, 1.1223000000004646e-05, 1.0542000000057783e-05, 7.555999999908636e-06, 8.040999999625598e-06, 5.041000000094442e-06, 7.472999999702523e-06, 7.639000000114748e-06, 9.347999999853585e-06, 8.778000000209119e-06, 8.708000000190452e-06, 8.847000000145044e-06, 5.695000000027761e-06, 7.1939999997105986e-06, 6.653000000245157e-06, 7.861000000275453e-06, 6.277999999859674e-06, 7.639000000114748e-06, 8.735999999842647e-06, 6.7500000002773675e-06, 8.72200000001655e-06, 4.917000000048688e-06, 6.471999999924094e-06, 1.0292000000244883e-05, 6.3469999997955995e-06, 7.08300000029638e-06, 8.180000000024279e-06, 7.985999999959859e-06, 9.472999999982079e-06, 7.513999999986254e-06, 8.263999999869043e-06, 1.1222000000365995e-05, 1.0361000000180809e-05, 7.902999999753746e-06, 7.110999999948575e-06, 7.040999999929909e-06, 8.250000000042945e-06, 9.26400000000882e-06, 7.958000000307663e-06, 8.333000000249058e-06, 5.653000000105379e-06, 6.707999999910896e-06, 8.401999999740895e-06, 7.153000000315046e-06, 7.958999999946315e-06, 7.110999999948575e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.679" endtime="20201029 09:33:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.675" endtime="20201029 09:33:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.297" endtime="20201029 09:33:12.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.297" endtime="20201029 09:33:12.682"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.690" endtime="20201029 09:33:12.705"></status>
</kw>
<msg timestamp="20201029 09:33:12.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.688" endtime="20201029 09:33:12.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.706" endtime="20201029 09:33:12.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.709" endtime="20201029 09:33:12.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.686" endtime="20201029 09:33:12.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.684" endtime="20201029 09:33:12.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.718" endtime="20201029 09:33:13.031"></status>
</kw>
<msg timestamp="20201029 09:33:13.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.428938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.428946486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.716" endtime="20201029 09:33:13.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.428938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.428946486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.036" endtime="20201029 09:33:13.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.045" endtime="20201029 09:33:13.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.713" endtime="20201029 09:33:13.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.712" endtime="20201029 09:33:13.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.052" level="INFO">${RESULT} = [{'diff': 7.639000000114748e-06}, {'diff': 9.347999999853585e-06}, {'diff': 8.778000000209119e-06}, {'diff': 8.708000000190452e-06}, {'diff': 8.847000000145044e-06}, {'diff': 5.695000000027761e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.048" endtime="20201029 09:33:13.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.057" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.639000000114748e-06, 9.347999999853585e-06, 8.778000000209119e-06, 8.708000000190452e-06, 8.847000000145044e-06, 5.695000000027761e-06, 7.1939999997105986e-06, 6.653000000245157e-06, 7.861...</msg>
<status status="PASS" starttime="20201029 09:33:13.053" endtime="20201029 09:33:13.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.061" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.060" endtime="20201029 09:33:13.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.064" level="INFO">VALUE: [7.639000000114748e-06, 9.347999999853585e-06, 8.778000000209119e-06, 8.708000000190452e-06, 8.847000000145044e-06, 5.695000000027761e-06, 7.1939999997105986e-06, 6.653000000245157e-06, 7.861000000275453e-06, 6.277999999859674e-06, 7.639000000114748e-06, 8.735999999842647e-06, 6.7500000002773675e-06, 8.72200000001655e-06, 4.917000000048688e-06, 6.471999999924094e-06, 1.0292000000244883e-05, 6.3469999997955995e-06, 7.08300000029638e-06, 8.180000000024279e-06, 7.985999999959859e-06, 9.472999999982079e-06, 7.513999999986254e-06, 8.263999999869043e-06, 1.1222000000365995e-05, 1.0361000000180809e-05, 7.902999999753746e-06, 7.110999999948575e-06, 7.040999999929909e-06, 8.250000000042945e-06, 9.26400000000882e-06, 7.958000000307663e-06, 8.333000000249058e-06, 5.653000000105379e-06, 6.707999999910896e-06, 8.401999999740895e-06, 7.153000000315046e-06, 7.958999999946315e-06, 7.110999999948575e-06, 1.165299999961178e-05, 7.611000000018464e-06, 6.2500000002074785e-06, 8.541999999778227e-06, 7.180999999967241e-06, 6.332999999969502e-06, 5.040999999650353e-06, 1.0389000000721182e-05, 9.777999999904807e-06, 7.777999999625251e-06, 8.333000000249058e-06, 6.013999999332498e-06, 8.012999999529313e-06, 8.388999999553448e-06, 9.304999999848462e-06, 8.416000000011081e-06, 7.596999999748277e-06, 8.12499999991445e-06, 7.833000000623258e-06, 8.041999999264249e-06, 6.2500000002074785e-06, 1.1875000000216573e-05, 6.832999999595302e-06, 8.346999999631066e-06, 7.209000000507615e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.062" endtime="20201029 09:33:13.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.058" endtime="20201029 09:33:13.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.683" endtime="20201029 09:33:13.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.682" endtime="20201029 09:33:13.065"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.074" endtime="20201029 09:33:13.088"></status>
</kw>
<msg timestamp="20201029 09:33:13.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.071" endtime="20201029 09:33:13.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.090" endtime="20201029 09:33:13.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.092" endtime="20201029 09:33:13.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.069" endtime="20201029 09:33:13.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.067" endtime="20201029 09:33:13.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.101" endtime="20201029 09:33:13.415"></status>
</kw>
<msg timestamp="20201029 09:33:13.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804477097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.100" endtime="20201029 09:33:13.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804477097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.420" endtime="20201029 09:33:13.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.429" endtime="20201029 09:33:13.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.097" endtime="20201029 09:33:13.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.096" endtime="20201029 09:33:13.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.436" level="INFO">${RESULT} = [{'diff': 1.0361000000180809e-05}, {'diff': 7.902999999753746e-06}, {'diff': 7.110999999948575e-06}, {'diff': 7.040999999929909e-06}, {'diff': 8.250000000042945e-06}, {'diff': 9.26400000000882e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.433" endtime="20201029 09:33:13.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.442" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0361000000180809e-05, 7.902999999753746e-06, 7.110999999948575e-06, 7.040999999929909e-06, 8.250000000042945e-06, 9.26400000000882e-06, 7.958000000307663e-06, 8.333000000249058e-06, 5.6530...</msg>
<status status="PASS" starttime="20201029 09:33:13.437" endtime="20201029 09:33:13.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.532" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.531" endtime="20201029 09:33:13.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.535" level="INFO">VALUE: [1.0361000000180809e-05, 7.902999999753746e-06, 7.110999999948575e-06, 7.040999999929909e-06, 8.250000000042945e-06, 9.26400000000882e-06, 7.958000000307663e-06, 8.333000000249058e-06, 5.653000000105379e-06, 6.707999999910896e-06, 8.401999999740895e-06, 7.153000000315046e-06, 7.958999999946315e-06, 7.110999999948575e-06, 1.165299999961178e-05, 7.611000000018464e-06, 6.2500000002074785e-06, 8.541999999778227e-06, 7.180999999967241e-06, 6.332999999969502e-06, 5.040999999650353e-06, 1.0389000000721182e-05, 9.777999999904807e-06, 7.777999999625251e-06, 8.333000000249058e-06, 6.013999999332498e-06, 8.012999999529313e-06, 8.388999999553448e-06, 9.304999999848462e-06, 8.416000000011081e-06, 7.596999999748277e-06, 8.12499999991445e-06, 7.833000000623258e-06, 8.041999999264249e-06, 6.2500000002074785e-06, 1.1875000000216573e-05, 6.832999999595302e-06, 8.346999999631066e-06, 7.209000000507615e-06, 9.22199999919826e-06, 9.097999999596595e-06, 1.0027999999273618e-05, 6.69499999972345e-06, 6.69499999972345e-06, 8.583000000506047e-06, 9.459000000155982e-06, 1.0417000000373378e-05, 1.0471999999595027e-05, 7.402999999683857e-06, 5.833000000343702e-06, 7.721999999432683e-06, 6.332999999969502e-06, 6.903000000058057e-06, 1.0042000000431983e-05, 1.0264000000148599e-05, 6.263999999589487e-06, 1.1333999999862954e-05, 8.818999999604671e-06, 6.19400000001491e-06, 9.792000000174994e-06, 7.652999999940846e-06, 9.5699999995702e-06, 6.403000000432257e-06, 6.19500000009765e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.533" endtime="20201029 09:33:13.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.529" endtime="20201029 09:33:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.066" endtime="20201029 09:33:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.066" endtime="20201029 09:33:13.537"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.544" endtime="20201029 09:33:13.559"></status>
</kw>
<msg timestamp="20201029 09:33:13.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.543" endtime="20201029 09:33:13.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.560" endtime="20201029 09:33:13.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.563" endtime="20201029 09:33:13.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.540" endtime="20201029 09:33:13.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.539" endtime="20201029 09:33:13.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.572" endtime="20201029 09:33:13.886"></status>
</kw>
<msg timestamp="20201029 09:33:13.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.178012875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.178018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.570" endtime="20201029 09:33:13.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.178012875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.178018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.890" endtime="20201029 09:33:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.900" endtime="20201029 09:33:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.568" endtime="20201029 09:33:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.566" endtime="20201029 09:33:13.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.907" level="INFO">${RESULT} = [{'diff': 6.013999999332498e-06}, {'diff': 8.012999999529313e-06}, {'diff': 8.388999999553448e-06}, {'diff': 9.304999999848462e-06}, {'diff': 8.416000000011081e-06}, {'diff': 7.596999999748277e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.903" endtime="20201029 09:33:13.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.912" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.013999999332498e-06, 8.012999999529313e-06, 8.388999999553448e-06, 9.304999999848462e-06, 8.416000000011081e-06, 7.596999999748277e-06, 8.12499999991445e-06, 7.833000000623258e-06, 8.04199...</msg>
<status status="PASS" starttime="20201029 09:33:13.908" endtime="20201029 09:33:13.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.916" endtime="20201029 09:33:13.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.920" level="INFO">VALUE: [6.013999999332498e-06, 8.012999999529313e-06, 8.388999999553448e-06, 9.304999999848462e-06, 8.416000000011081e-06, 7.596999999748277e-06, 8.12499999991445e-06, 7.833000000623258e-06, 8.041999999264249e-06, 6.2500000002074785e-06, 1.1875000000216573e-05, 6.832999999595302e-06, 8.346999999631066e-06, 7.209000000507615e-06, 9.22199999919826e-06, 9.097999999596595e-06, 1.0027999999273618e-05, 6.69499999972345e-06, 6.69499999972345e-06, 8.583000000506047e-06, 9.459000000155982e-06, 1.0417000000373378e-05, 1.0471999999595027e-05, 7.402999999683857e-06, 5.833000000343702e-06, 7.721999999432683e-06, 6.332999999969502e-06, 6.903000000058057e-06, 1.0042000000431983e-05, 1.0264000000148599e-05, 6.263999999589487e-06, 1.1333999999862954e-05, 8.818999999604671e-06, 6.19400000001491e-06, 9.792000000174994e-06, 7.652999999940846e-06, 9.5699999995702e-06, 6.403000000432257e-06, 6.19500000009765e-06, 8.110999999644264e-06, 8.764000000383021e-06, 1.1527999999927374e-05, 4.417000000422888e-06, 8.18100000010702e-06, 9.152999999706424e-06, 8.291999999521238e-06, 9.16599999989387e-06, 9.292000000549194e-06, 7.958000000307663e-06, 9.47199999945525e-06, 5.763000000769125e-06, 1.1027000000218834e-05, 1.0832999999266235e-05, 6.777999999485473e-06, 5.69500000047185e-06, 9.582999999757646e-06, 7.0270000005479005e-06, 5.8469999997257105e-06, 8.653000000080624e-06, 1.095899999992156e-05, 5.028000000351085e-06, 9.402999999963413e-06, 8.416000000011081e-06, 1.0417000000373378e-05]</msg>
<status status="PASS" starttime="20201029 09:33:13.918" endtime="20201029 09:33:13.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.914" endtime="20201029 09:33:13.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.537" endtime="20201029 09:33:13.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.537" endtime="20201029 09:33:13.921"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.929" endtime="20201029 09:33:13.943"></status>
</kw>
<msg timestamp="20201029 09:33:13.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.927" endtime="20201029 09:33:13.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.944" endtime="20201029 09:33:13.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.947" endtime="20201029 09:33:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.925" endtime="20201029 09:33:13.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.923" endtime="20201029 09:33:13.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.956" endtime="20201029 09:33:14.272"></status>
</kw>
<msg timestamp="20201029 09:33:14.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.552065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.552072889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.954" endtime="20201029 09:33:14.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.552065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.552072889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.277" endtime="20201029 09:33:14.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.287" endtime="20201029 09:33:14.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.952" endtime="20201029 09:33:14.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.950" endtime="20201029 09:33:14.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.294" level="INFO">${RESULT} = [{'diff': 7.721999999432683e-06}, {'diff': 6.332999999969502e-06}, {'diff': 6.903000000058057e-06}, {'diff': 1.0042000000431983e-05}, {'diff': 1.0264000000148599e-05}, {'diff': 6.263999999589487e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:14.290" endtime="20201029 09:33:14.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.299" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.721999999432683e-06, 6.332999999969502e-06, 6.903000000058057e-06, 1.0042000000431983e-05, 1.0264000000148599e-05, 6.263999999589487e-06, 1.1333999999862954e-05, 8.818999999604671e-06, 6.1...</msg>
<status status="PASS" starttime="20201029 09:33:14.295" endtime="20201029 09:33:14.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.303" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.302" endtime="20201029 09:33:14.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.306" level="INFO">VALUE: [7.721999999432683e-06, 6.332999999969502e-06, 6.903000000058057e-06, 1.0042000000431983e-05, 1.0264000000148599e-05, 6.263999999589487e-06, 1.1333999999862954e-05, 8.818999999604671e-06, 6.19400000001491e-06, 9.792000000174994e-06, 7.652999999940846e-06, 9.5699999995702e-06, 6.403000000432257e-06, 6.19500000009765e-06, 8.110999999644264e-06, 8.764000000383021e-06, 1.1527999999927374e-05, 4.417000000422888e-06, 8.18100000010702e-06, 9.152999999706424e-06, 8.291999999521238e-06, 9.16599999989387e-06, 9.292000000549194e-06, 7.958000000307663e-06, 9.47199999945525e-06, 5.763000000769125e-06, 1.1027000000218834e-05, 1.0832999999266235e-05, 6.777999999485473e-06, 5.69500000047185e-06, 9.582999999757646e-06, 7.0270000005479005e-06, 5.8469999997257105e-06, 8.653000000080624e-06, 1.095899999992156e-05, 5.028000000351085e-06, 9.402999999963413e-06, 8.416000000011081e-06, 1.0417000000373378e-05, 6.708999999993637e-06, 6.73600000045127e-06, 8.291000000326676e-06, 6.986000000708259e-06, 6.0270000004081226e-06, 6.63900000041906e-06, 6.819000000213293e-06, 5.583999999281275e-06, 1.020799999995603e-05, 9.777000000710245e-06, 5.415999999591747e-06, 6.917000000328244e-06, 8.180000000024279e-06, 6.583000000226491e-06, 5.2500000000677005e-06, 9.51300000018307e-06, 9.028000000022018e-06, 6.764000000103465e-06, 6.903000000058057e-06, 9.70800000033023e-06, 5.860999999995897e-06, 9.70800000033023e-06, 5.11099999922493e-06, 7.473000000146612e-06, 6.389000000162071e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.304" endtime="20201029 09:33:14.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.300" endtime="20201029 09:33:14.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.922" endtime="20201029 09:33:14.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.921" endtime="20201029 09:33:14.307"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.316" endtime="20201029 09:33:14.331"></status>
</kw>
<msg timestamp="20201029 09:33:14.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.314" endtime="20201029 09:33:14.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.332" endtime="20201029 09:33:14.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.335" endtime="20201029 09:33:14.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.311" endtime="20201029 09:33:14.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.309" endtime="20201029 09:33:14.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.345" endtime="20201029 09:33:14.664"></status>
</kw>
<msg timestamp="20201029 09:33:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.012637556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.012643319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.343" endtime="20201029 09:33:14.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.012637556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.012643319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.669" endtime="20201029 09:33:14.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.678" endtime="20201029 09:33:14.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.341" endtime="20201029 09:33:14.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.339" endtime="20201029 09:33:14.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.685" level="INFO">${RESULT} = [{'diff': 5.763000000769125e-06}, {'diff': 1.1027000000218834e-05}, {'diff': 1.0832999999266235e-05}, {'diff': 6.777999999485473e-06}, {'diff': 5.69500000047185e-06}, {'diff': 9.582999999757646e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.681" endtime="20201029 09:33:14.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.690" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.763000000769125e-06, 1.1027000000218834e-05, 1.0832999999266235e-05, 6.777999999485473e-06, 5.69500000047185e-06, 9.582999999757646e-06, 7.0270000005479005e-06, 5.8469999997257105e-06, 8.6...</msg>
<status status="PASS" starttime="20201029 09:33:14.686" endtime="20201029 09:33:14.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.695" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.694" endtime="20201029 09:33:14.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.698" level="INFO">VALUE: [5.763000000769125e-06, 1.1027000000218834e-05, 1.0832999999266235e-05, 6.777999999485473e-06, 5.69500000047185e-06, 9.582999999757646e-06, 7.0270000005479005e-06, 5.8469999997257105e-06, 8.653000000080624e-06, 1.095899999992156e-05, 5.028000000351085e-06, 9.402999999963413e-06, 8.416000000011081e-06, 1.0417000000373378e-05, 6.708999999993637e-06, 6.73600000045127e-06, 8.291000000326676e-06, 6.986000000708259e-06, 6.0270000004081226e-06, 6.63900000041906e-06, 6.819000000213293e-06, 5.583999999281275e-06, 1.020799999995603e-05, 9.777000000710245e-06, 5.415999999591747e-06, 6.917000000328244e-06, 8.180000000024279e-06, 6.583000000226491e-06, 5.2500000000677005e-06, 9.51300000018307e-06, 9.028000000022018e-06, 6.764000000103465e-06, 6.903000000058057e-06, 9.70800000033023e-06, 5.860999999995897e-06, 9.70800000033023e-06, 5.11099999922493e-06, 7.473000000146612e-06, 6.389000000162071e-06, 9.028000000022018e-06, 5.9160000001057256e-06, 7.790999999812698e-06, 9.777999999904807e-06, 6.221999999667105e-06, 1.1138999999715793e-05, 6.528000000116663e-06, 1.020799999995603e-05, 7.736000000591048e-06, 7.1390000000448595e-06, 4.694999999443894e-06, 8.916999999719621e-06, 1.090299999972899e-05, 8.833000000763036e-06, 8.887999999984686e-06, 7.916000000385282e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.888999999927648e-06, 6.722000000181083e-06, 9.51400000026581e-06, 1.1778000000184363e-05, 5.166999999417499e-06, 5.65299999966129e-06, 9.570000000458379e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.696" endtime="20201029 09:33:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.692" endtime="20201029 09:33:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.308" endtime="20201029 09:33:14.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.308" endtime="20201029 09:33:14.699"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.708" endtime="20201029 09:33:14.723"></status>
</kw>
<msg timestamp="20201029 09:33:14.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.707" endtime="20201029 09:33:14.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.725" endtime="20201029 09:33:14.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.727" endtime="20201029 09:33:14.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.703" endtime="20201029 09:33:14.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.701" endtime="20201029 09:33:14.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.736" endtime="20201029 09:33:15.067"></status>
</kw>
<msg timestamp="20201029 09:33:15.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.385412764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.385419681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.735" endtime="20201029 09:33:15.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.385412764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.385419681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.072" endtime="20201029 09:33:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.082" endtime="20201029 09:33:15.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.732" endtime="20201029 09:33:15.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.730" endtime="20201029 09:33:15.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.089" level="INFO">${RESULT} = [{'diff': 6.917000000328244e-06}, {'diff': 8.180000000024279e-06}, {'diff': 6.583000000226491e-06}, {'diff': 5.2500000000677005e-06}, {'diff': 9.51300000018307e-06}, {'diff': 9.028000000022018e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:15.085" endtime="20201029 09:33:15.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.094" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.917000000328244e-06, 8.180000000024279e-06, 6.583000000226491e-06, 5.2500000000677005e-06, 9.51300000018307e-06, 9.028000000022018e-06, 6.764000000103465e-06, 6.903000000058057e-06, 9.7080...</msg>
<status status="PASS" starttime="20201029 09:33:15.090" endtime="20201029 09:33:15.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.098" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:15.097" endtime="20201029 09:33:15.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.101" level="INFO">VALUE: [6.917000000328244e-06, 8.180000000024279e-06, 6.583000000226491e-06, 5.2500000000677005e-06, 9.51300000018307e-06, 9.028000000022018e-06, 6.764000000103465e-06, 6.903000000058057e-06, 9.70800000033023e-06, 5.860999999995897e-06, 9.70800000033023e-06, 5.11099999922493e-06, 7.473000000146612e-06, 6.389000000162071e-06, 9.028000000022018e-06, 5.9160000001057256e-06, 7.790999999812698e-06, 9.777999999904807e-06, 6.221999999667105e-06, 1.1138999999715793e-05, 6.528000000116663e-06, 1.020799999995603e-05, 7.736000000591048e-06, 7.1390000000448595e-06, 4.694999999443894e-06, 8.916999999719621e-06, 1.090299999972899e-05, 8.833000000763036e-06, 8.887999999984686e-06, 7.916000000385282e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.888999999927648e-06, 6.722000000181083e-06, 9.51400000026581e-06, 1.1778000000184363e-05, 5.166999999417499e-06, 5.65299999966129e-06, 9.570000000458379e-06, 6.3199999997820555e-06, 6.513999999846476e-06, 7.000000000090267e-06, 9.971999999969228e-06, 5.8469999997257105e-06, 7.83299999973508e-06, 9.458000000073241e-06, 8.208999999759214e-06, 7.347999999574029e-06, 8.833999999957598e-06, 8.443999999663276e-06, 9.152999999706424e-06, 1.1584000000119943e-05, 1.0972000000109006e-05, 5.832999999455524e-06, 9.902999999589213e-06, 1.0526999999704856e-05, 7.957999999419485e-06, 7.652999999940846e-06, 8.069999999804622e-06, 9.333999999583398e-06, 7.847000000005266e-06, 9.042000000292205e-06, 7.541999999638449e-06, 9.22300000016918e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.100" endtime="20201029 09:33:15.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.095" endtime="20201029 09:33:15.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.700" endtime="20201029 09:33:15.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.699" endtime="20201029 09:33:15.103"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.110" endtime="20201029 09:33:15.125"></status>
</kw>
<msg timestamp="20201029 09:33:15.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.109" endtime="20201029 09:33:15.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.126" endtime="20201029 09:33:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.129" endtime="20201029 09:33:15.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.106" endtime="20201029 09:33:15.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.105" endtime="20201029 09:33:15.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.139" endtime="20201029 09:33:15.451"></status>
</kw>
<msg timestamp="20201029 09:33:15.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.761315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.761324361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.137" endtime="20201029 09:33:15.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.761315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.761324361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.456" endtime="20201029 09:33:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.466" endtime="20201029 09:33:15.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.133" endtime="20201029 09:33:15.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.132" endtime="20201029 09:33:15.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.473" level="INFO">${RESULT} = [{'diff': 8.916999999719621e-06}, {'diff': 1.090299999972899e-05}, {'diff': 8.833000000763036e-06}, {'diff': 8.887999999984686e-06}, {'diff': 7.916000000385282e-06}, {'diff': 8.208999999759214e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:15.469" endtime="20201029 09:33:15.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.477" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.916999999719621e-06, 1.090299999972899e-05, 8.833000000763036e-06, 8.887999999984686e-06, 7.916000000385282e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.888999999927648e-06, 6.7220...</msg>
<status status="PASS" starttime="20201029 09:33:15.474" endtime="20201029 09:33:15.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.482" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:15.481" endtime="20201029 09:33:15.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.486" level="INFO">VALUE: [8.916999999719621e-06, 1.090299999972899e-05, 8.833000000763036e-06, 8.887999999984686e-06, 7.916000000385282e-06, 8.208999999759214e-06, 9.346999999770844e-06, 7.888999999927648e-06, 6.722000000181083e-06, 9.51400000026581e-06, 1.1778000000184363e-05, 5.166999999417499e-06, 5.65299999966129e-06, 9.570000000458379e-06, 6.3199999997820555e-06, 6.513999999846476e-06, 7.000000000090267e-06, 9.971999999969228e-06, 5.8469999997257105e-06, 7.83299999973508e-06, 9.458000000073241e-06, 8.208999999759214e-06, 7.347999999574029e-06, 8.833999999957598e-06, 8.443999999663276e-06, 9.152999999706424e-06, 1.1584000000119943e-05, 1.0972000000109006e-05, 5.832999999455524e-06, 9.902999999589213e-06, 1.0526999999704856e-05, 7.957999999419485e-06, 7.652999999940846e-06, 8.069999999804622e-06, 9.333999999583398e-06, 7.847000000005266e-06, 9.042000000292205e-06, 7.541999999638449e-06, 9.22300000016918e-06, 7.971999999689672e-06, 8.082999999992069e-06, 1.0249999999878412e-05, 1.0361000000180809e-05, 6.028000000490863e-06, 8.207999999676474e-06, 1.0806000000584959e-05, 6.457999999653907e-06, 7.583000000366269e-06, 6.416999999814266e-06, 7.292000000269638e-06, 4.833000000203924e-06, 7.179999999884501e-06, 4.5840000000296754e-06, 9.499999999995623e-06, 7.957999999419485e-06, 8.304999999708684e-06, 8.47200000020365e-06, 9.235999999468447e-06, 1.065300000036018e-05, 6.959000000250626e-06, 6.903000000058057e-06, 7.082999999852291e-06, 6.652000000606506e-06, 6.582999999338313e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.484" endtime="20201029 09:33:15.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.478" endtime="20201029 09:33:15.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.103" endtime="20201029 09:33:15.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.103" endtime="20201029 09:33:15.489"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.497" endtime="20201029 09:33:15.511"></status>
</kw>
<msg timestamp="20201029 09:33:15.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.495" endtime="20201029 09:33:15.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.514" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.513" endtime="20201029 09:33:15.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.515" endtime="20201029 09:33:15.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.493" endtime="20201029 09:33:15.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.491" endtime="20201029 09:33:15.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.524" endtime="20201029 09:33:15.839"></status>
</kw>
<msg timestamp="20201029 09:33:15.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.143963097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.14397225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:15.523" endtime="20201029 09:33:15.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.143963097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.14397225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:15.844" endtime="20201029 09:33:15.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.854" endtime="20201029 09:33:15.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.520" endtime="20201029 09:33:15.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.518" endtime="20201029 09:33:15.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.861" level="INFO">${RESULT} = [{'diff': 9.152999999706424e-06}, {'diff': 1.1584000000119943e-05}, {'diff': 1.0972000000109006e-05}, {'diff': 5.832999999455524e-06}, {'diff': 9.902999999589213e-06}, {'diff': 1.0526999999704856e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:15.857" endtime="20201029 09:33:15.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.866" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.152999999706424e-06, 1.1584000000119943e-05, 1.0972000000109006e-05, 5.832999999455524e-06, 9.902999999589213e-06, 1.0526999999704856e-05, 7.957999999419485e-06, 7.652999999940846e-06, 8.0...</msg>
<status status="PASS" starttime="20201029 09:33:15.861" endtime="20201029 09:33:15.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.870" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:15.869" endtime="20201029 09:33:15.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.873" level="INFO">VALUE: [9.152999999706424e-06, 1.1584000000119943e-05, 1.0972000000109006e-05, 5.832999999455524e-06, 9.902999999589213e-06, 1.0526999999704856e-05, 7.957999999419485e-06, 7.652999999940846e-06, 8.069999999804622e-06, 9.333999999583398e-06, 7.847000000005266e-06, 9.042000000292205e-06, 7.541999999638449e-06, 9.22300000016918e-06, 7.971999999689672e-06, 8.082999999992069e-06, 1.0249999999878412e-05, 1.0361000000180809e-05, 6.028000000490863e-06, 8.207999999676474e-06, 1.0806000000584959e-05, 6.457999999653907e-06, 7.583000000366269e-06, 6.416999999814266e-06, 7.292000000269638e-06, 4.833000000203924e-06, 7.179999999884501e-06, 4.5840000000296754e-06, 9.499999999995623e-06, 7.957999999419485e-06, 8.304999999708684e-06, 8.47200000020365e-06, 9.235999999468447e-06, 1.065300000036018e-05, 6.959000000250626e-06, 6.903000000058057e-06, 7.082999999852291e-06, 6.652000000606506e-06, 6.582999999338313e-06, 5.485999999166324e-06, 9.76299999955188e-06, 1.0833000000154414e-05, 7.777999999625251e-06, 6.931000000598431e-06, 9.834000000097376e-06, 5.124999999495117e-06, 6.7770000002909114e-06, 7.971999999689672e-06, 7.77800000051343e-06, 8.709000000273193e-06, 1.0167000000116388e-05, 8.792000000035216e-06, 8.653000000080624e-06, 7.902000000115095e-06, 8.52799999950804e-06, 1.0014000000779788e-05, 5.459000000485048e-06, 9.847000000284822e-06, 8.263999999869043e-06, 9.222000000086439e-06, 7.347999999574029e-06, 5.889000000536271e-06, 9.833000000014636e-06, 6.1800000006329014e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.871" endtime="20201029 09:33:15.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.867" endtime="20201029 09:33:15.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.490" endtime="20201029 09:33:15.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.490" endtime="20201029 09:33:15.874"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.882" endtime="20201029 09:33:15.896"></status>
</kw>
<msg timestamp="20201029 09:33:15.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.881" endtime="20201029 09:33:15.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.898" endtime="20201029 09:33:15.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.900" endtime="20201029 09:33:15.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.878" endtime="20201029 09:33:15.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.876" endtime="20201029 09:33:15.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.909" endtime="20201029 09:33:16.227"></status>
</kw>
<msg timestamp="20201029 09:33:16.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5350415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.535046333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:15.908" endtime="20201029 09:33:16.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5350415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.535046333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:16.231" endtime="20201029 09:33:16.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.241" endtime="20201029 09:33:16.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.905" endtime="20201029 09:33:16.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.904" endtime="20201029 09:33:16.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.248" level="INFO">${RESULT} = [{'diff': 4.833000000203924e-06}, {'diff': 7.179999999884501e-06}, {'diff': 4.5840000000296754e-06}, {'diff': 9.499999999995623e-06}, {'diff': 7.957999999419485e-06}, {'diff': 8.304999999708684e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:16.244" endtime="20201029 09:33:16.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.253" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.833000000203924e-06, 7.179999999884501e-06, 4.5840000000296754e-06, 9.499999999995623e-06, 7.957999999419485e-06, 8.304999999708684e-06, 8.47200000020365e-06, 9.235999999468447e-06, 1.0653...</msg>
<status status="PASS" starttime="20201029 09:33:16.249" endtime="20201029 09:33:16.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.257" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:16.256" endtime="20201029 09:33:16.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.260" level="INFO">VALUE: [4.833000000203924e-06, 7.179999999884501e-06, 4.5840000000296754e-06, 9.499999999995623e-06, 7.957999999419485e-06, 8.304999999708684e-06, 8.47200000020365e-06, 9.235999999468447e-06, 1.065300000036018e-05, 6.959000000250626e-06, 6.903000000058057e-06, 7.082999999852291e-06, 6.652000000606506e-06, 6.582999999338313e-06, 5.485999999166324e-06, 9.76299999955188e-06, 1.0833000000154414e-05, 7.777999999625251e-06, 6.931000000598431e-06, 9.834000000097376e-06, 5.124999999495117e-06, 6.7770000002909114e-06, 7.971999999689672e-06, 7.77800000051343e-06, 8.709000000273193e-06, 1.0167000000116388e-05, 8.792000000035216e-06, 8.653000000080624e-06, 7.902000000115095e-06, 8.52799999950804e-06, 1.0014000000779788e-05, 5.459000000485048e-06, 9.847000000284822e-06, 8.263999999869043e-06, 9.222000000086439e-06, 7.347999999574029e-06, 5.889000000536271e-06, 9.833000000014636e-06, 6.1800000006329014e-06, 6.528000000116663e-06, 9.512999999294891e-06, 6.458999999736648e-06, 7.63899999967066e-06, 8.320000000061611e-06, 7.29199999938146e-06, 1.0957999999838819e-05, 1.0083000000271625e-05, 5.374999999752106e-06, 6.7230000002638235e-06, 1.0041999999543805e-05, 1.0417000000373378e-05, 6.3610000005098755e-06, 8.0269999997995e-06, 5.347000000099911e-06, 8.333000000249058e-06, 8.666999999462632e-06, 7.597000000636456e-06, 7.901999999226916e-06, 1.0138999999576015e-05, 7.1390000000448595e-06, 1.0652999999472001e-05, 7.528000000256441e-06, 1.0972000000109006e-05, 7.347000000379467e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.258" endtime="20201029 09:33:16.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.254" endtime="20201029 09:33:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.875" endtime="20201029 09:33:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.875" endtime="20201029 09:33:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.475" endtime="20201029 09:33:16.261"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:08.380" endtime="20201029 09:33:16.262" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:16.268" endtime="20201029 09:33:16.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.267" endtime="20201029 09:33:16.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.302" endtime="20201029 09:33:16.319"></status>
</kw>
<msg timestamp="20201029 09:33:16.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.301" endtime="20201029 09:33:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.320" endtime="20201029 09:33:16.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.325" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:16.323" endtime="20201029 09:33:16.325"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.298" endtime="20201029 09:33:16.326"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.296" endtime="20201029 09:33:16.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.294" endtime="20201029 09:33:16.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:16.330" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:16.329" endtime="20201029 09:33:16.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.327" endtime="20201029 09:33:16.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.293" endtime="20201029 09:33:16.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.293" endtime="20201029 09:33:16.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.332" endtime="20201029 09:33:16.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.291" endtime="20201029 09:33:16.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.289" endtime="20201029 09:33:16.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.266" endtime="20201029 09:33:16.335"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.343" endtime="20201029 09:33:16.358"></status>
</kw>
<msg timestamp="20201029 09:33:16.359" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.342" endtime="20201029 09:33:16.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.362" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.360" endtime="20201029 09:33:16.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.363" endtime="20201029 09:33:16.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.339" endtime="20201029 09:33:16.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.338" endtime="20201029 09:33:16.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.374" endtime="20201029 09:33:16.659"></status>
</kw>
<msg timestamp="20201029 09:33:16.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064429236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064435306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.372" endtime="20201029 09:33:16.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064429236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064435306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.663" endtime="20201029 09:33:16.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.672" endtime="20201029 09:33:16.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.368" endtime="20201029 09:33:16.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.366" endtime="20201029 09:33:16.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.678" level="INFO">${RESULT} = [{'diff': 6.069999999996911e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.76400000000132e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:16.675" endtime="20201029 09:33:16.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.682" level="INFO">${OVERHEAD} = {'diff': [6.069999999996911e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:16.679" endtime="20201029 09:33:16.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.685" endtime="20201029 09:33:16.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.689" level="INFO">VALUE: [6.069999999996911e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.750000000008689e-06, 1.7370000000016539e-06, 1.750000000008689e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.736999999987776e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7769999999944774e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7359999999883025e-06, 1.7370000000016539e-06, 1.709000000002514e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.6799999999900228e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.687" endtime="20201029 09:33:16.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.683" endtime="20201029 09:33:16.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.336" endtime="20201029 09:33:16.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.336" endtime="20201029 09:33:16.690"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.699" endtime="20201029 09:33:16.715"></status>
</kw>
<msg timestamp="20201029 09:33:16.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.697" endtime="20201029 09:33:16.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.716" endtime="20201029 09:33:16.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.719" endtime="20201029 09:33:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.694" endtime="20201029 09:33:16.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.693" endtime="20201029 09:33:16.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.728" endtime="20201029 09:33:17.033"></status>
</kw>
<msg timestamp="20201029 09:33:17.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064640875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.726" endtime="20201029 09:33:17.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064640875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.038" endtime="20201029 09:33:17.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.048" endtime="20201029 09:33:17.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.724" endtime="20201029 09:33:17.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.722" endtime="20201029 09:33:17.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.055" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7370000000016539e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7499999999948113e-...</msg>
<status status="PASS" starttime="20201029 09:33:17.051" endtime="20201029 09:33:17.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.060" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7499999999948113e-06...</msg>
<status status="PASS" starttime="20201029 09:33:17.056" endtime="20201029 09:33:17.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.064" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.063" endtime="20201029 09:33:17.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.067" level="INFO">VALUE: [1.7360000000021802e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.6799999999900228e-06, 1.7360000000021802e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7920000000004599e-06, 1.7910000000287418e-06, 1.7359999999744247e-06, 1.7370000000016539e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7219999999817936e-06, 1.6810000000311298e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7370000000016539e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7640000000151979e-06, 1.7920000000004599e-06, 1.7370000000016539e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.6949999999682497e-06, 1.7370000000016539e-06, 1.7360000000299358e-06, 1.7769999999805997e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000000078289e-06, 1.7640000000151979e-06, 1.7360000000299358e-06, 1.6949999999682497e-06, 1.7359999999744247e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.065" endtime="20201029 09:33:17.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.061" endtime="20201029 09:33:17.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.691" endtime="20201029 09:33:17.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.691" endtime="20201029 09:33:17.069"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.076" endtime="20201029 09:33:17.091"></status>
</kw>
<msg timestamp="20201029 09:33:17.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.075" endtime="20201029 09:33:17.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.093" endtime="20201029 09:33:17.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.095" endtime="20201029 09:33:17.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.072" endtime="20201029 09:33:17.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.071" endtime="20201029 09:33:17.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.104" endtime="20201029 09:33:17.401"></status>
</kw>
<msg timestamp="20201029 09:33:17.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410380722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410382458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.103" endtime="20201029 09:33:17.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410380722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410382458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.408" endtime="20201029 09:33:17.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.420" endtime="20201029 09:33:17.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.100" endtime="20201029 09:33:17.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.098" endtime="20201029 09:33:17.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.427" level="INFO">${RESULT} = [{'diff': 1.7360000000299358e-06}, {'diff': 1.7219999999817936e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-...</msg>
<status status="PASS" starttime="20201029 09:33:17.423" endtime="20201029 09:33:17.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.434" level="INFO">${OVERHEAD} = {'diff': [1.7360000000299358e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000000078289e-06, 1.7640000000151979e-06...</msg>
<status status="PASS" starttime="20201029 09:33:17.428" endtime="20201029 09:33:17.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.437" endtime="20201029 09:33:17.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.441" level="INFO">VALUE: [1.7360000000299358e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000000078289e-06, 1.7640000000151979e-06, 1.7360000000299358e-06, 1.6949999999682497e-06, 1.7359999999744247e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.6659999999557584e-06, 1.7499999999115445e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7769999999250885e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7639999999596867e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.6669999999274765e-06, 1.7219999999262825e-06, 1.7220000000373048e-06, 1.737000000057165e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7369999999461427e-06, 1.7220000000373048e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7499999999115445e-06, 1.736000000085447e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.439" endtime="20201029 09:33:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.435" endtime="20201029 09:33:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.069" endtime="20201029 09:33:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.069" endtime="20201029 09:33:17.443"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.451" endtime="20201029 09:33:17.465"></status>
</kw>
<msg timestamp="20201029 09:33:17.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.449" endtime="20201029 09:33:17.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.467" endtime="20201029 09:33:17.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.469" endtime="20201029 09:33:17.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.446" endtime="20201029 09:33:17.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.445" endtime="20201029 09:33:17.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.478" endtime="20201029 09:33:17.821"></status>
</kw>
<msg timestamp="20201029 09:33:17.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.778542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.778544444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.477" endtime="20201029 09:33:17.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.778542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.778544444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.826" endtime="20201029 09:33:17.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.836" endtime="20201029 09:33:17.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.474" endtime="20201029 09:33:17.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.472" endtime="20201029 09:33:17.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.843" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7780000000078289e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-...</msg>
<status status="PASS" starttime="20201029 09:33:17.839" endtime="20201029 09:33:17.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.847" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7500000000225668e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:17.844" endtime="20201029 09:33:17.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.851" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.850" endtime="20201029 09:33:17.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.854" level="INFO">VALUE: [1.7359999999744247e-06, 1.7500000000225668e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7499999999115445e-06, 1.736000000085447e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.6940000000520428e-06, 1.6670000000384988e-06, 1.722000000148327e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7770000000361108e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.6659999999557584e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.8049999999103505e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.853" endtime="20201029 09:33:17.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.848" endtime="20201029 09:33:17.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.444" endtime="20201029 09:33:17.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.443" endtime="20201029 09:33:17.856"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.864" endtime="20201029 09:33:17.879"></status>
</kw>
<msg timestamp="20201029 09:33:17.880" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.863" endtime="20201029 09:33:17.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.881" endtime="20201029 09:33:17.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.883" endtime="20201029 09:33:17.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.860" endtime="20201029 09:33:17.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.858" endtime="20201029 09:33:17.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.892" endtime="20201029 09:33:18.199"></status>
</kw>
<msg timestamp="20201029 09:33:18.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.141764889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.141766694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.891" endtime="20201029 09:33:18.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.141764889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.141766694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.205" endtime="20201029 09:33:18.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.216" endtime="20201029 09:33:18.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.888" endtime="20201029 09:33:18.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.886" endtime="20201029 09:33:18.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.223" level="INFO">${RESULT} = [{'diff': 1.8049999999103505e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.7779999998968066e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.737000000057165e-06...</msg>
<status status="PASS" starttime="20201029 09:33:18.219" endtime="20201029 09:33:18.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.228" level="INFO">${OVERHEAD} = {'diff': [1.8049999999103505e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:18.224" endtime="20201029 09:33:18.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.232" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.231" endtime="20201029 09:33:18.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.235" level="INFO">VALUE: [1.8049999999103505e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7089999999608807e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.6949999999127385e-06, 1.7780000001188512e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7909999998622084e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7219999999262825e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.234" endtime="20201029 09:33:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.229" endtime="20201029 09:33:18.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.857" endtime="20201029 09:33:18.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.856" endtime="20201029 09:33:18.237"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.245" endtime="20201029 09:33:18.261"></status>
</kw>
<msg timestamp="20201029 09:33:18.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.244" endtime="20201029 09:33:18.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.263" endtime="20201029 09:33:18.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.265" endtime="20201029 09:33:18.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.241" endtime="20201029 09:33:18.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.239" endtime="20201029 09:33:18.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.275" endtime="20201029 09:33:18.594"></status>
</kw>
<msg timestamp="20201029 09:33:18.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.544964319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.544966069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.273" endtime="20201029 09:33:18.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.544964319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.544966069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.606" endtime="20201029 09:33:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.621" endtime="20201029 09:33:18.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.270" endtime="20201029 09:33:18.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.269" endtime="20201029 09:33:18.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.628" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7780000001188512e-06}, {'diff': 1.737000000057165e-0...</msg>
<status status="PASS" starttime="20201029 09:33:18.625" endtime="20201029 09:33:18.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.634" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:18.629" endtime="20201029 09:33:18.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.638" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.637" endtime="20201029 09:33:18.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.641" level="INFO">VALUE: [1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.737000000057165e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7219999999262825e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6809999998645964e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.6669999998164542e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7499999998005222e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7499999998005222e-06, 1.7089999999608807e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.722000000148327e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.639" endtime="20201029 09:33:18.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.635" endtime="20201029 09:33:18.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.238" endtime="20201029 09:33:18.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.237" endtime="20201029 09:33:18.643"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.651" endtime="20201029 09:33:18.666"></status>
</kw>
<msg timestamp="20201029 09:33:18.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.649" endtime="20201029 09:33:18.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.669" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.668" endtime="20201029 09:33:18.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.670" endtime="20201029 09:33:18.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.647" endtime="20201029 09:33:18.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.645" endtime="20201029 09:33:18.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.680" endtime="20201029 09:33:18.988"></status>
</kw>
<msg timestamp="20201029 09:33:18.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.915682653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.915684431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.678" endtime="20201029 09:33:18.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.915682653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.915684431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.993" endtime="20201029 09:33:19.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.003" endtime="20201029 09:33:19.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.675" endtime="20201029 09:33:19.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.673" endtime="20201029 09:33:19.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.010" level="INFO">${RESULT} = [{'diff': 1.7780000001188512e-06}, {'diff': 1.722000000148327e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7770000000361108e-06}, {'diff': 1.7500000000225668e-06...</msg>
<status status="PASS" starttime="20201029 09:33:19.006" endtime="20201029 09:33:19.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.015" level="INFO">${OVERHEAD} = {'diff': [1.7780000001188512e-06, 1.722000000148327e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.011" endtime="20201029 09:33:19.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.019" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.018" endtime="20201029 09:33:19.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.021" level="INFO">VALUE: [1.7780000001188512e-06, 1.722000000148327e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.777999999674762e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.777999999674762e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7640000002927536e-06, 1.7360000001964693e-06, 1.6949999999127385e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.020" endtime="20201029 09:33:19.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.015" endtime="20201029 09:33:19.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.644" endtime="20201029 09:33:19.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.643" endtime="20201029 09:33:19.023"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.032" endtime="20201029 09:33:19.048"></status>
</kw>
<msg timestamp="20201029 09:33:19.048" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.030" endtime="20201029 09:33:19.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.049" endtime="20201029 09:33:19.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.052" endtime="20201029 09:33:19.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.028" endtime="20201029 09:33:19.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.025" endtime="20201029 09:33:19.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.061" endtime="20201029 09:33:19.377"></status>
</kw>
<msg timestamp="20201029 09:33:19.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.311962278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.311964028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.059" endtime="20201029 09:33:19.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.311962278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.311964028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.382" endtime="20201029 09:33:19.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.392" endtime="20201029 09:33:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.057" endtime="20201029 09:33:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.055" endtime="20201029 09:33:19.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.399" level="INFO">${RESULT} = [{'diff': 1.7499999995784776e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.6800000000039006e-06...</msg>
<status status="PASS" starttime="20201029 09:33:19.396" endtime="20201029 09:33:19.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.405" level="INFO">${OVERHEAD} = {'diff': [1.7499999995784776e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.400" endtime="20201029 09:33:19.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.409" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.408" endtime="20201029 09:33:19.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.412" level="INFO">VALUE: [1.7499999995784776e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7079999996560957e-06, 1.7499999995784776e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.6669999998164542e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.411" endtime="20201029 09:33:19.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.406" endtime="20201029 09:33:19.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.024" endtime="20201029 09:33:19.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.024" endtime="20201029 09:33:19.415"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.428" endtime="20201029 09:33:19.446"></status>
</kw>
<msg timestamp="20201029 09:33:19.447" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.425" endtime="20201029 09:33:19.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.450" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.448" endtime="20201029 09:33:19.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.451" endtime="20201029 09:33:19.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.420" endtime="20201029 09:33:19.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.417" endtime="20201029 09:33:19.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.460" endtime="20201029 09:33:19.766"></status>
</kw>
<msg timestamp="20201029 09:33:19.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.680496069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.680497792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.458" endtime="20201029 09:33:19.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.680496069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.680497792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.771" endtime="20201029 09:33:19.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.781" endtime="20201029 09:33:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.456" endtime="20201029 09:33:19.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.454" endtime="20201029 09:33:19.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.789" level="INFO">${RESULT} = [{'diff': 1.7230000000090229e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7219999999262825e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.784" endtime="20201029 09:33:19.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.793" level="INFO">${OVERHEAD} = {'diff': [1.7230000000090229e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.735...</msg>
<status status="PASS" starttime="20201029 09:33:19.790" endtime="20201029 09:33:19.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.797" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.796" endtime="20201029 09:33:19.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.800" level="INFO">VALUE: [1.7230000000090229e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.777999999674762e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7499999995784776e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.799" endtime="20201029 09:33:19.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.794" endtime="20201029 09:33:19.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.416" endtime="20201029 09:33:19.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.415" endtime="20201029 09:33:19.802"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.810" endtime="20201029 09:33:19.826"></status>
</kw>
<msg timestamp="20201029 09:33:19.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.808" endtime="20201029 09:33:19.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.827" endtime="20201029 09:33:19.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.830" endtime="20201029 09:33:19.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.806" endtime="20201029 09:33:19.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.804" endtime="20201029 09:33:19.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.840" endtime="20201029 09:33:20.160"></status>
</kw>
<msg timestamp="20201029 09:33:20.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06592925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.065931, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:33:19.838" endtime="20201029 09:33:20.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06592925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.065931, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:33:20.165" endtime="20201029 09:33:20.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.175" endtime="20201029 09:33:20.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.835" endtime="20201029 09:33:20.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.833" endtime="20201029 09:33:20.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.182" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7919999999449487e-06...</msg>
<status status="PASS" starttime="20201029 09:33:20.178" endtime="20201029 09:33:20.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.187" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:33:20.183" endtime="20201029 09:33:20.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.191" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:20.190" endtime="20201029 09:33:20.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.194" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.666000000177803e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.6949999999127385e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7499999995784776e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 09:33:20.192" endtime="20201029 09:33:20.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.187" endtime="20201029 09:33:20.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.803" endtime="20201029 09:33:20.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.802" endtime="20201029 09:33:20.196"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.203" endtime="20201029 09:33:20.218"></status>
</kw>
<msg timestamp="20201029 09:33:20.219" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.202" endtime="20201029 09:33:20.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.220" endtime="20201029 09:33:20.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.222" endtime="20201029 09:33:20.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.199" endtime="20201029 09:33:20.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.198" endtime="20201029 09:33:20.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.231" endtime="20201029 09:33:20.537"></status>
</kw>
<msg timestamp="20201029 09:33:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.435835611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.435837347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.230" endtime="20201029 09:33:20.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.435835611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.435837347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.542" endtime="20201029 09:33:20.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.552" endtime="20201029 09:33:20.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.227" endtime="20201029 09:33:20.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.225" endtime="20201029 09:33:20.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.558" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7499999995784776e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:20.555" endtime="20201029 09:33:20.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.564" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.73599999975238e-06, 1.7499999995784776e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:33:20.559" endtime="20201029 09:33:20.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.568" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:20.567" endtime="20201029 09:33:20.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.571" level="INFO">VALUE: [1.7360000001964693e-06, 1.73599999975238e-06, 1.7499999995784776e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.792000000389038e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.7639999998486644e-06, 1.6940000002740874e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 09:33:20.569" endtime="20201029 09:33:20.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.565" endtime="20201029 09:33:20.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.197" endtime="20201029 09:33:20.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.196" endtime="20201029 09:33:20.573"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.580" endtime="20201029 09:33:20.595"></status>
</kw>
<msg timestamp="20201029 09:33:20.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.579" endtime="20201029 09:33:20.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.597" endtime="20201029 09:33:20.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.599" endtime="20201029 09:33:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.576" endtime="20201029 09:33:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.575" endtime="20201029 09:33:20.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.608" endtime="20201029 09:33:20.921"></status>
</kw>
<msg timestamp="20201029 09:33:20.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.818631861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.818633597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.606" endtime="20201029 09:33:20.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.818631861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.818633597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.926" endtime="20201029 09:33:20.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.936" endtime="20201029 09:33:20.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.604" endtime="20201029 09:33:20.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.602" endtime="20201029 09:33:20.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.943" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.792000000389038e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.7639999998486644e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:20.939" endtime="20201029 09:33:20.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.947" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7360000001964693e-06, 1.792000000389038e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.7639999998486644e-06, 1.6940000002740874e-06, 1.73599999975238e-06, 1.7...</msg>
<status status="PASS" starttime="20201029 09:33:20.944" endtime="20201029 09:33:20.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.951" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:20.950" endtime="20201029 09:33:20.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.954" level="INFO">VALUE: [1.73599999975238e-06, 1.7360000001964693e-06, 1.792000000389038e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.7639999998486644e-06, 1.6940000002740874e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7780000005629404e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7780000005629404e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.6670000002605434e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:20.952" endtime="20201029 09:33:20.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.948" endtime="20201029 09:33:20.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.573" endtime="20201029 09:33:20.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.573" endtime="20201029 09:33:20.956"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.964" endtime="20201029 09:33:20.979"></status>
</kw>
<msg timestamp="20201029 09:33:20.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.962" endtime="20201029 09:33:20.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.982" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.980" endtime="20201029 09:33:20.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.983" endtime="20201029 09:33:20.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.959" endtime="20201029 09:33:20.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.958" endtime="20201029 09:33:20.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.991" endtime="20201029 09:33:21.309"></status>
</kw>
<msg timestamp="20201029 09:33:21.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.181732819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.181734556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.990" endtime="20201029 09:33:21.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.181732819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.181734556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.314" endtime="20201029 09:33:21.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.324" endtime="20201029 09:33:21.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.988" endtime="20201029 09:33:21.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.986" endtime="20201029 09:33:21.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.330" level="INFO">${RESULT} = [{'diff': 1.7370000007232989e-06}, {'diff': 1.7780000005629404e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6670000002605434e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:21.327" endtime="20201029 09:33:21.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.336" level="INFO">${OVERHEAD} = {'diff': [1.7370000007232989e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.6670000002605434e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7359...</msg>
<status status="PASS" starttime="20201029 09:33:21.331" endtime="20201029 09:33:21.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:21.339" endtime="20201029 09:33:21.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.342" level="INFO">VALUE: [1.7370000007232989e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.6670000002605434e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.8199999995971439e-06, 1.666000000177803e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6809999996425518e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.777999999674762e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.7629999993218348e-06, 1.7770000004802e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.341" endtime="20201029 09:33:21.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.336" endtime="20201029 09:33:21.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.956" endtime="20201029 09:33:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.956" endtime="20201029 09:33:21.344"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.352" endtime="20201029 09:33:21.367"></status>
</kw>
<msg timestamp="20201029 09:33:21.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.350" endtime="20201029 09:33:21.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.369" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.368" endtime="20201029 09:33:21.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.371" endtime="20201029 09:33:21.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.348" endtime="20201029 09:33:21.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.346" endtime="20201029 09:33:21.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.379" endtime="20201029 09:33:21.692"></status>
</kw>
<msg timestamp="20201029 09:33:21.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.554727194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.554728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.378" endtime="20201029 09:33:21.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.554727194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.554728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.697" endtime="20201029 09:33:21.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.707" endtime="20201029 09:33:21.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.376" endtime="20201029 09:33:21.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.374" endtime="20201029 09:33:21.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.714" level="INFO">${RESULT} = [{'diff': 1.723000000453112e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7229999995649337e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:21.710" endtime="20201029 09:33:21.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.719" level="INFO">${OVERHEAD} = {'diff': [1.723000000453112e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.750...</msg>
<status status="PASS" starttime="20201029 09:33:21.715" endtime="20201029 09:33:21.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.724" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:21.723" endtime="20201029 09:33:21.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.726" level="INFO">VALUE: [1.723000000453112e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.7629999993218348e-06, 1.7770000004802e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7770000004802e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6940000007181766e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.725" endtime="20201029 09:33:21.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.720" endtime="20201029 09:33:21.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.345" endtime="20201029 09:33:21.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.344" endtime="20201029 09:33:21.728"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.736" endtime="20201029 09:33:21.751"></status>
</kw>
<msg timestamp="20201029 09:33:21.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.734" endtime="20201029 09:33:21.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.752" endtime="20201029 09:33:21.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.755" endtime="20201029 09:33:21.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.732" endtime="20201029 09:33:21.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.730" endtime="20201029 09:33:21.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.763" endtime="20201029 09:33:22.086"></status>
</kw>
<msg timestamp="20201029 09:33:22.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.932213125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.932214819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.762" endtime="20201029 09:33:22.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.932213125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.932214819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.091" endtime="20201029 09:33:22.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.101" endtime="20201029 09:33:22.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.759" endtime="20201029 09:33:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.758" endtime="20201029 09:33:22.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.108" level="INFO">${RESULT} = [{'diff': 1.6940000007181766e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.723000000453112e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:22.104" endtime="20201029 09:33:22.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.113" level="INFO">${OVERHEAD} = {'diff': [1.6940000007181766e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599...</msg>
<status status="PASS" starttime="20201029 09:33:22.109" endtime="20201029 09:33:22.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:22.116" endtime="20201029 09:33:22.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.120" level="INFO">VALUE: [1.6940000007181766e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6670000002605434e-06, 1.7910000007503868e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7770000004802e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7770000004802e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7769999995920216e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.777999999674762e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.118" endtime="20201029 09:33:22.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.113" endtime="20201029 09:33:22.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.729" endtime="20201029 09:33:22.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.728" endtime="20201029 09:33:22.122"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.130" endtime="20201029 09:33:22.149"></status>
</kw>
<msg timestamp="20201029 09:33:22.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.129" endtime="20201029 09:33:22.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.153" endtime="20201029 09:33:22.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.158" endtime="20201029 09:33:22.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.125" endtime="20201029 09:33:22.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.124" endtime="20201029 09:33:22.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.178" endtime="20201029 09:33:22.506"></status>
</kw>
<msg timestamp="20201029 09:33:22.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.308199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.308201514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.175" endtime="20201029 09:33:22.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.308199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.308201514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.511" endtime="20201029 09:33:22.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.521" endtime="20201029 09:33:22.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.169" endtime="20201029 09:33:22.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.165" endtime="20201029 09:33:22.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.528" level="INFO">${RESULT} = [{'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7229999995649337e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:22.524" endtime="20201029 09:33:22.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.533" level="INFO">${OVERHEAD} = {'diff': [1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 09:33:22.529" endtime="20201029 09:33:22.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.537" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:22.536" endtime="20201029 09:33:22.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.540" level="INFO">VALUE: [1.7360000006405585e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.805999999326957e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.777999999674762e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.8060000002151355e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6809999996425518e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.538" endtime="20201029 09:33:22.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.534" endtime="20201029 09:33:22.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.122" endtime="20201029 09:33:22.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.122" endtime="20201029 09:33:22.542"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.549" endtime="20201029 09:33:22.565"></status>
</kw>
<msg timestamp="20201029 09:33:22.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.548" endtime="20201029 09:33:22.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.566" endtime="20201029 09:33:22.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.569" endtime="20201029 09:33:22.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.545" endtime="20201029 09:33:22.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.544" endtime="20201029 09:33:22.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.578" endtime="20201029 09:33:22.894"></status>
</kw>
<msg timestamp="20201029 09:33:22.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.691155097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.691156819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.576" endtime="20201029 09:33:22.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.691155097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.691156819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.899" endtime="20201029 09:33:22.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.909" endtime="20201029 09:33:22.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.574" endtime="20201029 09:33:22.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.572" endtime="20201029 09:33:22.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.916" level="INFO">${RESULT} = [{'diff': 1.7219999994821933e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7220000003703717e-...</msg>
<status status="PASS" starttime="20201029 09:33:22.912" endtime="20201029 09:33:22.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.922" level="INFO">${OVERHEAD} = {'diff': [1.7219999994821933e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6809999996425518e-06, 1.73599999975238e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:22.917" endtime="20201029 09:33:22.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.928" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:22.927" endtime="20201029 09:33:22.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.931" level="INFO">VALUE: [1.7219999994821933e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6809999996425518e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7229999995649337e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.930" endtime="20201029 09:33:22.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.925" endtime="20201029 09:33:22.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.542" endtime="20201029 09:33:22.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.542" endtime="20201029 09:33:22.933"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.941" endtime="20201029 09:33:22.958"></status>
</kw>
<msg timestamp="20201029 09:33:22.959" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.940" endtime="20201029 09:33:22.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.960" endtime="20201029 09:33:22.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.963" endtime="20201029 09:33:22.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.937" endtime="20201029 09:33:22.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.935" endtime="20201029 09:33:22.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.973" endtime="20201029 09:33:23.291"></status>
</kw>
<msg timestamp="20201029 09:33:23.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.098168778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.098170528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.972" endtime="20201029 09:33:23.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.098168778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.098170528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.296" endtime="20201029 09:33:23.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.306" endtime="20201029 09:33:23.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.968" endtime="20201029 09:33:23.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.966" endtime="20201029 09:33:23.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.313" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7370000007232989e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6799999995598114e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:23.309" endtime="20201029 09:33:23.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:23.317" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7370000007232989e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73...</msg>
<status status="PASS" starttime="20201029 09:33:23.314" endtime="20201029 09:33:23.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.321" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:23.320" endtime="20201029 09:33:23.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.325" level="INFO">VALUE: [1.7500000000225668e-06, 1.7370000007232989e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7229999995649337e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6809999996425518e-06, 1.7639999994045752e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.777999999674762e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.777999999674762e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7370000007232989e-06]</msg>
<status status="PASS" starttime="20201029 09:33:23.322" endtime="20201029 09:33:23.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.318" endtime="20201029 09:33:23.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.934" endtime="20201029 09:33:23.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.934" endtime="20201029 09:33:23.327"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.334" endtime="20201029 09:33:23.349"></status>
</kw>
<msg timestamp="20201029 09:33:23.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.333" endtime="20201029 09:33:23.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.351" endtime="20201029 09:33:23.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.353" endtime="20201029 09:33:23.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.330" endtime="20201029 09:33:23.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.329" endtime="20201029 09:33:23.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.362" endtime="20201029 09:33:23.674"></status>
</kw>
<msg timestamp="20201029 09:33:23.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.480767278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.480769028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.360" endtime="20201029 09:33:23.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.480767278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.480769028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.679" endtime="20201029 09:33:23.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.688" endtime="20201029 09:33:23.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.358" endtime="20201029 09:33:23.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.356" endtime="20201029 09:33:23.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.695" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7639999994045752e-06}, {'diff': 1.7360000006405585e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:23.692" endtime="20201029 09:33:23.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:23.700" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7230...</msg>
<status status="PASS" starttime="20201029 09:33:23.696" endtime="20201029 09:33:23.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.705" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:23.704" endtime="20201029 09:33:23.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.707" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7370000007232989e-06, 1.7220000003703717e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.8189999995144035e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.8060000002151355e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06]</msg>
<status status="PASS" starttime="20201029 09:33:23.706" endtime="20201029 09:33:23.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.701" endtime="20201029 09:33:23.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.327" endtime="20201029 09:33:23.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.327" endtime="20201029 09:33:23.821"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.829" endtime="20201029 09:33:23.843"></status>
</kw>
<msg timestamp="20201029 09:33:23.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.827" endtime="20201029 09:33:23.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.846" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.845" endtime="20201029 09:33:23.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.847" endtime="20201029 09:33:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.824" endtime="20201029 09:33:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.823" endtime="20201029 09:33:23.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.856" endtime="20201029 09:33:24.168"></status>
</kw>
<msg timestamp="20201029 09:33:24.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.865131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.865133625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.854" endtime="20201029 09:33:24.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.865131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.865133625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.173" endtime="20201029 09:33:24.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.183" endtime="20201029 09:33:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.852" endtime="20201029 09:33:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.850" endtime="20201029 09:33:24.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.190" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.777999999674762e-06}, {'diff': 1.7500000000225668e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:24.186" endtime="20201029 09:33:24.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.195" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7359999...</msg>
<status status="PASS" starttime="20201029 09:33:24.191" endtime="20201029 09:33:24.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.199" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:24.198" endtime="20201029 09:33:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.201" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.8050000001323951e-06, 1.666999999372365e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7919999999449487e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.6949999999127385e-06, 1.7360000006405585e-06, 1.6940000007181766e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7640000002927536e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.200" endtime="20201029 09:33:24.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.195" endtime="20201029 09:33:24.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.821" endtime="20201029 09:33:24.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.821" endtime="20201029 09:33:24.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.335" endtime="20201029 09:33:24.203"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:16.263" endtime="20201029 09:33:24.204" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.210" endtime="20201029 09:33:24.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.209" endtime="20201029 09:33:24.230"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.246" endtime="20201029 09:33:24.262"></status>
</kw>
<msg timestamp="20201029 09:33:24.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.244" endtime="20201029 09:33:24.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.264" endtime="20201029 09:33:24.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.268" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:24.266" endtime="20201029 09:33:24.270"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.242" endtime="20201029 09:33:24.271"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.239" endtime="20201029 09:33:24.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.238" endtime="20201029 09:33:24.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:24.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:24.276" endtime="20201029 09:33:24.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.274" endtime="20201029 09:33:24.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.237" endtime="20201029 09:33:24.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.237" endtime="20201029 09:33:24.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.281" endtime="20201029 09:33:24.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.233" endtime="20201029 09:33:24.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.231" endtime="20201029 09:33:24.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.208" endtime="20201029 09:33:24.286"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.298" endtime="20201029 09:33:24.319"></status>
</kw>
<msg timestamp="20201029 09:33:24.320" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.296" endtime="20201029 09:33:24.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.322" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.321" endtime="20201029 09:33:24.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.323" endtime="20201029 09:33:24.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.292" endtime="20201029 09:33:24.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.288" endtime="20201029 09:33:24.326"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.328" endtime="20201029 09:33:24.330"></status>
</kw>
<msg timestamp="20201029 09:33:24.331" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:24.327" endtime="20201029 09:33:24.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.335" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:24.333" endtime="20201029 09:33:24.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.338" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:24.336" endtime="20201029 09:33:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.331" endtime="20201029 09:33:24.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.342" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:24.341" endtime="20201029 09:33:24.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.344" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:24.343" endtime="20201029 09:33:24.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.339" endtime="20201029 09:33:24.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.351" endtime="20201029 09:33:24.639"></status>
</kw>
<msg timestamp="20201029 09:33:24.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077537722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077571847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.350" endtime="20201029 09:33:24.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077537722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077571847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.643" endtime="20201029 09:33:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.651" endtime="20201029 09:33:24.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.348" endtime="20201029 09:33:24.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.346" endtime="20201029 09:33:24.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.658" level="INFO">${RESULT} = [{'diff': 3.4124999999995964e-05}, {'diff': 8.068999999999438e-06}, {'diff': 8.054999999992929e-06}, {'diff': 8.069000000013316e-06}, {'diff': 8.014000000000632e-06}, {'diff': 8.041000000000298e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:24.655" endtime="20201029 09:33:24.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.662" level="INFO">${OVERHEAD} = {'diff': [3.4124999999995964e-05, 8.068999999999438e-06, 8.054999999992929e-06, 8.069000000013316e-06, 8.014000000000632e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.041000000000298e-06, 8.028...</msg>
<status status="PASS" starttime="20201029 09:33:24.659" endtime="20201029 09:33:24.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.667" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:24.666" endtime="20201029 09:33:24.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.670" level="INFO">VALUE: [3.4124999999995964e-05, 8.068999999999438e-06, 8.054999999992929e-06, 8.069000000013316e-06, 8.014000000000632e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.041000000000298e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.027999999993263e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.083000000005947e-06, 8.027999999993263e-06, 8.055999999992403e-06, 8.068999999999438e-06, 7.971999999994983e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.027999999993263e-06, 8.013000000001158e-06, 8.082999999992069e-06, 8.027000000007667e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.055000000006807e-06, 8.055999999992403e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.000000000008e-06, 8.069999999998911e-06, 8.05600000000628e-06, 8.04099999998642e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.041000000000298e-06, 8.05600000000628e-06, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.668" endtime="20201029 09:33:24.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.663" endtime="20201029 09:33:24.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.287" endtime="20201029 09:33:24.671"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:24.205" endtime="20201029 09:33:24.672" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.679" endtime="20201029 09:33:24.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.677" endtime="20201029 09:33:24.699"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.711" endtime="20201029 09:33:24.730"></status>
</kw>
<msg timestamp="20201029 09:33:24.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.710" endtime="20201029 09:33:24.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.731" endtime="20201029 09:33:24.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:24.734" endtime="20201029 09:33:24.736"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.707" endtime="20201029 09:33:24.737"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.705" endtime="20201029 09:33:24.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.704" endtime="20201029 09:33:24.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:24.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:24.740" endtime="20201029 09:33:24.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.738" endtime="20201029 09:33:24.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.703" endtime="20201029 09:33:24.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.702" endtime="20201029 09:33:24.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.743" endtime="20201029 09:33:24.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.701" endtime="20201029 09:33:24.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.699" endtime="20201029 09:33:24.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.676" endtime="20201029 09:33:24.745"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.755" endtime="20201029 09:33:24.823"></status>
</kw>
<msg timestamp="20201029 09:33:24.823" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.752" endtime="20201029 09:33:24.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.826" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.824" endtime="20201029 09:33:24.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.827" endtime="20201029 09:33:24.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.750" endtime="20201029 09:33:24.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.747" endtime="20201029 09:33:24.829"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.832" endtime="20201029 09:33:24.834"></status>
</kw>
<msg timestamp="20201029 09:33:24.834" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:24.830" endtime="20201029 09:33:24.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.838" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:24.837" endtime="20201029 09:33:24.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.840" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:24.839" endtime="20201029 09:33:24.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.835" endtime="20201029 09:33:24.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.845" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:24.844" endtime="20201029 09:33:24.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.847" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:24.846" endtime="20201029 09:33:24.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.841" endtime="20201029 09:33:24.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.854" endtime="20201029 09:33:25.145"></status>
</kw>
<msg timestamp="20201029 09:33:25.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067232181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067266264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.852" endtime="20201029 09:33:25.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067232181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067266264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.150" endtime="20201029 09:33:25.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.159" endtime="20201029 09:33:25.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.850" endtime="20201029 09:33:25.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.848" endtime="20201029 09:33:25.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.166" level="INFO">${RESULT} = [{'diff': 3.408300000000419e-05}, {'diff': 3.418000000000865e-05}, {'diff': 3.411100000000333e-05}, {'diff': 3.416700000000161e-05}, {'diff': 3.417999999999477e-05}, {'diff': 3.4180999999994244e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:25.163" endtime="20201029 09:33:25.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.171" level="INFO">${OVERHEAD} = {'diff': [3.408300000000419e-05, 3.418000000000865e-05, 3.411100000000333e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.422200000000042e-05, 3.418...</msg>
<status status="PASS" starttime="20201029 09:33:25.167" endtime="20201029 09:33:25.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.175" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:25.174" endtime="20201029 09:33:25.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.178" level="INFO">VALUE: [3.408300000000419e-05, 3.418000000000865e-05, 3.411100000000333e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.422200000000042e-05, 3.418000000000865e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.418000000000865e-05, 3.41939999999874e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.418000000000865e-05, 3.419400000000128e-05, 3.4180999999994244e-05, 3.423599999999305e-05, 3.416700000000161e-05, 3.4124999999995964e-05, 3.424999999999956e-05, 3.4180999999994244e-05, 3.4180999999994244e-05, 3.4208999999993384e-05, 3.419500000000075e-05, 3.4124999999995964e-05, 3.4208999999993384e-05, 3.419400000000128e-05, 3.417999999999477e-05, 3.41939999999874e-05, 3.416700000000161e-05, 3.418100000000812e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.4166999999987735e-05, 3.418100000000812e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.419400000000128e-05, 3.418000000000865e-05, 3.416599999998826e-05, 3.418000000000865e-05, 3.419400000000128e-05, 3.418000000000865e-05, 3.418100000000812e-05, 3.418000000000865e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.176" endtime="20201029 09:33:25.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.172" endtime="20201029 09:33:25.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.746" endtime="20201029 09:33:25.179"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:24.673" endtime="20201029 09:33:25.180" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.195" endtime="20201029 09:33:25.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.191" endtime="20201029 09:33:25.216"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.229" endtime="20201029 09:33:25.245"></status>
</kw>
<msg timestamp="20201029 09:33:25.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.227" endtime="20201029 09:33:25.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.246" endtime="20201029 09:33:25.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.251" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:25.249" endtime="20201029 09:33:25.251"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.225" endtime="20201029 09:33:25.252"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.222" endtime="20201029 09:33:25.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.221" endtime="20201029 09:33:25.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:25.256" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:25.256" endtime="20201029 09:33:25.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.254" endtime="20201029 09:33:25.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.220" endtime="20201029 09:33:25.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.219" endtime="20201029 09:33:25.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.259" endtime="20201029 09:33:25.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.218" endtime="20201029 09:33:25.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.217" endtime="20201029 09:33:25.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.189" endtime="20201029 09:33:25.262"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.270" endtime="20201029 09:33:25.470"></status>
</kw>
<msg timestamp="20201029 09:33:25.471" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.269" endtime="20201029 09:33:25.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.474" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.472" endtime="20201029 09:33:25.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.476" endtime="20201029 09:33:25.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.266" endtime="20201029 09:33:25.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.264" endtime="20201029 09:33:25.480"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.484" endtime="20201029 09:33:25.487"></status>
</kw>
<msg timestamp="20201029 09:33:25.487" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:25.481" endtime="20201029 09:33:25.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.493" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:25.492" endtime="20201029 09:33:25.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.496" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:25.495" endtime="20201029 09:33:25.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.488" endtime="20201029 09:33:25.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.501" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:25.500" endtime="20201029 09:33:25.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.503" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:25.502" endtime="20201029 09:33:25.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.497" endtime="20201029 09:33:25.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.511" endtime="20201029 09:33:25.816"></status>
</kw>
<msg timestamp="20201029 09:33:25.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068122486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068187167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.510" endtime="20201029 09:33:25.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068122486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068187167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.828" endtime="20201029 09:33:25.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.849" endtime="20201029 09:33:25.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.507" endtime="20201029 09:33:25.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.505" endtime="20201029 09:33:25.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.867" level="INFO">${RESULT} = [{'diff': 6.468100000001087e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.436199999999836e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.434699999999238e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:25.858" endtime="20201029 09:33:25.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.875" level="INFO">${OVERHEAD} = {'diff': [6.468100000001087e-05, 6.436099999999889e-05, 6.436199999999836e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.443100000000368e-05, 6.443100000000368e-05, 6.4347...</msg>
<status status="PASS" starttime="20201029 09:33:25.869" endtime="20201029 09:33:25.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.879" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:25.878" endtime="20201029 09:33:25.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.882" level="INFO">VALUE: [6.468100000001087e-05, 6.436099999999889e-05, 6.436199999999836e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.443100000000368e-05, 6.443100000000368e-05, 6.434799999999186e-05, 6.433299999999975e-05, 6.434699999999238e-05, 6.436099999999889e-05, 6.437499999999152e-05, 6.440300000000454e-05, 6.434700000000626e-05, 6.434700000000626e-05, 6.43750000000054e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.433399999999923e-05, 6.43750000000054e-05, 6.436099999998501e-05, 6.433399999999923e-05, 6.436099999998501e-05, 6.436099999998501e-05, 6.430499999998673e-05, 6.430600000001396e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.433299999999975e-05, 6.433299999999975e-05, 6.433299999999975e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.436099999998501e-05, 6.434699999999238e-05, 6.443100000000368e-05, 6.440299999999066e-05, 6.434699999999238e-05, 6.434799999999186e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.433399999999923e-05, 6.437499999997764e-05, 6.434700000002014e-05, 6.433399999999923e-05, 6.436099999998501e-05, 6.434700000002014e-05, 6.43750000000054e-05, 6.437499999997764e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.880" endtime="20201029 09:33:25.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.876" endtime="20201029 09:33:25.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.263" endtime="20201029 09:33:25.883"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:25.182" endtime="20201029 09:33:25.884" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.891" endtime="20201029 09:33:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.889" endtime="20201029 09:33:25.911"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.924" endtime="20201029 09:33:25.943"></status>
</kw>
<msg timestamp="20201029 09:33:25.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.923" endtime="20201029 09:33:25.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.944" endtime="20201029 09:33:25.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:25.947" endtime="20201029 09:33:25.949"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.919" endtime="20201029 09:33:25.950"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.917" endtime="20201029 09:33:25.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.916" endtime="20201029 09:33:25.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:25.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:25.953" endtime="20201029 09:33:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.951" endtime="20201029 09:33:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.915" endtime="20201029 09:33:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.914" endtime="20201029 09:33:25.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.956" endtime="20201029 09:33:25.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.913" endtime="20201029 09:33:25.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.911" endtime="20201029 09:33:25.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.888" endtime="20201029 09:33:25.959"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.967" endtime="20201029 09:33:25.988"></status>
</kw>
<msg timestamp="20201029 09:33:25.989" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.965" endtime="20201029 09:33:25.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.991" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.990" endtime="20201029 09:33:25.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.992" endtime="20201029 09:33:25.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.963" endtime="20201029 09:33:25.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.961" endtime="20201029 09:33:25.995"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.997" endtime="20201029 09:33:25.999"></status>
</kw>
<msg timestamp="20201029 09:33:25.999" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:25.996" endtime="20201029 09:33:26.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.004" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:26.003" endtime="20201029 09:33:26.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.006" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:26.005" endtime="20201029 09:33:26.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.000" endtime="20201029 09:33:26.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.010" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:26.009" endtime="20201029 09:33:26.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.012" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:26.011" endtime="20201029 09:33:26.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.007" endtime="20201029 09:33:26.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.021" endtime="20201029 09:33:26.306"></status>
</kw>
<msg timestamp="20201029 09:33:26.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066484514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.019" endtime="20201029 09:33:26.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066484514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.310" endtime="20201029 09:33:26.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.318" endtime="20201029 09:33:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.015" endtime="20201029 09:33:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.014" endtime="20201029 09:33:26.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.325" level="INFO">${RESULT} = [{'diff': 1.52800000000064e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5409999999937973e-06}, {'diff': 1.5269999999872885e-06}, {'diff': 1.541999999993271e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.321" endtime="20201029 09:33:26.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:26.329" level="INFO">${OVERHEAD} = {'diff': [1.52800000000064e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.5269999999872885e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541000...</msg>
<status status="PASS" starttime="20201029 09:33:26.326" endtime="20201029 09:33:26.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.333" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:26.332" endtime="20201029 09:33:26.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.336" level="INFO">VALUE: [1.52800000000064e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.5269999999872885e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5269999999872885e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5699999999924108e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5279999999867622e-06, 1.541999999993271e-06, 1.5970000000059548e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5279999999867622e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.4860000000088691e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.4719999999884825e-06]</msg>
<status status="PASS" starttime="20201029 09:33:26.334" endtime="20201029 09:33:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.330" endtime="20201029 09:33:26.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.959" endtime="20201029 09:33:26.337"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:25.886" endtime="20201029 09:33:26.338" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.345" endtime="20201029 09:33:26.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.343" endtime="20201029 09:33:26.365"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.378" endtime="20201029 09:33:26.396"></status>
</kw>
<msg timestamp="20201029 09:33:26.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.377" endtime="20201029 09:33:26.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.398" endtime="20201029 09:33:26.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.402" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:26.400" endtime="20201029 09:33:26.402"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.374" endtime="20201029 09:33:26.403"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.372" endtime="20201029 09:33:26.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.371" endtime="20201029 09:33:26.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:26.408" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:26.407" endtime="20201029 09:33:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.405" endtime="20201029 09:33:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.370" endtime="20201029 09:33:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.369" endtime="20201029 09:33:26.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.409" endtime="20201029 09:33:26.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.368" endtime="20201029 09:33:26.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.366" endtime="20201029 09:33:26.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.342" endtime="20201029 09:33:26.412"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.420" endtime="20201029 09:33:26.489"></status>
</kw>
<msg timestamp="20201029 09:33:26.490" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.419" endtime="20201029 09:33:26.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.492" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.491" endtime="20201029 09:33:26.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.494" endtime="20201029 09:33:26.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.416" endtime="20201029 09:33:26.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.414" endtime="20201029 09:33:26.496"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.499" endtime="20201029 09:33:26.503"></status>
</kw>
<msg timestamp="20201029 09:33:26.504" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:26.497" endtime="20201029 09:33:26.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.510" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:26.508" endtime="20201029 09:33:26.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.513" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:26.511" endtime="20201029 09:33:26.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.505" endtime="20201029 09:33:26.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.520" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:26.518" endtime="20201029 09:33:26.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.523" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:26.522" endtime="20201029 09:33:26.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.516" endtime="20201029 09:33:26.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.534" endtime="20201029 09:33:26.826"></status>
</kw>
<msg timestamp="20201029 09:33:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066768722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.532" endtime="20201029 09:33:26.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066768722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.832" endtime="20201029 09:33:26.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.839" endtime="20201029 09:33:26.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.529" endtime="20201029 09:33:26.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.527" endtime="20201029 09:33:26.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.846" level="INFO">${RESULT} = [{'diff': 8.888999999998037e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.860999999998898e-06}, {'diff': 8.874999999991529e-06}, {'diff': 8.847000000006267e-06}, {'diff': 8.874999999991529e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.843" endtime="20201029 09:33:26.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:26.851" level="INFO">${OVERHEAD} = {'diff': [8.888999999998037e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.847000000006267e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.8889...</msg>
<status status="PASS" starttime="20201029 09:33:26.847" endtime="20201029 09:33:26.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.855" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:26.854" endtime="20201029 09:33:26.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.858" level="INFO">VALUE: [8.888999999998037e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.847000000006267e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.902000000005073e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.903000000004546e-06, 8.860999999998898e-06, 8.915999999997704e-06, 8.915999999997704e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.930000000004212e-06, 8.929999999990335e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.887999999998564e-06, 8.875000000005406e-06, 8.901999999991195e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.846999999992389e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201029 09:33:26.856" endtime="20201029 09:33:26.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.852" endtime="20201029 09:33:26.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.412" endtime="20201029 09:33:26.859"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:26.339" endtime="20201029 09:33:26.860" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.867" endtime="20201029 09:33:26.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.865" endtime="20201029 09:33:26.887"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.900" endtime="20201029 09:33:26.916"></status>
</kw>
<msg timestamp="20201029 09:33:26.917" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.898" endtime="20201029 09:33:26.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.918" endtime="20201029 09:33:26.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.922" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:26.920" endtime="20201029 09:33:26.923"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.896" endtime="20201029 09:33:26.923"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.893" endtime="20201029 09:33:26.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.892" endtime="20201029 09:33:26.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:26.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:26.927" endtime="20201029 09:33:26.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.925" endtime="20201029 09:33:26.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.891" endtime="20201029 09:33:26.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.891" endtime="20201029 09:33:26.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.929" endtime="20201029 09:33:26.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.889" endtime="20201029 09:33:26.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.888" endtime="20201029 09:33:26.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.864" endtime="20201029 09:33:26.932"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.944" endtime="20201029 09:33:27.143"></status>
</kw>
<msg timestamp="20201029 09:33:27.144" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.942" endtime="20201029 09:33:27.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.148" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.145" endtime="20201029 09:33:27.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.150" endtime="20201029 09:33:27.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.939" endtime="20201029 09:33:27.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.934" endtime="20201029 09:33:27.155"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.160" endtime="20201029 09:33:27.163"></status>
</kw>
<msg timestamp="20201029 09:33:27.164" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:27.157" endtime="20201029 09:33:27.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.169" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:27.168" endtime="20201029 09:33:27.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.171" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:27.170" endtime="20201029 09:33:27.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.165" endtime="20201029 09:33:27.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.176" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:27.175" endtime="20201029 09:33:27.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.178" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:27.177" endtime="20201029 09:33:27.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.173" endtime="20201029 09:33:27.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.185" endtime="20201029 09:33:27.489"></status>
</kw>
<msg timestamp="20201029 09:33:27.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070464083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070480458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.183" endtime="20201029 09:33:27.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070464083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070480458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.493" endtime="20201029 09:33:27.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.501" endtime="20201029 09:33:27.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.181" endtime="20201029 09:33:27.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.179" endtime="20201029 09:33:27.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.510" level="INFO">${RESULT} = [{'diff': 1.637499999999903e-05}, {'diff': 1.6401999999998695e-05}, {'diff': 1.6389000000005538e-05}, {'diff': 1.6389000000005538e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:27.504" endtime="20201029 09:33:27.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:27.515" level="INFO">${OVERHEAD} = {'diff': [1.637499999999903e-05, 1.6401999999998695e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.638899999999166e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 09:33:27.511" endtime="20201029 09:33:27.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.520" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:27.519" endtime="20201029 09:33:27.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.522" level="INFO">VALUE: [1.637499999999903e-05, 1.6401999999998695e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.638899999999166e-05, 1.640299999999817e-05, 1.636099999999252e-05, 1.634699999999989e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.638899999999166e-05, 1.6387999999992187e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.63200000000141e-05, 1.634699999999989e-05, 1.637499999998515e-05, 1.6375000000012907e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.640299999999817e-05, 1.6361000000020276e-05, 1.6416000000019082e-05, 1.6431000000011187e-05, 1.63200000000141e-05, 1.640299999999817e-05, 1.640299999999817e-05, 1.636099999999252e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.633300000000726e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.64169999999908e-05, 1.637499999998515e-05, 1.6431000000011187e-05, 1.638799999997831e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.6401999999998695e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.521" endtime="20201029 09:33:27.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.516" endtime="20201029 09:33:27.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.933" endtime="20201029 09:33:27.523"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:26.861" endtime="20201029 09:33:27.524" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.531" endtime="20201029 09:33:27.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.529" endtime="20201029 09:33:27.551"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.564" endtime="20201029 09:33:27.582"></status>
</kw>
<msg timestamp="20201029 09:33:27.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.563" endtime="20201029 09:33:27.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.583" endtime="20201029 09:33:27.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.589" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:27.586" endtime="20201029 09:33:27.589"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:27.560" endtime="20201029 09:33:27.590"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:27.558" endtime="20201029 09:33:27.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.557" endtime="20201029 09:33:27.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:27.594" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:27.593" endtime="20201029 09:33:27.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.591" endtime="20201029 09:33:27.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.556" endtime="20201029 09:33:27.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.555" endtime="20201029 09:33:27.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.596" endtime="20201029 09:33:27.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.554" endtime="20201029 09:33:27.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.552" endtime="20201029 09:33:27.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.528" endtime="20201029 09:33:27.599"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.602" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:27.610" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:28.636" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:27.601" endtime="20201029 09:33:28.637"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.639" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:33:28.638" endtime="20201029 09:33:29.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.599" endtime="20201029 09:33:29.640"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.644" endtime="20201029 09:33:29.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.642" endtime="20201029 09:33:29.664"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.673" endtime="20201029 09:33:29.684"></status>
</kw>
<msg timestamp="20201029 09:33:29.684" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.671" endtime="20201029 09:33:29.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.687" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.685" endtime="20201029 09:33:29.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.688" endtime="20201029 09:33:29.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.669" endtime="20201029 09:33:30.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.667" endtime="20201029 09:33:30.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.433" endtime="20201029 09:33:30.736"></status>
</kw>
<msg timestamp="20201029 09:33:30.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017970611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.430" endtime="20201029 09:33:30.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017970611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.740" endtime="20201029 09:33:30.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.748" endtime="20201029 09:33:30.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.424" endtime="20201029 09:33:30.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.421" endtime="20201029 09:33:30.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.755" level="INFO">${PHILIP_RES} = [{'diff': 4.352800000000101e-05}, {'diff': 8.054999999999868e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.082999999999008e-06}, {'diff': 8.082999999999008e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:30.752" endtime="20201029 09:33:30.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.760" level="INFO">${RESULT} = {'diff': [4.352800000000101e-05, 8.054999999999868e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.0839...</msg>
<status status="PASS" starttime="20201029 09:33:30.756" endtime="20201029 09:33:30.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.764" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.763" endtime="20201029 09:33:30.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.767" level="INFO">VALUE: [4.352800000000101e-05, 8.054999999999868e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.068999999999438e-06, 7.985999999998022e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.08400000000195e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.097000000002047e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.027999999996732e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.083000000002477e-06, 8.055999999999341e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.097000000002047e-06, 8.07000000000238e-06, 8.07000000000238e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.056000000002811e-06, 8.08400000000195e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.07000000000238e-06]</msg>
<status status="PASS" starttime="20201029 09:33:30.765" endtime="20201029 09:33:30.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.761" endtime="20201029 09:33:30.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.664" endtime="20201029 09:33:30.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.642" endtime="20201029 09:33:30.768"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.771" endtime="20201029 09:33:30.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.769" endtime="20201029 09:33:30.790"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.798" endtime="20201029 09:33:30.809"></status>
</kw>
<msg timestamp="20201029 09:33:30.810" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.797" endtime="20201029 09:33:30.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.812" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.811" endtime="20201029 09:33:30.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.813" endtime="20201029 09:33:30.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.794" endtime="20201029 09:33:30.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.792" endtime="20201029 09:33:30.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.822" endtime="20201029 09:33:31.110"></status>
</kw>
<msg timestamp="20201029 09:33:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016586306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016599458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.821" endtime="20201029 09:33:31.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016586306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016599458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.114" endtime="20201029 09:33:31.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.122" endtime="20201029 09:33:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.818" endtime="20201029 09:33:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.817" endtime="20201029 09:33:31.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.129" level="INFO">${PHILIP_RES} = [{'diff': 1.3152000000002384e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2583999999999512e-05}, {'diff': 1.2611000000002648e-...</msg>
<status status="PASS" starttime="20201029 09:33:31.126" endtime="20201029 09:33:31.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.133" level="INFO">${RESULT} = {'diff': [1.3152000000002384e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2583999999999512e-05, 1.2611000000002648e-05, 1.2583000000000039e-05, 1.2610999999999178e-05...</msg>
<status status="PASS" starttime="20201029 09:33:31.130" endtime="20201029 09:33:31.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.137" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.136" endtime="20201029 09:33:31.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.140" level="INFO">VALUE: [1.3152000000002384e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2583999999999512e-05, 1.2611000000002648e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2611999999998652e-05, 1.2638000000002314e-05, 1.2597999999999082e-05, 1.2584000000002982e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.255499999999743e-05, 1.2611000000002648e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2583999999999512e-05, 1.2625000000002218e-05, 1.2583999999999512e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2652999999997888e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2597000000003078e-05, 1.2611999999998652e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2680000000001024e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201029 09:33:31.138" endtime="20201029 09:33:31.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.134" endtime="20201029 09:33:31.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.791" endtime="20201029 09:33:31.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.769" endtime="20201029 09:33:31.141"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.143" endtime="20201029 09:33:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.142" endtime="20201029 09:33:31.163"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.172" endtime="20201029 09:33:31.183"></status>
</kw>
<msg timestamp="20201029 09:33:31.184" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.170" endtime="20201029 09:33:31.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.187" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.185" endtime="20201029 09:33:31.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.188" endtime="20201029 09:33:31.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.167" endtime="20201029 09:33:31.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.165" endtime="20201029 09:33:31.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.197" endtime="20201029 09:33:31.482"></status>
</kw>
<msg timestamp="20201029 09:33:31.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017525208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.195" endtime="20201029 09:33:31.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017525208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.487" endtime="20201029 09:33:31.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.495" endtime="20201029 09:33:31.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.193" endtime="20201029 09:33:31.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.191" endtime="20201029 09:33:31.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.501" level="INFO">${PHILIP_RES} = [{'diff': 1.8278000000000044e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.7749999999996935e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.77630000000005e-05...</msg>
<status status="PASS" starttime="20201029 09:33:31.498" endtime="20201029 09:33:31.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.506" level="INFO">${RESULT} = {'diff': [1.8278000000000044e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7749999999996935e-05, 1.7750000000000404e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:31.502" endtime="20201029 09:33:31.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.510" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.509" endtime="20201029 09:33:31.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.513" level="INFO">VALUE: [1.8278000000000044e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7749999999996935e-05, 1.7750000000000404e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7735999999997365e-05, 1.7722000000001265e-05, 1.7679999999999085e-05, 1.7750000000000404e-05, 1.7792000000002584e-05, 1.7791999999999114e-05, 1.779099999999964e-05, 1.766699999999899e-05, 1.777700000000007e-05, 1.768099999999856e-05, 1.7777999999999544e-05, 1.7723000000000738e-05, 1.7791999999999114e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7749999999996935e-05, 1.77630000000005e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.783299999999835e-05, 1.783300000000182e-05, 1.783299999999835e-05, 1.7806000000002153e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7778000000003014e-05, 1.7750000000000404e-05, 1.776299999999703e-05, 1.7750000000000404e-05, 1.780499999999921e-05, 1.781900000000225e-05, 1.780499999999921e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7763999999999974e-05]</msg>
<status status="PASS" starttime="20201029 09:33:31.512" endtime="20201029 09:33:31.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.506" endtime="20201029 09:33:31.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.164" endtime="20201029 09:33:31.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.142" endtime="20201029 09:33:31.515"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.517" endtime="20201029 09:33:31.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.516" endtime="20201029 09:33:31.537"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.545" endtime="20201029 09:33:31.556"></status>
</kw>
<msg timestamp="20201029 09:33:31.556" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.543" endtime="20201029 09:33:31.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.559" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.558" endtime="20201029 09:33:31.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.560" endtime="20201029 09:33:31.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.541" endtime="20201029 09:33:31.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.539" endtime="20201029 09:33:31.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.569" endtime="20201029 09:33:31.856"></status>
</kw>
<msg timestamp="20201029 09:33:31.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016670236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016694306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.568" endtime="20201029 09:33:31.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016670236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016694306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.860" endtime="20201029 09:33:31.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.868" endtime="20201029 09:33:31.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.565" endtime="20201029 09:33:31.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.563" endtime="20201029 09:33:31.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.875" level="INFO">${PHILIP_RES} = [{'diff': 2.4069999999997566e-05}, {'diff': 2.3486000000003115e-05}, {'diff': 2.3528000000001825e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3500000000002685e-05}, {'diff': 2.358300000000063e-0...</msg>
<status status="PASS" starttime="20201029 09:33:31.871" endtime="20201029 09:33:31.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.879" level="INFO">${RESULT} = {'diff': [2.4069999999997566e-05, 2.3486000000003115e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3500000000002685e-05, 2.358300000000063e-05, 2.3542000000001395e-05, 2.3499999999999216e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:31.876" endtime="20201029 09:33:31.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.884" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.883" endtime="20201029 09:33:31.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.886" level="INFO">VALUE: [2.4069999999997566e-05, 2.3486000000003115e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3500000000002685e-05, 2.358300000000063e-05, 2.3542000000001395e-05, 2.3499999999999216e-05, 2.3555999999997496e-05, 2.3485999999999646e-05, 2.3526999999998882e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.3540999999998452e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3584000000000105e-05, 2.3513999999998786e-05, 2.3526999999998882e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.35970000000002e-05, 2.3527999999998356e-05, 2.3513999999998786e-05, 2.354100000000192e-05, 2.3540999999998452e-05, 2.3542000000001395e-05, 2.3541999999997926e-05, 2.3527999999998356e-05, 2.3514000000002255e-05, 2.3526999999998882e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3526999999998882e-05, 2.3500000000002685e-05, 2.3513999999998786e-05, 2.358300000000063e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3512999999999312e-05]</msg>
<status status="PASS" starttime="20201029 09:33:31.885" endtime="20201029 09:33:31.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.880" endtime="20201029 09:33:31.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.537" endtime="20201029 09:33:31.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.515" endtime="20201029 09:33:31.888"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.890" endtime="20201029 09:33:31.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.889" endtime="20201029 09:33:31.910"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.918" endtime="20201029 09:33:31.930"></status>
</kw>
<msg timestamp="20201029 09:33:31.930" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.916" endtime="20201029 09:33:31.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.933" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.931" endtime="20201029 09:33:31.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.934" endtime="20201029 09:33:31.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.914" endtime="20201029 09:33:31.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.912" endtime="20201029 09:33:31.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.943" endtime="20201029 09:33:32.229"></status>
</kw>
<msg timestamp="20201029 09:33:32.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.941" endtime="20201029 09:33:32.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017068528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.233" endtime="20201029 09:33:32.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.242" endtime="20201029 09:33:32.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.939" endtime="20201029 09:33:32.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.937" endtime="20201029 09:33:32.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.249" level="INFO">${PHILIP_RES} = [{'diff': 3.0416999999997862e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.991599999999789e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.9931000000000402e-05}, {'diff': 2.9888999999998223e-0...</msg>
<status status="PASS" starttime="20201029 09:33:32.246" endtime="20201029 09:33:32.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.253" level="INFO">${RESULT} = {'diff': [3.0416999999997862e-05, 2.9874999999998653e-05, 2.991599999999789e-05, 2.9874999999998653e-05, 2.9931000000000402e-05, 2.9888999999998223e-05, 2.9917000000000832e-05, 2.9916000000001358e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:32.250" endtime="20201029 09:33:32.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.258" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.257" endtime="20201029 09:33:32.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.260" level="INFO">VALUE: [3.0416999999997862e-05, 2.9874999999998653e-05, 2.991599999999789e-05, 2.9874999999998653e-05, 2.9931000000000402e-05, 2.9888999999998223e-05, 2.9917000000000832e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9902000000001788e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9902000000001788e-05, 2.9931000000000402e-05, 2.9903000000001262e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 2.9902000000001788e-05, 2.9875000000002122e-05, 2.9903000000001262e-05, 2.988799999999875e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 2.991599999999789e-05, 2.9903000000001262e-05, 2.990199999999832e-05, 2.9888999999998223e-05, 2.9931000000000402e-05, 2.990199999999832e-05, 2.9902999999997792e-05, 2.9832999999999943e-05, 2.9902999999997792e-05, 2.9846999999999513e-05, 2.992999999999746e-05, 2.9888999999998223e-05, 2.9930999999996932e-05, 2.990199999999832e-05, 2.9903000000001262e-05, 2.9902999999997792e-05, 2.9916000000001358e-05, 2.9958000000000068e-05, 2.9917000000000832e-05, 2.9917000000000832e-05, 2.9846999999999513e-05]</msg>
<status status="PASS" starttime="20201029 09:33:32.259" endtime="20201029 09:33:32.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.254" endtime="20201029 09:33:32.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.910" endtime="20201029 09:33:32.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.888" endtime="20201029 09:33:32.261"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.264" endtime="20201029 09:33:32.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.262" endtime="20201029 09:33:32.284"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.292" endtime="20201029 09:33:32.304"></status>
</kw>
<msg timestamp="20201029 09:33:32.304" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.291" endtime="20201029 09:33:32.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.307" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.305" endtime="20201029 09:33:32.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.308" endtime="20201029 09:33:32.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.288" endtime="20201029 09:33:32.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.286" endtime="20201029 09:33:32.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.318" endtime="20201029 09:33:32.602"></status>
</kw>
<msg timestamp="20201029 09:33:32.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017180625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.316" endtime="20201029 09:33:32.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017180625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.606" endtime="20201029 09:33:32.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.615" endtime="20201029 09:33:32.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.314" endtime="20201029 09:33:32.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.312" endtime="20201029 09:33:32.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.621" level="INFO">${PHILIP_RES} = [{'diff': 3.7416999999997924e-05}, {'diff': 3.690199999999838e-05}, {'diff': 3.69589999999996e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.688799999999881e-05}, {'diff': 3.6874999999998714e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:32.618" endtime="20201029 09:33:32.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.625" level="INFO">${RESULT} = {'diff': [3.7416999999997924e-05, 3.690199999999838e-05, 3.69589999999996e-05, 3.6874999999998714e-05, 3.688799999999881e-05, 3.6874999999998714e-05, 3.683399999999948e-05, 3.695800000000013e-05, 3.68...</msg>
<status status="PASS" starttime="20201029 09:33:32.622" endtime="20201029 09:33:32.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.630" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.629" endtime="20201029 09:33:32.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.632" level="INFO">VALUE: [3.7416999999997924e-05, 3.690199999999838e-05, 3.69589999999996e-05, 3.6874999999998714e-05, 3.688799999999881e-05, 3.6874999999998714e-05, 3.683399999999948e-05, 3.695800000000013e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.688800000000228e-05, 3.6860999999999144e-05, 3.693000000000099e-05, 3.688800000000228e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6889000000001754e-05, 3.6819000000000435e-05, 3.6902999999997854e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.6888999999998284e-05, 3.6819000000000435e-05, 3.6818999999996965e-05, 3.6889000000001754e-05, 3.688799999999881e-05, 3.6902999999997854e-05, 3.6889000000001754e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6903000000001324e-05, 3.683399999999948e-05, 3.688799999999881e-05, 3.6833000000000005e-05, 3.6888999999998284e-05, 3.688799999999881e-05, 3.6903000000001324e-05, 3.684799999999905e-05, 3.695800000000013e-05, 3.6903000000001324e-05, 3.6889000000001754e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6889000000001754e-05, 3.688800000000228e-05, 3.6888999999998284e-05, 3.6889000000001754e-05, 3.688800000000228e-05]</msg>
<status status="PASS" starttime="20201029 09:33:32.631" endtime="20201029 09:33:32.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.626" endtime="20201029 09:33:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.284" endtime="20201029 09:33:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.262" endtime="20201029 09:33:32.634"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.637" endtime="20201029 09:33:32.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.635" endtime="20201029 09:33:32.657"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.665" endtime="20201029 09:33:32.678"></status>
</kw>
<msg timestamp="20201029 09:33:32.678" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.663" endtime="20201029 09:33:32.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.681" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.679" endtime="20201029 09:33:32.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.682" endtime="20201029 09:33:32.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.661" endtime="20201029 09:33:32.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.659" endtime="20201029 09:33:32.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.691" endtime="20201029 09:33:32.976"></status>
</kw>
<msg timestamp="20201029 09:33:32.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017104944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.689" endtime="20201029 09:33:32.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017104944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.980" endtime="20201029 09:33:32.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.988" endtime="20201029 09:33:32.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.687" endtime="20201029 09:33:32.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.685" endtime="20201029 09:33:32.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.994" level="INFO">${PHILIP_RES} = [{'diff': 4.498600000000033e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.4486999999999305e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.450000000000287e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:32.991" endtime="20201029 09:33:32.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.999" level="INFO">${RESULT} = {'diff': [4.498600000000033e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4486999999999305e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.4485...</msg>
<status status="PASS" starttime="20201029 09:33:32.995" endtime="20201029 09:33:32.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.004" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.003" endtime="20201029 09:33:33.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.006" level="INFO">VALUE: [4.498600000000033e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4486999999999305e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.451400000000244e-05, 4.451399999999897e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.447199999999679e-05, 4.445800000000069e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.45129999999995e-05, 4.451400000000244e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.445800000000069e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.4430999999997556e-05, 4.4486999999999305e-05, 4.451399999999897e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.452799999999854e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.44999999999994e-05, 4.450000000000287e-05, 4.451399999999897e-05]</msg>
<status status="PASS" starttime="20201029 09:33:33.005" endtime="20201029 09:33:33.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.000" endtime="20201029 09:33:33.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.657" endtime="20201029 09:33:33.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.635" endtime="20201029 09:33:33.008"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.010" endtime="20201029 09:33:33.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.009" endtime="20201029 09:33:33.030"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.038" endtime="20201029 09:33:33.049"></status>
</kw>
<msg timestamp="20201029 09:33:33.050" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.037" endtime="20201029 09:33:33.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.052" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.051" endtime="20201029 09:33:33.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.053" endtime="20201029 09:33:33.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.034" endtime="20201029 09:33:33.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.032" endtime="20201029 09:33:33.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.062" endtime="20201029 09:33:33.351"></status>
</kw>
<msg timestamp="20201029 09:33:33.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016922972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016976167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.061" endtime="20201029 09:33:33.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016922972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016976167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.355" endtime="20201029 09:33:33.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.363" endtime="20201029 09:33:33.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.058" endtime="20201029 09:33:33.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.056" endtime="20201029 09:33:33.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.370" level="INFO">${PHILIP_RES} = [{'diff': 5.319499999999894e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.2638000000000684e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:33.367" endtime="20201029 09:33:33.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.374" level="INFO">${RESULT} = {'diff': [5.319499999999894e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.268099999999887e-05, 5.2638000000000684e-05, 5.2707999999998534e-05, 5.2721999999998104e-05, 5...</msg>
<status status="PASS" starttime="20201029 09:33:33.371" endtime="20201029 09:33:33.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.378" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.377" endtime="20201029 09:33:33.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.381" level="INFO">VALUE: [5.319499999999894e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.268099999999887e-05, 5.2638000000000684e-05, 5.2707999999998534e-05, 5.2721999999998104e-05, 5.2679999999999394e-05, 5.2721999999998104e-05, 5.2693999999998964e-05, 5.269500000000191e-05, 5.269400000000243e-05, 5.269500000000191e-05, 5.269400000000243e-05, 5.269500000000191e-05, 5.269400000000243e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.2735999999997674e-05, 5.26669999999993e-05, 5.2693999999998964e-05, 5.2721999999998104e-05, 5.2721999999998104e-05, 5.2707999999998534e-05, 5.2721999999998104e-05, 5.272200000000157e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.270900000000148e-05, 5.2680000000002863e-05, 5.2708000000002e-05, 5.2708000000002e-05, 5.262500000000059e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.270899999999801e-05, 5.2693999999998964e-05, 5.276400000000028e-05, 5.2679999999999394e-05, 5.269499999999844e-05, 5.2721999999998104e-05, 5.262500000000059e-05, 5.268099999999887e-05, 5.2693999999998964e-05, 5.263899999999669e-05, 5.2693999999998964e-05, 5.270900000000148e-05]</msg>
<status status="PASS" starttime="20201029 09:33:33.379" endtime="20201029 09:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.375" endtime="20201029 09:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.031" endtime="20201029 09:33:33.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.008" endtime="20201029 09:33:33.382"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.385" endtime="20201029 09:33:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.383" endtime="20201029 09:33:33.405"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.413" endtime="20201029 09:33:33.426"></status>
</kw>
<msg timestamp="20201029 09:33:33.426" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.411" endtime="20201029 09:33:33.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.429" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.427" endtime="20201029 09:33:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.430" endtime="20201029 09:33:33.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.409" endtime="20201029 09:33:33.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.407" endtime="20201029 09:33:33.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.440" endtime="20201029 09:33:33.725"></status>
</kw>
<msg timestamp="20201029 09:33:33.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016480389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.438" endtime="20201029 09:33:33.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016480389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.729" endtime="20201029 09:33:33.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.738" endtime="20201029 09:33:33.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.436" endtime="20201029 09:33:33.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.434" endtime="20201029 09:33:33.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.744" level="INFO">${PHILIP_RES} = [{'diff': 6.205499999999836e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.15140000000021e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.154199999999777e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:33.741" endtime="20201029 09:33:33.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.748" level="INFO">${RESULT} = {'diff': [6.205499999999836e-05, 6.154200000000123e-05, 6.154199999999777e-05, 6.15140000000021e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.161099999999961e-05, 6.152800000000166e-05, 6.15419...</msg>
<status status="PASS" starttime="20201029 09:33:33.745" endtime="20201029 09:33:33.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.752" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.751" endtime="20201029 09:33:33.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.755" level="INFO">VALUE: [6.205499999999836e-05, 6.154200000000123e-05, 6.154199999999777e-05, 6.15140000000021e-05, 6.154199999999777e-05, 6.154199999999777e-05, 6.161099999999961e-05, 6.152800000000166e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.154199999999777e-05, 6.152800000000166e-05, 6.154099999999829e-05, 6.151299999999915e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.15560000000008e-05, 6.151399999999863e-05, 6.155500000000133e-05, 6.152699999999872e-05, 6.152800000000166e-05, 6.154199999999777e-05, 6.148599999999949e-05, 6.157000000000037e-05, 6.158300000000047e-05, 6.151299999999915e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.152800000000166e-05, 6.152800000000166e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.152700000000219e-05, 6.151399999999863e-05, 6.148600000000295e-05, 6.154199999999777e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.151300000000262e-05, 6.151399999999863e-05, 6.154200000000123e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.155500000000133e-05, 6.151399999999863e-05, 6.145899999999982e-05]</msg>
<status status="PASS" starttime="20201029 09:33:33.754" endtime="20201029 09:33:33.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.749" endtime="20201029 09:33:33.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.405" endtime="20201029 09:33:33.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.382" endtime="20201029 09:33:33.757"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.760" endtime="20201029 09:33:33.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.758" endtime="20201029 09:33:33.780"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.788" endtime="20201029 09:33:33.801"></status>
</kw>
<msg timestamp="20201029 09:33:33.802" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.786" endtime="20201029 09:33:33.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.804" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.803" endtime="20201029 09:33:33.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.805" endtime="20201029 09:33:33.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.784" endtime="20201029 09:33:33.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.782" endtime="20201029 09:33:33.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.814" endtime="20201029 09:33:34.100"></status>
</kw>
<msg timestamp="20201029 09:33:34.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016510653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016582153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.813" endtime="20201029 09:33:34.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016510653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016582153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.104" endtime="20201029 09:33:34.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.112" endtime="20201029 09:33:34.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.810" endtime="20201029 09:33:34.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.809" endtime="20201029 09:33:34.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.119" level="INFO">${PHILIP_RES} = [{'diff': 7.149999999999865e-05}, {'diff': 7.097299999999848e-05}, {'diff': 7.090200000000116e-05}, {'diff': 7.102800000000076e-05}, {'diff': 7.097199999999901e-05}, {'diff': 7.097199999999901e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:34.115" endtime="20201029 09:33:34.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.123" level="INFO">${RESULT} = {'diff': [7.149999999999865e-05, 7.097299999999848e-05, 7.090200000000116e-05, 7.102800000000076e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.094500000000281e-05, 7.097299999999848e-05, 7.0971...</msg>
<status status="PASS" starttime="20201029 09:33:34.119" endtime="20201029 09:33:34.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.128" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.127" endtime="20201029 09:33:34.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.130" level="INFO">VALUE: [7.149999999999865e-05, 7.097299999999848e-05, 7.090200000000116e-05, 7.102800000000076e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.094500000000281e-05, 7.097299999999848e-05, 7.097199999999901e-05, 7.098599999999858e-05, 7.094399999999987e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.097300000000195e-05, 7.100000000000162e-05, 7.097199999999901e-05, 7.095799999999944e-05, 7.098600000000205e-05, 7.093099999999977e-05, 7.095899999999891e-05, 7.097300000000195e-05, 7.094399999999987e-05, 7.098599999999858e-05, 7.102800000000076e-05, 7.098600000000205e-05, 7.095900000000238e-05, 7.095899999999891e-05, 7.097199999999901e-05, 7.097200000000248e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.097299999999848e-05, 7.097300000000195e-05, 7.097199999999901e-05, 7.094399999999987e-05, 7.098600000000205e-05, 7.095799999999944e-05, 7.097199999999901e-05, 7.090300000000063e-05, 7.095800000000291e-05, 7.094399999999987e-05, 7.097199999999901e-05, 7.097199999999901e-05, 7.097200000000248e-05, 7.097299999999848e-05, 7.095799999999944e-05, 7.098600000000205e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.095799999999944e-05]</msg>
<status status="PASS" starttime="20201029 09:33:34.129" endtime="20201029 09:33:34.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.124" endtime="20201029 09:33:34.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.780" endtime="20201029 09:33:34.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.758" endtime="20201029 09:33:34.132"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.134" endtime="20201029 09:33:34.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.133" endtime="20201029 09:33:34.154"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.162" endtime="20201029 09:33:34.175"></status>
</kw>
<msg timestamp="20201029 09:33:34.176" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.161" endtime="20201029 09:33:34.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.178" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.177" endtime="20201029 09:33:34.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.179" endtime="20201029 09:33:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.158" endtime="20201029 09:33:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.156" endtime="20201029 09:33:34.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.188" endtime="20201029 09:33:34.472"></status>
</kw>
<msg timestamp="20201029 09:33:34.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016533389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016614958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.187" endtime="20201029 09:33:34.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016533389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016614958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.477" endtime="20201029 09:33:34.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.485" endtime="20201029 09:33:34.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.184" endtime="20201029 09:33:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.182" endtime="20201029 09:33:34.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.492" level="INFO">${PHILIP_RES} = [{'diff': 8.156900000000009e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.102700000000088e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.097299999999807e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:34.489" endtime="20201029 09:33:34.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.496" level="INFO">${RESULT} = {'diff': [8.156900000000009e-05, 8.102800000000035e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.102800000000035e-05, 8.097299999999807e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.1026...</msg>
<status status="PASS" starttime="20201029 09:33:34.493" endtime="20201029 09:33:34.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.501" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.500" endtime="20201029 09:33:34.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.503" level="INFO">VALUE: [8.156900000000009e-05, 8.102800000000035e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.102800000000035e-05, 8.097299999999807e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.10269999999974e-05, 8.101400000000078e-05, 8.100000000000121e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.098600000000164e-05, 8.101400000000078e-05, 8.094499999999893e-05, 8.102700000000088e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.101299999999784e-05, 8.098599999999817e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.101400000000078e-05, 8.102700000000088e-05, 8.101399999999731e-05, 8.100000000000121e-05, 8.10130000000013e-05, 8.101399999999731e-05, 8.101400000000078e-05, 8.102700000000088e-05, 8.098599999999817e-05, 8.100000000000121e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.106899999999959e-05, 8.102800000000035e-05, 8.104199999999992e-05, 8.105500000000002e-05, 8.102799999999688e-05, 8.102800000000035e-05, 8.097200000000207e-05, 8.102799999999688e-05, 8.09589999999985e-05, 8.100000000000121e-05, 8.108299999999916e-05, 8.10130000000013e-05, 8.102800000000035e-05, 8.098599999999817e-05, 8.098600000000164e-05]</msg>
<status status="PASS" starttime="20201029 09:33:34.502" endtime="20201029 09:33:34.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.497" endtime="20201029 09:33:34.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.155" endtime="20201029 09:33:34.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.132" endtime="20201029 09:33:34.505"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.507" endtime="20201029 09:33:34.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.506" endtime="20201029 09:33:34.527"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.535" endtime="20201029 09:33:34.550"></status>
</kw>
<msg timestamp="20201029 09:33:34.550" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.533" endtime="20201029 09:33:34.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.552" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.551" endtime="20201029 09:33:34.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.553" endtime="20201029 09:33:34.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.531" endtime="20201029 09:33:34.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.529" endtime="20201029 09:33:34.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.563" endtime="20201029 09:33:34.849"></status>
</kw>
<msg timestamp="20201029 09:33:34.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016523611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.562" endtime="20201029 09:33:34.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016523611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.853" endtime="20201029 09:33:34.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.864" endtime="20201029 09:33:34.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.559" endtime="20201029 09:33:34.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.558" endtime="20201029 09:33:34.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.873" level="INFO">${PHILIP_RES} = [{'diff': 9.219499999999978e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.168100000000318e-05}, {'diff': 9.165300000000057e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.166700000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:34.868" endtime="20201029 09:33:34.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.878" level="INFO">${RESULT} = {'diff': [9.219499999999978e-05, 9.168099999999971e-05, 9.168100000000318e-05, 9.165300000000057e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.16949...</msg>
<status status="PASS" starttime="20201029 09:33:34.874" endtime="20201029 09:33:34.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.883" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.882" endtime="20201029 09:33:34.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.886" level="INFO">VALUE: [9.219499999999978e-05, 9.168099999999971e-05, 9.168100000000318e-05, 9.165300000000057e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.172199999999894e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.169500000000275e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.166600000000066e-05, 9.168099999999971e-05, 9.16520000000011e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.174999999999808e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.166700000000014e-05, 9.169500000000275e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.161200000000133e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.170899999999885e-05, 9.16659999999972e-05, 9.168099999999971e-05, 9.166600000000066e-05, 9.162499999999796e-05, 9.170799999999937e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.168100000000318e-05, 9.168000000000023e-05, 9.165300000000057e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.168000000000023e-05, 9.175000000000155e-05]</msg>
<status status="PASS" starttime="20201029 09:33:34.884" endtime="20201029 09:33:34.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.879" endtime="20201029 09:33:34.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.528" endtime="20201029 09:33:34.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.505" endtime="20201029 09:33:34.977"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.980" endtime="20201029 09:33:34.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.978" endtime="20201029 09:33:35.000"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.008" endtime="20201029 09:33:35.022"></status>
</kw>
<msg timestamp="20201029 09:33:35.023" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.006" endtime="20201029 09:33:35.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.025" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.024" endtime="20201029 09:33:35.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.026" endtime="20201029 09:33:35.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.003" endtime="20201029 09:33:35.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.002" endtime="20201029 09:33:35.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.036" endtime="20201029 09:33:35.321"></status>
</kw>
<msg timestamp="20201029 09:33:35.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016921194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017024639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.034" endtime="20201029 09:33:35.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016921194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017024639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.325" endtime="20201029 09:33:35.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.333" endtime="20201029 09:33:35.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.031" endtime="20201029 09:33:35.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.030" endtime="20201029 09:33:35.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.339" level="INFO">${PHILIP_RES} = [{'diff': 0.00010344500000000062}, {'diff': 0.00010295800000000022}, {'diff': 0.00010295800000000022}, {'diff': 0.00010297199999999979}, {'diff': 0.00010297199999999979}, {'diff': 0.000102958000000000...</msg>
<status status="PASS" starttime="20201029 09:33:35.336" endtime="20201029 09:33:35.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.344" level="INFO">${RESULT} = {'diff': [0.00010344500000000062, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010297199999999979, 0.00010295800000000022, 0.00010295800000000022, 0.00010294400000000065...</msg>
<status status="PASS" starttime="20201029 09:33:35.340" endtime="20201029 09:33:35.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.348" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.347" endtime="20201029 09:33:35.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.351" level="INFO">VALUE: [0.00010344500000000062, 0.00010295800000000022, 0.00010295800000000022, 0.00010297199999999979, 0.00010297199999999979, 0.00010295800000000022, 0.00010295800000000022, 0.00010294400000000065, 0.00010290300000000141, 0.00010294500000000012, 0.00010297199999999979, 0.00010297199999999979, 0.00010295800000000022, 0.00010297199999999979, 0.00010294400000000065, 0.00010295899999999969, 0.00010297199999999979, 0.00010294500000000012, 0.00010294400000000065, 0.00010295899999999969, 0.00010295800000000022, 0.00010291700000000098, 0.00010297199999999979, 0.00010295899999999969, 0.00010304199999999764, 0.0001030000000000024, 0.00010295800000000022, 0.00010297299999999926, 0.00010290299999999794, 0.00010295899999999969, 0.00010294400000000065, 0.00010299999999999893, 0.00010295800000000022, 0.00010294500000000012, 0.00010291599999999804, 0.00010295899999999969, 0.00010297199999999979, 0.00010293100000000055, 0.00010297199999999979, 0.00010294500000000012, 0.00010294400000000065, 0.00010295800000000022, 0.00010293000000000108, 0.00010294500000000012, 0.00010295800000000022, 0.00010294500000000012, 0.00010290199999999847, 0.00010297199999999979, 0.00010297199999999979, 0.00010291699999999751]</msg>
<status status="PASS" starttime="20201029 09:33:35.349" endtime="20201029 09:33:35.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.345" endtime="20201029 09:33:35.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.000" endtime="20201029 09:33:35.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.977" endtime="20201029 09:33:35.353"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.355" endtime="20201029 09:33:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.354" endtime="20201029 09:33:35.375"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.383" endtime="20201029 09:33:35.398"></status>
</kw>
<msg timestamp="20201029 09:33:35.398" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.381" endtime="20201029 09:33:35.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.401" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.399" endtime="20201029 09:33:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.402" endtime="20201029 09:33:35.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.379" endtime="20201029 09:33:35.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.377" endtime="20201029 09:33:35.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.411" endtime="20201029 09:33:35.711"></status>
</kw>
<msg timestamp="20201029 09:33:35.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016508347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016623722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.409" endtime="20201029 09:33:35.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016508347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016623722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.715" endtime="20201029 09:33:35.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.723" endtime="20201029 09:33:35.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.407" endtime="20201029 09:33:35.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.405" endtime="20201029 09:33:35.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.730" level="INFO">${PHILIP_RES} = [{'diff': 0.0001153750000000009}, {'diff': 0.00011479200000000245}, {'diff': 0.00011484799999999726}, {'diff': 0.00011480599999999855}, {'diff': 0.00011483400000000116}, {'diff': 0.0001148889999999999...</msg>
<status status="PASS" starttime="20201029 09:33:35.727" endtime="20201029 09:33:35.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.734" level="INFO">${RESULT} = {'diff': [0.0001153750000000009, 0.00011479200000000245, 0.00011484799999999726, 0.00011480599999999855, 0.00011483400000000116, 0.00011488899999999996, 0.00011481899999999864, 0.00011483400000000116,...</msg>
<status status="PASS" starttime="20201029 09:33:35.731" endtime="20201029 09:33:35.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.738" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.737" endtime="20201029 09:33:35.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.741" level="INFO">VALUE: [0.0001153750000000009, 0.00011479200000000245, 0.00011484799999999726, 0.00011480599999999855, 0.00011483400000000116, 0.00011488899999999996, 0.00011481899999999864, 0.00011483400000000116, 0.00011484700000000125, 0.00011486100000000082, 0.00011484699999999778, 0.00011486100000000082, 0.00011483400000000116, 0.00011486100000000082, 0.00011486100000000082, 0.00011484700000000125, 0.00011486100000000082, 0.00011488899999999996, 0.00011481899999999864, 0.00011486099999999735, 0.00011486100000000082, 0.00011486100000000082, 0.0001148750000000004, 0.00011486099999999735, 0.00011484800000000073, 0.00011484700000000125, 0.00011484699999999778, 0.00011484799999999726, 0.00011486100000000082, 0.00011484700000000125, 0.00011480500000000254, 0.0001148750000000004, 0.00011483400000000116, 0.00011490299999999953, 0.00011484800000000073, 0.00011483299999999821, 0.00011484700000000125, 0.00011483400000000116, 0.00011483300000000168, 0.0001148750000000004, 0.00011488899999999996, 0.00011484700000000125, 0.00011484800000000073, 0.00011479199999999898, 0.00011484699999999778, 0.00011484700000000125, 0.00011483300000000168, 0.00011486099999999735, 0.00011484700000000125, 0.00011484700000000125]</msg>
<status status="PASS" starttime="20201029 09:33:35.739" endtime="20201029 09:33:35.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.735" endtime="20201029 09:33:35.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.376" endtime="20201029 09:33:35.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.353" endtime="20201029 09:33:35.742"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.745" endtime="20201029 09:33:35.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.743" endtime="20201029 09:33:35.765"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.773" endtime="20201029 09:33:35.788"></status>
</kw>
<msg timestamp="20201029 09:33:35.789" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.771" endtime="20201029 09:33:35.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.791" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.790" endtime="20201029 09:33:35.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.792" endtime="20201029 09:33:35.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.769" endtime="20201029 09:33:35.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.767" endtime="20201029 09:33:35.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.802" endtime="20201029 09:33:36.087"></status>
</kw>
<msg timestamp="20201029 09:33:36.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016556667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.800" endtime="20201029 09:33:36.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016556667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.091" endtime="20201029 09:33:36.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.099" endtime="20201029 09:33:36.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.798" endtime="20201029 09:33:36.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.796" endtime="20201029 09:33:36.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.106" level="INFO">${PHILIP_RES} = [{'diff': 0.0001278889999999991}, {'diff': 0.00012734699999999988}, {'diff': 0.00012740300000000163}, {'diff': 0.0001273330000000003}, {'diff': 0.00012733399999999978}, {'diff': 0.00012736099999999945...</msg>
<status status="PASS" starttime="20201029 09:33:36.103" endtime="20201029 09:33:36.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.110" level="INFO">${RESULT} = {'diff': [0.0001278889999999991, 0.00012734699999999988, 0.00012740300000000163, 0.0001273330000000003, 0.00012733399999999978, 0.00012736099999999945, 0.00012737500000000249, 0.00012736099999999945, ...</msg>
<status status="PASS" starttime="20201029 09:33:36.107" endtime="20201029 09:33:36.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.114" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.113" endtime="20201029 09:33:36.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.117" level="INFO">VALUE: [0.0001278889999999991, 0.00012734699999999988, 0.00012740300000000163, 0.0001273330000000003, 0.00012733399999999978, 0.00012736099999999945, 0.00012737500000000249, 0.00012736099999999945, 0.00012734700000000335, 0.00012737499999999902, 0.00012736099999999945, 0.00012736099999999945, 0.00012736099999999945, 0.00012736100000000292, 0.00012730600000000064, 0.00012727700000000203, 0.00012737499999999902, 0.0001273889999999986, 0.00012734699999999988, 0.00012734799999999935, 0.00012740300000000163, 0.0001273330000000003, 0.0001273330000000003, 0.00012734699999999988, 0.00012736199999999892, 0.00012736099999999945, 0.00012736099999999945, 0.00012730600000000064, 0.00012736099999999945, 0.00012736099999999945, 0.00012736099999999945, 0.0001273330000000003, 0.00012734699999999988, 0.00012734699999999988, 0.00012734800000000282, 0.0001273330000000003, 0.00012737499999999902, 0.00012738900000000206, 0.00012740299999999816, 0.00012734699999999988, 0.00012731900000000074, 0.00012737500000000249, 0.0001273200000000002, 0.00012734799999999935, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012737499999999902, 0.00012736099999999945, 0.00012734699999999988]</msg>
<status status="PASS" starttime="20201029 09:33:36.115" endtime="20201029 09:33:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.111" endtime="20201029 09:33:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.765" endtime="20201029 09:33:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.743" endtime="20201029 09:33:36.119"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.122" endtime="20201029 09:33:36.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.120" endtime="20201029 09:33:36.141"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.149" endtime="20201029 09:33:36.166"></status>
</kw>
<msg timestamp="20201029 09:33:36.166" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.148" endtime="20201029 09:33:36.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.169" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.168" endtime="20201029 09:33:36.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.170" endtime="20201029 09:33:36.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.145" endtime="20201029 09:33:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.143" endtime="20201029 09:33:36.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.179" endtime="20201029 09:33:36.480"></status>
</kw>
<msg timestamp="20201029 09:33:36.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016877986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:36.177" endtime="20201029 09:33:36.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016877986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:36.484" endtime="20201029 09:33:36.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.492" endtime="20201029 09:33:36.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.175" endtime="20201029 09:33:36.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.173" endtime="20201029 09:33:36.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.498" level="INFO">${PHILIP_RES} = [{'diff': 0.00014098600000000266}, {'diff': 0.00014047199999999913}, {'diff': 0.00014044399999999999}, {'diff': 0.00014045799999999956}, {'diff': 0.0001404859999999987}, {'diff': 0.0001404860000000021...</msg>
<status status="PASS" starttime="20201029 09:33:36.495" endtime="20201029 09:33:36.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.503" level="INFO">${RESULT} = {'diff': [0.00014098600000000266, 0.00014047199999999913, 0.00014044399999999999, 0.00014045799999999956, 0.0001404859999999987, 0.00014048600000000216, 0.0001404019999999978, 0.0001404309999999999, 0...</msg>
<status status="PASS" starttime="20201029 09:33:36.499" endtime="20201029 09:33:36.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.507" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.506" endtime="20201029 09:33:36.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.510" level="INFO">VALUE: [0.00014098600000000266, 0.00014047199999999913, 0.00014044399999999999, 0.00014045799999999956, 0.0001404859999999987, 0.00014048600000000216, 0.0001404019999999978, 0.0001404309999999999, 0.0001404590000000025, 0.0001404859999999987, 0.00014045899999999903, 0.0001404729999999986, 0.0001404859999999987, 0.00014045799999999956, 0.00014045799999999956, 0.0001404720000000026, 0.00014044399999999999, 0.00014049999999999827, 0.00014044499999999946, 0.00014051399999999784, 0.00014045899999999903, 0.00014045899999999903, 0.00014047199999999913, 0.00014044499999999946, 0.00014045800000000302, 0.00014044399999999999, 0.00014041700000000032, 0.00014045799999999956, 0.00014047199999999913, 0.0001404859999999987, 0.00014045799999999956, 0.00014044499999999946, 0.0001404590000000025, 0.00014050000000000173, 0.00014045899999999903, 0.00014040300000000075, 0.00014044399999999999, 0.0001404309999999999, 0.00014047199999999913, 0.00014047199999999913, 0.00014045799999999956, 0.00014045800000000302, 0.00014044399999999999, 0.00014049999999999827, 0.0001404729999999986, 0.00014045899999999903, 0.00014045899999999903, 0.00014045899999999903, 0.00014045799999999956, 0.00014045799999999956]</msg>
<status status="PASS" starttime="20201029 09:33:36.508" endtime="20201029 09:33:36.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.504" endtime="20201029 09:33:36.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.142" endtime="20201029 09:33:36.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.120" endtime="20201029 09:33:36.512"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.514" endtime="20201029 09:33:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.512" endtime="20201029 09:33:36.534"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.542" endtime="20201029 09:33:36.560"></status>
</kw>
<msg timestamp="20201029 09:33:36.561" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.541" endtime="20201029 09:33:36.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.563" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.562" endtime="20201029 09:33:36.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.564" endtime="20201029 09:33:36.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.538" endtime="20201029 09:33:36.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.536" endtime="20201029 09:33:36.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.573" endtime="20201029 09:33:36.859"></status>
</kw>
<msg timestamp="20201029 09:33:36.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017242597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017397278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.572" endtime="20201029 09:33:36.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017242597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017397278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.863" endtime="20201029 09:33:36.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.871" endtime="20201029 09:33:36.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.569" endtime="20201029 09:33:36.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.567" endtime="20201029 09:33:36.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.877" level="INFO">${PHILIP_RES} = [{'diff': 0.00015468100000000026}, {'diff': 0.00015419399999999986}, {'diff': 0.00015418099999999976}, {'diff': 0.0001541800000000003}, {'diff': 0.00015419499999999933}, {'diff': 0.0001541800000000003...</msg>
<status status="PASS" starttime="20201029 09:33:36.874" endtime="20201029 09:33:36.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.881" level="INFO">${RESULT} = {'diff': [0.00015468100000000026, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.00015419499999999933, 0.0001541800000000003, 0.00015419499999999933, 0.00015419399999999986, ...</msg>
<status status="PASS" starttime="20201029 09:33:36.878" endtime="20201029 09:33:36.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.885" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.884" endtime="20201029 09:33:36.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.888" level="INFO">VALUE: [0.00015468100000000026, 0.00015419399999999986, 0.00015418099999999976, 0.0001541800000000003, 0.00015419499999999933, 0.0001541800000000003, 0.00015419499999999933, 0.00015419399999999986, 0.00015413899999999758, 0.0001541670000000002, 0.00015416600000000072, 0.00015420900000000237, 0.00015419399999999986, 0.00015419499999999933, 0.0001541800000000003, 0.00015419499999999933, 0.0001542080000000029, 0.00015419499999999933, 0.00015415300000000062, 0.00015415300000000062, 0.00015423600000000204, 0.00015420799999999943, 0.00015420799999999943, 0.00015419399999999986, 0.0001541670000000002, 0.00015419399999999986, 0.00015420900000000237, 0.00015420799999999943, 0.0001541670000000002, 0.00015419399999999986, 0.00015419499999999933, 0.00015419399999999986, 0.00015413900000000105, 0.00015419399999999986, 0.00015419499999999933, 0.0001541800000000003, 0.00015418099999999976, 0.0001541800000000003, 0.00015419499999999933, 0.00015419399999999986, 0.00015419399999999986, 0.00015418099999999976, 0.00015419399999999986, 0.00015419499999999933, 0.00015415299999999715, 0.00015415300000000062, 0.0001541800000000003, 0.00015419499999999933, 0.0001541800000000003, 0.000154221999999999]</msg>
<status status="PASS" starttime="20201029 09:33:36.886" endtime="20201029 09:33:36.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.882" endtime="20201029 09:33:36.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.535" endtime="20201029 09:33:36.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.512" endtime="20201029 09:33:36.890"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.892" endtime="20201029 09:33:36.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.891" endtime="20201029 09:33:36.912"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.920" endtime="20201029 09:33:36.938"></status>
</kw>
<msg timestamp="20201029 09:33:36.939" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.918" endtime="20201029 09:33:36.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.941" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.940" endtime="20201029 09:33:36.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.942" endtime="20201029 09:33:36.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.916" endtime="20201029 09:33:36.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.914" endtime="20201029 09:33:36.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.952" endtime="20201029 09:33:37.254"></status>
</kw>
<msg timestamp="20201029 09:33:37.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016474528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016643597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.950" endtime="20201029 09:33:37.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016474528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016643597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.258" endtime="20201029 09:33:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.266" endtime="20201029 09:33:37.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.948" endtime="20201029 09:33:37.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.946" endtime="20201029 09:33:37.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.273" level="INFO">${PHILIP_RES} = [{'diff': 0.00016906900000000086}, {'diff': 0.00016852699999999818}, {'diff': 0.00016852800000000112}, {'diff': 0.00016852800000000112}, {'diff': 0.00016851399999999808}, {'diff': 0.000168528000000001...</msg>
<status status="PASS" starttime="20201029 09:33:37.269" endtime="20201029 09:33:37.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.277" level="INFO">${RESULT} = {'diff': [0.00016906900000000086, 0.00016852699999999818, 0.00016852800000000112, 0.00016852800000000112, 0.00016851399999999808, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112...</msg>
<status status="PASS" starttime="20201029 09:33:37.273" endtime="20201029 09:33:37.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.281" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.280" endtime="20201029 09:33:37.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.283" level="INFO">VALUE: [0.00016906900000000086, 0.00016852699999999818, 0.00016852800000000112, 0.00016852800000000112, 0.00016851399999999808, 0.00016852800000000112, 0.00016852799999999765, 0.00016852800000000112, 0.00016852800000000112, 0.0001684999999999985, 0.00016858299999999993, 0.00016855600000000026, 0.00016852800000000112, 0.00016851400000000155, 0.00016854199999999722, 0.00016851400000000155, 0.00016851400000000155, 0.0001685550000000008, 0.00016861099999999907, 0.00016852699999999818, 0.0001684860000000024, 0.00016852700000000165, 0.0001685129999999986, 0.00016851400000000155, 0.00016854100000000122, 0.00016852799999999765, 0.00016852800000000112, 0.0001685420000000007, 0.00016859799999999897, 0.0001685420000000007, 0.00016848599999999894, 0.0001685420000000007, 0.00016852800000000112, 0.00016851399999999808, 0.00016852800000000112, 0.00016852800000000112, 0.00016852800000000112, 0.00016847299999999885, 0.00016852799999999765, 0.00016850000000000198, 0.00016852800000000112, 0.00016852699999999818, 0.00016852800000000112, 0.0001685129999999986, 0.00016852699999999818, 0.0001684579999999998, 0.00016852699999999818, 0.00016852699999999818, 0.00016847199999999937, 0.00016852799999999765]</msg>
<status status="PASS" starttime="20201029 09:33:37.282" endtime="20201029 09:33:37.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.277" endtime="20201029 09:33:37.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.912" endtime="20201029 09:33:37.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.890" endtime="20201029 09:33:37.286"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.288" endtime="20201029 09:33:37.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.287" endtime="20201029 09:33:37.308"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.316" endtime="20201029 09:33:37.335"></status>
</kw>
<msg timestamp="20201029 09:33:37.335" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.314" endtime="20201029 09:33:37.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.338" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.336" endtime="20201029 09:33:37.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.339" endtime="20201029 09:33:37.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.312" endtime="20201029 09:33:37.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.310" endtime="20201029 09:33:37.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.347" endtime="20201029 09:33:37.633"></status>
</kw>
<msg timestamp="20201029 09:33:37.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016689528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.346" endtime="20201029 09:33:37.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016689528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.637" endtime="20201029 09:33:37.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.645" endtime="20201029 09:33:37.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.343" endtime="20201029 09:33:37.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.342" endtime="20201029 09:33:37.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.651" level="INFO">${PHILIP_RES} = [{'diff': 0.00018397199999999753}, {'diff': 0.00018348600000000007}, {'diff': 0.00018348600000000007}, {'diff': 0.00018348600000000007}, {'diff': 0.00018349999999999964}, {'diff': 0.000183472000000000...</msg>
<status status="PASS" starttime="20201029 09:33:37.648" endtime="20201029 09:33:37.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.656" level="INFO">${RESULT} = {'diff': [0.00018397199999999753, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.0001834590000000004, ...</msg>
<status status="PASS" starttime="20201029 09:33:37.652" endtime="20201029 09:33:37.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.660" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.659" endtime="20201029 09:33:37.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.663" level="INFO">VALUE: [0.00018397199999999753, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.0001834590000000004, 0.0001834720000000005, 0.00018348699999999954, 0.00018348600000000007, 0.00018347299999999997, 0.00018348600000000007, 0.00018349999999999964, 0.0001834720000000005, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018347299999999997, 0.00018348600000000007, 0.00018349999999999964, 0.00018348600000000007, 0.00018347299999999997, 0.00018352800000000224, 0.00018348600000000007, 0.00018348600000000007, 0.00018349999999999964, 0.00018349999999999964, 0.00018354099999999887, 0.00018354199999999835, 0.0001834720000000005, 0.00018348699999999954, 0.0001834720000000005, 0.00018348600000000007, 0.00018348600000000007, 0.00018348600000000007, 0.00018347199999999703, 0.00018348600000000007, 0.00018345800000000093, 0.0001834720000000005, 0.00018348600000000007, 0.0001834720000000005, 0.00018344500000000083, 0.00018344400000000136, 0.00018348600000000007, 0.00018349999999999964, 0.00018348600000000007, 0.00018348600000000007, 0.00018345800000000093, 0.00018348600000000007]</msg>
<status status="PASS" starttime="20201029 09:33:37.662" endtime="20201029 09:33:37.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.657" endtime="20201029 09:33:37.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.308" endtime="20201029 09:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.286" endtime="20201029 09:33:37.665"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.667" endtime="20201029 09:33:37.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.666" endtime="20201029 09:33:37.687"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.696" endtime="20201029 09:33:37.715"></status>
</kw>
<msg timestamp="20201029 09:33:37.716" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.694" endtime="20201029 09:33:37.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.718" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.717" endtime="20201029 09:33:37.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.719" endtime="20201029 09:33:37.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.691" endtime="20201029 09:33:37.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.689" endtime="20201029 09:33:37.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.728" endtime="20201029 09:33:38.012"></status>
</kw>
<msg timestamp="20201029 09:33:38.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017405722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017605278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.726" endtime="20201029 09:33:38.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017405722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017605278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.017" endtime="20201029 09:33:38.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.024" endtime="20201029 09:33:38.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.724" endtime="20201029 09:33:38.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.722" endtime="20201029 09:33:38.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.032" level="INFO">${PHILIP_RES} = [{'diff': 0.00019955600000000004}, {'diff': 0.00019904199999999997}, {'diff': 0.00019902799999999693}, {'diff': 0.00019905500000000007}, {'diff': 0.00019905599999999954}, {'diff': 0.000199055999999999...</msg>
<status status="PASS" starttime="20201029 09:33:38.029" endtime="20201029 09:33:38.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.036" level="INFO">${RESULT} = {'diff': [0.00019955600000000004, 0.00019904199999999997, 0.00019902799999999693, 0.00019905500000000007, 0.00019905599999999954, 0.00019905599999999954, 0.0001990280000000004, 0.0001990410000000005, ...</msg>
<status status="PASS" starttime="20201029 09:33:38.033" endtime="20201029 09:33:38.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.040" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.039" endtime="20201029 09:33:38.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.042" level="INFO">VALUE: [0.00019955600000000004, 0.00019904199999999997, 0.00019902799999999693, 0.00019905500000000007, 0.00019905599999999954, 0.00019905599999999954, 0.0001990280000000004, 0.0001990410000000005, 0.00019905500000000007, 0.00019905599999999954, 0.00019905599999999954, 0.00019902700000000093, 0.00019904199999999997, 0.0001990280000000004, 0.00019905599999999954, 0.0001989999999999978, 0.0001990410000000005, 0.0001990280000000004, 0.00019904199999999997, 0.00019904199999999997, 0.00019902700000000093, 0.000199056000000003, 0.0001990699999999991, 0.000199056000000003, 0.0001990410000000005, 0.00019905500000000007, 0.00019898599999999822, 0.00019904199999999997, 0.0001990280000000004, 0.00019905500000000007, 0.00019906899999999964, 0.00019905599999999954, 0.00019904199999999997, 0.0001989860000000017, 0.00019904199999999997, 0.00019904199999999997, 0.00019905599999999954, 0.0001990410000000005, 0.00019904199999999997, 0.00019905599999999954, 0.00019904199999999997, 0.00019900000000000126, 0.00019905500000000007, 0.00019905599999999954, 0.00019911100000000181, 0.00019904199999999997, 0.00019904099999999703, 0.0001990280000000004, 0.00019904199999999997, 0.00019904199999999997]</msg>
<status status="PASS" starttime="20201029 09:33:38.041" endtime="20201029 09:33:38.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.037" endtime="20201029 09:33:38.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.688" endtime="20201029 09:33:38.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.665" endtime="20201029 09:33:38.044"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.047" endtime="20201029 09:33:38.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.045" endtime="20201029 09:33:38.066"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.074" endtime="20201029 09:33:38.096"></status>
</kw>
<msg timestamp="20201029 09:33:38.096" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.073" endtime="20201029 09:33:38.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.100" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.098" endtime="20201029 09:33:38.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.102" endtime="20201029 09:33:38.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.070" endtime="20201029 09:33:38.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.068" endtime="20201029 09:33:38.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.117" endtime="20201029 09:33:38.403"></status>
</kw>
<msg timestamp="20201029 09:33:38.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016544222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016759944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.114" endtime="20201029 09:33:38.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016544222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016759944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.407" endtime="20201029 09:33:38.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.415" endtime="20201029 09:33:38.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.110" endtime="20201029 09:33:38.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.108" endtime="20201029 09:33:38.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.421" level="INFO">${PHILIP_RES} = [{'diff': 0.00021572199999999805}, {'diff': 0.00021520800000000145}, {'diff': 0.0002152360000000006}, {'diff': 0.00021522199999999755}, {'diff': 0.00021519399999999841}, {'diff': 0.0002152220000000010...</msg>
<status status="PASS" starttime="20201029 09:33:38.418" endtime="20201029 09:33:38.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.425" level="INFO">${RESULT} = {'diff': [0.00021572199999999805, 0.00021520800000000145, 0.0002152360000000006, 0.00021522199999999755, 0.00021519399999999841, 0.00021522200000000102, 0.00021522200000000102, 0.00021525000000000016,...</msg>
<status status="PASS" starttime="20201029 09:33:38.422" endtime="20201029 09:33:38.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.430" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.429" endtime="20201029 09:33:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.432" level="INFO">VALUE: [0.00021572199999999805, 0.00021520800000000145, 0.0002152360000000006, 0.00021522199999999755, 0.00021519399999999841, 0.00021522200000000102, 0.00021522200000000102, 0.00021525000000000016, 0.00021520900000000093, 0.0002152230000000005, 0.00021522299999999703, 0.00021522200000000102, 0.00021519500000000136, 0.00021520899999999746, 0.00021525000000000016, 0.00021529199999999887, 0.00021523700000000007, 0.00021520900000000093, 0.00021515299999999918, 0.00021522199999999755, 0.0002152230000000005, 0.00021520900000000093, 0.0002152360000000006, 0.00021520799999999798, 0.00021520800000000145, 0.00021522200000000102, 0.00021520799999999798, 0.00021526399999999973, 0.00021516700000000222, 0.00021522199999999755, 0.00021522200000000102, 0.00021522200000000102, 0.00021523599999999712, 0.00021522200000000102, 0.00021520800000000145, 0.00021520799999999798, 0.00021522200000000102, 0.0002152360000000006, 0.00021520799999999798, 0.00021520799999999798, 0.0002152779999999993, 0.00021520799999999798, 0.00021522199999999755, 0.00021520800000000145, 0.0002152360000000006, 0.00021519399999999841, 0.00021520800000000145, 0.0002152360000000006, 0.00021522200000000102, 0.00021522200000000102]</msg>
<status status="PASS" starttime="20201029 09:33:38.431" endtime="20201029 09:33:38.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.426" endtime="20201029 09:33:38.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.067" endtime="20201029 09:33:38.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.045" endtime="20201029 09:33:38.435"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.437" endtime="20201029 09:33:38.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.436" endtime="20201029 09:33:38.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.465" endtime="20201029 09:33:38.487"></status>
</kw>
<msg timestamp="20201029 09:33:38.487" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.463" endtime="20201029 09:33:38.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.490" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.488" endtime="20201029 09:33:38.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.491" endtime="20201029 09:33:38.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.461" endtime="20201029 09:33:38.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.459" endtime="20201029 09:33:38.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.500" endtime="20201029 09:33:38.786"></status>
</kw>
<msg timestamp="20201029 09:33:38.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016578944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016811486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.499" endtime="20201029 09:33:38.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016578944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016811486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.790" endtime="20201029 09:33:38.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.798" endtime="20201029 09:33:38.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.496" endtime="20201029 09:33:38.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.495" endtime="20201029 09:33:38.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.804" level="INFO">${PHILIP_RES} = [{'diff': 0.00023254199999999878}, {'diff': 0.00023201399999999914}, {'diff': 0.00023201399999999914}, {'diff': 0.00023199999999999957}, {'diff': 0.000231986}, {'diff': 0.00023200000000000304}, {'diff...</msg>
<status status="PASS" starttime="20201029 09:33:38.801" endtime="20201029 09:33:38.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.809" level="INFO">${RESULT} = {'diff': [0.00023254199999999878, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.000231986, 0.00023200000000000304, 0.00023199999999999957, 0.00023205599999999785, 0.0002320...</msg>
<status status="PASS" starttime="20201029 09:33:38.805" endtime="20201029 09:33:38.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.813" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.812" endtime="20201029 09:33:38.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.816" level="INFO">VALUE: [0.00023254199999999878, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.000231986, 0.00023200000000000304, 0.00023199999999999957, 0.00023205599999999785, 0.00023201299999999966, 0.00023199999999999957, 0.00023199999999999957, 0.0002320279999999987, 0.0002320140000000026, 0.00023201399999999914, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.00023200000000000304, 0.00023202699999999923, 0.00023201299999999966, 0.00023201399999999914, 0.00023201399999999914, 0.00023201399999999914, 0.00023199999999999957, 0.000231986, 0.00023197200000000043, 0.000231986, 0.00023201399999999914, 0.00023199999999999957, 0.0002320279999999987, 0.00023199999999999957, 0.0002320140000000026, 0.00023201399999999914, 0.00023201399999999914, 0.0002320279999999987, 0.00023197200000000043, 0.00023199999999999957, 0.00023199999999999957, 0.0002320279999999987, 0.0002319310000000012, 0.00023199999999999957, 0.00023199999999999957, 0.00023199999999999957, 0.00023201399999999914, 0.0002320140000000026, 0.0002320279999999987, 0.00023201399999999914, 0.00023200000000000304, 0.000231986, 0.00023200000000000304]</msg>
<status status="PASS" starttime="20201029 09:33:38.814" endtime="20201029 09:33:38.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.810" endtime="20201029 09:33:38.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.457" endtime="20201029 09:33:38.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.435" endtime="20201029 09:33:38.818"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.820" endtime="20201029 09:33:38.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.819" endtime="20201029 09:33:38.840"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.848" endtime="20201029 09:33:38.871"></status>
</kw>
<msg timestamp="20201029 09:33:38.872" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.846" endtime="20201029 09:33:38.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.874" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.873" endtime="20201029 09:33:38.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.875" endtime="20201029 09:33:38.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.844" endtime="20201029 09:33:38.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.842" endtime="20201029 09:33:38.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.884" endtime="20201029 09:33:39.171"></status>
</kw>
<msg timestamp="20201029 09:33:39.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016846806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.882" endtime="20201029 09:33:39.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016846806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.175" endtime="20201029 09:33:39.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.183" endtime="20201029 09:33:39.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.880" endtime="20201029 09:33:39.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.878" endtime="20201029 09:33:39.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.189" level="INFO">${PHILIP_RES} = [{'diff': 0.0002499870000000001}, {'diff': 0.0002494309999999979}, {'diff': 0.0002494169999999983}, {'diff': 0.0002494170000000018}, {'diff': 0.0002494160000000023}, {'diff': 0.00024938899999999917}, ...</msg>
<status status="PASS" starttime="20201029 09:33:39.186" endtime="20201029 09:33:39.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.193" level="INFO">${RESULT} = {'diff': [0.0002499870000000001, 0.0002494309999999979, 0.0002494169999999983, 0.0002494170000000018, 0.0002494160000000023, 0.00024938899999999917, 0.00024940199999999926, 0.00024940299999999874, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:39.190" endtime="20201029 09:33:39.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.197" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.196" endtime="20201029 09:33:39.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.200" level="INFO">VALUE: [0.0002499870000000001, 0.0002494309999999979, 0.0002494169999999983, 0.0002494170000000018, 0.0002494160000000023, 0.00024938899999999917, 0.00024940199999999926, 0.00024940299999999874, 0.00024940299999999874, 0.0002494170000000018, 0.00024938899999999917, 0.0002494170000000018, 0.0002494309999999979, 0.00024940299999999874, 0.00024938899999999917, 0.00024940199999999926, 0.0002494160000000023, 0.000249361, 0.00024944499999999745, 0.0002494169999999983, 0.00024940299999999874, 0.0002494030000000022, 0.0002494030000000022, 0.0002494299999999984, 0.00024940199999999926, 0.00024938899999999917, 0.00024940299999999874, 0.00024943100000000135, 0.0002494030000000022, 0.0002494170000000018, 0.00024945799999999754, 0.0002494169999999983, 0.00024941599999999883, 0.0002494160000000023, 0.0002494160000000023, 0.0002494299999999984, 0.0002494450000000009, 0.0002494169999999983, 0.0002494170000000018, 0.00024943100000000135, 0.0002494170000000018, 0.0002494169999999983, 0.00024933400000000036, 0.0002493879999999997, 0.00024940199999999926, 0.0002494170000000018, 0.00024938899999999917, 0.00024938899999999917, 0.00024940299999999874, 0.00024940299999999874]</msg>
<status status="PASS" starttime="20201029 09:33:39.199" endtime="20201029 09:33:39.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.194" endtime="20201029 09:33:39.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.840" endtime="20201029 09:33:39.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.818" endtime="20201029 09:33:39.202"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.204" endtime="20201029 09:33:39.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.203" endtime="20201029 09:33:39.224"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.232" endtime="20201029 09:33:39.255"></status>
</kw>
<msg timestamp="20201029 09:33:39.256" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.230" endtime="20201029 09:33:39.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.258" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.257" endtime="20201029 09:33:39.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.259" endtime="20201029 09:33:39.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.228" endtime="20201029 09:33:39.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.226" endtime="20201029 09:33:39.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.269" endtime="20201029 09:33:39.555"></status>
</kw>
<msg timestamp="20201029 09:33:39.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016604569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0168725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:39.267" endtime="20201029 09:33:39.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016604569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0168725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:39.559" endtime="20201029 09:33:39.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.567" endtime="20201029 09:33:39.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.265" endtime="20201029 09:33:39.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.263" endtime="20201029 09:33:39.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.573" level="INFO">${PHILIP_RES} = [{'diff': 0.00026793099999999903}, {'diff': 0.00026741699999999896}, {'diff': 0.00026743099999999853}, {'diff': 0.0002674449999999981}, {'diff': 0.00026743099999999853}, {'diff': 0.0002674169999999989...</msg>
<status status="PASS" starttime="20201029 09:33:39.570" endtime="20201029 09:33:39.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.577" level="INFO">${RESULT} = {'diff': [0.00026793099999999903, 0.00026741699999999896, 0.00026743099999999853, 0.0002674449999999981, 0.00026743099999999853, 0.00026741699999999896, 0.00026741699999999896, 0.0002674449999999981, ...</msg>
<status status="PASS" starttime="20201029 09:33:39.574" endtime="20201029 09:33:39.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.582" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.581" endtime="20201029 09:33:39.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.584" level="INFO">VALUE: [0.00026793099999999903, 0.00026741699999999896, 0.00026743099999999853, 0.0002674449999999981, 0.00026743099999999853, 0.00026741699999999896, 0.00026741699999999896, 0.0002674449999999981, 0.0002673610000000007, 0.00026743099999999853, 0.000267431000000002, 0.00026744399999999863, 0.000267431000000002, 0.00026748599999999734, 0.00026741700000000243, 0.00026743099999999853, 0.00026741700000000243, 0.00026742999999999906, 0.00026741700000000243, 0.00026743099999999853, 0.00026740300000000286, 0.0002674029999999994, 0.0002674440000000021, 0.00026742999999999906, 0.00026745800000000167, 0.0002674019999999999, 0.0002674440000000021, 0.00026742999999999906, 0.0002674300000000025, 0.00026742999999999906, 0.0002674159999999995, 0.0002674159999999995, 0.0002674019999999999, 0.00026742999999999906, 0.0002674300000000025, 0.0002674159999999995, 0.00026740300000000286, 0.000267431000000002, 0.000267431000000002, 0.00026742999999999906, 0.00026741699999999896, 0.00026741699999999896, 0.00026737500000000025, 0.00026743099999999853, 0.000267431000000002, 0.0002674029999999994, 0.000267431000000002, 0.00026741699999999896, 0.0002674169999999955, 0.00026745899999999767]</msg>
<status status="PASS" starttime="20201029 09:33:39.583" endtime="20201029 09:33:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.578" endtime="20201029 09:33:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.225" endtime="20201029 09:33:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.202" endtime="20201029 09:33:39.587"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.589" endtime="20201029 09:33:39.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.588" endtime="20201029 09:33:39.609"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.617" endtime="20201029 09:33:39.642"></status>
</kw>
<msg timestamp="20201029 09:33:39.642" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.615" endtime="20201029 09:33:39.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.645" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.643" endtime="20201029 09:33:39.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.646" endtime="20201029 09:33:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.613" endtime="20201029 09:33:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.611" endtime="20201029 09:33:39.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.654" endtime="20201029 09:33:39.940"></status>
</kw>
<msg timestamp="20201029 09:33:39.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01667375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016960306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:39.653" endtime="20201029 09:33:39.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01667375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016960306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:39.944" endtime="20201029 09:33:39.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.951" endtime="20201029 09:33:39.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.650" endtime="20201029 09:33:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.649" endtime="20201029 09:33:39.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.958" level="INFO">${PHILIP_RES} = [{'diff': 0.0002865560000000003}, {'diff': 0.0002861109999999986}, {'diff': 0.0002860559999999998}, {'diff': 0.00028605500000000034}, {'diff': 0.00028605500000000034}, {'diff': 0.00028605500000000034}...</msg>
<status status="PASS" starttime="20201029 09:33:39.955" endtime="20201029 09:33:39.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.963" level="INFO">${RESULT} = {'diff': [0.0002865560000000003, 0.0002861109999999986, 0.0002860559999999998, 0.00028605500000000034, 0.00028605500000000034, 0.00028605500000000034, 0.0002860689999999999, 0.00028604199999999677, 0....</msg>
<status status="PASS" starttime="20201029 09:33:39.959" endtime="20201029 09:33:39.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.967" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.966" endtime="20201029 09:33:39.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.969" level="INFO">VALUE: [0.0002865560000000003, 0.0002861109999999986, 0.0002860559999999998, 0.00028605500000000034, 0.00028605500000000034, 0.00028605500000000034, 0.0002860689999999999, 0.00028604199999999677, 0.0002860559999999998, 0.00028604200000000024, 0.0002860689999999999, 0.00028605500000000034, 0.00028605500000000034, 0.00028604200000000024, 0.00028602800000000067, 0.0002860559999999998, 0.00028605500000000034, 0.00028604100000000077, 0.00028609699999999905, 0.0002860559999999998, 0.0002860699999999994, 0.0002860559999999998, 0.00028605500000000034, 0.0002860689999999999, 0.0002859719999999989, 0.0002860559999999998, 0.00028604200000000024, 0.0002860559999999998, 0.00028604100000000077, 0.00028605500000000034, 0.0002860279999999972, 0.0002860699999999994, 0.00028604200000000024, 0.0002860559999999998, 0.00028604100000000077, 0.0002860970000000025, 0.00028605500000000034, 0.0002860560000000033, 0.00028604200000000024, 0.0002860559999999998, 0.00028605500000000034, 0.00028604100000000077, 0.00028604100000000077, 0.00028604200000000024, 0.0002860970000000025, 0.00028604199999999677, 0.00028605500000000034, 0.0002860270000000012, 0.00028605500000000034, 0.00028604200000000024]</msg>
<status status="PASS" starttime="20201029 09:33:39.968" endtime="20201029 09:33:39.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.963" endtime="20201029 09:33:39.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.609" endtime="20201029 09:33:39.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.587" endtime="20201029 09:33:39.975"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.977" endtime="20201029 09:33:39.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.976" endtime="20201029 09:33:39.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.005" endtime="20201029 09:33:40.031"></status>
</kw>
<msg timestamp="20201029 09:33:40.031" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.004" endtime="20201029 09:33:40.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.034" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.032" endtime="20201029 09:33:40.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.035" endtime="20201029 09:33:40.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.001" endtime="20201029 09:33:40.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.999" endtime="20201029 09:33:40.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.044" endtime="20201029 09:33:40.331"></status>
</kw>
<msg timestamp="20201029 09:33:40.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016793403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.042" endtime="20201029 09:33:40.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016793403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.336" endtime="20201029 09:33:40.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.343" endtime="20201029 09:33:40.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.040" endtime="20201029 09:33:40.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.038" endtime="20201029 09:33:40.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.350" level="INFO">${PHILIP_RES} = [{'diff': 0.00030575000000000047}, {'diff': 0.0003052780000000026}, {'diff': 0.0003052779999999991}, {'diff': 0.0003052919999999987}, {'diff': 0.00030529200000000214}, {'diff': 0.0003052779999999991},...</msg>
<status status="PASS" starttime="20201029 09:33:40.347" endtime="20201029 09:33:40.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.354" level="INFO">${RESULT} = {'diff': [0.00030575000000000047, 0.0003052780000000026, 0.0003052779999999991, 0.0003052919999999987, 0.00030529200000000214, 0.0003052779999999991, 0.0003052909999999992, 0.00030529200000000214, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:40.351" endtime="20201029 09:33:40.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.358" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.357" endtime="20201029 09:33:40.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.360" level="INFO">VALUE: [0.00030575000000000047, 0.0003052780000000026, 0.0003052779999999991, 0.0003052919999999987, 0.00030529200000000214, 0.0003052779999999991, 0.0003052909999999992, 0.00030529200000000214, 0.00030530499999999877, 0.0003053060000000017, 0.0003052780000000026, 0.0003052919999999987, 0.0003053060000000017, 0.0003052919999999987, 0.0003052919999999987, 0.0003052909999999992, 0.00030529200000000214, 0.0003052909999999992, 0.0003053060000000017, 0.0003052779999999991, 0.0003052919999999987, 0.0003052779999999991, 0.0003052779999999991, 0.0003052779999999991, 0.0003052780000000026, 0.0003052919999999987, 0.0003052909999999992, 0.0003052360000000004, 0.0003052909999999992, 0.0003053060000000017, 0.0003053190000000018, 0.0003052919999999987, 0.0003052779999999991, 0.00030529200000000214, 0.00030530599999999825, 0.0003052909999999992, 0.0003053060000000017, 0.00030527699999999963, 0.0003052779999999991, 0.0003052909999999992, 0.0003052919999999987, 0.0003052919999999987, 0.0003052919999999987, 0.0003052779999999991, 0.0003052909999999992, 0.00030533300000000485, 0.0003053469999999975, 0.0003052919999999987, 0.0003052909999999992, 0.0003052779999999991]</msg>
<status status="PASS" starttime="20201029 09:33:40.359" endtime="20201029 09:33:40.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.354" endtime="20201029 09:33:40.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.998" endtime="20201029 09:33:40.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.975" endtime="20201029 09:33:40.362"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.364" endtime="20201029 09:33:40.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.363" endtime="20201029 09:33:40.386"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.397" endtime="20201029 09:33:40.425"></status>
</kw>
<msg timestamp="20201029 09:33:40.426" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.395" endtime="20201029 09:33:40.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.428" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.427" endtime="20201029 09:33:40.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.429" endtime="20201029 09:33:40.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.391" endtime="20201029 09:33:40.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.389" endtime="20201029 09:33:40.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.439" endtime="20201029 09:33:40.725"></status>
</kw>
<msg timestamp="20201029 09:33:40.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.437" endtime="20201029 09:33:40.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.729" endtime="20201029 09:33:40.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.737" endtime="20201029 09:33:40.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.435" endtime="20201029 09:33:40.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.433" endtime="20201029 09:33:40.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.743" level="INFO">${PHILIP_RES} = [{'diff': 0.00032565299999999867}, {'diff': 0.000325124999999999}, {'diff': 0.00032515200000000216}, {'diff': 0.00032513900000000207}, {'diff': 0.0003251389999999986}, {'diff': 0.0003251389999999986},...</msg>
<status status="PASS" starttime="20201029 09:33:40.740" endtime="20201029 09:33:40.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.747" level="INFO">${RESULT} = {'diff': [0.00032565299999999867, 0.000325124999999999, 0.00032515200000000216, 0.00032513900000000207, 0.0003251389999999986, 0.0003251389999999986, 0.00032516699999999774, 0.00032515299999999817, 0....</msg>
<status status="PASS" starttime="20201029 09:33:40.744" endtime="20201029 09:33:40.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.752" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.751" endtime="20201029 09:33:40.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.754" level="INFO">VALUE: [0.00032565299999999867, 0.000325124999999999, 0.00032515200000000216, 0.00032513900000000207, 0.0003251389999999986, 0.0003251389999999986, 0.00032516699999999774, 0.00032515299999999817, 0.00032516600000000173, 0.00032515300000000164, 0.0003251250000000025, 0.0003251389999999986, 0.00032515299999999817, 0.0003251389999999986, 0.0003251519999999987, 0.00032515300000000164, 0.0003251670000000012, 0.0003251389999999986, 0.00032519400000000087, 0.00032515299999999817, 0.0003251379999999991, 0.0003251389999999986, 0.00032515300000000164, 0.0003251250000000025, 0.00032513900000000207, 0.00032512499999999556, 0.0003251380000000026, 0.00032513900000000207, 0.0003251810000000008, 0.0003251250000000025, 0.00032512499999999556, 0.00032513900000000207, 0.00032515200000000216, 0.0003251670000000012, 0.00032515300000000164, 0.0003251389999999951, 0.00032508400000000326, 0.00032517999999999436, 0.00032515200000000216, 0.00032513900000000207, 0.00032513900000000207, 0.00032515300000000164, 0.0003251529999999947, 0.0003251250000000025, 0.00032512499999999556, 0.00032515300000000164, 0.00032513900000000207, 0.00032515300000000164, 0.00032513900000000207, 0.0003251800000000013]</msg>
<status status="PASS" starttime="20201029 09:33:40.753" endtime="20201029 09:33:40.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.748" endtime="20201029 09:33:40.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.386" endtime="20201029 09:33:40.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.362" endtime="20201029 09:33:40.757"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.759" endtime="20201029 09:33:40.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.758" endtime="20201029 09:33:40.779"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.787" endtime="20201029 09:33:40.814"></status>
</kw>
<msg timestamp="20201029 09:33:40.815" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.785" endtime="20201029 09:33:40.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.817" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.816" endtime="20201029 09:33:40.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.818" endtime="20201029 09:33:40.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.783" endtime="20201029 09:33:40.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.781" endtime="20201029 09:33:40.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.827" endtime="20201029 09:33:41.113"></status>
</kw>
<msg timestamp="20201029 09:33:41.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016913139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.825" endtime="20201029 09:33:41.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016913139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.117" endtime="20201029 09:33:41.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.124" endtime="20201029 09:33:41.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.823" endtime="20201029 09:33:41.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.821" endtime="20201029 09:33:41.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.131" level="INFO">${PHILIP_RES} = [{'diff': 0.00034611099999999964}, {'diff': 0.00034561099999999914}, {'diff': 0.0003455839999999995}, {'diff': 0.00034559699999999957}, {'diff': 0.00034559699999999957}, {'diff': 0.0003456109999999991...</msg>
<status status="PASS" starttime="20201029 09:33:41.128" endtime="20201029 09:33:41.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.136" level="INFO">${RESULT} = {'diff': [0.00034611099999999964, 0.00034561099999999914, 0.0003455839999999995, 0.00034559699999999957, 0.00034559699999999957, 0.00034561099999999914, 0.0003455419999999973, 0.00034563900000000175, ...</msg>
<status status="PASS" starttime="20201029 09:33:41.132" endtime="20201029 09:33:41.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.140" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.139" endtime="20201029 09:33:41.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.142" level="INFO">VALUE: [0.00034611099999999964, 0.00034561099999999914, 0.0003455839999999995, 0.00034559699999999957, 0.00034559699999999957, 0.00034561099999999914, 0.0003455419999999973, 0.00034563900000000175, 0.0003456250000000022, 0.0003455419999999973, 0.0003456110000000026, 0.00034563900000000175, 0.00034561099999999914, 0.0003456249999999987, 0.00034565299999999785, 0.00034559799999999904, 0.000345583, 0.00034561099999999914, 0.0003456119999999986, 0.0003456249999999987, 0.0003456249999999987, 0.0003455839999999995, 0.0003456250000000022, 0.0003456110000000026, 0.0003456250000000022, 0.00034559699999999957, 0.00034561099999999914, 0.00034561099999999914, 0.0003455839999999995, 0.00034559699999999957, 0.0003456249999999987, 0.0003455839999999995, 0.0003456530000000013, 0.00034561099999999914, 0.0003456250000000022, 0.000345583, 0.0003456110000000026, 0.0003456120000000021, 0.00034561099999999567, 0.0003456250000000022, 0.0003455979999999956, 0.00034558400000000294, 0.0003456530000000013, 0.0003456110000000026, 0.0003456120000000021, 0.00034561099999999567, 0.00034559700000000304, 0.00034562499999999524, 0.00034559700000000304, 0.00034558299999999653]</msg>
<status status="PASS" starttime="20201029 09:33:41.141" endtime="20201029 09:33:41.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.136" endtime="20201029 09:33:41.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.779" endtime="20201029 09:33:41.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.757" endtime="20201029 09:33:41.144"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.146" endtime="20201029 09:33:41.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.145" endtime="20201029 09:33:41.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.174" endtime="20201029 09:33:41.203"></status>
</kw>
<msg timestamp="20201029 09:33:41.204" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.173" endtime="20201029 09:33:41.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.206" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.205" endtime="20201029 09:33:41.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.207" endtime="20201029 09:33:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.170" endtime="20201029 09:33:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.168" endtime="20201029 09:33:41.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.216" endtime="20201029 09:33:41.515"></status>
</kw>
<msg timestamp="20201029 09:33:41.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016537528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016904722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.215" endtime="20201029 09:33:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016537528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016904722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.524" endtime="20201029 09:33:41.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.542" endtime="20201029 09:33:41.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.212" endtime="20201029 09:33:41.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.210" endtime="20201029 09:33:41.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.555" level="INFO">${PHILIP_RES} = [{'diff': 0.00036719400000000124}, {'diff': 0.0003666670000000011}, {'diff': 0.0003666530000000015}, {'diff': 0.00036668100000000065}, {'diff': 0.00036668100000000065}, {'diff': 0.0003666950000000002}...</msg>
<status status="PASS" starttime="20201029 09:33:41.549" endtime="20201029 09:33:41.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.560" level="INFO">${RESULT} = {'diff': [0.00036719400000000124, 0.0003666670000000011, 0.0003666530000000015, 0.00036668100000000065, 0.00036668100000000065, 0.0003666950000000002, 0.0003666950000000002, 0.0003666670000000011, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:41.557" endtime="20201029 09:33:41.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.564" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.563" endtime="20201029 09:33:41.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.567" level="INFO">VALUE: [0.00036719400000000124, 0.0003666670000000011, 0.0003666530000000015, 0.00036668100000000065, 0.00036668100000000065, 0.0003666950000000002, 0.0003666950000000002, 0.0003666670000000011, 0.00036668000000000117, 0.00036668000000000117, 0.00036669400000000074, 0.0003666799999999977, 0.0003666669999999976, 0.0003666669999999976, 0.00036669499999999675, 0.0003666950000000002, 0.0003666809999999972, 0.0003666809999999972, 0.00036669399999999727, 0.00036673599999999945, 0.00036673599999999945, 0.00036668100000000065, 0.00036668100000000065, 0.00036668100000000065, 0.00036663900000000194, 0.0003666670000000011, 0.00036673599999999945, 0.00036669400000000074, 0.0003666660000000016, 0.00036669400000000074, 0.0003666530000000015, 0.00036668000000000117, 0.00036668100000000065, 0.00036668100000000065, 0.0003666950000000002, 0.00036668100000000065, 0.0003666950000000002, 0.0003667080000000003, 0.00036668000000000117, 0.0003666660000000016, 0.0003666660000000016, 0.0003665970000000032, 0.00036668100000000065, 0.00036668100000000065, 0.0003667219999999999, 0.0003666670000000011, 0.0003667080000000003, 0.00036669400000000074, 0.00036668000000000117, 0.00036665200000000203]</msg>
<status status="PASS" starttime="20201029 09:33:41.565" endtime="20201029 09:33:41.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.561" endtime="20201029 09:33:41.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.167" endtime="20201029 09:33:41.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.144" endtime="20201029 09:33:41.569"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.571" endtime="20201029 09:33:41.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.569" endtime="20201029 09:33:41.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.599" endtime="20201029 09:33:41.628"></status>
</kw>
<msg timestamp="20201029 09:33:41.629" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.597" endtime="20201029 09:33:41.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.631" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.630" endtime="20201029 09:33:41.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.632" endtime="20201029 09:33:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.595" endtime="20201029 09:33:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.593" endtime="20201029 09:33:41.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.642" endtime="20201029 09:33:41.928"></status>
</kw>
<msg timestamp="20201029 09:33:41.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016960056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.641" endtime="20201029 09:33:41.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016960056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.932" endtime="20201029 09:33:41.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.940" endtime="20201029 09:33:41.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.638" endtime="20201029 09:33:41.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.636" endtime="20201029 09:33:41.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.946" level="INFO">${PHILIP_RES} = [{'diff': 0.00038886200000000024}, {'diff': 0.00038836100000000026}, {'diff': 0.00038837499999999983}, {'diff': 0.00038836100000000026}, {'diff': 0.0003883609999999968}, {'diff': 0.0003883889999999994...</msg>
<status status="PASS" starttime="20201029 09:33:41.943" endtime="20201029 09:33:41.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.950" level="INFO">${RESULT} = {'diff': [0.00038886200000000024, 0.00038836100000000026, 0.00038837499999999983, 0.00038836100000000026, 0.0003883609999999968, 0.0003883889999999994, 0.00038836100000000026, 0.00038836100000000026, ...</msg>
<status status="PASS" starttime="20201029 09:33:41.947" endtime="20201029 09:33:41.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.954" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.953" endtime="20201029 09:33:41.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.957" level="INFO">VALUE: [0.00038886200000000024, 0.00038836100000000026, 0.00038837499999999983, 0.00038836100000000026, 0.0003883609999999968, 0.0003883889999999994, 0.00038836100000000026, 0.00038836100000000026, 0.0003884310000000016, 0.00038837499999999983, 0.00038837499999999983, 0.00038836100000000026, 0.00038838799999999993, 0.00038837499999999983, 0.00038840299999999897, 0.0003883470000000007, 0.00038841699999999854, 0.00038836100000000026, 0.00038836100000000026, 0.00038838799999999993, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.00038837499999999983, 0.00038838799999999993, 0.0003883609999999968, 0.00038837499999999983, 0.00038831900000000155, 0.00038837499999999983, 0.00038836100000000026, 0.00038837499999999983, 0.0003883620000000032, 0.0003883470000000007, 0.00038837499999999983, 0.0003883750000000033, 0.0003883750000000033, 0.00038838900000000287, 0.00038845800000000125, 0.00038838899999999593, 0.00038837499999999636, 0.00038838900000000287, 0.0003883750000000033, 0.00038836100000000373, 0.0003883750000000033, 0.0003883469999999972, 0.00038838899999999593, 0.00038838900000000287, 0.00038838900000000287, 0.0003883620000000032, 0.00038836100000000373]</msg>
<status status="PASS" starttime="20201029 09:33:41.955" endtime="20201029 09:33:41.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.951" endtime="20201029 09:33:41.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.591" endtime="20201029 09:33:41.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.569" endtime="20201029 09:33:41.959"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.962" endtime="20201029 09:33:41.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.960" endtime="20201029 09:33:41.981"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.989" endtime="20201029 09:33:42.020"></status>
</kw>
<msg timestamp="20201029 09:33:42.021" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.988" endtime="20201029 09:33:42.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.023" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.022" endtime="20201029 09:33:42.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.024" endtime="20201029 09:33:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.985" endtime="20201029 09:33:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.983" endtime="20201029 09:33:42.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.033" endtime="20201029 09:33:42.326"></status>
</kw>
<msg timestamp="20201029 09:33:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016534528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016945722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.031" endtime="20201029 09:33:42.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016534528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016945722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.335" endtime="20201029 09:33:42.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.353" endtime="20201029 09:33:42.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.029" endtime="20201029 09:33:42.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.027" endtime="20201029 09:33:42.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.364" level="INFO">${PHILIP_RES} = [{'diff': 0.00041119400000000014}, {'diff': 0.0004107219999999988}, {'diff': 0.0004106949999999991}, {'diff': 0.00041069399999999964}, {'diff': 0.000410681000000003}, {'diff': 0.000410667}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 09:33:42.360" endtime="20201029 09:33:42.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.369" level="INFO">${RESULT} = {'diff': [0.00041119400000000014, 0.0004107219999999988, 0.0004106949999999991, 0.00041069399999999964, 0.000410681000000003, 0.000410667, 0.00041068000000000007, 0.00041068099999999955, 0.00041068000...</msg>
<status status="PASS" starttime="20201029 09:33:42.365" endtime="20201029 09:33:42.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.373" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.372" endtime="20201029 09:33:42.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.376" level="INFO">VALUE: [0.00041119400000000014, 0.0004107219999999988, 0.0004106949999999991, 0.00041069399999999964, 0.000410681000000003, 0.000410667, 0.00041068000000000007, 0.00041068099999999955, 0.00041068000000000007, 0.0004107079999999992, 0.0004106249999999978, 0.0004107079999999992, 0.0004106530000000004, 0.000410681000000003, 0.0004106799999999966, 0.00041061200000000117, 0.0004107089999999987, 0.00041068000000000007, 0.00041068099999999955, 0.0004106530000000004, 0.000410667, 0.0004106949999999991, 0.0004106249999999978, 0.00041063899999999737, 0.00041072299999999826, 0.0004106660000000005, 0.000410667, 0.0004106949999999991, 0.00041068000000000007, 0.000410667, 0.00041068000000000007, 0.000410667, 0.00041072299999999826, 0.00041066599999999703, 0.00041065299999999694, 0.0004106809999999961, 0.00041066599999999703, 0.0004106950000000026, 0.0004106669999999965, 0.0004106940000000031, 0.0004107360000000018, 0.00041068000000000354, 0.0004106940000000031, 0.00041066700000000345, 0.00041068000000000354, 0.000410681000000003, 0.000410681000000003, 0.00041068000000000354, 0.000410681000000003, 0.0004106939999999962]</msg>
<status status="PASS" starttime="20201029 09:33:42.375" endtime="20201029 09:33:42.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.370" endtime="20201029 09:33:42.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.982" endtime="20201029 09:33:42.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.960" endtime="20201029 09:33:42.378"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.380" endtime="20201029 09:33:42.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.379" endtime="20201029 09:33:42.400"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.408" endtime="20201029 09:33:42.440"></status>
</kw>
<msg timestamp="20201029 09:33:42.441" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.406" endtime="20201029 09:33:42.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.443" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.442" endtime="20201029 09:33:42.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.444" endtime="20201029 09:33:42.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.404" endtime="20201029 09:33:42.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.402" endtime="20201029 09:33:42.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.453" endtime="20201029 09:33:42.740"></status>
</kw>
<msg timestamp="20201029 09:33:42.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016659069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017093167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.452" endtime="20201029 09:33:42.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016659069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017093167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.744" endtime="20201029 09:33:42.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.752" endtime="20201029 09:33:42.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.449" endtime="20201029 09:33:42.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.447" endtime="20201029 09:33:42.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.759" level="INFO">${PHILIP_RES} = [{'diff': 0.0004340980000000008}, {'diff': 0.0004335829999999978}, {'diff': 0.0004335690000000017}, {'diff': 0.0004335690000000017}, {'diff': 0.0004335980000000003}, {'diff': 0.0004335969999999974}, {...</msg>
<status status="PASS" starttime="20201029 09:33:42.755" endtime="20201029 09:33:42.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.763" level="INFO">${RESULT} = {'diff': [0.0004340980000000008, 0.0004335829999999978, 0.0004335690000000017, 0.0004335690000000017, 0.0004335980000000003, 0.0004335969999999974, 0.0004336110000000004, 0.00043359700000000084, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:42.760" endtime="20201029 09:33:42.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.768" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.767" endtime="20201029 09:33:42.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.770" level="INFO">VALUE: [0.0004340980000000008, 0.0004335829999999978, 0.0004335690000000017, 0.0004335690000000017, 0.0004335980000000003, 0.0004335969999999974, 0.0004336110000000004, 0.00043359700000000084, 0.00043359700000000084, 0.00043351399999999943, 0.0004335969999999974, 0.00043359700000000084, 0.00043358400000000075, 0.0004335830000000013, 0.0004335829999999978, 0.0004335830000000013, 0.00043359700000000084, 0.0004335560000000016, 0.000433625, 0.00043354100000000256, 0.00043358400000000075, 0.0004335830000000013, 0.000433625, 0.00043355499999999866, 0.00043363899999999955, 0.0004335830000000013, 0.0004335690000000017, 0.0004335969999999974, 0.0004335980000000003, 0.00043358400000000075, 0.0004335829999999978, 0.00043354100000000256, 0.00043358400000000075, 0.00043365300000000606, 0.0004335690000000017, 0.0004335690000000017, 0.00043358400000000075, 0.0004336110000000004, 0.00043358299999999433, 0.0004335690000000017, 0.00043358400000000075, 0.0004335700000000012, 0.00043359700000000084, 0.00043358299999999433, 0.00043358400000000075, 0.0004335140000000029, 0.00043359700000000084, 0.0004335830000000013, 0.00043359700000000084, 0.0004335700000000012]</msg>
<status status="PASS" starttime="20201029 09:33:42.769" endtime="20201029 09:33:42.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.764" endtime="20201029 09:33:42.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.400" endtime="20201029 09:33:42.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.378" endtime="20201029 09:33:42.772"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.774" endtime="20201029 09:33:42.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.773" endtime="20201029 09:33:42.794"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.802" endtime="20201029 09:33:42.836"></status>
</kw>
<msg timestamp="20201029 09:33:42.836" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.801" endtime="20201029 09:33:42.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.839" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.837" endtime="20201029 09:33:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.840" endtime="20201029 09:33:42.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.798" endtime="20201029 09:33:42.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.796" endtime="20201029 09:33:42.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.849" endtime="20201029 09:33:43.147"></status>
</kw>
<msg timestamp="20201029 09:33:43.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017050583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.848" endtime="20201029 09:33:43.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017050583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.156" endtime="20201029 09:33:43.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.173" endtime="20201029 09:33:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.845" endtime="20201029 09:33:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.844" endtime="20201029 09:33:43.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.180" level="INFO">${PHILIP_RES} = [{'diff': 0.0004576249999999997}, {'diff': 0.00045709799999999953}, {'diff': 0.00045719400000000104}, {'diff': 0.00045715299999999834}, {'diff': 0.0004571249999999992}, {'diff': 0.00045711099999999963...</msg>
<status status="PASS" starttime="20201029 09:33:43.177" endtime="20201029 09:33:43.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.184" level="INFO">${RESULT} = {'diff': [0.0004576249999999997, 0.00045709799999999953, 0.00045719400000000104, 0.00045715299999999834, 0.0004571249999999992, 0.00045711099999999963, 0.00045711099999999963, 0.00045713899999999877, ...</msg>
<status status="PASS" starttime="20201029 09:33:43.181" endtime="20201029 09:33:43.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.188" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.187" endtime="20201029 09:33:43.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.190" level="INFO">VALUE: [0.0004576249999999997, 0.00045709799999999953, 0.00045719400000000104, 0.00045715299999999834, 0.0004571249999999992, 0.00045711099999999963, 0.00045711099999999963, 0.00045713899999999877, 0.0004571249999999992, 0.00045713900000000224, 0.00045709799999999953, 0.0004570700000000004, 0.00045711099999999963, 0.00045709700000000006, 0.0004571119999999991, 0.00045711099999999963, 0.00045711099999999963, 0.00045711099999999963, 0.00045711099999999963, 0.00045709799999999953, 0.00045711099999999963, 0.00045713899999999877, 0.0004571249999999992, 0.00045712500000000267, 0.00045713900000000224, 0.00045712500000000267, 0.00045713900000000224, 0.0004571119999999991, 0.00045713899999999877, 0.00045711099999999616, 0.0004571110000000031, 0.00045711099999999616, 0.00045711099999999616, 0.00045712500000000267, 0.00045711099999999616, 0.0004571110000000031, 0.00045709799999999606, 0.00045708400000000343, 0.00045718100000000095, 0.00045713900000000224, 0.00045712499999999573, 0.00045712500000000267, 0.00045713900000000224, 0.00045713900000000224, 0.00045711099999999616, 0.00045711200000000257, 0.0004571110000000031, 0.0004570969999999966, 0.0004571110000000031, 0.00045706899999999745]</msg>
<status status="PASS" starttime="20201029 09:33:43.189" endtime="20201029 09:33:43.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.184" endtime="20201029 09:33:43.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.795" endtime="20201029 09:33:43.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.772" endtime="20201029 09:33:43.193"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.195" endtime="20201029 09:33:43.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.194" endtime="20201029 09:33:43.215"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.223" endtime="20201029 09:33:43.259"></status>
</kw>
<msg timestamp="20201029 09:33:43.259" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.222" endtime="20201029 09:33:43.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.262" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.261" endtime="20201029 09:33:43.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.263" endtime="20201029 09:33:43.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.219" endtime="20201029 09:33:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.217" endtime="20201029 09:33:43.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.275" endtime="20201029 09:33:43.561"></status>
</kw>
<msg timestamp="20201029 09:33:43.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016575028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017056819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.272" endtime="20201029 09:33:43.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016575028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017056819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.565" endtime="20201029 09:33:43.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.573" endtime="20201029 09:33:43.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.269" endtime="20201029 09:33:43.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.268" endtime="20201029 09:33:43.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.579" level="INFO">${PHILIP_RES} = [{'diff': 0.00048179100000000225}, {'diff': 0.0004812219999999999}, {'diff': 0.00048124999999999904}, {'diff': 0.0004812630000000026}, {'diff': 0.0004812639999999986}, {'diff': 0.0004812779999999982},...</msg>
<status status="PASS" starttime="20201029 09:33:43.576" endtime="20201029 09:33:43.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.584" level="INFO">${RESULT} = {'diff': [0.00048179100000000225, 0.0004812219999999999, 0.00048124999999999904, 0.0004812630000000026, 0.0004812639999999986, 0.0004812779999999982, 0.00048124999999999904, 0.0004812219999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:43.580" endtime="20201029 09:33:43.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.588" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.587" endtime="20201029 09:33:43.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.591" level="INFO">VALUE: [0.00048179100000000225, 0.0004812219999999999, 0.00048124999999999904, 0.0004812630000000026, 0.0004812639999999986, 0.0004812779999999982, 0.00048124999999999904, 0.0004812219999999999, 0.00048124999999999904, 0.00048127800000000165, 0.00048123599999999947, 0.0004812639999999986, 0.00048127800000000165, 0.0004812089999999998, 0.00048119500000000023, 0.00048124999999999904, 0.00048124999999999904, 0.00048124999999999904, 0.0004811939999999973, 0.0004813059999999973, 0.0004812500000000025, 0.00048124999999999904, 0.0004812639999999986, 0.0004812640000000021, 0.0004812219999999999, 0.00048124999999999904, 0.0004812640000000021, 0.00048123599999999947, 0.0004812640000000021, 0.0004812500000000025, 0.00048123600000000294, 0.00048126399999999514, 0.00048122199999999643, 0.00048120899999999633, 0.0004812500000000025, 0.0004812500000000025, 0.0004812640000000021, 0.00048126399999999514, 0.00048124999999999557, 0.0004812500000000025, 0.0004812500000000025, 0.0004812500000000025, 0.00048126399999999514, 0.00048124999999999557, 0.0004812500000000025, 0.0004812630000000026, 0.0004812500000000025, 0.0004812500000000025, 0.000481235999999996, 0.00048122199999999643]</msg>
<status status="PASS" starttime="20201029 09:33:43.589" endtime="20201029 09:33:43.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.585" endtime="20201029 09:33:43.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.216" endtime="20201029 09:33:43.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.193" endtime="20201029 09:33:43.593"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.595" endtime="20201029 09:33:43.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.594" endtime="20201029 09:33:43.615"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.623" endtime="20201029 09:33:43.659"></status>
</kw>
<msg timestamp="20201029 09:33:43.659" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.621" endtime="20201029 09:33:43.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.662" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.660" endtime="20201029 09:33:43.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.663" endtime="20201029 09:33:43.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.619" endtime="20201029 09:33:43.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.617" endtime="20201029 09:33:43.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.672" endtime="20201029 09:33:43.978"></status>
</kw>
<msg timestamp="20201029 09:33:43.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016508833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017015361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.670" endtime="20201029 09:33:43.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016508833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017015361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.987" endtime="20201029 09:33:43.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.995" endtime="20201029 09:33:43.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.668" endtime="20201029 09:33:43.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.666" endtime="20201029 09:33:43.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.001" level="INFO">${PHILIP_RES} = [{'diff': 0.0005065279999999991}, {'diff': 0.0005059999999999995}, {'diff': 0.0005060139999999991}, {'diff': 0.0005060139999999991}, {'diff': 0.0005059999999999995}, {'diff': 0.0005060269999999992}, {...</msg>
<status status="PASS" starttime="20201029 09:33:43.998" endtime="20201029 09:33:44.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.005" level="INFO">${RESULT} = {'diff': [0.0005065279999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060269999999992, 0.0005059999999999995, 0.0005060269999999992, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:44.002" endtime="20201029 09:33:44.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.009" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.008" endtime="20201029 09:33:44.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.012" level="INFO">VALUE: [0.0005065279999999991, 0.0005059999999999995, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060269999999992, 0.0005059999999999995, 0.0005060269999999992, 0.0005059300000000017, 0.0005060140000000025, 0.0005060140000000025, 0.0005059869999999994, 0.0005060830000000009, 0.0005059999999999995, 0.0005059439999999978, 0.0005060269999999992, 0.0005059999999999995, 0.0005060279999999986, 0.0005060689999999979, 0.0005060269999999992, 0.0005059999999999995, 0.0005060129999999996, 0.0005060139999999991, 0.0005060139999999991, 0.0005060140000000025, 0.0005060140000000025, 0.0005060139999999991, 0.0005060139999999991, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005060420000000052, 0.0005059999999999995, 0.0005060280000000056, 0.0005059999999999995, 0.0005059579999999939, 0.0005060139999999991, 0.0005060139999999991, 0.0005060139999999991, 0.0005059999999999995, 0.0005059999999999995, 0.0005059720000000004, 0.0005059999999999995, 0.0005060139999999991, 0.0005060269999999992, 0.0005060279999999986, 0.0005059999999999995, 0.0005060139999999991, 0.0005060279999999986, 0.0005059999999999995]</msg>
<status status="PASS" starttime="20201029 09:33:44.010" endtime="20201029 09:33:44.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.006" endtime="20201029 09:33:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.616" endtime="20201029 09:33:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.593" endtime="20201029 09:33:44.014"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.016" endtime="20201029 09:33:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.015" endtime="20201029 09:33:44.036"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.044" endtime="20201029 09:33:44.082"></status>
</kw>
<msg timestamp="20201029 09:33:44.082" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.042" endtime="20201029 09:33:44.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.085" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.083" endtime="20201029 09:33:44.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.086" endtime="20201029 09:33:44.088"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.040" endtime="20201029 09:33:44.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.038" endtime="20201029 09:33:44.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.095" endtime="20201029 09:33:44.381"></status>
</kw>
<msg timestamp="20201029 09:33:44.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016450931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016982764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.094" endtime="20201029 09:33:44.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016450931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016982764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.385" endtime="20201029 09:33:44.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.393" endtime="20201029 09:33:44.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.091" endtime="20201029 09:33:44.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.090" endtime="20201029 09:33:44.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.399" level="INFO">${PHILIP_RES} = [{'diff': 0.0005318330000000024}, {'diff': 0.0005313750000000006}, {'diff': 0.0005313890000000002}, {'diff': 0.000531361000000001}, {'diff': 0.000531361000000001}, {'diff': 0.0005313750000000006}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:44.396" endtime="20201029 09:33:44.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.403" level="INFO">${RESULT} = {'diff': [0.0005318330000000024, 0.0005313750000000006, 0.0005313890000000002, 0.000531361000000001, 0.000531361000000001, 0.0005313750000000006, 0.0005313620000000005, 0.0005313609999999976, 0.000531...</msg>
<status status="PASS" starttime="20201029 09:33:44.400" endtime="20201029 09:33:44.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.408" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.407" endtime="20201029 09:33:44.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.410" level="INFO">VALUE: [0.0005318330000000024, 0.0005313750000000006, 0.0005313890000000002, 0.000531361000000001, 0.000531361000000001, 0.0005313750000000006, 0.0005313620000000005, 0.0005313609999999976, 0.0005313189999999988, 0.0005313609999999976, 0.0005313749999999971, 0.0005313609999999976, 0.0005313750000000006, 0.0005313750000000006, 0.0005313749999999971, 0.0005313750000000006, 0.0005313890000000002, 0.0005313890000000002, 0.0005314440000000024, 0.0005313750000000006, 0.0005313890000000002, 0.0005313059999999988, 0.0005312919999999992, 0.0005314159999999998, 0.0005313190000000023, 0.0005313749999999971, 0.0005313750000000006, 0.000531347999999994, 0.0005313750000000006, 0.000531361000000001, 0.0005313750000000006, 0.0005313890000000002, 0.0005314159999999998, 0.0005313750000000006, 0.0005313750000000006, 0.0005313750000000006, 0.0005313890000000002, 0.0005313750000000006, 0.0005313750000000006, 0.000531361000000001, 0.0005313750000000006, 0.0005313480000000009, 0.0005313609999999941, 0.0005314169999999993, 0.0005313470000000015, 0.0005313330000000019, 0.0005314449999999984, 0.0005314169999999993, 0.0005313889999999932, 0.0005313890000000002]</msg>
<status status="PASS" starttime="20201029 09:33:44.409" endtime="20201029 09:33:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.404" endtime="20201029 09:33:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.036" endtime="20201029 09:33:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.014" endtime="20201029 09:33:44.413"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.415" endtime="20201029 09:33:44.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.414" endtime="20201029 09:33:44.435"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.443" endtime="20201029 09:33:44.482"></status>
</kw>
<msg timestamp="20201029 09:33:44.483" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.441" endtime="20201029 09:33:44.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.485" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.484" endtime="20201029 09:33:44.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.486" endtime="20201029 09:33:44.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.439" endtime="20201029 09:33:44.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.437" endtime="20201029 09:33:44.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.495" endtime="20201029 09:33:44.796"></status>
</kw>
<msg timestamp="20201029 09:33:44.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016448444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017006306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.493" endtime="20201029 09:33:44.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016448444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017006306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.800" endtime="20201029 09:33:44.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.808" endtime="20201029 09:33:44.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.491" endtime="20201029 09:33:44.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.489" endtime="20201029 09:33:44.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.815" level="INFO">${PHILIP_RES} = [{'diff': 0.0005578619999999992}, {'diff': 0.0005573479999999992}, {'diff': 0.0005573330000000001}, {'diff': 0.0005573469999999997}, {'diff': 0.0005573749999999988}, {'diff': 0.0005573330000000001}, {...</msg>
<status status="PASS" starttime="20201029 09:33:44.812" endtime="20201029 09:33:44.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.820" level="INFO">${RESULT} = {'diff': [0.0005578619999999992, 0.0005573479999999992, 0.0005573330000000001, 0.0005573469999999997, 0.0005573749999999988, 0.0005573330000000001, 0.0005573330000000001, 0.0005573749999999988, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:44.816" endtime="20201029 09:33:44.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.824" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.823" endtime="20201029 09:33:44.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.826" level="INFO">VALUE: [0.0005578619999999992, 0.0005573479999999992, 0.0005573330000000001, 0.0005573469999999997, 0.0005573749999999988, 0.0005573330000000001, 0.0005573330000000001, 0.0005573749999999988, 0.0005573609999999993, 0.0005573609999999993, 0.0005573749999999988, 0.0005573330000000001, 0.0005573469999999997, 0.0005573479999999992, 0.0005573749999999988, 0.0005573469999999997, 0.0005573329999999967, 0.0005573330000000001, 0.0005573609999999993, 0.0005573470000000032, 0.0005573339999999996, 0.0005573749999999988, 0.0005573330000000001, 0.0005573469999999997, 0.0005573470000000032, 0.0005573469999999997, 0.0005573609999999993, 0.000557402999999998, 0.0005573339999999996, 0.0005573469999999997, 0.0005573609999999993, 0.0005573190000000006, 0.0005573609999999993, 0.0005573339999999996, 0.0005573479999999992, 0.0005573609999999993, 0.0005573469999999997, 0.0005573330000000001, 0.0005573049999999941, 0.0005573330000000001, 0.0005573330000000001, 0.0005573619999999987, 0.0005573330000000001, 0.0005573190000000006, 0.0005574169999999976, 0.0005573469999999997, 0.0005573469999999997, 0.0005573339999999996, 0.0005573609999999993, 0.0005574159999999981]</msg>
<status status="PASS" starttime="20201029 09:33:44.825" endtime="20201029 09:33:44.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.821" endtime="20201029 09:33:44.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.436" endtime="20201029 09:33:44.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.413" endtime="20201029 09:33:44.828"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.831" endtime="20201029 09:33:44.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.829" endtime="20201029 09:33:44.850"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.858" endtime="20201029 09:33:44.899"></status>
</kw>
<msg timestamp="20201029 09:33:44.899" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.857" endtime="20201029 09:33:44.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.902" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.900" endtime="20201029 09:33:44.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.903" endtime="20201029 09:33:44.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.854" endtime="20201029 09:33:44.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.852" endtime="20201029 09:33:44.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.912" endtime="20201029 09:33:45.198"></status>
</kw>
<msg timestamp="20201029 09:33:45.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0171335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:44.910" endtime="20201029 09:33:45.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0171335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:45.202" endtime="20201029 09:33:45.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.210" endtime="20201029 09:33:45.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.908" endtime="20201029 09:33:45.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.906" endtime="20201029 09:33:45.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0005844719999999991}, {'diff': 0.0005839449999999989}, {'diff': 0.0005839440000000029}, {'diff': 0.0005839169999999998}, {'diff': 0.0005839309999999993}, {'diff': 0.0005839299999999999}, {...</msg>
<status status="PASS" starttime="20201029 09:33:45.213" endtime="20201029 09:33:45.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.220" level="INFO">${RESULT} = {'diff': [0.0005844719999999991, 0.0005839449999999989, 0.0005839440000000029, 0.0005839169999999998, 0.0005839309999999993, 0.0005839299999999999, 0.0005839449999999989, 0.0005839580000000025, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:45.217" endtime="20201029 09:33:45.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.224" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.223" endtime="20201029 09:33:45.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.227" level="INFO">VALUE: [0.0005844719999999991, 0.0005839449999999989, 0.0005839440000000029, 0.0005839169999999998, 0.0005839309999999993, 0.0005839299999999999, 0.0005839449999999989, 0.0005839580000000025, 0.0005839310000000028, 0.0005839450000000024, 0.0005839299999999999, 0.0005839589999999985, 0.000583957999999999, 0.0005839299999999999, 0.000583959000000002, 0.0005839440000000029, 0.0005839439999999994, 0.0005839309999999993, 0.0005839439999999994, 0.000583972000000002, 0.000583972000000002, 0.000583957999999999, 0.0005839449999999989, 0.0005839309999999993, 0.0005839440000000029, 0.0005839309999999959, 0.0005839160000000038, 0.000583943999999996, 0.0005839450000000024, 0.0005839299999999964, 0.0005839450000000024, 0.0005839170000000032, 0.000583943999999996, 0.0005839310000000028, 0.000583943999999996, 0.0005839170000000032, 0.0005840140000000008, 0.000583943999999996, 0.0005839450000000024, 0.0005839449999999954, 0.000583959000000002, 0.000583959000000002, 0.0005839029999999967, 0.0005839300000000033, 0.0005839309999999959, 0.0005839440000000029, 0.0005839310000000028, 0.0005839450000000024, 0.0005839300000000033, 0.0005839449999999954]</msg>
<status status="PASS" starttime="20201029 09:33:45.226" endtime="20201029 09:33:45.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.221" endtime="20201029 09:33:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.851" endtime="20201029 09:33:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.829" endtime="20201029 09:33:45.235"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.238" endtime="20201029 09:33:45.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.236" endtime="20201029 09:33:45.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.266" endtime="20201029 09:33:45.308"></status>
</kw>
<msg timestamp="20201029 09:33:45.308" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.264" endtime="20201029 09:33:45.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.311" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.309" endtime="20201029 09:33:45.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.312" endtime="20201029 09:33:45.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.262" endtime="20201029 09:33:45.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.260" endtime="20201029 09:33:45.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.322" endtime="20201029 09:33:45.623"></status>
</kw>
<msg timestamp="20201029 09:33:45.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016636903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017248569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.320" endtime="20201029 09:33:45.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016636903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017248569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.627" endtime="20201029 09:33:45.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.635" endtime="20201029 09:33:45.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.318" endtime="20201029 09:33:45.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.316" endtime="20201029 09:33:45.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.641" level="INFO">${PHILIP_RES} = [{'diff': 0.0006116659999999968}, {'diff': 0.0006111529999999997}, {'diff': 0.0006111529999999997}, {'diff': 0.0006111809999999988}, {'diff': 0.0006111250000000006}, {'diff': 0.0006111379999999972}, {...</msg>
<status status="PASS" starttime="20201029 09:33:45.638" endtime="20201029 09:33:45.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.645" level="INFO">${RESULT} = {'diff': [0.0006116659999999968, 0.0006111529999999997, 0.0006111529999999997, 0.0006111809999999988, 0.0006111250000000006, 0.0006111379999999972, 0.0006111390000000001, 0.000611208000000002, 0.00061...</msg>
<status status="PASS" starttime="20201029 09:33:45.642" endtime="20201029 09:33:45.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.649" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.648" endtime="20201029 09:33:45.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.652" level="INFO">VALUE: [0.0006116659999999968, 0.0006111529999999997, 0.0006111529999999997, 0.0006111809999999988, 0.0006111250000000006, 0.0006111379999999972, 0.0006111390000000001, 0.000611208000000002, 0.0006111249999999971, 0.0006111390000000001, 0.000611096999999998, 0.0006111529999999997, 0.0006111520000000002, 0.0006111250000000006, 0.0006111809999999988, 0.0006111520000000002, 0.0006111249999999971, 0.0006111390000000001, 0.0006111109999999975, 0.0006110970000000014, 0.0006111520000000002, 0.0006111250000000006, 0.0006111809999999954, 0.0006111810000000023, 0.0006111390000000036, 0.0006111249999999971, 0.0006111810000000023, 0.0006111670000000027, 0.0006111529999999962, 0.0006111249999999971, 0.0006111660000000033, 0.0006111389999999967, 0.0006111669999999958, 0.000611125000000004, 0.0006111389999999967, 0.0006111389999999967, 0.0006111670000000027, 0.0006111529999999962, 0.0006111249999999971, 0.0006111390000000036, 0.0006111390000000036, 0.0006111389999999967, 0.000611125000000004, 0.000611125000000004, 0.0006111529999999962, 0.000611096999999998, 0.0006111390000000036, 0.0006111389999999967, 0.000611125000000004, 0.0006111390000000036]</msg>
<status status="PASS" starttime="20201029 09:33:45.650" endtime="20201029 09:33:45.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.646" endtime="20201029 09:33:45.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.258" endtime="20201029 09:33:45.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.236" endtime="20201029 09:33:45.654"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.657" endtime="20201029 09:33:45.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.655" endtime="20201029 09:33:45.676"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.684" endtime="20201029 09:33:45.727"></status>
</kw>
<msg timestamp="20201029 09:33:45.728" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.683" endtime="20201029 09:33:45.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.730" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.729" endtime="20201029 09:33:45.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.731" endtime="20201029 09:33:45.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.680" endtime="20201029 09:33:45.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.679" endtime="20201029 09:33:45.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.740" endtime="20201029 09:33:46.025"></status>
</kw>
<msg timestamp="20201029 09:33:46.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016579306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.738" endtime="20201029 09:33:46.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016579306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.029" endtime="20201029 09:33:46.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.037" endtime="20201029 09:33:46.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.736" endtime="20201029 09:33:46.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.734" endtime="20201029 09:33:46.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.043" level="INFO">${PHILIP_RES} = [{'diff': 0.0006395000000000012}, {'diff': 0.0006389859999999976}, {'diff': 0.000638958000000002}, {'diff': 0.0006389440000000024}, {'diff': 0.0006389439999999989}, {'diff': 0.0006390140000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:46.040" endtime="20201029 09:33:46.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.048" level="INFO">${RESULT} = {'diff': [0.0006395000000000012, 0.0006389859999999976, 0.000638958000000002, 0.0006389440000000024, 0.0006389439999999989, 0.0006390140000000002, 0.0006389860000000011, 0.000638958000000002, 0.000638...</msg>
<status status="PASS" starttime="20201029 09:33:46.044" endtime="20201029 09:33:46.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.052" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.051" endtime="20201029 09:33:46.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.055" level="INFO">VALUE: [0.0006395000000000012, 0.0006389859999999976, 0.000638958000000002, 0.0006389440000000024, 0.0006389439999999989, 0.0006390140000000002, 0.0006389860000000011, 0.000638958000000002, 0.000638958999999998, 0.000638958999999998, 0.0006388890000000001, 0.0006389579999999985, 0.0006389579999999985, 0.000638958000000002, 0.0006389309999999988, 0.0006389579999999985, 0.0006389449999999984, 0.0006389450000000019, 0.0006389860000000011, 0.000638958999999998, 0.0006389299999999994, 0.0006389439999999989, 0.0006389439999999955, 0.0006389440000000024, 0.000638958000000002, 0.000638958000000002, 0.000638973000000001, 0.000638973000000001, 0.0006389439999999955, 0.0006389720000000015, 0.0006389720000000015, 0.0006389440000000024, 0.0006389860000000011, 0.0006390130000000008, 0.0006389590000000014, 0.0006389589999999945, 0.0006389719999999946, 0.000638958000000002, 0.0006389440000000024, 0.0006390000000000007, 0.0006389440000000024, 0.000638958000000002, 0.0006389589999999945, 0.0006389169999999958, 0.0006389450000000019, 0.0006389590000000014, 0.000638958000000002, 0.000638958000000002, 0.000638958000000002, 0.0006389720000000015]</msg>
<status status="PASS" starttime="20201029 09:33:46.053" endtime="20201029 09:33:46.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.049" endtime="20201029 09:33:46.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.677" endtime="20201029 09:33:46.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.655" endtime="20201029 09:33:46.057"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.059" endtime="20201029 09:33:46.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.058" endtime="20201029 09:33:46.079"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.087" endtime="20201029 09:33:46.131"></status>
</kw>
<msg timestamp="20201029 09:33:46.132" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.085" endtime="20201029 09:33:46.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.134" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.133" endtime="20201029 09:33:46.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.135" endtime="20201029 09:33:46.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.083" endtime="20201029 09:33:46.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.081" endtime="20201029 09:33:46.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.144" endtime="20201029 09:33:46.443"></status>
</kw>
<msg timestamp="20201029 09:33:46.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016656528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.142" endtime="20201029 09:33:46.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016656528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.447" endtime="20201029 09:33:46.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.455" endtime="20201029 09:33:46.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.140" endtime="20201029 09:33:46.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.138" endtime="20201029 09:33:46.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.461" level="INFO">${PHILIP_RES} = [{'diff': 0.000667916000000001}, {'diff': 0.0006674309999999996}, {'diff': 0.0006673610000000017}, {'diff': 0.0006673879999999979}, {'diff': 0.000667402999999997}, {'diff': 0.000667417}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:46.458" endtime="20201029 09:33:46.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.465" level="INFO">${RESULT} = {'diff': [0.000667916000000001, 0.0006674309999999996, 0.0006673610000000017, 0.0006673879999999979, 0.000667402999999997, 0.000667417, 0.0006673750000000013, 0.0006673749999999978, 0.0006673609999999...</msg>
<status status="PASS" starttime="20201029 09:33:46.462" endtime="20201029 09:33:46.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.469" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.468" endtime="20201029 09:33:46.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.471" level="INFO">VALUE: [0.000667916000000001, 0.0006674309999999996, 0.0006673610000000017, 0.0006673879999999979, 0.000667402999999997, 0.000667417, 0.0006673750000000013, 0.0006673749999999978, 0.0006673609999999983, 0.0006673750000000013, 0.0006673890000000009, 0.0006673340000000021, 0.0006673330000000026, 0.000667319000000003, 0.0006673609999999983, 0.0006673879999999979, 0.0006673889999999974, 0.0006674030000000004, 0.0006673880000000014, 0.0006673890000000009, 0.0006673890000000009, 0.0006673879999999979, 0.0006674030000000039, 0.0006674300000000036, 0.0006673880000000049, 0.0006674030000000039, 0.0006674720000000023, 0.000667416000000004, 0.0006673890000000043, 0.0006673890000000043, 0.0006673879999999979, 0.0006673889999999974, 0.0006673749999999978, 0.0006673879999999979, 0.000667402999999997, 0.0006673889999999974, 0.0006673879999999979, 0.0006674169999999965, 0.000667319999999999, 0.0006673749999999978, 0.0006673889999999974, 0.0006673889999999974, 0.0006674019999999975, 0.0006673889999999974, 0.0006673749999999978, 0.0006673749999999978, 0.0006673749999999978, 0.0006673750000000048, 0.0006673610000000052, 0.0006673750000000048]</msg>
<status status="PASS" starttime="20201029 09:33:46.470" endtime="20201029 09:33:46.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.466" endtime="20201029 09:33:46.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.079" endtime="20201029 09:33:46.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.057" endtime="20201029 09:33:46.473"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.476" endtime="20201029 09:33:46.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.474" endtime="20201029 09:33:46.496"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.504" endtime="20201029 09:33:46.550"></status>
</kw>
<msg timestamp="20201029 09:33:46.551" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.502" endtime="20201029 09:33:46.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.553" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.552" endtime="20201029 09:33:46.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.555" endtime="20201029 09:33:46.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.500" endtime="20201029 09:33:46.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.498" endtime="20201029 09:33:46.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.566" endtime="20201029 09:33:46.851"></status>
</kw>
<msg timestamp="20201029 09:33:46.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.564" endtime="20201029 09:33:46.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.855" endtime="20201029 09:33:46.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.863" endtime="20201029 09:33:46.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.561" endtime="20201029 09:33:46.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.560" endtime="20201029 09:33:46.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.870" level="INFO">${PHILIP_RES} = [{'diff': 0.0006969590000000005}, {'diff': 0.0006964160000000018}, {'diff': 0.0006964169999999978}, {'diff': 0.0006963749999999991}, {'diff': 0.0006964170000000013}, {'diff': 0.0006964440000000009}, {...</msg>
<status status="PASS" starttime="20201029 09:33:46.867" endtime="20201029 09:33:46.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.874" level="INFO">${RESULT} = {'diff': [0.0006969590000000005, 0.0006964160000000018, 0.0006964169999999978, 0.0006963749999999991, 0.0006964170000000013, 0.0006964440000000009, 0.0006964309999999974, 0.0006964310000000008, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:33:46.871" endtime="20201029 09:33:46.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.878" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.877" endtime="20201029 09:33:46.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.880" level="INFO">VALUE: [0.0006969590000000005, 0.0006964160000000018, 0.0006964169999999978, 0.0006963749999999991, 0.0006964170000000013, 0.0006964440000000009, 0.0006964309999999974, 0.0006964310000000008, 0.0006964440000000009, 0.0006964029999999982, 0.0006964169999999978, 0.0006964170000000013, 0.0006964020000000022, 0.0006964859999999996, 0.0006964019999999987, 0.0006964310000000008, 0.0006964300000000014, 0.0006964029999999982, 0.0006964310000000008, 0.0006964170000000013, 0.0006964029999999982, 0.0006964299999999979, 0.0006964309999999974, 0.0006964440000000044, 0.0006964450000000039, 0.0006964159999999983, 0.0006964309999999974, 0.0006964019999999987, 0.0006964309999999974, 0.000696458000000004, 0.0006963889999999986, 0.0006964170000000047, 0.0006964300000000048, 0.0006964449999999969, 0.0006964589999999965, 0.0006964449999999969, 0.0006963749999999991, 0.0006964169999999978, 0.0006964860000000031, 0.0006964310000000043, 0.0006964159999999983, 0.0006964309999999974, 0.0006964309999999974, 0.0006964169999999978, 0.0006964169999999978, 0.0006964160000000053, 0.0006964450000000039, 0.0006964159999999983, 0.0006964169999999978, 0.0006964029999999982]</msg>
<status status="PASS" starttime="20201029 09:33:46.879" endtime="20201029 09:33:46.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.875" endtime="20201029 09:33:46.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.496" endtime="20201029 09:33:46.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.474" endtime="20201029 09:33:46.883"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.885" endtime="20201029 09:33:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.884" endtime="20201029 09:33:46.905"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.913" endtime="20201029 09:33:46.961"></status>
</kw>
<msg timestamp="20201029 09:33:46.961" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.912" endtime="20201029 09:33:46.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.963" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.962" endtime="20201029 09:33:46.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.965" endtime="20201029 09:33:46.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.909" endtime="20201029 09:33:46.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.907" endtime="20201029 09:33:46.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.974" endtime="20201029 09:33:47.274"></status>
</kw>
<msg timestamp="20201029 09:33:47.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016474778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017201361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.972" endtime="20201029 09:33:47.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016474778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017201361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.278" endtime="20201029 09:33:47.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.285" endtime="20201029 09:33:47.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.969" endtime="20201029 09:33:47.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.968" endtime="20201029 09:33:47.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.292" level="INFO">${PHILIP_RES} = [{'diff': 0.0007265829999999994}, {'diff': 0.0007260839999999984}, {'diff': 0.0007260829999999989}, {'diff': 0.0007260700000000023}, {'diff': 0.0007260829999999989}, {'diff': 0.0007260839999999984}, {...</msg>
<status status="PASS" starttime="20201029 09:33:47.289" endtime="20201029 09:33:47.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.297" level="INFO">${RESULT} = {'diff': [0.0007265829999999994, 0.0007260839999999984, 0.0007260829999999989, 0.0007260700000000023, 0.0007260829999999989, 0.0007260839999999984, 0.0007260690000000028, 0.0007260559999999992, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:47.293" endtime="20201029 09:33:47.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.301" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.300" endtime="20201029 09:33:47.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.303" level="INFO">VALUE: [0.0007265829999999994, 0.0007260839999999984, 0.0007260829999999989, 0.0007260700000000023, 0.0007260829999999989, 0.0007260839999999984, 0.0007260690000000028, 0.0007260559999999992, 0.0007260829999999989, 0.0007260840000000018, 0.0007260689999999993, 0.0007260560000000027, 0.0007260829999999989, 0.0007260839999999984, 0.0007261250000000011, 0.0007260829999999989, 0.0007260829999999989, 0.0007260700000000023, 0.0007260689999999959, 0.000726013999999997, 0.0007260830000000024, 0.0007260970000000019, 0.0007260699999999953, 0.0007260830000000024, 0.0007260700000000023, 0.0007260689999999959, 0.0007261669999999998, 0.0007260830000000024, 0.0007260839999999949, 0.0007260830000000024, 0.0007260700000000023, 0.0007260829999999954, 0.0007260279999999966, 0.0007260830000000024, 0.0007260839999999949, 0.0007260830000000024, 0.0007260840000000018, 0.0007260549999999963, 0.0007260699999999953, 0.0007260830000000024, 0.0007260980000000014, 0.0007260689999999959, 0.0007260830000000024, 0.0007260830000000024, 0.0007260699999999953, 0.0007260970000000019, 0.0007261110000000015, 0.0007260699999999953, 0.0007260690000000028, 0.0007260970000000019]</msg>
<status status="PASS" starttime="20201029 09:33:47.302" endtime="20201029 09:33:47.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.297" endtime="20201029 09:33:47.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.906" endtime="20201029 09:33:47.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.883" endtime="20201029 09:33:47.305"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.308" endtime="20201029 09:33:47.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.306" endtime="20201029 09:33:47.327"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.335" endtime="20201029 09:33:47.385"></status>
</kw>
<msg timestamp="20201029 09:33:47.385" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.334" endtime="20201029 09:33:47.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.388" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.386" endtime="20201029 09:33:47.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.389" endtime="20201029 09:33:47.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.331" endtime="20201029 09:33:47.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.329" endtime="20201029 09:33:47.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.398" endtime="20201029 09:33:47.686"></status>
</kw>
<msg timestamp="20201029 09:33:47.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.396" endtime="20201029 09:33:47.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.690" endtime="20201029 09:33:47.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.698" endtime="20201029 09:33:47.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.393" endtime="20201029 09:33:47.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.392" endtime="20201029 09:33:47.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.704" level="INFO">${PHILIP_RES} = [{'diff': 0.0007568609999999976}, {'diff': 0.000756347000000001}, {'diff': 0.0007563330000000014}, {'diff': 0.0007563200000000013}, {'diff': 0.0007563610000000005}, {'diff': 0.0007563340000000009}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:47.701" endtime="20201029 09:33:47.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.708" level="INFO">${RESULT} = {'diff': [0.0007568609999999976, 0.000756347000000001, 0.0007563330000000014, 0.0007563200000000013, 0.0007563610000000005, 0.0007563340000000009, 0.0007563889999999997, 0.000756347000000001, 0.000756...</msg>
<status status="PASS" starttime="20201029 09:33:47.705" endtime="20201029 09:33:47.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.712" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.711" endtime="20201029 09:33:47.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.715" level="INFO">VALUE: [0.0007568609999999976, 0.000756347000000001, 0.0007563330000000014, 0.0007563200000000013, 0.0007563610000000005, 0.0007563340000000009, 0.0007563889999999997, 0.000756347000000001, 0.0007563330000000014, 0.0007563330000000014, 0.000756362, 0.0007563329999999979, 0.000756347000000001, 0.0007563750000000001, 0.0007563190000000018, 0.0007563480000000004, 0.0007563329999999979, 0.0007563610000000005, 0.0007563609999999971, 0.0007563329999999979, 0.0007563620000000035, 0.0007563469999999975, 0.000756361000000004, 0.0007563469999999975, 0.0007563330000000049, 0.0007563059999999983, 0.0007563049999999988, 0.0007563330000000049, 0.0007563469999999975, 0.0007563470000000044, 0.0007563619999999965, 0.0007562779999999991, 0.0007563329999999979, 0.0007563749999999966, 0.0007563470000000044, 0.0007562919999999987, 0.0007563750000000036, 0.0007563339999999974, 0.0007563469999999975, 0.0007563330000000049, 0.000756347999999997, 0.000756361000000004, 0.0007563469999999975, 0.0007562909999999992, 0.0007563470000000044, 0.0007563609999999971, 0.0007563470000000044, 0.0007563339999999974, 0.0007563329999999979, 0.0007563330000000049]</msg>
<status status="PASS" starttime="20201029 09:33:47.713" endtime="20201029 09:33:47.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.709" endtime="20201029 09:33:47.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.328" endtime="20201029 09:33:47.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.306" endtime="20201029 09:33:47.717"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.719" endtime="20201029 09:33:47.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.718" endtime="20201029 09:33:47.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.747" endtime="20201029 09:33:47.798"></status>
</kw>
<msg timestamp="20201029 09:33:47.798" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.745" endtime="20201029 09:33:47.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.800" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.799" endtime="20201029 09:33:47.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.802" endtime="20201029 09:33:47.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.743" endtime="20201029 09:33:47.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.741" endtime="20201029 09:33:47.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.811" endtime="20201029 09:33:48.110"></status>
</kw>
<msg timestamp="20201029 09:33:48.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016551486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01733925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:47.810" endtime="20201029 09:33:48.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016551486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01733925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:48.114" endtime="20201029 09:33:48.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.122" endtime="20201029 09:33:48.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.807" endtime="20201029 09:33:48.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.806" endtime="20201029 09:33:48.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.128" level="INFO">${PHILIP_RES} = [{'diff': 0.0007877639999999998}, {'diff': 0.0007872220000000006}, {'diff': 0.0007872369999999997}, {'diff': 0.0007872779999999989}, {'diff': 0.0007872220000000006}, {'diff': 0.0007871949999999975}, {...</msg>
<status status="PASS" starttime="20201029 09:33:48.125" endtime="20201029 09:33:48.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.132" level="INFO">${RESULT} = {'diff': [0.0007877639999999998, 0.0007872220000000006, 0.0007872369999999997, 0.0007872779999999989, 0.0007872220000000006, 0.0007871949999999975, 0.0007871810000000014, 0.0007872499999999998, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:48.129" endtime="20201029 09:33:48.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.136" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.135" endtime="20201029 09:33:48.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.139" level="INFO">VALUE: [0.0007877639999999998, 0.0007872220000000006, 0.0007872369999999997, 0.0007872779999999989, 0.0007872220000000006, 0.0007871949999999975, 0.0007871810000000014, 0.0007872499999999998, 0.0007872219999999971, 0.0007872220000000006, 0.0007872220000000006, 0.0007871940000000015, 0.0007872219999999971, 0.0007872220000000006, 0.0007872360000000002, 0.0007872230000000001, 0.0007872220000000006, 0.0007872219999999971, 0.0007872219999999971, 0.0007872219999999971, 0.0007872230000000036, 0.0007872780000000024, 0.0007872220000000041, 0.0007872079999999976, 0.0007872229999999966, 0.0007872219999999971, 0.0007872219999999971, 0.0007872220000000041, 0.0007872360000000037, 0.0007872230000000036, 0.0007872360000000037, 0.0007872640000000028, 0.0007872359999999967, 0.0007871809999999979, 0.0007872220000000041, 0.0007872500000000032, 0.0007872220000000041, 0.0007872229999999966, 0.0007872359999999967, 0.0007872359999999967, 0.0007871389999999992, 0.000787209000000004, 0.0007872360000000037, 0.0007872220000000041, 0.0007872359999999967, 0.0007872219999999971, 0.0007872499999999963, 0.0007872359999999967, 0.0007872220000000041, 0.0007872360000000037]</msg>
<status status="PASS" starttime="20201029 09:33:48.137" endtime="20201029 09:33:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.133" endtime="20201029 09:33:48.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.739" endtime="20201029 09:33:48.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.717" endtime="20201029 09:33:48.141"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.144" endtime="20201029 09:33:48.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.142" endtime="20201029 09:33:48.163"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.171" endtime="20201029 09:33:48.224"></status>
</kw>
<msg timestamp="20201029 09:33:48.225" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.170" endtime="20201029 09:33:48.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.227" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.226" endtime="20201029 09:33:48.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.228" endtime="20201029 09:33:48.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.167" endtime="20201029 09:33:48.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.165" endtime="20201029 09:33:48.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.237" endtime="20201029 09:33:48.523"></status>
</kw>
<msg timestamp="20201029 09:33:48.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016538292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.236" endtime="20201029 09:33:48.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016538292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.527" endtime="20201029 09:33:48.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.535" endtime="20201029 09:33:48.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.233" endtime="20201029 09:33:48.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.231" endtime="20201029 09:33:48.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.541" level="INFO">${PHILIP_RES} = [{'diff': 0.0008192500000000005}, {'diff': 0.0008187220000000009}, {'diff': 0.0008187220000000009}, {'diff': 0.0008187360000000005}, {'diff': 0.0008187080000000013}, {'diff': 0.0008187220000000009}, {...</msg>
<status status="PASS" starttime="20201029 09:33:48.538" endtime="20201029 09:33:48.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.546" level="INFO">${RESULT} = {'diff': [0.0008192500000000005, 0.0008187220000000009, 0.0008187220000000009, 0.0008187360000000005, 0.0008187080000000013, 0.0008187220000000009, 0.0008187779999999992, 0.0008187080000000013, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:48.542" endtime="20201029 09:33:48.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.550" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.549" endtime="20201029 09:33:48.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.552" level="INFO">VALUE: [0.0008192500000000005, 0.0008187220000000009, 0.0008187220000000009, 0.0008187360000000005, 0.0008187080000000013, 0.0008187220000000009, 0.0008187779999999992, 0.0008187080000000013, 0.0008187079999999979, 0.0008187080000000013, 0.0008187079999999979, 0.0008186939999999983, 0.0008186799999999987, 0.0008187079999999979, 0.0008186939999999983, 0.0008187089999999973, 0.0008187089999999973, 0.00081875, 0.0008187230000000004, 0.0008187369999999999, 0.0008186950000000012, 0.00081875, 0.0008187080000000013, 0.0008186810000000017, 0.0008186950000000012, 0.0008187220000000009, 0.0008187080000000013, 0.0008187220000000009, 0.0008187080000000013, 0.00081875, 0.0008187220000000009, 0.0008187079999999944, 0.0008187080000000013, 0.0008187080000000013, 0.0008187080000000013, 0.0008186950000000012, 0.000818639000000003, 0.0008187360000000005, 0.0008187639999999996, 0.0008187360000000005, 0.0008187090000000008, 0.0008187090000000008, 0.0008187220000000009, 0.0008187630000000001, 0.0008187220000000009, 0.00081875, 0.0008187220000000009, 0.0008187220000000009, 0.0008187220000000009, 0.0008186940000000018]</msg>
<status status="PASS" starttime="20201029 09:33:48.551" endtime="20201029 09:33:48.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.547" endtime="20201029 09:33:48.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.164" endtime="20201029 09:33:48.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.142" endtime="20201029 09:33:48.554"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.557" endtime="20201029 09:33:48.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.555" endtime="20201029 09:33:48.576"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.584" endtime="20201029 09:33:48.638"></status>
</kw>
<msg timestamp="20201029 09:33:48.639" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.583" endtime="20201029 09:33:48.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.641" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.640" endtime="20201029 09:33:48.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.642" endtime="20201029 09:33:48.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.580" endtime="20201029 09:33:48.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.578" endtime="20201029 09:33:48.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.651" endtime="20201029 09:33:48.944"></status>
</kw>
<msg timestamp="20201029 09:33:48.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016552528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.650" endtime="20201029 09:33:48.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016552528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.948" endtime="20201029 09:33:48.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.956" endtime="20201029 09:33:48.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.647" endtime="20201029 09:33:48.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.645" endtime="20201029 09:33:48.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.962" level="INFO">${PHILIP_RES} = [{'diff': 0.000851389000000001}, {'diff': 0.0008508059999999991}, {'diff': 0.0008508199999999987}, {'diff': 0.0008508890000000005}, {'diff': 0.0008508199999999987}, {'diff': 0.0008508049999999996}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:48.959" endtime="20201029 09:33:48.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.966" level="INFO">${RESULT} = {'diff': [0.000851389000000001, 0.0008508059999999991, 0.0008508199999999987, 0.0008508890000000005, 0.0008508199999999987, 0.0008508049999999996, 0.0008507919999999995, 0.0008508049999999996, 0.00085...</msg>
<status status="PASS" starttime="20201029 09:33:48.963" endtime="20201029 09:33:48.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.970" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.969" endtime="20201029 09:33:48.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.972" level="INFO">VALUE: [0.000851389000000001, 0.0008508059999999991, 0.0008508199999999987, 0.0008508890000000005, 0.0008508199999999987, 0.0008508049999999996, 0.0008507919999999995, 0.0008508049999999996, 0.0008508190000000027, 0.0008508200000000021, 0.0008508330000000022, 0.0008508340000000017, 0.0008508049999999996, 0.0008508330000000022, 0.0008508330000000022, 0.0008508189999999992, 0.0008508200000000021, 0.0008508049999999961, 0.0008508060000000026, 0.000850792000000003, 0.0008508200000000021, 0.0008508200000000021, 0.0008508189999999957, 0.0008508060000000026, 0.0008508189999999957, 0.0008508200000000021, 0.0008508049999999961, 0.0008508050000000031, 0.0008508620000000008, 0.0008507910000000035, 0.0008508339999999948, 0.0008508190000000027, 0.0008508199999999952, 0.0008508190000000027, 0.0008508469999999949, 0.0008508200000000021, 0.0008508049999999961, 0.000850792000000003, 0.0008508190000000027, 0.0008508470000000018, 0.0008508060000000026, 0.0008508330000000022, 0.0008508200000000021, 0.0008508049999999961, 0.000850792000000003, 0.0008507779999999965, 0.0008508200000000021, 0.0008508199999999952, 0.0008508050000000031, 0.0008508199999999952]</msg>
<status status="PASS" starttime="20201029 09:33:48.971" endtime="20201029 09:33:48.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.967" endtime="20201029 09:33:48.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.577" endtime="20201029 09:33:48.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.555" endtime="20201029 09:33:48.974"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.977" endtime="20201029 09:33:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.975" endtime="20201029 09:33:48.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.005" endtime="20201029 09:33:49.061"></status>
</kw>
<msg timestamp="20201029 09:33:49.062" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.003" endtime="20201029 09:33:49.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.064" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.063" endtime="20201029 09:33:49.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.065" endtime="20201029 09:33:49.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.001" endtime="20201029 09:33:49.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.999" endtime="20201029 09:33:49.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.075" endtime="20201029 09:33:49.360"></status>
</kw>
<msg timestamp="20201029 09:33:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016744458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017628528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.073" endtime="20201029 09:33:49.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016744458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017628528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.364" endtime="20201029 09:33:49.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.372" endtime="20201029 09:33:49.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.071" endtime="20201029 09:33:49.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.069" endtime="20201029 09:33:49.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:49.378" level="INFO">${PHILIP_RES} = [{'diff': 0.0008840700000000007}, {'diff': 0.0008834719999999997}, {'diff': 0.000883542000000001}, {'diff': 0.0008835690000000007}, {'diff': 0.0008834999999999989}, {'diff': 0.0008835410000000016}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:49.375" endtime="20201029 09:33:49.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:49.382" level="INFO">${RESULT} = {'diff': [0.0008840700000000007, 0.0008834719999999997, 0.000883542000000001, 0.0008835690000000007, 0.0008834999999999989, 0.0008835410000000016, 0.0008835140000000019, 0.0008835560000000006, 0.00088...</msg>
<status status="PASS" starttime="20201029 09:33:49.379" endtime="20201029 09:33:49.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.386" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:49.385" endtime="20201029 09:33:49.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.389" level="INFO">VALUE: [0.0008840700000000007, 0.0008834719999999997, 0.000883542000000001, 0.0008835690000000007, 0.0008834999999999989, 0.0008835410000000016, 0.0008835140000000019, 0.0008835560000000006, 0.0008834719999999997, 0.0008835139999999984, 0.0008835419999999976, 0.0008835140000000019, 0.0008835410000000016, 0.000883527999999998, 0.000883527000000002, 0.000883527000000002, 0.0008835140000000019, 0.0008835840000000067, 0.0008834859999999958, 0.000883542000000001, 0.0008835000000000023, 0.0008834720000000032, 0.0008835969999999999, 0.0008835409999999946, 0.0008835410000000016, 0.000883527000000002, 0.0008835280000000015, 0.000883542000000001, 0.0008835419999999941, 0.000883542000000001, 0.0008835000000000023, 0.000883542000000001, 0.0008835280000000015, 0.0008834730000000027, 0.0008835969999999999, 0.000883527000000002, 0.0008835140000000019, 0.0008834720000000032, 0.000883542000000001, 0.000883542000000001, 0.0008835419999999941, 0.0008835000000000023, 0.0008835140000000019, 0.0008835280000000015, 0.0008835000000000023, 0.0008835269999999951, 0.000883513999999995, 0.0008835560000000006, 0.0008835700000000071, 0.0008835280000000084]</msg>
<status status="PASS" starttime="20201029 09:33:49.387" endtime="20201029 09:33:49.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.383" endtime="20201029 09:33:49.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.997" endtime="20201029 09:33:49.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.975" endtime="20201029 09:33:49.391"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:49.394" endtime="20201029 09:33:49.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.392" endtime="20201029 09:33:49.414"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.421" endtime="20201029 09:33:49.479"></status>
</kw>
<msg timestamp="20201029 09:33:49.479" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.420" endtime="20201029 09:33:49.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.482" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.480" endtime="20201029 09:33:49.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.483" endtime="20201029 09:33:49.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.418" endtime="20201029 09:33:49.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.416" endtime="20201029 09:33:49.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.492" endtime="20201029 09:33:49.791"></status>
</kw>
<msg timestamp="20201029 09:33:49.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017523514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.490" endtime="20201029 09:33:49.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017523514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.795" endtime="20201029 09:33:49.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.803" endtime="20201029 09:33:49.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.488" endtime="20201029 09:33:49.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.486" endtime="20201029 09:33:49.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:49.809" level="INFO">${PHILIP_RES} = [{'diff': 0.0009173750000000015}, {'diff': 0.0009168470000000019}, {'diff': 0.000916875000000001}, {'diff': 0.0009168610000000015}, {'diff': 0.0009168199999999987}, {'diff': 0.0009168469999999984}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:49.806" endtime="20201029 09:33:49.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:49.814" level="INFO">${RESULT} = {'diff': [0.0009173750000000015, 0.0009168470000000019, 0.000916875000000001, 0.0009168610000000015, 0.0009168199999999987, 0.0009168469999999984, 0.000916860999999998, 0.000916860999999998, 0.0009168...</msg>
<status status="PASS" starttime="20201029 09:33:49.810" endtime="20201029 09:33:49.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.818" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:49.817" endtime="20201029 09:33:49.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.821" level="INFO">VALUE: [0.0009173750000000015, 0.0009168470000000019, 0.000916875000000001, 0.0009168610000000015, 0.0009168199999999987, 0.0009168469999999984, 0.000916860999999998, 0.000916860999999998, 0.0009168060000000026, 0.0009168469999999984, 0.0009168610000000015, 0.0009168890000000006, 0.0009168189999999993, 0.0009169169999999997, 0.0009168620000000009, 0.0009168610000000049, 0.0009168749999999976, 0.0009168750000000045, 0.0009168189999999993, 0.0009168329999999988, 0.0009168889999999971, 0.0009168610000000049, 0.0009168749999999976, 0.000916860999999998, 0.0009168469999999984, 0.000916860999999998, 0.000916860999999998, 0.0009169159999999968, 0.0009168049999999997, 0.0009168749999999976, 0.0009168330000000058, 0.0009168619999999975, 0.0009168610000000049, 0.0009168059999999992, 0.0009168750000000045, 0.0009168889999999971, 0.0009168469999999984, 0.0009168469999999984, 0.000916860999999998, 0.0009168890000000041, 0.0009169439999999959, 0.0009168750000000045, 0.0009168469999999984, 0.0009168470000000054, 0.0009168479999999979, 0.0009168750000000045, 0.0009168750000000045, 0.0009168330000000058, 0.000916860999999991, 0.000916860999999991]</msg>
<status status="PASS" starttime="20201029 09:33:49.819" endtime="20201029 09:33:49.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.815" endtime="20201029 09:33:49.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.414" endtime="20201029 09:33:49.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.392" endtime="20201029 09:33:49.822"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:49.825" endtime="20201029 09:33:49.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.823" endtime="20201029 09:33:49.845"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.853" endtime="20201029 09:33:49.912"></status>
</kw>
<msg timestamp="20201029 09:33:49.913" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.851" endtime="20201029 09:33:49.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.915" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.914" endtime="20201029 09:33:49.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.916" endtime="20201029 09:33:49.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.849" endtime="20201029 09:33:49.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.847" endtime="20201029 09:33:49.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.925" endtime="20201029 09:33:50.211"></status>
</kw>
<msg timestamp="20201029 09:33:50.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017431958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.923" endtime="20201029 09:33:50.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017431958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.215" endtime="20201029 09:33:50.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.223" endtime="20201029 09:33:50.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.921" endtime="20201029 09:33:50.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.919" endtime="20201029 09:33:50.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:50.229" level="INFO">${PHILIP_RES} = [{'diff': 0.0009513190000000026}, {'diff': 0.0009507769999999999}, {'diff': 0.0009508189999999986}, {'diff': 0.000950806000000002}, {'diff': 0.0009508200000000015}, {'diff': 0.0009507500000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:50.226" endtime="20201029 09:33:50.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:50.233" level="INFO">${RESULT} = {'diff': [0.0009513190000000026, 0.0009507769999999999, 0.0009508189999999986, 0.000950806000000002, 0.0009508200000000015, 0.0009507500000000002, 0.0009507909999999994, 0.0009508470000000012, 0.00095...</msg>
<status status="PASS" starttime="20201029 09:33:50.230" endtime="20201029 09:33:50.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.238" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:50.237" endtime="20201029 09:33:50.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.240" level="INFO">VALUE: [0.0009513190000000026, 0.0009507769999999999, 0.0009508189999999986, 0.000950806000000002, 0.0009508200000000015, 0.0009507500000000002, 0.0009507909999999994, 0.0009508470000000012, 0.0009508050000000025, 0.0009508059999999985, 0.0009507919999999989, 0.0009508059999999985, 0.0009508200000000015, 0.0009507909999999994, 0.000950804999999999, 0.0009508189999999986, 0.0009508059999999985, 0.0009508059999999985, 0.000950820000000005, 0.0009507360000000006, 0.0009508189999999986, 0.000950804999999999, 0.0009508469999999977, 0.000950820000000005, 0.0009508059999999985, 0.0009507919999999989, 0.000950804999999999, 0.000950804999999999, 0.0009507909999999994, 0.0009508189999999986, 0.0009508199999999981, 0.0009507920000000059, 0.0009508059999999985, 0.000950804999999999, 0.0009507909999999994, 0.0009507909999999994, 0.000950804999999999, 0.0009507779999999993, 0.0009507919999999989, 0.0009508060000000054, 0.0009507779999999993, 0.0009507779999999993, 0.000950804999999999, 0.0009507919999999989, 0.0009507780000000063, 0.0009507920000000059, 0.0009507360000000076, 0.0009507910000000064, 0.0009508329999999982, 0.0009507629999999934]</msg>
<status status="PASS" starttime="20201029 09:33:50.239" endtime="20201029 09:33:50.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.234" endtime="20201029 09:33:50.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.845" endtime="20201029 09:33:50.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.823" endtime="20201029 09:33:50.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.641" endtime="20201029 09:33:50.251"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:27.525" endtime="20201029 09:33:50.252" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:05.869" endtime="20201029 09:33:50.260"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:01.430" endtime="20201029 09:33:50.292"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
