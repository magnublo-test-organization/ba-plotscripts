<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:30:53.086" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.728" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:53.736" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:54.916" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:53.727" endtime="20201030 18:30:54.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.920" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:30:54.918" endtime="20201030 18:30:55.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.725" endtime="20201030 18:30:55.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.927" endtime="20201030 18:30:56.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.924" endtime="20201030 18:30:56.162"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.175" endtime="20201030 18:30:56.195"></status>
</kw>
<msg timestamp="20201030 18:30:56.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.173" endtime="20201030 18:30:56.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.197" endtime="20201030 18:30:56.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:56.201" endtime="20201030 18:30:56.204"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:56.171" endtime="20201030 18:30:56.205"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:56.169" endtime="20201030 18:30:56.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.167" endtime="20201030 18:30:56.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:56.212" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:56.211" endtime="20201030 18:30:56.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.207" endtime="20201030 18:30:56.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.166" endtime="20201030 18:30:56.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.166" endtime="20201030 18:30:56.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.213" endtime="20201030 18:30:56.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.164" endtime="20201030 18:30:56.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.216" endtime="20201030 18:30:56.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.163" endtime="20201030 18:30:56.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.724" endtime="20201030 18:30:56.219"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.225" endtime="20201030 18:30:56.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.223" endtime="20201030 18:30:56.245"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.258" endtime="20201030 18:30:56.276"></status>
</kw>
<msg timestamp="20201030 18:30:56.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.256" endtime="20201030 18:30:56.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.277" endtime="20201030 18:30:56.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:56.280" endtime="20201030 18:30:56.282"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:56.254" endtime="20201030 18:30:56.283"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:56.251" endtime="20201030 18:30:56.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.250" endtime="20201030 18:30:56.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:56.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:56.286" endtime="20201030 18:30:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.284" endtime="20201030 18:30:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.249" endtime="20201030 18:30:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.248" endtime="20201030 18:30:56.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.289" endtime="20201030 18:30:56.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.247" endtime="20201030 18:30:56.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.245" endtime="20201030 18:30:56.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.222" endtime="20201030 18:30:56.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.299" endtime="20201030 18:30:56.312"></status>
</kw>
<msg timestamp="20201030 18:30:56.313" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.296" endtime="20201030 18:30:56.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.315" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.314" endtime="20201030 18:30:56.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.316" endtime="20201030 18:30:56.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.294" endtime="20201030 18:30:56.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.292" endtime="20201030 18:30:56.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.323" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:30:56.321" endtime="20201030 18:30:56.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.325" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:30:56.324" endtime="20201030 18:30:56.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.319" endtime="20201030 18:30:56.325"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:56.219" endtime="20201030 18:30:56.326" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:53.235" endtime="20201030 18:30:56.328"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.381" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:56.389" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:57.446" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:56.380" endtime="20201030 18:30:57.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.450" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:30:57.448" endtime="20201030 18:30:58.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.379" endtime="20201030 18:30:58.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.456" endtime="20201030 18:30:58.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.453" endtime="20201030 18:30:58.724"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.737" endtime="20201030 18:30:58.757"></status>
</kw>
<msg timestamp="20201030 18:30:58.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.735" endtime="20201030 18:30:58.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.758" endtime="20201030 18:30:58.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.763" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:58.761" endtime="20201030 18:30:58.763"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.733" endtime="20201030 18:30:58.764"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.731" endtime="20201030 18:30:58.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.729" endtime="20201030 18:30:58.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:58.768" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:58.768" endtime="20201030 18:30:58.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.765" endtime="20201030 18:30:58.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.729" endtime="20201030 18:30:58.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.728" endtime="20201030 18:30:58.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.770" endtime="20201030 18:30:58.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.727" endtime="20201030 18:30:58.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.773" endtime="20201030 18:30:58.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.725" endtime="20201030 18:30:58.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.378" endtime="20201030 18:30:58.775"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.781" endtime="20201030 18:30:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.779" endtime="20201030 18:30:58.801"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.814" endtime="20201030 18:30:58.832"></status>
</kw>
<msg timestamp="20201030 18:30:58.833" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.813" endtime="20201030 18:30:58.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.836" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.834" endtime="20201030 18:30:58.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.839" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:58.837" endtime="20201030 18:30:58.839"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.810" endtime="20201030 18:30:58.840"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.808" endtime="20201030 18:30:58.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.806" endtime="20201030 18:30:58.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:58.844" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:58.844" endtime="20201030 18:30:58.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.841" endtime="20201030 18:30:58.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.806" endtime="20201030 18:30:58.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.805" endtime="20201030 18:30:58.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.846" endtime="20201030 18:30:58.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.804" endtime="20201030 18:30:58.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.802" endtime="20201030 18:30:58.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.778" endtime="20201030 18:30:58.849"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.857" endtime="20201030 18:30:58.872"></status>
</kw>
<msg timestamp="20201030 18:30:58.873" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.855" endtime="20201030 18:30:58.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.874" endtime="20201030 18:30:58.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.876" endtime="20201030 18:30:58.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.853" endtime="20201030 18:30:58.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.851" endtime="20201030 18:30:58.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.885" endtime="20201030 18:30:59.156"></status>
</kw>
<msg timestamp="20201030 18:30:59.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065440236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.884" endtime="20201030 18:30:59.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065440236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.159" endtime="20201030 18:30:59.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.165" endtime="20201030 18:30:59.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.881" endtime="20201030 18:30:59.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.879" endtime="20201030 18:30:59.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:59.181" level="INFO">${debug} = {'time': [0.065434764, 0.065440236, 0.065446264, 0.065452347, 0.065457917, 0.065463139, 0.065469167, 0.065474444, 0.065478903, 0.065485194, 0.065489944, 0.065495056, 0.065501083, 0.065506222, 0.065512...</msg>
<status status="PASS" starttime="20201030 18:30:59.168" endtime="20201030 18:30:59.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.182" endtime="20201030 18:30:59.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.187" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:59.186" endtime="20201030 18:30:59.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.190" level="INFO">VALUE: {'time': [0.065434764, 0.065440236, 0.065446264, 0.065452347, 0.065457917, 0.065463139, 0.065469167, 0.065474444, 0.065478903, 0.065485194, 0.065489944, 0.065495056, 0.065501083, 0.065506222, 0.065512111, 0.065518222, 0.065523917, 0.065528569, 0.065533903, 0.065539972, 0.065546139, 0.065551, 0.065555444, 0.065560542, 0.065565306, 0.065570153, 0.065574625, 0.065580694, 0.065586972, 0.065593319, 0.065598583, 0.065603486, 0.065609389, 0.065613931, 0.065619819, 0.065625208, 0.065631347, 0.065636889, 0.065642722, 0.065647833, 0.06565325, 0.065659181, 0.065664708, 0.065669667, 0.065675847, 0.065681611, 0.065686375, 0.065692264, 0.065698361, 0.065704694], 'sourceeventsource_diff': [0, 5.471999999992483e-06, 6.02800000000514e-06, 6.0829999999900686e-06, 5.570000000010289e-06, 5.221999999999172e-06, 6.0279999999912626e-06, 5.2770000000118555e-06, 4.458999999998325e-06, 6.290999999991609e-06, 4.7499999999978115e-06, 5.11200000000156e-06, 6.027000000005667e-06, 5.139000000001226e-06, 5.888999999995037e-06, 6.111000000003086e-06, 5.695000000000006e-06, 4.651999999993883e-06, 5.334000000009609e-06, 6.0689999999974376e-06, 6.167000000001366e-06, 4.860999999994897e-06, 4.444000000006221e-06, 5.097999999995051e-06, 4.76400000000432e-06, 4.847000000002266e-06, 4.471999999991483e-06, 6.0689999999974376e-06, 6.2779999999984515e-06, 6.347000000003766e-06, 5.26400000000482e-06, 4.903000000000546e-06, 5.903000000001546e-06, 4.541999999996271e-06, 5.8879999999955634e-06, 5.389000000008415e-06, 6.139000000002226e-06, 5.541999999997271e-06, 5.8329999999967574e-06, 5.111000000002086e-06, 5.416999999993677e-06, 5.931000000000686e-06, 5.527000000005167e-06, 4.9589999999988255e-06, 6.179999999994523e-06, 5.76400000000532e-06, 4.76400000000432e-06, 5.888999999995037e-06, 6.096999999996577e-06, 6.3329999999972575e-06], 'diff': [0, 5.471999999992483e-06, 6.02800000000514e-06, 6.0829999999900686e-06, 5.570000000010289e-06, 5.221999999999172e-06, 6.0279999999912626e-06, 5.2770000000118555e-06, 4.458999999998325e-06, 6.290999999991609e-06, 4.7499999999978115e-06, 5.11200000000156e-06, 6.027000000005667e-06, 5.139000000001226e-06, 5.888999999995037e-06, 6.111000000003086e-06, 5.695000000000006e-06, 4.651999999993883e-06, 5.334000000009609e-06, 6.0689999999974376e-06, 6.167000000001366e-06, 4.860999999994897e-06, 4.444000000006221e-06, 5.097999999995051e-06, 4.76400000000432e-06, 4.847000000002266e-06, 4.471999999991483e-06, 6.0689999999974376e-06, 6.2779999999984515e-06, 6.347000000003766e-06, 5.26400000000482e-06, 4.903000000000546e-06, 5.903000000001546e-06, 4.541999999996271e-06, 5.8879999999955634e-06, 5.389000000008415e-06, 6.139000000002226e-06, 5.541999999997271e-06, 5.8329999999967574e-06, 5.111000000002086e-06, 5.416999999993677e-06, 5.931000000000686e-06, 5.527000000005167e-06, 4.9589999999988255e-06, 6.179999999994523e-06, 5.76400000000532e-06, 4.76400000000432e-06, 5.888999999995037e-06, 6.096999999996577e-06, 6.3329999999972575e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:59.188" endtime="20201030 18:30:59.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.184" endtime="20201030 18:30:59.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.197" level="INFO">${RESULT} = [{'diff': 5.471999999992483e-06}, {'diff': 6.0829999999900686e-06}, {'diff': 5.221999999999172e-06}, {'diff': 5.2770000000118555e-06}, {'diff': 6.290999999991609e-06}, {'diff': 5.11200000000156e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:59.192" endtime="20201030 18:30:59.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:59.201" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.471999999992483e-06, 6.0829999999900686e-06, 5.221999999999172e-06, 5.2770000000118555e-06, 6.290999999991609e-06, 5.11200000000156e-06, 5.139000000001226e-06, 6.111000000003086e-06, 4.651...</msg>
<status status="PASS" starttime="20201030 18:30:59.198" endtime="20201030 18:30:59.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.206" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:59.205" endtime="20201030 18:30:59.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.208" level="INFO">VALUE: [5.471999999992483e-06, 6.0829999999900686e-06, 5.221999999999172e-06, 5.2770000000118555e-06, 6.290999999991609e-06, 5.11200000000156e-06, 5.139000000001226e-06, 6.111000000003086e-06, 4.651999999993883e-06, 6.0689999999974376e-06, 4.860999999994897e-06, 5.097999999995051e-06, 4.847000000002266e-06, 6.0689999999974376e-06, 6.347000000003766e-06, 4.903000000000546e-06, 4.541999999996271e-06, 5.389000000008415e-06, 5.541999999997271e-06, 5.111000000002086e-06, 5.931000000000686e-06, 4.9589999999988255e-06, 5.76400000000532e-06, 5.888999999995037e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201030 18:30:59.207" endtime="20201030 18:30:59.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.202" endtime="20201030 18:30:59.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.216" endtime="20201030 18:30:59.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.214" endtime="20201030 18:30:59.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.212" endtime="20201030 18:30:59.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.850" endtime="20201030 18:30:59.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.850" endtime="20201030 18:30:59.237"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.245" endtime="20201030 18:30:59.260"></status>
</kw>
<msg timestamp="20201030 18:30:59.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.244" endtime="20201030 18:30:59.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.261" endtime="20201030 18:30:59.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.264" endtime="20201030 18:30:59.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.241" endtime="20201030 18:30:59.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.240" endtime="20201030 18:30:59.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.273" endtime="20201030 18:30:59.559"></status>
</kw>
<msg timestamp="20201030 18:30:59.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017979181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.271" endtime="20201030 18:30:59.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017979181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.563" endtime="20201030 18:30:59.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.570" endtime="20201030 18:30:59.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.269" endtime="20201030 18:30:59.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.267" endtime="20201030 18:30:59.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:59.587" level="INFO">${debug} = {'time': [0.017973917, 0.017979181, 0.017985014, 0.017989556, 0.017995069, 0.018000278, 0.018004778, 0.018010833, 0.018015542, 0.018021278, 0.018027472, 0.018032569, 0.018037208, 0.018042542, 0.018048...</msg>
<status status="PASS" starttime="20201030 18:30:59.574" endtime="20201030 18:30:59.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.588" endtime="20201030 18:30:59.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.593" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:59.592" endtime="20201030 18:30:59.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.596" level="INFO">VALUE: {'time': [0.017973917, 0.017979181, 0.017985014, 0.017989556, 0.017995069, 0.018000278, 0.018004778, 0.018010833, 0.018015542, 0.018021278, 0.018027472, 0.018032569, 0.018037208, 0.018042542, 0.018048486, 0.018053972, 0.018059139, 0.018064403, 0.018070181, 0.018075458, 0.018080111, 0.018085569, 0.018090278, 0.018096056, 0.018100625, 0.018106972, 0.018112292, 0.018116778, 0.018121556, 0.018127889, 0.018132486, 0.018138069, 0.018143778, 0.018148375, 0.018152764, 0.018158306, 0.018163194, 0.018168347, 0.018174667, 0.018180708, 0.018185708, 0.018191639, 0.018196361, 0.018201431, 0.018206333, 0.018211681, 0.018216514, 0.018222542, 0.018227389, 0.018233403], 'sourceeventsource_diff': [0, 5.264000000001351e-06, 5.833000000000227e-06, 4.541999999999741e-06, 5.512999999998658e-06, 5.209000000002545e-06, 4.4999999999975615e-06, 6.055000000001337e-06, 4.7089999999985754e-06, 5.736000000002711e-06, 6.1939999999975626e-06, 5.096999999999047e-06, 4.639000000000726e-06, 5.33400000000267e-06, 5.9439999999973125e-06, 5.486000000002461e-06, 5.166999999996896e-06, 5.264000000001351e-06, 5.778000000001421e-06, 5.276999999997978e-06, 4.653000000000296e-06, 5.457999999999852e-06, 4.709000000002045e-06, 5.7779999999979514e-06, 4.568999999999407e-06, 6.347000000000297e-06, 5.319999999999631e-06, 4.486000000001461e-06, 4.778000000000421e-06, 6.333000000000727e-06, 4.596999999998547e-06, 5.582999999999977e-06, 5.7089999999995755e-06, 4.597000000002016e-06, 4.388999999997006e-06, 5.542000000000741e-06, 4.888000000001502e-06, 5.153000000000796e-06, 6.319999999997161e-06, 6.041000000001767e-06, 4.9999999999980616e-06, 5.931000000000686e-06, 4.722000000002141e-06, 5.0699999999993806e-06, 4.902000000001072e-06, 5.34799999999877e-06, 4.832999999999227e-06, 6.028000000001671e-06, 4.846999999998797e-06, 6.0139999999986316e-06], 'diff': [0, 5.264000000001351e-06, 5.833000000000227e-06, 4.541999999999741e-06, 5.512999999998658e-06, 5.209000000002545e-06, 4.4999999999975615e-06, 6.055000000001337e-06, 4.7089999999985754e-06, 5.736000000002711e-06, 6.1939999999975626e-06, 5.096999999999047e-06, 4.639000000000726e-06, 5.33400000000267e-06, 5.9439999999973125e-06, 5.486000000002461e-06, 5.166999999996896e-06, 5.264000000001351e-06, 5.778000000001421e-06, 5.276999999997978e-06, 4.653000000000296e-06, 5.457999999999852e-06, 4.709000000002045e-06, 5.7779999999979514e-06, 4.568999999999407e-06, 6.347000000000297e-06, 5.319999999999631e-06, 4.486000000001461e-06, 4.778000000000421e-06, 6.333000000000727e-06, 4.596999999998547e-06, 5.582999999999977e-06, 5.7089999999995755e-06, 4.597000000002016e-06, 4.388999999997006e-06, 5.542000000000741e-06, 4.888000000001502e-06, 5.153000000000796e-06, 6.319999999997161e-06, 6.041000000001767e-06, 4.9999999999980616e-06, 5.931000000000686e-06, 4.722000000002141e-06, 5.0699999999993806e-06, 4.902000000001072e-06, 5.34799999999877e-06, 4.832999999999227e-06, 6.028000000001671e-06, 4.846999999998797e-06, 6.0139999999986316e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:59.594" endtime="20201030 18:30:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.590" endtime="20201030 18:30:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.601" level="INFO">${RESULT} = [{'diff': 5.264000000001351e-06}, {'diff': 4.541999999999741e-06}, {'diff': 5.209000000002545e-06}, {'diff': 6.055000000001337e-06}, {'diff': 5.736000000002711e-06}, {'diff': 5.096999999999047e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:59.598" endtime="20201030 18:30:59.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:59.605" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.264000000001351e-06, 4.541999999999741e-06, 5.209000000002545e-06, 6.055000000001337e-06, 5.736000000002711e-06, 5.096999999999047e-06, 5.33400000000267e-06, 5.486000000002461e-06, 5.26400...</msg>
<status status="PASS" starttime="20201030 18:30:59.602" endtime="20201030 18:30:59.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.609" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:59.608" endtime="20201030 18:30:59.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.611" level="INFO">VALUE: [5.264000000001351e-06, 4.541999999999741e-06, 5.209000000002545e-06, 6.055000000001337e-06, 5.736000000002711e-06, 5.096999999999047e-06, 5.33400000000267e-06, 5.486000000002461e-06, 5.264000000001351e-06, 5.276999999997978e-06, 5.457999999999852e-06, 5.7779999999979514e-06, 6.347000000000297e-06, 4.486000000001461e-06, 6.333000000000727e-06, 5.582999999999977e-06, 4.597000000002016e-06, 5.542000000000741e-06, 5.153000000000796e-06, 6.041000000001767e-06, 5.931000000000686e-06, 5.0699999999993806e-06, 5.34799999999877e-06, 6.028000000001671e-06, 6.0139999999986316e-06]</msg>
<status status="PASS" starttime="20201030 18:30:59.610" endtime="20201030 18:30:59.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.605" endtime="20201030 18:30:59.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.616" endtime="20201030 18:30:59.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.614" endtime="20201030 18:30:59.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.613" endtime="20201030 18:30:59.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.238" endtime="20201030 18:30:59.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.238" endtime="20201030 18:30:59.636"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.644" endtime="20201030 18:30:59.659"></status>
</kw>
<msg timestamp="20201030 18:30:59.659" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.643" endtime="20201030 18:30:59.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.661" endtime="20201030 18:30:59.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.663" endtime="20201030 18:30:59.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.640" endtime="20201030 18:30:59.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.638" endtime="20201030 18:30:59.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.672" endtime="20201030 18:30:59.940"></status>
</kw>
<msg timestamp="20201030 18:30:59.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017559472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.670" endtime="20201030 18:30:59.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017559472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.944" endtime="20201030 18:30:59.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.958" endtime="20201030 18:30:59.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.668" endtime="20201030 18:30:59.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.666" endtime="20201030 18:30:59.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:59.984" level="INFO">${debug} = {'time': [0.017554472, 0.017559472, 0.017565569, 0.017571903, 0.017576681, 0.017582208, 0.017587736, 0.017593208, 0.017597597, 0.017603875, 0.017609028, 0.017615125, 0.017620944, 0.017627153, 0.017632...</msg>
<status status="PASS" starttime="20201030 18:30:59.967" endtime="20201030 18:30:59.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.985" endtime="20201030 18:30:59.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.990" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:59.989" endtime="20201030 18:30:59.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.993" level="INFO">VALUE: {'time': [0.017554472, 0.017559472, 0.017565569, 0.017571903, 0.017576681, 0.017582208, 0.017587736, 0.017593208, 0.017597597, 0.017603875, 0.017609028, 0.017615125, 0.017620944, 0.017627153, 0.017632431, 0.017637917, 0.017643111, 0.017648194, 0.017653042, 0.017658194, 0.017663472, 0.017668486, 0.017672833, 0.017678097, 0.017683819, 0.017689986, 0.017694431, 0.017700458, 0.017706292, 0.017711069, 0.017716847, 0.017722806, 0.017727458, 0.017732042, 0.0177365, 0.017742028, 0.017746764, 0.017753014, 0.017758431, 0.017764569, 0.017769278, 0.017774139, 0.017780333, 0.017786236, 0.017792569, 0.017797792, 0.017803347, 0.017808083, 0.017814236, 0.017820319], 'sourceeventsource_diff': [0, 4.9999999999980616e-06, 6.097000000000047e-06, 6.334000000000201e-06, 4.778000000000421e-06, 5.526999999998228e-06, 5.528000000001171e-06, 5.471999999999422e-06, 4.389000000000476e-06, 6.278000000001921e-06, 5.152999999997326e-06, 6.097000000000047e-06, 5.819000000000657e-06, 6.2090000000000756e-06, 5.278000000000921e-06, 5.485999999998992e-06, 5.194000000000032e-06, 5.082999999999477e-06, 4.84800000000174e-06, 5.151999999997853e-06, 5.278000000000921e-06, 5.014000000001101e-06, 4.346999999998297e-06, 5.264000000001351e-06, 5.721999999999672e-06, 6.167000000001366e-06, 4.4449999999987555e-06, 6.026999999998728e-06, 5.8339999999997005e-06, 4.777000000000947e-06, 5.778000000001421e-06, 5.9589999999998255e-06, 4.652000000000822e-06, 4.5839999999984504e-06, 4.457999999998852e-06, 5.528000000001171e-06, 4.736000000001711e-06, 6.249999999999312e-06, 5.417000000000616e-06, 6.137999999999283e-06, 4.7089999999985754e-06, 4.861000000001836e-06, 6.1939999999975626e-06, 5.903000000001546e-06, 6.333000000000727e-06, 5.222999999998645e-06, 5.555000000000837e-06, 4.735999999998242e-06, 6.153000000001796e-06, 6.083000000000477e-06], 'diff': [0, 4.9999999999980616e-06, 6.097000000000047e-06, 6.334000000000201e-06, 4.778000000000421e-06, 5.526999999998228e-06, 5.528000000001171e-06, 5.471999999999422e-06, 4.389000000000476e-06, 6.278000000001921e-06, 5.152999999997326e-06, 6.097000000000047e-06, 5.819000000000657e-06, 6.2090000000000756e-06, 5.278000000000921e-06, 5.485999999998992e-06, 5.194000000000032e-06, 5.082999999999477e-06, 4.84800000000174e-06, 5.151999999997853e-06, 5.278000000000921e-06, 5.014000000001101e-06, 4.346999999998297e-06, 5.264000000001351e-06, 5.721999999999672e-06, 6.167000000001366e-06, 4.4449999999987555e-06, 6.026999999998728e-06, 5.8339999999997005e-06, 4.777000000000947e-06, 5.778000000001421e-06, 5.9589999999998255e-06, 4.652000000000822e-06, 4.5839999999984504e-06, 4.457999999998852e-06, 5.528000000001171e-06, 4.736000000001711e-06, 6.249999999999312e-06, 5.417000000000616e-06, 6.137999999999283e-06, 4.7089999999985754e-06, 4.861000000001836e-06, 6.1939999999975626e-06, 5.903000000001546e-06, 6.333000000000727e-06, 5.222999999998645e-06, 5.555000000000837e-06, 4.735999999998242e-06, 6.153000000001796e-06, 6.083000000000477e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:59.991" endtime="20201030 18:30:59.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.987" endtime="20201030 18:30:59.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.998" level="INFO">${RESULT} = [{'diff': 4.9999999999980616e-06}, {'diff': 6.334000000000201e-06}, {'diff': 5.526999999998228e-06}, {'diff': 5.471999999999422e-06}, {'diff': 6.278000000001921e-06}, {'diff': 6.097000000000047e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:59.995" endtime="20201030 18:30:59.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:00.001" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.9999999999980616e-06, 6.334000000000201e-06, 5.526999999998228e-06, 5.471999999999422e-06, 6.278000000001921e-06, 6.097000000000047e-06, 6.2090000000000756e-06, 5.485999999998992e-06, 5.08...</msg>
<status status="PASS" starttime="20201030 18:30:59.999" endtime="20201030 18:31:00.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.005" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:00.004" endtime="20201030 18:31:00.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.007" level="INFO">VALUE: [4.9999999999980616e-06, 6.334000000000201e-06, 5.526999999998228e-06, 5.471999999999422e-06, 6.278000000001921e-06, 6.097000000000047e-06, 6.2090000000000756e-06, 5.485999999998992e-06, 5.082999999999477e-06, 5.151999999997853e-06, 5.014000000001101e-06, 5.264000000001351e-06, 6.167000000001366e-06, 6.026999999998728e-06, 4.777000000000947e-06, 5.9589999999998255e-06, 4.5839999999984504e-06, 5.528000000001171e-06, 6.249999999999312e-06, 6.137999999999283e-06, 4.861000000001836e-06, 5.903000000001546e-06, 5.222999999998645e-06, 4.735999999998242e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201030 18:31:00.006" endtime="20201030 18:31:00.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.002" endtime="20201030 18:31:00.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.012" endtime="20201030 18:31:00.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.011" endtime="20201030 18:31:00.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.010" endtime="20201030 18:31:00.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.637" endtime="20201030 18:31:00.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.637" endtime="20201030 18:31:00.033"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.041" endtime="20201030 18:31:00.056"></status>
</kw>
<msg timestamp="20201030 18:31:00.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.039" endtime="20201030 18:31:00.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.057" endtime="20201030 18:31:00.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.060" endtime="20201030 18:31:00.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.037" endtime="20201030 18:31:00.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.035" endtime="20201030 18:31:00.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.070" endtime="20201030 18:31:00.355"></status>
</kw>
<msg timestamp="20201030 18:31:00.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.067" endtime="20201030 18:31:00.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.358" endtime="20201030 18:31:00.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.364" endtime="20201030 18:31:00.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.065" endtime="20201030 18:31:00.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.063" endtime="20201030 18:31:00.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:00.380" level="INFO">${debug} = {'time': [0.017486958, 0.017491333, 0.017496611, 0.017502861, 0.017508361, 0.017513931, 0.017519972, 0.017526306, 0.017532569, 0.017537847, 0.017542306, 0.017547153, 0.017553486, 0.017558264, 0.017563...</msg>
<status status="PASS" starttime="20201030 18:31:00.367" endtime="20201030 18:31:00.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.381" endtime="20201030 18:31:00.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.386" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:00.385" endtime="20201030 18:31:00.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.390" level="INFO">VALUE: {'time': [0.017486958, 0.017491333, 0.017496611, 0.017502861, 0.017508361, 0.017513931, 0.017519972, 0.017526306, 0.017532569, 0.017537847, 0.017542306, 0.017547153, 0.017553486, 0.017558264, 0.017563167, 0.01756825, 0.017573208, 0.017578611, 0.017584889, 0.017589792, 0.017594889, 0.017600903, 0.017605944, 0.017611917, 0.017617292, 0.017623514, 0.017628292, 0.017632806, 0.017638833, 0.017644542, 0.017650153, 0.017656278, 0.01766125, 0.017665708, 0.017670806, 0.017675944, 0.017681667, 0.017687639, 0.017693972, 0.017698875, 0.017704014, 0.017708722, 0.017714333, 0.017719347, 0.017725486, 0.017731139, 0.017736111, 0.017741639, 0.017746278, 0.017750861], 'sourceeventsource_diff': [0, 4.375000000000906e-06, 5.277999999997451e-06, 6.250000000002781e-06, 5.499999999998562e-06, 5.569999999999881e-06, 6.041000000001767e-06, 6.333999999996731e-06, 6.263000000002877e-06, 5.277999999997451e-06, 4.459000000001795e-06, 4.846999999998797e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.957999999999352e-06, 5.403000000001046e-06, 6.2779999999984515e-06, 4.903000000000546e-06, 5.096999999999047e-06, 6.014000000002101e-06, 5.040999999997298e-06, 5.973000000002865e-06, 5.374999999998437e-06, 6.222000000000172e-06, 4.778000000000421e-06, 4.514000000000601e-06, 6.026999999998728e-06, 5.7089999999995755e-06, 5.610999999999117e-06, 6.125000000002656e-06, 4.971999999998922e-06, 4.457999999998852e-06, 5.09800000000199e-06, 5.137999999998283e-06, 5.723000000002615e-06, 5.971999999999922e-06, 6.3329999999972575e-06, 4.903000000000546e-06, 5.139000000001226e-06, 4.707999999999102e-06, 5.610999999999117e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 5.653000000001296e-06, 4.971999999998922e-06, 5.528000000001171e-06, 4.639000000000726e-06, 4.582999999998977e-06], 'diff': [0, 4.375000000000906e-06, 5.277999999997451e-06, 6.250000000002781e-06, 5.499999999998562e-06, 5.569999999999881e-06, 6.041000000001767e-06, 6.333999999996731e-06, 6.263000000002877e-06, 5.277999999997451e-06, 4.459000000001795e-06, 4.846999999998797e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 4.957999999999352e-06, 5.403000000001046e-06, 6.2779999999984515e-06, 4.903000000000546e-06, 5.096999999999047e-06, 6.014000000002101e-06, 5.040999999997298e-06, 5.973000000002865e-06, 5.374999999998437e-06, 6.222000000000172e-06, 4.778000000000421e-06, 4.514000000000601e-06, 6.026999999998728e-06, 5.7089999999995755e-06, 5.610999999999117e-06, 6.125000000002656e-06, 4.971999999998922e-06, 4.457999999998852e-06, 5.09800000000199e-06, 5.137999999998283e-06, 5.723000000002615e-06, 5.971999999999922e-06, 6.3329999999972575e-06, 4.903000000000546e-06, 5.139000000001226e-06, 4.707999999999102e-06, 5.610999999999117e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 5.653000000001296e-06, 4.971999999998922e-06, 5.528000000001171e-06, 4.639000000000726e-06, 4.582999999998977e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:00.387" endtime="20201030 18:31:00.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.384" endtime="20201030 18:31:00.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.394" level="INFO">${RESULT} = [{'diff': 4.375000000000906e-06}, {'diff': 6.250000000002781e-06}, {'diff': 5.569999999999881e-06}, {'diff': 6.333999999996731e-06}, {'diff': 5.277999999997451e-06}, {'diff': 4.846999999998797e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:00.392" endtime="20201030 18:31:00.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:00.398" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.375000000000906e-06, 6.250000000002781e-06, 5.569999999999881e-06, 6.333999999996731e-06, 5.277999999997451e-06, 4.846999999998797e-06, 4.778000000000421e-06, 5.082999999999477e-06, 5.4030...</msg>
<status status="PASS" starttime="20201030 18:31:00.395" endtime="20201030 18:31:00.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.402" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:00.401" endtime="20201030 18:31:00.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.404" level="INFO">VALUE: [4.375000000000906e-06, 6.250000000002781e-06, 5.569999999999881e-06, 6.333999999996731e-06, 5.277999999997451e-06, 4.846999999998797e-06, 4.778000000000421e-06, 5.082999999999477e-06, 5.403000000001046e-06, 4.903000000000546e-06, 6.014000000002101e-06, 5.973000000002865e-06, 6.222000000000172e-06, 4.514000000000601e-06, 5.7089999999995755e-06, 6.125000000002656e-06, 4.457999999998852e-06, 5.137999999998283e-06, 5.971999999999922e-06, 4.903000000000546e-06, 4.707999999999102e-06, 5.014000000001101e-06, 5.653000000001296e-06, 5.528000000001171e-06, 4.582999999998977e-06]</msg>
<status status="PASS" starttime="20201030 18:31:00.403" endtime="20201030 18:31:00.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.398" endtime="20201030 18:31:00.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.409" endtime="20201030 18:31:00.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.407" endtime="20201030 18:31:00.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.406" endtime="20201030 18:31:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.034" endtime="20201030 18:31:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.033" endtime="20201030 18:31:00.433"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.443" endtime="20201030 18:31:00.458"></status>
</kw>
<msg timestamp="20201030 18:31:00.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.441" endtime="20201030 18:31:00.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.460" endtime="20201030 18:31:00.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.462" endtime="20201030 18:31:00.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.437" endtime="20201030 18:31:00.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.435" endtime="20201030 18:31:00.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.471" endtime="20201030 18:31:00.738"></status>
</kw>
<msg timestamp="20201030 18:31:00.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.470" endtime="20201030 18:31:00.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.741" endtime="20201030 18:31:00.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.747" endtime="20201030 18:31:00.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.467" endtime="20201030 18:31:00.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.465" endtime="20201030 18:31:00.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:00.763" level="INFO">${debug} = {'time': [0.023034083, 0.023039444, 0.023045528, 0.023050556, 0.023056736, 0.023062806, 0.023067639, 0.023072722, 0.023077181, 0.023082778, 0.023087486, 0.023092958, 0.023098042, 0.023103444, 0.023109...</msg>
<status status="PASS" starttime="20201030 18:31:00.750" endtime="20201030 18:31:00.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.764" endtime="20201030 18:31:00.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.769" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:00.768" endtime="20201030 18:31:00.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.772" level="INFO">VALUE: {'time': [0.023034083, 0.023039444, 0.023045528, 0.023050556, 0.023056736, 0.023062806, 0.023067639, 0.023072722, 0.023077181, 0.023082778, 0.023087486, 0.023092958, 0.023098042, 0.023103444, 0.023109292, 0.023115056, 0.023120653, 0.023125417, 0.023129944, 0.023135653, 0.023140792, 0.023145903, 0.023151167, 0.023156944, 0.023162403, 0.023167111, 0.023172708, 0.023178986, 0.023185194, 0.023190764, 0.023196, 0.023201833, 0.02320625, 0.023211639, 0.023216472, 0.02322225, 0.023228528, 0.023234111, 0.023238944, 0.023243667, 0.023248708, 0.023253847, 0.023259944, 0.023265694, 0.023271417, 0.02327725, 0.023282222, 0.023286931, 0.023291389, 0.023296153], 'sourceeventsource_diff': [0, 5.360999999998867e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 6.180000000001462e-06, 6.070000000000381e-06, 4.832999999999227e-06, 5.082999999999477e-06, 4.458999999998325e-06, 5.597000000003016e-06, 4.707999999999102e-06, 5.471999999999422e-06, 5.0839999999989505e-06, 5.402000000001572e-06, 5.8479999999992704e-06, 5.7639999999983815e-06, 5.597000000003016e-06, 4.7639999999973814e-06, 4.527000000000697e-06, 5.7089999999995755e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.264000000001351e-06, 5.776999999998478e-06, 5.459000000002795e-06, 4.707999999999102e-06, 5.596999999999547e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 5.569999999999881e-06, 5.236000000002211e-06, 5.833000000000227e-06, 4.416999999999616e-06, 5.3889999999980065e-06, 4.832999999999227e-06, 5.778000000001421e-06, 6.2779999999984515e-06, 5.583000000003446e-06, 4.832999999999227e-06, 4.722999999998145e-06, 5.041000000000767e-06, 5.139000000001226e-06, 6.097000000000047e-06, 5.749999999998812e-06, 5.7229999999991454e-06, 5.833000000000227e-06, 4.972000000002391e-06, 4.7089999999985754e-06, 4.457999999998852e-06, 4.764000000000851e-06], 'diff': [0, 5.360999999998867e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 6.180000000001462e-06, 6.070000000000381e-06, 4.832999999999227e-06, 5.082999999999477e-06, 4.458999999998325e-06, 5.597000000003016e-06, 4.707999999999102e-06, 5.471999999999422e-06, 5.0839999999989505e-06, 5.402000000001572e-06, 5.8479999999992704e-06, 5.7639999999983815e-06, 5.597000000003016e-06, 4.7639999999973814e-06, 4.527000000000697e-06, 5.7089999999995755e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.264000000001351e-06, 5.776999999998478e-06, 5.459000000002795e-06, 4.707999999999102e-06, 5.596999999999547e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 5.569999999999881e-06, 5.236000000002211e-06, 5.833000000000227e-06, 4.416999999999616e-06, 5.3889999999980065e-06, 4.832999999999227e-06, 5.778000000001421e-06, 6.2779999999984515e-06, 5.583000000003446e-06, 4.832999999999227e-06, 4.722999999998145e-06, 5.041000000000767e-06, 5.139000000001226e-06, 6.097000000000047e-06, 5.749999999998812e-06, 5.7229999999991454e-06, 5.833000000000227e-06, 4.972000000002391e-06, 4.7089999999985754e-06, 4.457999999998852e-06, 4.764000000000851e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:00.770" endtime="20201030 18:31:00.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.766" endtime="20201030 18:31:00.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.777" level="INFO">${RESULT} = [{'diff': 5.360999999998867e-06}, {'diff': 5.028000000000671e-06}, {'diff': 6.070000000000381e-06}, {'diff': 5.082999999999477e-06}, {'diff': 5.597000000003016e-06}, {'diff': 5.471999999999422e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:00.774" endtime="20201030 18:31:00.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:00.780" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.360999999998867e-06, 5.028000000000671e-06, 6.070000000000381e-06, 5.082999999999477e-06, 5.597000000003016e-06, 5.471999999999422e-06, 5.402000000001572e-06, 5.7639999999983815e-06, 4.763...</msg>
<status status="PASS" starttime="20201030 18:31:00.778" endtime="20201030 18:31:00.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.784" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:00.783" endtime="20201030 18:31:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.786" level="INFO">VALUE: [5.360999999998867e-06, 5.028000000000671e-06, 6.070000000000381e-06, 5.082999999999477e-06, 5.597000000003016e-06, 5.471999999999422e-06, 5.402000000001572e-06, 5.7639999999983815e-06, 4.7639999999973814e-06, 5.7089999999995755e-06, 5.110999999998617e-06, 5.776999999998478e-06, 4.707999999999102e-06, 6.2779999999984515e-06, 5.569999999999881e-06, 5.833000000000227e-06, 5.3889999999980065e-06, 5.778000000001421e-06, 5.583000000003446e-06, 4.722999999998145e-06, 5.139000000001226e-06, 5.749999999998812e-06, 5.833000000000227e-06, 4.7089999999985754e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201030 18:31:00.785" endtime="20201030 18:31:00.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.781" endtime="20201030 18:31:00.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.792" endtime="20201030 18:31:00.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.790" endtime="20201030 18:31:00.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.789" endtime="20201030 18:31:00.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.434" endtime="20201030 18:31:00.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.434" endtime="20201030 18:31:00.813"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.821" endtime="20201030 18:31:00.835"></status>
</kw>
<msg timestamp="20201030 18:31:00.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.819" endtime="20201030 18:31:00.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.836" endtime="20201030 18:31:00.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.839" endtime="20201030 18:31:00.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.817" endtime="20201030 18:31:00.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.815" endtime="20201030 18:31:00.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.848" endtime="20201030 18:31:01.120"></status>
</kw>
<msg timestamp="20201030 18:31:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.847" endtime="20201030 18:31:01.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.123" endtime="20201030 18:31:01.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.128" endtime="20201030 18:31:01.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.844" endtime="20201030 18:31:01.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.842" endtime="20201030 18:31:01.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:01.144" level="INFO">${debug} = {'time': [0.017642194, 0.017647097, 0.017652625, 0.017657333, 0.017662181, 0.017667, 0.017672028, 0.017676611, 0.017681583, 0.017688, 0.017692889, 0.017697528, 0.01770375, 0.017708903, 0.017714056, 0....</msg>
<status status="PASS" starttime="20201030 18:31:01.131" endtime="20201030 18:31:01.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.145" endtime="20201030 18:31:01.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.150" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:01.149" endtime="20201030 18:31:01.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.153" level="INFO">VALUE: {'time': [0.017642194, 0.017647097, 0.017652625, 0.017657333, 0.017662181, 0.017667, 0.017672028, 0.017676611, 0.017681583, 0.017688, 0.017692889, 0.017697528, 0.01770375, 0.017708903, 0.017714056, 0.017718764, 0.017724806, 0.01773025, 0.017736167, 0.017741681, 0.017747194, 0.017752972, 0.017759, 0.017765028, 0.017771347, 0.017777403, 0.017782306, 0.017788569, 0.017793972, 0.017798486, 0.017803847, 0.017809986, 0.017815319, 0.017821486, 0.017826903, 0.017832153, 0.017838111, 0.017844153, 0.017848736, 0.01785425, 0.017860153, 0.017864681, 0.017870319, 0.017876667, 0.01788125, 0.017886083, 0.017890611, 0.017895389, 0.017900167, 0.017905514], 'sourceeventsource_diff': [0, 4.903000000000546e-06, 5.528000000001171e-06, 4.707999999999102e-06, 4.84799999999827e-06, 4.818999999999657e-06, 5.028000000000671e-06, 4.582999999998977e-06, 4.972000000002391e-06, 6.416999999998146e-06, 4.889000000000976e-06, 4.639000000000726e-06, 6.222000000000172e-06, 5.153000000000796e-06, 5.152999999997326e-06, 4.708000000002571e-06, 6.041999999997771e-06, 5.444000000000282e-06, 5.917000000001116e-06, 5.5139999999981315e-06, 5.513000000002127e-06, 5.7779999999979514e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.319000000001157e-06, 6.056000000000811e-06, 4.903000000000546e-06, 6.262999999999408e-06, 5.403000000001046e-06, 4.513999999997131e-06, 5.361000000002336e-06, 6.1389999999987566e-06, 5.332999999999727e-06, 6.167000000001366e-06, 5.417000000000616e-06, 5.2499999999983116e-06, 5.958000000000352e-06, 6.042000000001241e-06, 4.582999999998977e-06, 5.5139999999981315e-06, 5.903000000001546e-06, 4.528000000000171e-06, 5.637999999998783e-06, 6.3479999999997705e-06, 4.583000000002446e-06, 4.832999999999227e-06, 4.528000000000171e-06, 4.778000000000421e-06, 4.778000000000421e-06, 5.346999999999297e-06], 'diff': [0, 4.903000000000546e-06, 5.528000000001171e-06, 4.707999999999102e-06, 4.84799999999827e-06, 4.818999999999657e-06, 5.028000000000671e-06, 4.582999999998977e-06, 4.972000000002391e-06, 6.416999999998146e-06, 4.889000000000976e-06, 4.639000000000726e-06, 6.222000000000172e-06, 5.153000000000796e-06, 5.152999999997326e-06, 4.708000000002571e-06, 6.041999999997771e-06, 5.444000000000282e-06, 5.917000000001116e-06, 5.5139999999981315e-06, 5.513000000002127e-06, 5.7779999999979514e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.319000000001157e-06, 6.056000000000811e-06, 4.903000000000546e-06, 6.262999999999408e-06, 5.403000000001046e-06, 4.513999999997131e-06, 5.361000000002336e-06, 6.1389999999987566e-06, 5.332999999999727e-06, 6.167000000001366e-06, 5.417000000000616e-06, 5.2499999999983116e-06, 5.958000000000352e-06, 6.042000000001241e-06, 4.582999999998977e-06, 5.5139999999981315e-06, 5.903000000001546e-06, 4.528000000000171e-06, 5.637999999998783e-06, 6.3479999999997705e-06, 4.583000000002446e-06, 4.832999999999227e-06, 4.528000000000171e-06, 4.778000000000421e-06, 4.778000000000421e-06, 5.346999999999297e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:01.151" endtime="20201030 18:31:01.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.147" endtime="20201030 18:31:01.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.158" level="INFO">${RESULT} = [{'diff': 4.903000000000546e-06}, {'diff': 4.707999999999102e-06}, {'diff': 4.818999999999657e-06}, {'diff': 4.582999999998977e-06}, {'diff': 6.416999999998146e-06}, {'diff': 4.639000000000726e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:01.155" endtime="20201030 18:31:01.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:01.162" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.903000000000546e-06, 4.707999999999102e-06, 4.818999999999657e-06, 4.582999999998977e-06, 6.416999999998146e-06, 4.639000000000726e-06, 5.153000000000796e-06, 4.708000000002571e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 18:31:01.159" endtime="20201030 18:31:01.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.167" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:01.166" endtime="20201030 18:31:01.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.169" level="INFO">VALUE: [4.903000000000546e-06, 4.707999999999102e-06, 4.818999999999657e-06, 4.582999999998977e-06, 6.416999999998146e-06, 4.639000000000726e-06, 5.153000000000796e-06, 4.708000000002571e-06, 5.444000000000282e-06, 5.5139999999981315e-06, 5.7779999999979514e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.262999999999408e-06, 4.513999999997131e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 5.2499999999983116e-06, 6.042000000001241e-06, 5.5139999999981315e-06, 4.528000000000171e-06, 6.3479999999997705e-06, 4.832999999999227e-06, 4.778000000000421e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201030 18:31:01.168" endtime="20201030 18:31:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.163" endtime="20201030 18:31:01.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.173" endtime="20201030 18:31:01.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.172" endtime="20201030 18:31:01.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.171" endtime="20201030 18:31:01.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.814" endtime="20201030 18:31:01.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.813" endtime="20201030 18:31:01.194"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.202" endtime="20201030 18:31:01.216"></status>
</kw>
<msg timestamp="20201030 18:31:01.217" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.200" endtime="20201030 18:31:01.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.218" endtime="20201030 18:31:01.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.220" endtime="20201030 18:31:01.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.198" endtime="20201030 18:31:01.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.196" endtime="20201030 18:31:01.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.229" endtime="20201030 18:31:01.493"></status>
</kw>
<msg timestamp="20201030 18:31:01.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.227" endtime="20201030 18:31:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.496" endtime="20201030 18:31:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.502" endtime="20201030 18:31:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.225" endtime="20201030 18:31:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.223" endtime="20201030 18:31:01.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:01.523" level="INFO">${debug} = {'time': [0.017351653, 0.017357986, 0.017364056, 0.017369639, 0.017374875, 0.017379431, 0.017384681, 0.01738925, 0.017394417, 0.017399042, 0.017404667, 0.017409181, 0.017414389, 0.017420222, 0.0174265...</msg>
<status status="PASS" starttime="20201030 18:31:01.510" endtime="20201030 18:31:01.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.524" endtime="20201030 18:31:01.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.530" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:01.529" endtime="20201030 18:31:01.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.533" level="INFO">VALUE: {'time': [0.017351653, 0.017357986, 0.017364056, 0.017369639, 0.017374875, 0.017379431, 0.017384681, 0.01738925, 0.017394417, 0.017399042, 0.017404667, 0.017409181, 0.017414389, 0.017420222, 0.017426556, 0.017431194, 0.017435972, 0.017441319, 0.017446708, 0.017452056, 0.017458347, 0.017464292, 0.017469111, 0.017474778, 0.017479431, 0.017484417, 0.017490417, 0.017496694, 0.017501278, 0.01750625, 0.017512514, 0.017516986, 0.017522389, 0.017526972, 0.017531306, 0.017535903, 0.017541764, 0.017547708, 0.017553722, 0.017558944, 0.017565278, 0.017570444, 0.017576764, 0.017581167, 0.017585833, 0.017590361, 0.017594736, 0.017600903, 0.017605431, 0.017610875], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 6.3329999999972575e-06, 6.070000000000381e-06, 5.582999999999977e-06, 5.236000000002211e-06, 4.555999999999311e-06, 5.2499999999983116e-06, 4.568999999999407e-06, 5.167000000000366e-06, 4.625000000001156e-06, 5.624999999998687e-06, 4.514000000000601e-06, 5.207999999999602e-06, 5.833000000000227e-06, 6.334000000000201e-06, 4.638000000001252e-06, 4.778000000000421e-06, 5.346999999999297e-06, 5.3889999999980065e-06, 5.34800000000224e-06, 6.290999999998548e-06, 5.945000000000256e-06, 4.818999999999657e-06, 5.667000000000866e-06, 4.653000000000296e-06, 4.985999999998492e-06, 6.000000000002531e-06, 6.276999999998978e-06, 4.5839999999984504e-06, 4.972000000002391e-06, 6.2639999999988816e-06, 4.471999999998422e-06, 5.403000000001046e-06, 4.582999999998977e-06, 4.33400000000167e-06, 4.596999999998547e-06, 5.861000000002836e-06, 5.9439999999973125e-06, 6.014000000002101e-06, 5.221999999999172e-06, 6.334000000000201e-06, 5.166000000000892e-06, 6.320000000000631e-06, 4.403000000000046e-06, 4.665999999996923e-06, 4.528000000000171e-06, 4.375000000000906e-06, 6.167000000001366e-06, 4.528000000000171e-06, 5.444000000000282e-06], 'diff': [0, 6.3329999999972575e-06, 6.070000000000381e-06, 5.582999999999977e-06, 5.236000000002211e-06, 4.555999999999311e-06, 5.2499999999983116e-06, 4.568999999999407e-06, 5.167000000000366e-06, 4.625000000001156e-06, 5.624999999998687e-06, 4.514000000000601e-06, 5.207999999999602e-06, 5.833000000000227e-06, 6.334000000000201e-06, 4.638000000001252e-06, 4.778000000000421e-06, 5.346999999999297e-06, 5.3889999999980065e-06, 5.34800000000224e-06, 6.290999999998548e-06, 5.945000000000256e-06, 4.818999999999657e-06, 5.667000000000866e-06, 4.653000000000296e-06, 4.985999999998492e-06, 6.000000000002531e-06, 6.276999999998978e-06, 4.5839999999984504e-06, 4.972000000002391e-06, 6.2639999999988816e-06, 4.471999999998422e-06, 5.403000000001046e-06, 4.582999999998977e-06, 4.33400000000167e-06, 4.596999999998547e-06, 5.861000000002836e-06, 5.9439999999973125e-06, 6.014000000002101e-06, 5.221999999999172e-06, 6.334000000000201e-06, 5.166000000000892e-06, 6.320000000000631e-06, 4.403000000000046e-06, 4.665999999996923e-06, 4.528000000000171e-06, 4.375000000000906e-06, 6.167000000001366e-06, 4.528000000000171e-06, 5.444000000000282e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:01.531" endtime="20201030 18:31:01.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.526" endtime="20201030 18:31:01.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.537" level="INFO">${RESULT} = [{'diff': 6.3329999999972575e-06}, {'diff': 5.582999999999977e-06}, {'diff': 4.555999999999311e-06}, {'diff': 4.568999999999407e-06}, {'diff': 4.625000000001156e-06}, {'diff': 4.514000000000601e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.534" endtime="20201030 18:31:01.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:01.540" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.3329999999972575e-06, 5.582999999999977e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.625000000001156e-06, 4.514000000000601e-06, 5.833000000000227e-06, 4.638000000001252e-06, 5.346...</msg>
<status status="PASS" starttime="20201030 18:31:01.538" endtime="20201030 18:31:01.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.545" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:01.543" endtime="20201030 18:31:01.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.547" level="INFO">VALUE: [6.3329999999972575e-06, 5.582999999999977e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.625000000001156e-06, 4.514000000000601e-06, 5.833000000000227e-06, 4.638000000001252e-06, 5.346999999999297e-06, 5.34800000000224e-06, 5.945000000000256e-06, 5.667000000000866e-06, 4.985999999998492e-06, 6.276999999998978e-06, 4.972000000002391e-06, 4.471999999998422e-06, 4.582999999998977e-06, 4.596999999998547e-06, 5.9439999999973125e-06, 5.221999999999172e-06, 5.166000000000892e-06, 4.403000000000046e-06, 4.528000000000171e-06, 6.167000000001366e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201030 18:31:01.546" endtime="20201030 18:31:01.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.541" endtime="20201030 18:31:01.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.552" endtime="20201030 18:31:01.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.551" endtime="20201030 18:31:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.550" endtime="20201030 18:31:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.195" endtime="20201030 18:31:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.194" endtime="20201030 18:31:01.573"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.581" endtime="20201030 18:31:01.595"></status>
</kw>
<msg timestamp="20201030 18:31:01.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.580" endtime="20201030 18:31:01.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.597" endtime="20201030 18:31:01.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.599" endtime="20201030 18:31:01.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.577" endtime="20201030 18:31:01.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.575" endtime="20201030 18:31:01.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.608" endtime="20201030 18:31:01.876"></status>
</kw>
<msg timestamp="20201030 18:31:01.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017439472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.607" endtime="20201030 18:31:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017439472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.879" endtime="20201030 18:31:01.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.885" endtime="20201030 18:31:01.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.604" endtime="20201030 18:31:01.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.602" endtime="20201030 18:31:01.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:01.901" level="INFO">${debug} = {'time': [0.017433542, 0.017439472, 0.017445722, 0.017452069, 0.017457889, 0.017463792, 0.017468389, 0.017473222, 0.017479431, 0.017484653, 0.017490861, 0.017496139, 0.017501792, 0.017508139, 0.017513...</msg>
<status status="PASS" starttime="20201030 18:31:01.888" endtime="20201030 18:31:01.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.902" endtime="20201030 18:31:01.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.908" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:01.907" endtime="20201030 18:31:01.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.911" level="INFO">VALUE: {'time': [0.017433542, 0.017439472, 0.017445722, 0.017452069, 0.017457889, 0.017463792, 0.017468389, 0.017473222, 0.017479431, 0.017484653, 0.017490861, 0.017496139, 0.017501792, 0.017508139, 0.017513208, 0.017517986, 0.017522889, 0.017527972, 0.017533333, 0.017538986, 0.017545, 0.017551014, 0.017555611, 0.017561639, 0.017567528, 0.017572736, 0.017578083, 0.01758375, 0.017588319, 0.017594472, 0.0176005, 0.017605208, 0.017610681, 0.017615694, 0.017620667, 0.017625375, 0.017631278, 0.017636194, 0.017641667, 0.017647681, 0.017653319, 0.017658028, 0.017663236, 0.017668514, 0.017672917, 0.017679069, 0.017685042, 0.017689986, 0.017694639, 0.017700764], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.930000000001212e-06, 6.249999999999312e-06, 6.347000000000297e-06, 5.820000000000131e-06, 5.9029999999980765e-06, 4.597000000002016e-06, 4.832999999999227e-06, 6.2090000000000756e-06, 5.221999999999172e-06, 6.208000000000602e-06, 5.278000000000921e-06, 5.6529999999978264e-06, 6.347000000000297e-06, 5.068999999999907e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 5.361000000002336e-06, 5.6529999999978264e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 4.596999999998547e-06, 6.028000000001671e-06, 5.8889999999985065e-06, 5.207999999999602e-06, 5.347000000002766e-06, 5.666999999997396e-06, 4.569000000002876e-06, 6.1529999999983265e-06, 6.028000000001671e-06, 4.707999999999102e-06, 5.472999999998895e-06, 5.013000000001627e-06, 4.972999999998395e-06, 4.707999999999102e-06, 5.903000000001546e-06, 4.916000000000642e-06, 5.472999999998895e-06, 6.0139999999986316e-06, 5.638000000002252e-06, 4.7089999999985754e-06, 5.207999999999602e-06, 5.278000000000921e-06, 4.403000000000046e-06, 6.151999999998853e-06, 5.973000000002865e-06, 4.943999999999782e-06, 4.653000000000296e-06, 6.124999999999187e-06], 'diff': [0, 5.930000000001212e-06, 6.249999999999312e-06, 6.347000000000297e-06, 5.820000000000131e-06, 5.9029999999980765e-06, 4.597000000002016e-06, 4.832999999999227e-06, 6.2090000000000756e-06, 5.221999999999172e-06, 6.208000000000602e-06, 5.278000000000921e-06, 5.6529999999978264e-06, 6.347000000000297e-06, 5.068999999999907e-06, 4.778000000000421e-06, 4.903000000000546e-06, 5.082999999999477e-06, 5.361000000002336e-06, 5.6529999999978264e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 4.596999999998547e-06, 6.028000000001671e-06, 5.8889999999985065e-06, 5.207999999999602e-06, 5.347000000002766e-06, 5.666999999997396e-06, 4.569000000002876e-06, 6.1529999999983265e-06, 6.028000000001671e-06, 4.707999999999102e-06, 5.472999999998895e-06, 5.013000000001627e-06, 4.972999999998395e-06, 4.707999999999102e-06, 5.903000000001546e-06, 4.916000000000642e-06, 5.472999999998895e-06, 6.0139999999986316e-06, 5.638000000002252e-06, 4.7089999999985754e-06, 5.207999999999602e-06, 5.278000000000921e-06, 4.403000000000046e-06, 6.151999999998853e-06, 5.973000000002865e-06, 4.943999999999782e-06, 4.653000000000296e-06, 6.124999999999187e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:01.909" endtime="20201030 18:31:01.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.905" endtime="20201030 18:31:01.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.917" level="INFO">${RESULT} = [{'diff': 5.930000000001212e-06}, {'diff': 6.347000000000297e-06}, {'diff': 5.9029999999980765e-06}, {'diff': 4.832999999999227e-06}, {'diff': 5.221999999999172e-06}, {'diff': 5.278000000000921e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.914" endtime="20201030 18:31:01.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:01.922" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.930000000001212e-06, 6.347000000000297e-06, 5.9029999999980765e-06, 4.832999999999227e-06, 5.221999999999172e-06, 5.278000000000921e-06, 6.347000000000297e-06, 4.778000000000421e-06, 5.082...</msg>
<status status="PASS" starttime="20201030 18:31:01.919" endtime="20201030 18:31:01.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.928" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:01.926" endtime="20201030 18:31:01.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.931" level="INFO">VALUE: [5.930000000001212e-06, 6.347000000000297e-06, 5.9029999999980765e-06, 4.832999999999227e-06, 5.221999999999172e-06, 5.278000000000921e-06, 6.347000000000297e-06, 4.778000000000421e-06, 5.082999999999477e-06, 5.6529999999978264e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 5.207999999999602e-06, 5.666999999997396e-06, 6.1529999999983265e-06, 4.707999999999102e-06, 5.013000000001627e-06, 4.707999999999102e-06, 4.916000000000642e-06, 6.0139999999986316e-06, 4.7089999999985754e-06, 5.278000000000921e-06, 6.151999999998853e-06, 4.943999999999782e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201030 18:31:01.929" endtime="20201030 18:31:01.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.923" endtime="20201030 18:31:01.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.938" endtime="20201030 18:31:01.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.936" endtime="20201030 18:31:01.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.934" endtime="20201030 18:31:01.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.574" endtime="20201030 18:31:01.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.574" endtime="20201030 18:31:01.959"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.972" endtime="20201030 18:31:01.987"></status>
</kw>
<msg timestamp="20201030 18:31:01.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.968" endtime="20201030 18:31:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.989" endtime="20201030 18:31:01.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.992" endtime="20201030 18:31:01.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.965" endtime="20201030 18:31:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.962" endtime="20201030 18:31:01.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.001" endtime="20201030 18:31:02.270"></status>
</kw>
<msg timestamp="20201030 18:31:02.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02308275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:02.000" endtime="20201030 18:31:02.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02308275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:02.273" endtime="20201030 18:31:02.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.278" endtime="20201030 18:31:02.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.997" endtime="20201030 18:31:02.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.995" endtime="20201030 18:31:02.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:02.296" level="INFO">${debug} = {'time': [0.02308275, 0.023087167, 0.023093542, 0.023098889, 0.023104181, 0.02310875, 0.023114847, 0.023120625, 0.023126708, 0.0231325, 0.023137417, 0.023142528, 0.023146931, 0.023151958, 0.023157292,...</msg>
<status status="PASS" starttime="20201030 18:31:02.282" endtime="20201030 18:31:02.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.297" endtime="20201030 18:31:02.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.302" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:02.301" endtime="20201030 18:31:02.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.305" level="INFO">VALUE: {'time': [0.02308275, 0.023087167, 0.023093542, 0.023098889, 0.023104181, 0.02310875, 0.023114847, 0.023120625, 0.023126708, 0.0231325, 0.023137417, 0.023142528, 0.023146931, 0.023151958, 0.023157292, 0.023162889, 0.023168292, 0.023173694, 0.023178181, 0.023183125, 0.023188278, 0.023193236, 0.023198139, 0.023203083, 0.023208931, 0.023214889, 0.023220306, 0.023224694, 0.023230278, 0.023235069, 0.023241097, 0.023246736, 0.023253083, 0.023258778, 0.023264931, 0.023269833, 0.023274611, 0.023279319, 0.023284097, 0.023288833, 0.023294056, 0.023300375, 0.023306194, 0.023312125, 0.023317, 0.023323278, 0.023328861, 0.023333847, 0.023338306, 0.023343875], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.416999999999616e-06, 6.375000000002906e-06, 5.346999999999297e-06, 5.292000000000491e-06, 4.568999999999407e-06, 6.097000000000047e-06, 5.7779999999979514e-06, 6.083000000000477e-06, 5.792000000000991e-06, 4.917000000000116e-06, 5.110999999998617e-06, 4.403000000000046e-06, 5.027000000001197e-06, 5.3339999999992005e-06, 5.596999999999547e-06, 5.403000000001046e-06, 5.402000000001572e-06, 4.486999999997465e-06, 4.943999999999782e-06, 5.153000000000796e-06, 4.957999999999352e-06, 4.903000000000546e-06, 4.943999999999782e-06, 5.8479999999992704e-06, 5.958000000000352e-06, 5.417000000000616e-06, 4.388000000001002e-06, 5.5839999999994505e-06, 4.791000000000517e-06, 6.0279999999982015e-06, 5.639000000001726e-06, 6.347000000000297e-06, 5.695000000000006e-06, 6.1529999999983265e-06, 4.902000000001072e-06, 4.778000000000421e-06, 4.707999999999102e-06, 4.778000000000421e-06, 4.735999999998242e-06, 5.223000000002115e-06, 6.319000000001157e-06, 5.8189999999971875e-06, 5.931000000000686e-06, 4.875000000001406e-06, 6.2779999999984515e-06, 5.582999999999977e-06, 4.986000000001961e-06, 4.458999999998325e-06, 5.569000000000407e-06], 'diff': [0, 4.416999999999616e-06, 6.375000000002906e-06, 5.346999999999297e-06, 5.292000000000491e-06, 4.568999999999407e-06, 6.097000000000047e-06, 5.7779999999979514e-06, 6.083000000000477e-06, 5.792000000000991e-06, 4.917000000000116e-06, 5.110999999998617e-06, 4.403000000000046e-06, 5.027000000001197e-06, 5.3339999999992005e-06, 5.596999999999547e-06, 5.403000000001046e-06, 5.402000000001572e-06, 4.486999999997465e-06, 4.943999999999782e-06, 5.153000000000796e-06, 4.957999999999352e-06, 4.903000000000546e-06, 4.943999999999782e-06, 5.8479999999992704e-06, 5.958000000000352e-06, 5.417000000000616e-06, 4.388000000001002e-06, 5.5839999999994505e-06, 4.791000000000517e-06, 6.0279999999982015e-06, 5.639000000001726e-06, 6.347000000000297e-06, 5.695000000000006e-06, 6.1529999999983265e-06, 4.902000000001072e-06, 4.778000000000421e-06, 4.707999999999102e-06, 4.778000000000421e-06, 4.735999999998242e-06, 5.223000000002115e-06, 6.319000000001157e-06, 5.8189999999971875e-06, 5.931000000000686e-06, 4.875000000001406e-06, 6.2779999999984515e-06, 5.582999999999977e-06, 4.986000000001961e-06, 4.458999999998325e-06, 5.569000000000407e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:02.303" endtime="20201030 18:31:02.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.299" endtime="20201030 18:31:02.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.310" level="INFO">${RESULT} = [{'diff': 4.416999999999616e-06}, {'diff': 5.346999999999297e-06}, {'diff': 4.568999999999407e-06}, {'diff': 5.7779999999979514e-06}, {'diff': 5.792000000000991e-06}, {'diff': 5.110999999998617e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:02.307" endtime="20201030 18:31:02.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:02.313" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.416999999999616e-06, 5.346999999999297e-06, 4.568999999999407e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.110999999998617e-06, 5.027000000001197e-06, 5.596999999999547e-06, 5.402...</msg>
<status status="PASS" starttime="20201030 18:31:02.311" endtime="20201030 18:31:02.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:02.316" endtime="20201030 18:31:02.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.320" level="INFO">VALUE: [4.416999999999616e-06, 5.346999999999297e-06, 4.568999999999407e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.110999999998617e-06, 5.027000000001197e-06, 5.596999999999547e-06, 5.402000000001572e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 5.958000000000352e-06, 4.388000000001002e-06, 4.791000000000517e-06, 5.639000000001726e-06, 5.695000000000006e-06, 4.902000000001072e-06, 4.707999999999102e-06, 4.735999999998242e-06, 6.319000000001157e-06, 5.931000000000686e-06, 6.2779999999984515e-06, 4.986000000001961e-06, 5.569000000000407e-06]</msg>
<status status="PASS" starttime="20201030 18:31:02.319" endtime="20201030 18:31:02.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.314" endtime="20201030 18:31:02.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.326" endtime="20201030 18:31:02.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.323" endtime="20201030 18:31:02.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.322" endtime="20201030 18:31:02.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.960" endtime="20201030 18:31:02.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.960" endtime="20201030 18:31:02.346"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.355" endtime="20201030 18:31:02.370"></status>
</kw>
<msg timestamp="20201030 18:31:02.370" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.353" endtime="20201030 18:31:02.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.371" endtime="20201030 18:31:02.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.374" endtime="20201030 18:31:02.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.351" endtime="20201030 18:31:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.349" endtime="20201030 18:31:02.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.383" endtime="20201030 18:31:02.650"></status>
</kw>
<msg timestamp="20201030 18:31:02.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018064458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:02.381" endtime="20201030 18:31:02.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018064458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:02.653" endtime="20201030 18:31:02.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.658" endtime="20201030 18:31:02.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.379" endtime="20201030 18:31:02.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.377" endtime="20201030 18:31:02.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:02.675" level="INFO">${debug} = {'time': [0.018064458, 0.0180695, 0.018075458, 0.01808125, 0.018087375, 0.018092222, 0.018097389, 0.018102958, 0.018107431, 0.018112014, 0.018118347, 0.018123125, 0.018127778, 0.018132611, 0.018137083...</msg>
<status status="PASS" starttime="20201030 18:31:02.662" endtime="20201030 18:31:02.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.677" endtime="20201030 18:31:02.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.682" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:02.681" endtime="20201030 18:31:02.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.685" level="INFO">VALUE: {'time': [0.018064458, 0.0180695, 0.018075458, 0.01808125, 0.018087375, 0.018092222, 0.018097389, 0.018102958, 0.018107431, 0.018112014, 0.018118347, 0.018123125, 0.018127778, 0.018132611, 0.018137083, 0.018141472, 0.018147056, 0.018152347, 0.018158319, 0.018164639, 0.01817, 0.018175875, 0.018180542, 0.018186181, 0.018191014, 0.018196583, 0.0182015, 0.018206847, 0.018212056, 0.018216583, 0.018222611, 0.018228694, 0.018234167, 0.018239389, 0.018244542, 0.018249986, 0.018255514, 0.018261278, 0.018266875, 0.018273083, 0.018278736, 0.018283778, 0.018288167, 0.018292556, 0.018297653, 0.018303486, 0.018309194, 0.018314097, 0.018319319, 0.018323903], 'sourceeventsource_diff': [0, 5.042000000000241e-06, 5.958000000000352e-06, 5.792000000000991e-06, 6.124999999999187e-06, 4.847000000002266e-06, 5.166999999996896e-06, 5.569000000000407e-06, 4.473000000001365e-06, 4.582999999998977e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.653000000000296e-06, 4.832999999999227e-06, 4.471999999998422e-06, 4.389000000000476e-06, 5.58400000000292e-06, 5.290999999997548e-06, 5.971999999999922e-06, 6.320000000000631e-06, 5.360999999998867e-06, 5.875000000002406e-06, 4.666999999999866e-06, 5.6389999999982565e-06, 4.832999999999227e-06, 5.569000000000407e-06, 4.917000000000116e-06, 5.347000000002766e-06, 5.2089999999990755e-06, 4.527000000000697e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 5.472999999998895e-06, 5.222000000002641e-06, 5.152999999997326e-06, 5.444000000000282e-06, 5.528000000001171e-06, 5.7639999999983815e-06, 5.596999999999547e-06, 6.208000000000602e-06, 5.653000000001296e-06, 5.042000000000241e-06, 4.389000000000476e-06, 4.389000000000476e-06, 5.096999999999047e-06, 5.833000000000227e-06, 5.708000000000102e-06, 4.903000000000546e-06, 5.221999999999172e-06, 4.5839999999984504e-06], 'diff': [0, 5.042000000000241e-06, 5.958000000000352e-06, 5.792000000000991e-06, 6.124999999999187e-06, 4.847000000002266e-06, 5.166999999996896e-06, 5.569000000000407e-06, 4.473000000001365e-06, 4.582999999998977e-06, 6.333000000000727e-06, 4.778000000000421e-06, 4.653000000000296e-06, 4.832999999999227e-06, 4.471999999998422e-06, 4.389000000000476e-06, 5.58400000000292e-06, 5.290999999997548e-06, 5.971999999999922e-06, 6.320000000000631e-06, 5.360999999998867e-06, 5.875000000002406e-06, 4.666999999999866e-06, 5.6389999999982565e-06, 4.832999999999227e-06, 5.569000000000407e-06, 4.917000000000116e-06, 5.347000000002766e-06, 5.2089999999990755e-06, 4.527000000000697e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 5.472999999998895e-06, 5.222000000002641e-06, 5.152999999997326e-06, 5.444000000000282e-06, 5.528000000001171e-06, 5.7639999999983815e-06, 5.596999999999547e-06, 6.208000000000602e-06, 5.653000000001296e-06, 5.042000000000241e-06, 4.389000000000476e-06, 4.389000000000476e-06, 5.096999999999047e-06, 5.833000000000227e-06, 5.708000000000102e-06, 4.903000000000546e-06, 5.221999999999172e-06, 4.5839999999984504e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:02.683" endtime="20201030 18:31:02.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.679" endtime="20201030 18:31:02.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.689" level="INFO">${RESULT} = [{'diff': 5.042000000000241e-06}, {'diff': 5.792000000000991e-06}, {'diff': 4.847000000002266e-06}, {'diff': 5.569000000000407e-06}, {'diff': 4.582999999998977e-06}, {'diff': 4.778000000000421e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:02.687" endtime="20201030 18:31:02.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:02.694" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.042000000000241e-06, 5.792000000000991e-06, 4.847000000002266e-06, 5.569000000000407e-06, 4.582999999998977e-06, 4.778000000000421e-06, 4.832999999999227e-06, 4.389000000000476e-06, 5.2909...</msg>
<status status="PASS" starttime="20201030 18:31:02.691" endtime="20201030 18:31:02.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.698" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:02.697" endtime="20201030 18:31:02.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.701" level="INFO">VALUE: [5.042000000000241e-06, 5.792000000000991e-06, 4.847000000002266e-06, 5.569000000000407e-06, 4.582999999998977e-06, 4.778000000000421e-06, 4.832999999999227e-06, 4.389000000000476e-06, 5.290999999997548e-06, 6.320000000000631e-06, 5.875000000002406e-06, 5.6389999999982565e-06, 5.569000000000407e-06, 5.347000000002766e-06, 4.527000000000697e-06, 6.083000000000477e-06, 5.222000000002641e-06, 5.444000000000282e-06, 5.7639999999983815e-06, 6.208000000000602e-06, 5.042000000000241e-06, 4.389000000000476e-06, 5.833000000000227e-06, 4.903000000000546e-06, 4.5839999999984504e-06]</msg>
<status status="PASS" starttime="20201030 18:31:02.700" endtime="20201030 18:31:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.695" endtime="20201030 18:31:02.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.705" endtime="20201030 18:31:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.704" endtime="20201030 18:31:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.703" endtime="20201030 18:31:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.347" endtime="20201030 18:31:02.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.347" endtime="20201030 18:31:02.726"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.734" endtime="20201030 18:31:02.749"></status>
</kw>
<msg timestamp="20201030 18:31:02.749" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.732" endtime="20201030 18:31:02.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.752" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.750" endtime="20201030 18:31:02.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.753" endtime="20201030 18:31:02.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.730" endtime="20201030 18:31:02.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.728" endtime="20201030 18:31:02.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.761" endtime="20201030 18:31:03.026"></status>
</kw>
<msg timestamp="20201030 18:31:03.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017280806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.760" endtime="20201030 18:31:03.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017280806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.029" endtime="20201030 18:31:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.034" endtime="20201030 18:31:03.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.757" endtime="20201030 18:31:03.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.756" endtime="20201030 18:31:03.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:03.067" level="INFO">${debug} = {'time': [0.017275028, 0.017280806, 0.017285694, 0.017290847, 0.017295944, 0.017301708, 0.017307431, 0.017313333, 0.017319167, 0.017324083, 0.017329708, 0.017334306, 0.017340458, 0.017346097, 0.017350...</msg>
<status status="PASS" starttime="20201030 18:31:03.038" endtime="20201030 18:31:03.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.069" endtime="20201030 18:31:03.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.079" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:03.077" endtime="20201030 18:31:03.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.086" level="INFO">VALUE: {'time': [0.017275028, 0.017280806, 0.017285694, 0.017290847, 0.017295944, 0.017301708, 0.017307431, 0.017313333, 0.017319167, 0.017324083, 0.017329708, 0.017334306, 0.017340458, 0.017346097, 0.017350708, 0.017355597, 0.017361181, 0.017366583, 0.017372111, 0.017377694, 0.017382847, 0.017388444, 0.017393542, 0.017399181, 0.017404028, 0.017409903, 0.017415764, 0.017420597, 0.017426917, 0.017432792, 0.017438653, 0.017444542, 0.017450028, 0.0174545, 0.017460153, 0.017466042, 0.017470444, 0.017475958, 0.017481111, 0.017486042, 0.017491417, 0.017497069, 0.017501972, 0.017506556, 0.017511472, 0.017516486, 0.017522625, 0.017528778, 0.017534639, 0.017540833], 'sourceeventsource_diff': [0, 5.7779999999979514e-06, 4.888000000001502e-06, 5.153000000000796e-06, 5.096999999999047e-06, 5.7639999999983815e-06, 5.723000000002615e-06, 5.901999999998603e-06, 5.8339999999997005e-06, 4.916000000000642e-06, 5.624999999998687e-06, 4.59800000000149e-06, 6.151999999998853e-06, 5.639000000001726e-06, 4.610999999998117e-06, 4.889000000000976e-06, 5.5839999999994505e-06, 5.402000000001572e-06, 5.527999999997701e-06, 5.582999999999977e-06, 5.153000000000796e-06, 5.596999999999547e-06, 5.09800000000199e-06, 5.6389999999982565e-06, 4.846999999998797e-06, 5.875000000002406e-06, 5.860999999999367e-06, 4.832999999999227e-06, 6.320000000000631e-06, 5.874999999998937e-06, 5.860999999999367e-06, 5.889000000001976e-06, 5.485999999998992e-06, 4.472000000001891e-06, 5.6529999999978264e-06, 5.889000000001976e-06, 4.402000000000572e-06, 5.5139999999981315e-06, 5.153000000000796e-06, 4.930999999999686e-06, 5.374999999998437e-06, 5.652000000001822e-06, 4.903000000000546e-06, 4.5839999999984504e-06, 4.916000000000642e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 5.861000000002836e-06, 6.1939999999975626e-06], 'diff': [0, 5.7779999999979514e-06, 4.888000000001502e-06, 5.153000000000796e-06, 5.096999999999047e-06, 5.7639999999983815e-06, 5.723000000002615e-06, 5.901999999998603e-06, 5.8339999999997005e-06, 4.916000000000642e-06, 5.624999999998687e-06, 4.59800000000149e-06, 6.151999999998853e-06, 5.639000000001726e-06, 4.610999999998117e-06, 4.889000000000976e-06, 5.5839999999994505e-06, 5.402000000001572e-06, 5.527999999997701e-06, 5.582999999999977e-06, 5.153000000000796e-06, 5.596999999999547e-06, 5.09800000000199e-06, 5.6389999999982565e-06, 4.846999999998797e-06, 5.875000000002406e-06, 5.860999999999367e-06, 4.832999999999227e-06, 6.320000000000631e-06, 5.874999999998937e-06, 5.860999999999367e-06, 5.889000000001976e-06, 5.485999999998992e-06, 4.472000000001891e-06, 5.6529999999978264e-06, 5.889000000001976e-06, 4.402000000000572e-06, 5.5139999999981315e-06, 5.153000000000796e-06, 4.930999999999686e-06, 5.374999999998437e-06, 5.652000000001822e-06, 4.903000000000546e-06, 4.5839999999984504e-06, 4.916000000000642e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 5.861000000002836e-06, 6.1939999999975626e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:03.082" endtime="20201030 18:31:03.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.073" endtime="20201030 18:31:03.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.096" level="INFO">${RESULT} = [{'diff': 5.7779999999979514e-06}, {'diff': 5.153000000000796e-06}, {'diff': 5.7639999999983815e-06}, {'diff': 5.901999999998603e-06}, {'diff': 4.916000000000642e-06}, {'diff': 4.59800000000149e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:03.091" endtime="20201030 18:31:03.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:03.103" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.7779999999979514e-06, 5.153000000000796e-06, 5.7639999999983815e-06, 5.901999999998603e-06, 4.916000000000642e-06, 4.59800000000149e-06, 5.639000000001726e-06, 4.889000000000976e-06, 5.402...</msg>
<status status="PASS" starttime="20201030 18:31:03.098" endtime="20201030 18:31:03.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.112" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:03.110" endtime="20201030 18:31:03.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.116" level="INFO">VALUE: [5.7779999999979514e-06, 5.153000000000796e-06, 5.7639999999983815e-06, 5.901999999998603e-06, 4.916000000000642e-06, 4.59800000000149e-06, 5.639000000001726e-06, 4.889000000000976e-06, 5.402000000001572e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.875000000002406e-06, 4.832999999999227e-06, 5.874999999998937e-06, 5.889000000001976e-06, 4.472000000001891e-06, 5.889000000001976e-06, 5.5139999999981315e-06, 4.930999999999686e-06, 5.652000000001822e-06, 4.5839999999984504e-06, 5.014000000001101e-06, 6.1529999999983265e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201030 18:31:03.114" endtime="20201030 18:31:03.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.105" endtime="20201030 18:31:03.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.126" endtime="20201030 18:31:03.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.123" endtime="20201030 18:31:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.121" endtime="20201030 18:31:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.727" endtime="20201030 18:31:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.726" endtime="20201030 18:31:03.147"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.155" endtime="20201030 18:31:03.170"></status>
</kw>
<msg timestamp="20201030 18:31:03.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.154" endtime="20201030 18:31:03.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.171" endtime="20201030 18:31:03.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.174" endtime="20201030 18:31:03.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.151" endtime="20201030 18:31:03.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.150" endtime="20201030 18:31:03.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.184" endtime="20201030 18:31:03.452"></status>
</kw>
<msg timestamp="20201030 18:31:03.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01761375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:03.181" endtime="20201030 18:31:03.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01761375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:03.455" endtime="20201030 18:31:03.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.460" endtime="20201030 18:31:03.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.179" endtime="20201030 18:31:03.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.177" endtime="20201030 18:31:03.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:03.476" level="INFO">${debug} = {'time': [0.01760875, 0.01761375, 0.017618847, 0.017624181, 0.017629403, 0.017634986, 0.017641347, 0.017647597, 0.017653139, 0.017658528, 0.017664861, 0.017669444, 0.017674917, 0.017681125, 0.01768720...</msg>
<status status="PASS" starttime="20201030 18:31:03.464" endtime="20201030 18:31:03.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.477" endtime="20201030 18:31:03.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.482" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:03.481" endtime="20201030 18:31:03.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.485" level="INFO">VALUE: {'time': [0.01760875, 0.01761375, 0.017618847, 0.017624181, 0.017629403, 0.017634986, 0.017641347, 0.017647597, 0.017653139, 0.017658528, 0.017664861, 0.017669444, 0.017674917, 0.017681125, 0.017687208, 0.017692889, 0.0176985, 0.017704597, 0.017709375, 0.017714222, 0.017720181, 0.017726264, 0.017731292, 0.017736264, 0.017741861, 0.017747306, 0.017752028, 0.017757, 0.017762264, 0.017768472, 0.01777475, 0.017780653, 0.017786111, 0.017791014, 0.017796542, 0.017801681, 0.017806778, 0.017811306, 0.017817083, 0.017823042, 0.017829319, 0.017835208, 0.017841639, 0.017847014, 0.017853306, 0.0178595, 0.017865222, 0.017870319, 0.017874764, 0.01787975], 'sourceeventsource_diff': [0, 5.000000000001531e-06, 5.096999999999047e-06, 5.3339999999992005e-06, 5.221999999999172e-06, 5.582999999999977e-06, 6.361000000003336e-06, 6.249999999999312e-06, 5.542000000000741e-06, 5.3889999999980065e-06, 6.333000000000727e-06, 4.582999999998977e-06, 5.472999999998895e-06, 6.208000000000602e-06, 6.083000000000477e-06, 5.681000000000436e-06, 5.610999999999117e-06, 6.097000000000047e-06, 4.778000000000421e-06, 4.847000000002266e-06, 5.9589999999998255e-06, 6.0829999999970075e-06, 5.028000000000671e-06, 4.972000000002391e-06, 5.596999999999547e-06, 5.444999999999756e-06, 4.721999999998672e-06, 4.971999999998922e-06, 5.264000000001351e-06, 6.208000000000602e-06, 6.2779999999984515e-06, 5.903000000001546e-06, 5.457999999999852e-06, 4.903000000000546e-06, 5.527999999997701e-06, 5.139000000001226e-06, 5.096999999999047e-06, 4.528000000000171e-06, 5.777000000001947e-06, 5.9589999999998255e-06, 6.276999999998978e-06, 5.889000000001976e-06, 6.430999999997716e-06, 5.375000000001906e-06, 6.291999999998021e-06, 6.194000000001032e-06, 5.721999999999672e-06, 5.096999999999047e-06, 4.445000000002225e-06, 4.985999999998492e-06], 'diff': [0, 5.000000000001531e-06, 5.096999999999047e-06, 5.3339999999992005e-06, 5.221999999999172e-06, 5.582999999999977e-06, 6.361000000003336e-06, 6.249999999999312e-06, 5.542000000000741e-06, 5.3889999999980065e-06, 6.333000000000727e-06, 4.582999999998977e-06, 5.472999999998895e-06, 6.208000000000602e-06, 6.083000000000477e-06, 5.681000000000436e-06, 5.610999999999117e-06, 6.097000000000047e-06, 4.778000000000421e-06, 4.847000000002266e-06, 5.9589999999998255e-06, 6.0829999999970075e-06, 5.028000000000671e-06, 4.972000000002391e-06, 5.596999999999547e-06, 5.444999999999756e-06, 4.721999999998672e-06, 4.971999999998922e-06, 5.264000000001351e-06, 6.208000000000602e-06, 6.2779999999984515e-06, 5.903000000001546e-06, 5.457999999999852e-06, 4.903000000000546e-06, 5.527999999997701e-06, 5.139000000001226e-06, 5.096999999999047e-06, 4.528000000000171e-06, 5.777000000001947e-06, 5.9589999999998255e-06, 6.276999999998978e-06, 5.889000000001976e-06, 6.430999999997716e-06, 5.375000000001906e-06, 6.291999999998021e-06, 6.194000000001032e-06, 5.721999999999672e-06, 5.096999999999047e-06, 4.445000000002225e-06, 4.985999999998492e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:03.483" endtime="20201030 18:31:03.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.480" endtime="20201030 18:31:03.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.491" level="INFO">${RESULT} = [{'diff': 5.000000000001531e-06}, {'diff': 5.3339999999992005e-06}, {'diff': 5.582999999999977e-06}, {'diff': 6.249999999999312e-06}, {'diff': 5.3889999999980065e-06}, {'diff': 4.582999999998977e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:03.488" endtime="20201030 18:31:03.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:03.494" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.000000000001531e-06, 5.3339999999992005e-06, 5.582999999999977e-06, 6.249999999999312e-06, 5.3889999999980065e-06, 4.582999999998977e-06, 6.208000000000602e-06, 5.681000000000436e-06, 6.09...</msg>
<status status="PASS" starttime="20201030 18:31:03.492" endtime="20201030 18:31:03.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:03.497" endtime="20201030 18:31:03.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.501" level="INFO">VALUE: [5.000000000001531e-06, 5.3339999999992005e-06, 5.582999999999977e-06, 6.249999999999312e-06, 5.3889999999980065e-06, 4.582999999998977e-06, 6.208000000000602e-06, 5.681000000000436e-06, 6.097000000000047e-06, 4.847000000002266e-06, 6.0829999999970075e-06, 4.972000000002391e-06, 5.444999999999756e-06, 4.971999999998922e-06, 6.208000000000602e-06, 5.903000000001546e-06, 4.903000000000546e-06, 5.139000000001226e-06, 4.528000000000171e-06, 5.9589999999998255e-06, 5.889000000001976e-06, 5.375000000001906e-06, 6.194000000001032e-06, 5.096999999999047e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201030 18:31:03.500" endtime="20201030 18:31:03.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.495" endtime="20201030 18:31:03.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.505" endtime="20201030 18:31:03.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.504" endtime="20201030 18:31:03.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.503" endtime="20201030 18:31:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.148" endtime="20201030 18:31:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.148" endtime="20201030 18:31:03.526"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.535" endtime="20201030 18:31:03.549"></status>
</kw>
<msg timestamp="20201030 18:31:03.549" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.533" endtime="20201030 18:31:03.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.550" endtime="20201030 18:31:03.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.553" endtime="20201030 18:31:03.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.530" endtime="20201030 18:31:03.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.528" endtime="20201030 18:31:03.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.562" endtime="20201030 18:31:03.827"></status>
</kw>
<msg timestamp="20201030 18:31:03.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018238722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.560" endtime="20201030 18:31:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018238722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.830" endtime="20201030 18:31:03.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.835" endtime="20201030 18:31:03.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.558" endtime="20201030 18:31:03.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.556" endtime="20201030 18:31:03.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:03.851" level="INFO">${debug} = {'time': [0.018238722, 0.018243569, 0.018248028, 0.018253028, 0.018257444, 0.018263583, 0.018269306, 0.018274097, 0.018279097, 0.018285014, 0.018289667, 0.018295931, 0.018300472, 0.018305236, 0.018310...</msg>
<status status="PASS" starttime="20201030 18:31:03.839" endtime="20201030 18:31:03.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.853" endtime="20201030 18:31:03.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.858" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:03.857" endtime="20201030 18:31:03.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.861" level="INFO">VALUE: {'time': [0.018238722, 0.018243569, 0.018248028, 0.018253028, 0.018257444, 0.018263583, 0.018269306, 0.018274097, 0.018279097, 0.018285014, 0.018289667, 0.018295931, 0.018300472, 0.018305236, 0.018310264, 0.018315694, 0.018321931, 0.018327958, 0.018333111, 0.018337903, 0.018343417, 0.01834975, 0.018355472, 0.018360111, 0.018366347, 0.018370875, 0.0183755, 0.018380542, 0.018385625, 0.018391764, 0.018396875, 0.01840175, 0.018407903, 0.018413306, 0.018419403, 0.018424917, 0.018431167, 0.018437097, 0.018441681, 0.018447028, 0.018453056, 0.018458889, 0.018464847, 0.018469819, 0.018474958, 0.018480431, 0.018485333, 0.018490542, 0.0184965, 0.018502403], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.847000000002266e-06, 4.458999999998325e-06, 5.000000000001531e-06, 4.416000000000142e-06, 6.1389999999987566e-06, 5.7229999999991454e-06, 4.791000000000517e-06, 5.000000000001531e-06, 5.916999999997646e-06, 4.653000000000296e-06, 6.264000000002351e-06, 4.541000000000267e-06, 4.7639999999973814e-06, 5.028000000000671e-06, 5.430000000000712e-06, 6.236999999999215e-06, 6.026999999998728e-06, 5.153000000000796e-06, 4.791999999999991e-06, 5.514000000001601e-06, 6.333000000000727e-06, 5.721999999999672e-06, 4.6389999999972564e-06, 6.236000000003211e-06, 4.527999999996701e-06, 4.625000000001156e-06, 5.042000000000241e-06, 5.082999999999477e-06, 6.139000000002226e-06, 5.110999999998617e-06, 4.875000000001406e-06, 6.1529999999983265e-06, 5.403000000001046e-06, 6.097000000000047e-06, 5.5139999999981315e-06, 6.249999999999312e-06, 5.930000000001212e-06, 4.58400000000192e-06, 5.346999999999297e-06, 6.0279999999982015e-06, 5.833000000000227e-06, 5.958000000000352e-06, 4.971999999998922e-06, 5.139000000001226e-06, 5.472999999998895e-06, 4.902000000001072e-06, 5.2089999999990755e-06, 5.958000000000352e-06, 5.903000000001546e-06], 'diff': [0, 4.847000000002266e-06, 4.458999999998325e-06, 5.000000000001531e-06, 4.416000000000142e-06, 6.1389999999987566e-06, 5.7229999999991454e-06, 4.791000000000517e-06, 5.000000000001531e-06, 5.916999999997646e-06, 4.653000000000296e-06, 6.264000000002351e-06, 4.541000000000267e-06, 4.7639999999973814e-06, 5.028000000000671e-06, 5.430000000000712e-06, 6.236999999999215e-06, 6.026999999998728e-06, 5.153000000000796e-06, 4.791999999999991e-06, 5.514000000001601e-06, 6.333000000000727e-06, 5.721999999999672e-06, 4.6389999999972564e-06, 6.236000000003211e-06, 4.527999999996701e-06, 4.625000000001156e-06, 5.042000000000241e-06, 5.082999999999477e-06, 6.139000000002226e-06, 5.110999999998617e-06, 4.875000000001406e-06, 6.1529999999983265e-06, 5.403000000001046e-06, 6.097000000000047e-06, 5.5139999999981315e-06, 6.249999999999312e-06, 5.930000000001212e-06, 4.58400000000192e-06, 5.346999999999297e-06, 6.0279999999982015e-06, 5.833000000000227e-06, 5.958000000000352e-06, 4.971999999998922e-06, 5.139000000001226e-06, 5.472999999998895e-06, 4.902000000001072e-06, 5.2089999999990755e-06, 5.958000000000352e-06, 5.903000000001546e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:03.859" endtime="20201030 18:31:03.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.855" endtime="20201030 18:31:03.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.865" level="INFO">${RESULT} = [{'diff': 4.847000000002266e-06}, {'diff': 5.000000000001531e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 4.791000000000517e-06}, {'diff': 5.916999999997646e-06}, {'diff': 6.264000000002351e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:03.863" endtime="20201030 18:31:03.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:03.868" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.847000000002266e-06, 5.000000000001531e-06, 6.1389999999987566e-06, 4.791000000000517e-06, 5.916999999997646e-06, 6.264000000002351e-06, 4.7639999999973814e-06, 5.430000000000712e-06, 6.02...</msg>
<status status="PASS" starttime="20201030 18:31:03.866" endtime="20201030 18:31:03.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:03.871" endtime="20201030 18:31:03.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.875" level="INFO">VALUE: [4.847000000002266e-06, 5.000000000001531e-06, 6.1389999999987566e-06, 4.791000000000517e-06, 5.916999999997646e-06, 6.264000000002351e-06, 4.7639999999973814e-06, 5.430000000000712e-06, 6.026999999998728e-06, 4.791999999999991e-06, 6.333000000000727e-06, 4.6389999999972564e-06, 4.527999999996701e-06, 5.042000000000241e-06, 6.139000000002226e-06, 4.875000000001406e-06, 5.403000000001046e-06, 5.5139999999981315e-06, 5.930000000001212e-06, 5.346999999999297e-06, 5.833000000000227e-06, 4.971999999998922e-06, 5.472999999998895e-06, 5.2089999999990755e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201030 18:31:03.873" endtime="20201030 18:31:03.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.869" endtime="20201030 18:31:03.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.880" endtime="20201030 18:31:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.879" endtime="20201030 18:31:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.877" endtime="20201030 18:31:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.527" endtime="20201030 18:31:03.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.526" endtime="20201030 18:31:03.901"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.909" endtime="20201030 18:31:03.923"></status>
</kw>
<msg timestamp="20201030 18:31:03.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.907" endtime="20201030 18:31:03.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.926" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.924" endtime="20201030 18:31:03.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.927" endtime="20201030 18:31:03.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.905" endtime="20201030 18:31:03.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.903" endtime="20201030 18:31:03.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.935" endtime="20201030 18:31:04.205"></status>
</kw>
<msg timestamp="20201030 18:31:04.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01776775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:03.934" endtime="20201030 18:31:04.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01776775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:04.208" endtime="20201030 18:31:04.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.213" endtime="20201030 18:31:04.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.931" endtime="20201030 18:31:04.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.930" endtime="20201030 18:31:04.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:04.230" level="INFO">${debug} = {'time': [0.017762375, 0.01776775, 0.017773722, 0.017778444, 0.017783875, 0.017790042, 0.017795083, 0.017800347, 0.017805375, 0.017810833, 0.017816306, 0.017821764, 0.017826306, 0.017832375, 0.0178376...</msg>
<status status="PASS" starttime="20201030 18:31:04.216" endtime="20201030 18:31:04.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.231" endtime="20201030 18:31:04.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.236" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:04.235" endtime="20201030 18:31:04.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.239" level="INFO">VALUE: {'time': [0.017762375, 0.01776775, 0.017773722, 0.017778444, 0.017783875, 0.017790042, 0.017795083, 0.017800347, 0.017805375, 0.017810833, 0.017816306, 0.017821764, 0.017826306, 0.017832375, 0.017837653, 0.017844, 0.017850333, 0.017855486, 0.017861625, 0.017867903, 0.017873736, 0.017879597, 0.017884597, 0.017890069, 0.017894472, 0.017900375, 0.017904833, 0.01790975, 0.017914444, 0.017919472, 0.017925431, 0.017929847, 0.017935417, 0.017940194, 0.017946111, 0.017951889, 0.017957194, 0.017961931, 0.017967444, 0.017973486, 0.017978403, 0.017984042, 0.017990375, 0.017996264, 0.018002181, 0.018008444, 0.018014028, 0.0180195, 0.018025639, 0.018031486], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 5.374999999998437e-06, 5.971999999999922e-06, 4.722000000002141e-06, 5.431000000000186e-06, 6.166999999997896e-06, 5.041000000000767e-06, 5.264000000001351e-06, 5.027999999997201e-06, 5.458000000003321e-06, 5.472999999998895e-06, 5.457999999999852e-06, 4.541999999999741e-06, 6.069000000000907e-06, 5.277999999997451e-06, 6.347000000000297e-06, 6.333000000000727e-06, 5.153000000000796e-06, 6.1389999999987566e-06, 6.278000000001921e-06, 5.833000000000227e-06, 5.860999999999367e-06, 4.9999999999980616e-06, 5.472000000002891e-06, 4.403000000000046e-06, 5.9029999999980765e-06, 4.457999999998852e-06, 4.917000000000116e-06, 4.694000000003001e-06, 5.027999999997201e-06, 5.9589999999998255e-06, 4.416000000000142e-06, 5.569999999999881e-06, 4.777000000000947e-06, 5.917000000001116e-06, 5.7779999999979514e-06, 5.305000000000587e-06, 4.737000000001185e-06, 5.512999999998658e-06, 6.042000000001241e-06, 4.917000000000116e-06, 5.6389999999982565e-06, 6.333000000000727e-06, 5.889000000001976e-06, 5.916999999997646e-06, 6.262999999999408e-06, 5.58400000000292e-06, 5.471999999999422e-06, 6.1389999999987566e-06, 5.846999999999797e-06], 'diff': [0, 5.374999999998437e-06, 5.971999999999922e-06, 4.722000000002141e-06, 5.431000000000186e-06, 6.166999999997896e-06, 5.041000000000767e-06, 5.264000000001351e-06, 5.027999999997201e-06, 5.458000000003321e-06, 5.472999999998895e-06, 5.457999999999852e-06, 4.541999999999741e-06, 6.069000000000907e-06, 5.277999999997451e-06, 6.347000000000297e-06, 6.333000000000727e-06, 5.153000000000796e-06, 6.1389999999987566e-06, 6.278000000001921e-06, 5.833000000000227e-06, 5.860999999999367e-06, 4.9999999999980616e-06, 5.472000000002891e-06, 4.403000000000046e-06, 5.9029999999980765e-06, 4.457999999998852e-06, 4.917000000000116e-06, 4.694000000003001e-06, 5.027999999997201e-06, 5.9589999999998255e-06, 4.416000000000142e-06, 5.569999999999881e-06, 4.777000000000947e-06, 5.917000000001116e-06, 5.7779999999979514e-06, 5.305000000000587e-06, 4.737000000001185e-06, 5.512999999998658e-06, 6.042000000001241e-06, 4.917000000000116e-06, 5.6389999999982565e-06, 6.333000000000727e-06, 5.889000000001976e-06, 5.916999999997646e-06, 6.262999999999408e-06, 5.58400000000292e-06, 5.471999999999422e-06, 6.1389999999987566e-06, 5.846999999999797e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:04.237" endtime="20201030 18:31:04.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.233" endtime="20201030 18:31:04.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.244" level="INFO">${RESULT} = [{'diff': 5.374999999998437e-06}, {'diff': 4.722000000002141e-06}, {'diff': 6.166999999997896e-06}, {'diff': 5.264000000001351e-06}, {'diff': 5.458000000003321e-06}, {'diff': 5.457999999999852e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:04.241" endtime="20201030 18:31:04.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:04.248" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.374999999998437e-06, 4.722000000002141e-06, 6.166999999997896e-06, 5.264000000001351e-06, 5.458000000003321e-06, 5.457999999999852e-06, 6.069000000000907e-06, 6.347000000000297e-06, 5.1530...</msg>
<status status="PASS" starttime="20201030 18:31:04.245" endtime="20201030 18:31:04.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.252" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:04.251" endtime="20201030 18:31:04.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.254" level="INFO">VALUE: [5.374999999998437e-06, 4.722000000002141e-06, 6.166999999997896e-06, 5.264000000001351e-06, 5.458000000003321e-06, 5.457999999999852e-06, 6.069000000000907e-06, 6.347000000000297e-06, 5.153000000000796e-06, 6.278000000001921e-06, 5.860999999999367e-06, 5.472000000002891e-06, 5.9029999999980765e-06, 4.917000000000116e-06, 5.027999999997201e-06, 4.416000000000142e-06, 4.777000000000947e-06, 5.7779999999979514e-06, 4.737000000001185e-06, 6.042000000001241e-06, 5.6389999999982565e-06, 5.889000000001976e-06, 6.262999999999408e-06, 5.471999999999422e-06, 5.846999999999797e-06]</msg>
<status status="PASS" starttime="20201030 18:31:04.253" endtime="20201030 18:31:04.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.248" endtime="20201030 18:31:04.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.259" endtime="20201030 18:31:04.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.257" endtime="20201030 18:31:04.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.256" endtime="20201030 18:31:04.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.902" endtime="20201030 18:31:04.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.901" endtime="20201030 18:31:04.279"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.287" endtime="20201030 18:31:04.302"></status>
</kw>
<msg timestamp="20201030 18:31:04.302" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.286" endtime="20201030 18:31:04.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.305" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.304" endtime="20201030 18:31:04.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.306" endtime="20201030 18:31:04.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.283" endtime="20201030 18:31:04.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.281" endtime="20201030 18:31:04.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.315" endtime="20201030 18:31:04.581"></status>
</kw>
<msg timestamp="20201030 18:31:04.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017273292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.313" endtime="20201030 18:31:04.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017273292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.584" endtime="20201030 18:31:04.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.589" endtime="20201030 18:31:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.311" endtime="20201030 18:31:04.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.309" endtime="20201030 18:31:04.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:04.607" level="INFO">${debug} = {'time': [0.017267861, 0.017273292, 0.017278125, 0.017284097, 0.017288931, 0.017293958, 0.017299722, 0.017304194, 0.017310472, 0.017315667, 0.017321833, 0.017326667, 0.017331319, 0.017335847, 0.017340...</msg>
<status status="PASS" starttime="20201030 18:31:04.593" endtime="20201030 18:31:04.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.608" endtime="20201030 18:31:04.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.613" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:04.612" endtime="20201030 18:31:04.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.616" level="INFO">VALUE: {'time': [0.017267861, 0.017273292, 0.017278125, 0.017284097, 0.017288931, 0.017293958, 0.017299722, 0.017304194, 0.017310472, 0.017315667, 0.017321833, 0.017326667, 0.017331319, 0.017335847, 0.017340625, 0.017346778, 0.017351181, 0.017357014, 0.01736225, 0.017367, 0.017373056, 0.017379042, 0.017383889, 0.017390181, 0.017394931, 0.017400792, 0.017407111, 0.017411889, 0.01741675, 0.017422389, 0.017428083, 0.017433181, 0.017439083, 0.017445222, 0.017451125, 0.017455597, 0.017461333, 0.017466222, 0.017471986, 0.017476639, 0.01748225, 0.017488181, 0.017494333, 0.017499667, 0.017504944, 0.017509722, 0.017514625, 0.017519153, 0.017523542, 0.017528944], 'sourceeventsource_diff': [0, 5.431000000000186e-06, 4.832999999999227e-06, 5.971999999999922e-06, 4.83400000000217e-06, 5.027000000001197e-06, 5.7639999999983815e-06, 4.471999999998422e-06, 6.278000000001921e-06, 5.1949999999995056e-06, 6.165999999998423e-06, 4.83400000000217e-06, 4.652000000000822e-06, 4.528000000000171e-06, 4.777999999996951e-06, 6.153000000001796e-06, 4.403000000000046e-06, 5.833000000000227e-06, 5.235999999998742e-06, 4.750000000001281e-06, 6.056000000000811e-06, 5.985999999999492e-06, 4.846999999998797e-06, 6.292000000001491e-06, 4.7499999999978115e-06, 5.861000000002836e-06, 6.318999999997688e-06, 4.778000000000421e-06, 4.861000000001836e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.09799999999852e-06, 5.902000000002072e-06, 6.1389999999987566e-06, 5.903000000001546e-06, 4.471999999998422e-06, 5.735999999999242e-06, 4.889000000000976e-06, 5.7639999999983815e-06, 4.653000000000296e-06, 5.611000000002586e-06, 5.930999999997216e-06, 6.152000000002322e-06, 5.3339999999992005e-06, 5.277000000001447e-06, 4.777999999996951e-06, 4.903000000000546e-06, 4.528000000000171e-06, 4.389000000000476e-06, 5.402000000001572e-06], 'diff': [0, 5.431000000000186e-06, 4.832999999999227e-06, 5.971999999999922e-06, 4.83400000000217e-06, 5.027000000001197e-06, 5.7639999999983815e-06, 4.471999999998422e-06, 6.278000000001921e-06, 5.1949999999995056e-06, 6.165999999998423e-06, 4.83400000000217e-06, 4.652000000000822e-06, 4.528000000000171e-06, 4.777999999996951e-06, 6.153000000001796e-06, 4.403000000000046e-06, 5.833000000000227e-06, 5.235999999998742e-06, 4.750000000001281e-06, 6.056000000000811e-06, 5.985999999999492e-06, 4.846999999998797e-06, 6.292000000001491e-06, 4.7499999999978115e-06, 5.861000000002836e-06, 6.318999999997688e-06, 4.778000000000421e-06, 4.861000000001836e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.09799999999852e-06, 5.902000000002072e-06, 6.1389999999987566e-06, 5.903000000001546e-06, 4.471999999998422e-06, 5.735999999999242e-06, 4.889000000000976e-06, 5.7639999999983815e-06, 4.653000000000296e-06, 5.611000000002586e-06, 5.930999999997216e-06, 6.152000000002322e-06, 5.3339999999992005e-06, 5.277000000001447e-06, 4.777999999996951e-06, 4.903000000000546e-06, 4.528000000000171e-06, 4.389000000000476e-06, 5.402000000001572e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:04.614" endtime="20201030 18:31:04.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.611" endtime="20201030 18:31:04.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.621" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.971999999999922e-06}, {'diff': 5.027000000001197e-06}, {'diff': 4.471999999998422e-06}, {'diff': 5.1949999999995056e-06}, {'diff': 4.83400000000217e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:04.618" endtime="20201030 18:31:04.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:04.624" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.431000000000186e-06, 5.971999999999922e-06, 5.027000000001197e-06, 4.471999999998422e-06, 5.1949999999995056e-06, 4.83400000000217e-06, 4.528000000000171e-06, 6.153000000001796e-06, 5.8330...</msg>
<status status="PASS" starttime="20201030 18:31:04.622" endtime="20201030 18:31:04.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:04.627" endtime="20201030 18:31:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.630" level="INFO">VALUE: [5.431000000000186e-06, 5.971999999999922e-06, 5.027000000001197e-06, 4.471999999998422e-06, 5.1949999999995056e-06, 4.83400000000217e-06, 4.528000000000171e-06, 6.153000000001796e-06, 5.833000000000227e-06, 4.750000000001281e-06, 5.985999999999492e-06, 6.292000000001491e-06, 5.861000000002836e-06, 4.778000000000421e-06, 5.6389999999982565e-06, 5.09799999999852e-06, 6.1389999999987566e-06, 4.471999999998422e-06, 4.889000000000976e-06, 4.653000000000296e-06, 5.930999999997216e-06, 5.3339999999992005e-06, 4.777999999996951e-06, 4.528000000000171e-06, 5.402000000001572e-06]</msg>
<status status="PASS" starttime="20201030 18:31:04.629" endtime="20201030 18:31:04.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.625" endtime="20201030 18:31:04.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.635" endtime="20201030 18:31:04.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.634" endtime="20201030 18:31:04.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.632" endtime="20201030 18:31:04.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.280" endtime="20201030 18:31:04.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.280" endtime="20201030 18:31:04.656"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.664" endtime="20201030 18:31:04.677"></status>
</kw>
<msg timestamp="20201030 18:31:04.677" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.662" endtime="20201030 18:31:04.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.680" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.678" endtime="20201030 18:31:04.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.681" endtime="20201030 18:31:04.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.660" endtime="20201030 18:31:04.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.658" endtime="20201030 18:31:04.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.692" endtime="20201030 18:31:04.958"></status>
</kw>
<msg timestamp="20201030 18:31:04.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017437292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017441944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.688" endtime="20201030 18:31:04.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017437292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017441944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.961" endtime="20201030 18:31:04.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.966" endtime="20201030 18:31:04.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.686" endtime="20201030 18:31:04.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.684" endtime="20201030 18:31:04.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:04.982" level="INFO">${debug} = {'time': [0.017437292, 0.017441944, 0.017446417, 0.017452056, 0.017457528, 0.017463597, 0.017468639, 0.017473083, 0.017477986, 0.017484153, 0.017489583, 0.017494069, 0.017498972, 0.017504403, 0.017510...</msg>
<status status="PASS" starttime="20201030 18:31:04.969" endtime="20201030 18:31:04.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.983" endtime="20201030 18:31:04.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.988" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:04.987" endtime="20201030 18:31:04.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.991" level="INFO">VALUE: {'time': [0.017437292, 0.017441944, 0.017446417, 0.017452056, 0.017457528, 0.017463597, 0.017468639, 0.017473083, 0.017477986, 0.017484153, 0.017489583, 0.017494069, 0.017498972, 0.017504403, 0.017510639, 0.017515611, 0.017520083, 0.017525472, 0.017531125, 0.017536903, 0.017542806, 0.017548944, 0.017554431, 0.01756075, 0.017565083, 0.017569681, 0.017575708, 0.017580597, 0.017586069, 0.017592153, 0.017597792, 0.017602514, 0.017608542, 0.017614069, 0.017618972, 0.017623556, 0.017629903, 0.017635944, 0.017641125, 0.017646264, 0.017652056, 0.017657833, 0.017663917, 0.017669069, 0.017675153, 0.017680181, 0.017686028, 0.017692042, 0.017697778, 0.017702917], 'sourceeventsource_diff': [0, 4.652000000000822e-06, 4.472999999997895e-06, 5.639000000001726e-06, 5.471999999999422e-06, 6.069000000000907e-06, 5.042000000000241e-06, 4.443999999999282e-06, 4.903000000000546e-06, 6.166999999997896e-06, 5.430000000000712e-06, 4.486000000001461e-06, 4.903000000000546e-06, 5.431000000000186e-06, 6.235999999999742e-06, 4.971999999998922e-06, 4.471999999998422e-06, 5.389000000001476e-06, 5.653000000001296e-06, 5.7779999999979514e-06, 5.903000000001546e-06, 6.137999999999283e-06, 5.486999999998465e-06, 6.319000000001157e-06, 4.332999999998727e-06, 4.59800000000149e-06, 6.026999999998728e-06, 4.889000000000976e-06, 5.471999999999422e-06, 6.0839999999999506e-06, 5.639000000001726e-06, 4.721999999998672e-06, 6.028000000001671e-06, 5.526999999998228e-06, 4.903000000000546e-06, 4.5839999999984504e-06, 6.347000000000297e-06, 6.041000000001767e-06, 5.180999999999936e-06, 5.1389999999977565e-06, 5.792000000000991e-06, 5.777000000001947e-06, 6.0839999999999506e-06, 5.151999999997853e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 5.846999999999797e-06, 6.014000000002101e-06, 5.735999999999242e-06, 5.1389999999977565e-06], 'diff': [0, 4.652000000000822e-06, 4.472999999997895e-06, 5.639000000001726e-06, 5.471999999999422e-06, 6.069000000000907e-06, 5.042000000000241e-06, 4.443999999999282e-06, 4.903000000000546e-06, 6.166999999997896e-06, 5.430000000000712e-06, 4.486000000001461e-06, 4.903000000000546e-06, 5.431000000000186e-06, 6.235999999999742e-06, 4.971999999998922e-06, 4.471999999998422e-06, 5.389000000001476e-06, 5.653000000001296e-06, 5.7779999999979514e-06, 5.903000000001546e-06, 6.137999999999283e-06, 5.486999999998465e-06, 6.319000000001157e-06, 4.332999999998727e-06, 4.59800000000149e-06, 6.026999999998728e-06, 4.889000000000976e-06, 5.471999999999422e-06, 6.0839999999999506e-06, 5.639000000001726e-06, 4.721999999998672e-06, 6.028000000001671e-06, 5.526999999998228e-06, 4.903000000000546e-06, 4.5839999999984504e-06, 6.347000000000297e-06, 6.041000000001767e-06, 5.180999999999936e-06, 5.1389999999977565e-06, 5.792000000000991e-06, 5.777000000001947e-06, 6.0839999999999506e-06, 5.151999999997853e-06, 6.0839999999999506e-06, 5.028000000000671e-06, 5.846999999999797e-06, 6.014000000002101e-06, 5.735999999999242e-06, 5.1389999999977565e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:04.989" endtime="20201030 18:31:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.985" endtime="20201030 18:31:04.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.996" level="INFO">${RESULT} = [{'diff': 4.652000000000822e-06}, {'diff': 5.639000000001726e-06}, {'diff': 6.069000000000907e-06}, {'diff': 4.443999999999282e-06}, {'diff': 6.166999999997896e-06}, {'diff': 4.486000000001461e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:04.993" endtime="20201030 18:31:04.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:04.999" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.652000000000822e-06, 5.639000000001726e-06, 6.069000000000907e-06, 4.443999999999282e-06, 6.166999999997896e-06, 4.486000000001461e-06, 5.431000000000186e-06, 4.971999999998922e-06, 5.3890...</msg>
<status status="PASS" starttime="20201030 18:31:04.997" endtime="20201030 18:31:04.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.003" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:05.002" endtime="20201030 18:31:05.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.006" level="INFO">VALUE: [4.652000000000822e-06, 5.639000000001726e-06, 6.069000000000907e-06, 4.443999999999282e-06, 6.166999999997896e-06, 4.486000000001461e-06, 5.431000000000186e-06, 4.971999999998922e-06, 5.389000000001476e-06, 5.7779999999979514e-06, 6.137999999999283e-06, 6.319000000001157e-06, 4.59800000000149e-06, 4.889000000000976e-06, 6.0839999999999506e-06, 4.721999999998672e-06, 5.526999999998228e-06, 4.5839999999984504e-06, 6.041000000001767e-06, 5.1389999999977565e-06, 5.777000000001947e-06, 5.151999999997853e-06, 5.028000000000671e-06, 6.014000000002101e-06, 5.1389999999977565e-06]</msg>
<status status="PASS" starttime="20201030 18:31:05.004" endtime="20201030 18:31:05.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.000" endtime="20201030 18:31:05.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.010" endtime="20201030 18:31:05.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.009" endtime="20201030 18:31:05.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.007" endtime="20201030 18:31:05.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.657" endtime="20201030 18:31:05.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.656" endtime="20201030 18:31:05.031"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.039" endtime="20201030 18:31:05.053"></status>
</kw>
<msg timestamp="20201030 18:31:05.054" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.038" endtime="20201030 18:31:05.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.055" endtime="20201030 18:31:05.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.057" endtime="20201030 18:31:05.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.034" endtime="20201030 18:31:05.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.033" endtime="20201030 18:31:05.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.066" endtime="20201030 18:31:05.330"></status>
</kw>
<msg timestamp="20201030 18:31:05.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.065" endtime="20201030 18:31:05.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.333" endtime="20201030 18:31:05.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.339" endtime="20201030 18:31:05.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.062" endtime="20201030 18:31:05.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.061" endtime="20201030 18:31:05.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:05.355" level="INFO">${debug} = {'time': [0.018302944, 0.018309083, 0.018315306, 0.018321708, 0.018327875, 0.01833325, 0.018338333, 0.018343486, 0.018349194, 0.018353986, 0.01836, 0.018365708, 0.018370611, 0.018376694, 0.018382542, ...</msg>
<status status="PASS" starttime="20201030 18:31:05.342" endtime="20201030 18:31:05.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.356" endtime="20201030 18:31:05.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.361" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:05.360" endtime="20201030 18:31:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.364" level="INFO">VALUE: {'time': [0.018302944, 0.018309083, 0.018315306, 0.018321708, 0.018327875, 0.01833325, 0.018338333, 0.018343486, 0.018349194, 0.018353986, 0.01836, 0.018365708, 0.018370611, 0.018376694, 0.018382542, 0.0183885, 0.018394542, 0.018400736, 0.018406889, 0.018411486, 0.0184165, 0.018422347, 0.018427306, 0.018433014, 0.018439, 0.018444472, 0.018448972, 0.018453931, 0.018458889, 0.018465236, 0.018470014, 0.018475667, 0.018480931, 0.018486542, 0.018491125, 0.018496139, 0.018501417, 0.018506431, 0.018511083, 0.018517056, 0.018522139, 0.018526722, 0.018532208, 0.018536903, 0.018542306, 0.018547958, 0.018552917, 0.018559069, 0.018564278, 0.018569319], 'sourceeventsource_diff': [0, 6.1389999999987566e-06, 6.2229999999996455e-06, 6.401999999999103e-06, 6.167000000001366e-06, 5.374999999998437e-06, 5.082999999999477e-06, 5.153000000000796e-06, 5.708000000000102e-06, 4.791999999999991e-06, 6.014000000002101e-06, 5.708000000000102e-06, 4.902999999997076e-06, 6.083000000000477e-06, 5.84800000000274e-06, 5.9579999999968825e-06, 6.042000000001241e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 4.597000000002016e-06, 5.0139999999976315e-06, 5.846999999999797e-06, 4.959000000002295e-06, 5.708000000000102e-06, 5.985999999999492e-06, 5.471999999999422e-06, 4.500000000001031e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 6.347000000000297e-06, 4.778000000000421e-06, 5.653000000001296e-06, 5.2639999999978815e-06, 5.611000000002586e-06, 4.582999999998977e-06, 5.014000000001101e-06, 5.277999999997451e-06, 5.014000000001101e-06, 4.652000000000822e-06, 5.9729999999993955e-06, 5.082999999999477e-06, 4.582999999998977e-06, 5.486000000002461e-06, 4.6949999999990055e-06, 5.403000000001046e-06, 5.651999999998353e-06, 4.9589999999988255e-06, 6.152000000002322e-06, 5.2089999999990755e-06, 5.041000000000767e-06], 'diff': [0, 6.1389999999987566e-06, 6.2229999999996455e-06, 6.401999999999103e-06, 6.167000000001366e-06, 5.374999999998437e-06, 5.082999999999477e-06, 5.153000000000796e-06, 5.708000000000102e-06, 4.791999999999991e-06, 6.014000000002101e-06, 5.708000000000102e-06, 4.902999999997076e-06, 6.083000000000477e-06, 5.84800000000274e-06, 5.9579999999968825e-06, 6.042000000001241e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 4.597000000002016e-06, 5.0139999999976315e-06, 5.846999999999797e-06, 4.959000000002295e-06, 5.708000000000102e-06, 5.985999999999492e-06, 5.471999999999422e-06, 4.500000000001031e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 6.347000000000297e-06, 4.778000000000421e-06, 5.653000000001296e-06, 5.2639999999978815e-06, 5.611000000002586e-06, 4.582999999998977e-06, 5.014000000001101e-06, 5.277999999997451e-06, 5.014000000001101e-06, 4.652000000000822e-06, 5.9729999999993955e-06, 5.082999999999477e-06, 4.582999999998977e-06, 5.486000000002461e-06, 4.6949999999990055e-06, 5.403000000001046e-06, 5.651999999998353e-06, 4.9589999999988255e-06, 6.152000000002322e-06, 5.2089999999990755e-06, 5.041000000000767e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:05.362" endtime="20201030 18:31:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.359" endtime="20201030 18:31:05.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.369" level="INFO">${RESULT} = [{'diff': 6.1389999999987566e-06}, {'diff': 6.401999999999103e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.153000000000796e-06}, {'diff': 4.791999999999991e-06}, {'diff': 5.708000000000102e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:05.366" endtime="20201030 18:31:05.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:05.372" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.1389999999987566e-06, 6.401999999999103e-06, 5.374999999998437e-06, 5.153000000000796e-06, 4.791999999999991e-06, 5.708000000000102e-06, 6.083000000000477e-06, 5.9579999999968825e-06, 6.19...</msg>
<status status="PASS" starttime="20201030 18:31:05.370" endtime="20201030 18:31:05.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.376" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:05.375" endtime="20201030 18:31:05.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.378" level="INFO">VALUE: [6.1389999999987566e-06, 6.401999999999103e-06, 5.374999999998437e-06, 5.153000000000796e-06, 4.791999999999991e-06, 5.708000000000102e-06, 6.083000000000477e-06, 5.9579999999968825e-06, 6.194000000001032e-06, 4.597000000002016e-06, 5.846999999999797e-06, 5.708000000000102e-06, 5.471999999999422e-06, 4.9589999999988255e-06, 6.347000000000297e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.014000000001101e-06, 5.014000000001101e-06, 5.9729999999993955e-06, 4.582999999998977e-06, 4.6949999999990055e-06, 5.651999999998353e-06, 6.152000000002322e-06, 5.041000000000767e-06]</msg>
<status status="PASS" starttime="20201030 18:31:05.377" endtime="20201030 18:31:05.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.373" endtime="20201030 18:31:05.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.385" endtime="20201030 18:31:05.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.383" endtime="20201030 18:31:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.380" endtime="20201030 18:31:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.032" endtime="20201030 18:31:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.031" endtime="20201030 18:31:05.405"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.413" endtime="20201030 18:31:05.427"></status>
</kw>
<msg timestamp="20201030 18:31:05.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.412" endtime="20201030 18:31:05.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.429" endtime="20201030 18:31:05.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.431" endtime="20201030 18:31:05.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.409" endtime="20201030 18:31:05.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.407" endtime="20201030 18:31:05.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.440" endtime="20201030 18:31:05.709"></status>
</kw>
<msg timestamp="20201030 18:31:05.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.439" endtime="20201030 18:31:05.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.712" endtime="20201030 18:31:05.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.717" endtime="20201030 18:31:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.436" endtime="20201030 18:31:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.434" endtime="20201030 18:31:05.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:05.733" level="INFO">${debug} = {'time': [0.017625542, 0.017631375, 0.017635958, 0.017641625, 0.017647764, 0.017653819, 0.017660125, 0.017664528, 0.017669611, 0.017675764, 0.017680667, 0.017685944, 0.017692292, 0.01769675, 0.0177020...</msg>
<status status="PASS" starttime="20201030 18:31:05.720" endtime="20201030 18:31:05.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.734" endtime="20201030 18:31:05.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.739" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:05.738" endtime="20201030 18:31:05.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.742" level="INFO">VALUE: {'time': [0.017625542, 0.017631375, 0.017635958, 0.017641625, 0.017647764, 0.017653819, 0.017660125, 0.017664528, 0.017669611, 0.017675764, 0.017680667, 0.017685944, 0.017692292, 0.01769675, 0.017702083, 0.017706861, 0.017711528, 0.017717778, 0.017723431, 0.017728903, 0.017734042, 0.017740417, 0.017746167, 0.017752486, 0.017757833, 0.017763611, 0.017768889, 0.017774097, 0.01778, 0.017785097, 0.017789556, 0.017794847, 0.017799222, 0.017804875, 0.017810153, 0.017816486, 0.017821083, 0.017827125, 0.017833458, 0.017838861, 0.017843431, 0.017847833, 0.017853931, 0.017859083, 0.017863653, 0.017868125, 0.017872708, 0.017878361, 0.017883319, 0.017888792], 'sourceeventsource_diff': [0, 5.833000000000227e-06, 4.582999999998977e-06, 5.667000000000866e-06, 6.1389999999987566e-06, 6.055000000001337e-06, 6.305999999997591e-06, 4.403000000000046e-06, 5.083000000002946e-06, 6.1529999999983265e-06, 4.903000000000546e-06, 5.276999999997978e-06, 6.3479999999997705e-06, 4.458000000002321e-06, 5.332999999999727e-06, 4.778000000000421e-06, 4.666999999999866e-06, 6.249999999999312e-06, 5.653000000001296e-06, 5.471999999999422e-06, 5.1389999999977565e-06, 6.375000000002906e-06, 5.749999999998812e-06, 6.319000000001157e-06, 5.346999999999297e-06, 5.7779999999979514e-06, 5.278000000000921e-06, 5.207999999999602e-06, 5.903000000001546e-06, 5.096999999999047e-06, 4.459000000001795e-06, 5.290999999997548e-06, 4.375000000000906e-06, 5.653000000001296e-06, 5.277999999997451e-06, 6.333000000000727e-06, 4.597000000002016e-06, 6.041999999997771e-06, 6.333000000000727e-06, 5.403000000001046e-06, 4.5699999999988805e-06, 4.402000000000572e-06, 6.0979999999995205e-06, 5.152000000001322e-06, 4.5699999999988805e-06, 4.471999999998422e-06, 4.583000000002446e-06, 5.6529999999978264e-06, 4.958000000002821e-06, 5.472999999998895e-06], 'diff': [0, 5.833000000000227e-06, 4.582999999998977e-06, 5.667000000000866e-06, 6.1389999999987566e-06, 6.055000000001337e-06, 6.305999999997591e-06, 4.403000000000046e-06, 5.083000000002946e-06, 6.1529999999983265e-06, 4.903000000000546e-06, 5.276999999997978e-06, 6.3479999999997705e-06, 4.458000000002321e-06, 5.332999999999727e-06, 4.778000000000421e-06, 4.666999999999866e-06, 6.249999999999312e-06, 5.653000000001296e-06, 5.471999999999422e-06, 5.1389999999977565e-06, 6.375000000002906e-06, 5.749999999998812e-06, 6.319000000001157e-06, 5.346999999999297e-06, 5.7779999999979514e-06, 5.278000000000921e-06, 5.207999999999602e-06, 5.903000000001546e-06, 5.096999999999047e-06, 4.459000000001795e-06, 5.290999999997548e-06, 4.375000000000906e-06, 5.653000000001296e-06, 5.277999999997451e-06, 6.333000000000727e-06, 4.597000000002016e-06, 6.041999999997771e-06, 6.333000000000727e-06, 5.403000000001046e-06, 4.5699999999988805e-06, 4.402000000000572e-06, 6.0979999999995205e-06, 5.152000000001322e-06, 4.5699999999988805e-06, 4.471999999998422e-06, 4.583000000002446e-06, 5.6529999999978264e-06, 4.958000000002821e-06, 5.472999999998895e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:05.740" endtime="20201030 18:31:05.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.736" endtime="20201030 18:31:05.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.747" level="INFO">${RESULT} = [{'diff': 5.833000000000227e-06}, {'diff': 5.667000000000866e-06}, {'diff': 6.055000000001337e-06}, {'diff': 4.403000000000046e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 5.276999999997978e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:05.744" endtime="20201030 18:31:05.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:05.751" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.833000000000227e-06, 5.667000000000866e-06, 6.055000000001337e-06, 4.403000000000046e-06, 6.1529999999983265e-06, 5.276999999997978e-06, 4.458000000002321e-06, 4.778000000000421e-06, 6.249...</msg>
<status status="PASS" starttime="20201030 18:31:05.748" endtime="20201030 18:31:05.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.756" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:05.755" endtime="20201030 18:31:05.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.759" level="INFO">VALUE: [5.833000000000227e-06, 5.667000000000866e-06, 6.055000000001337e-06, 4.403000000000046e-06, 6.1529999999983265e-06, 5.276999999997978e-06, 4.458000000002321e-06, 4.778000000000421e-06, 6.249999999999312e-06, 5.471999999999422e-06, 6.375000000002906e-06, 6.319000000001157e-06, 5.7779999999979514e-06, 5.207999999999602e-06, 5.096999999999047e-06, 5.290999999997548e-06, 5.653000000001296e-06, 6.333000000000727e-06, 6.041999999997771e-06, 5.403000000001046e-06, 4.402000000000572e-06, 5.152000000001322e-06, 4.471999999998422e-06, 5.6529999999978264e-06, 5.472999999998895e-06]</msg>
<status status="PASS" starttime="20201030 18:31:05.757" endtime="20201030 18:31:05.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.752" endtime="20201030 18:31:05.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.763" endtime="20201030 18:31:05.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.762" endtime="20201030 18:31:05.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.760" endtime="20201030 18:31:05.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.406" endtime="20201030 18:31:05.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.406" endtime="20201030 18:31:05.785"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.793" endtime="20201030 18:31:05.808"></status>
</kw>
<msg timestamp="20201030 18:31:05.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.792" endtime="20201030 18:31:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.810" endtime="20201030 18:31:05.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.814" endtime="20201030 18:31:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.789" endtime="20201030 18:31:05.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.787" endtime="20201030 18:31:05.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.823" endtime="20201030 18:31:06.088"></status>
</kw>
<msg timestamp="20201030 18:31:06.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019210472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.821" endtime="20201030 18:31:06.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019210472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.092" endtime="20201030 18:31:06.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.097" endtime="20201030 18:31:06.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.819" endtime="20201030 18:31:06.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.817" endtime="20201030 18:31:06.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:06.114" level="INFO">${debug} = {'time': [0.019204264, 0.019210472, 0.019215625, 0.019221958, 0.019226486, 0.019232764, 0.019239097, 0.019243639, 0.019248972, 0.0192535, 0.019259778, 0.019264167, 0.01926925, 0.019274222, 0.019279875...</msg>
<status status="PASS" starttime="20201030 18:31:06.101" endtime="20201030 18:31:06.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.116" endtime="20201030 18:31:06.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.121" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:06.120" endtime="20201030 18:31:06.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.124" level="INFO">VALUE: {'time': [0.019204264, 0.019210472, 0.019215625, 0.019221958, 0.019226486, 0.019232764, 0.019239097, 0.019243639, 0.019248972, 0.0192535, 0.019259778, 0.019264167, 0.01926925, 0.019274222, 0.019279875, 0.019284639, 0.019289611, 0.019295569, 0.019301486, 0.019307764, 0.019314083, 0.019320431, 0.019326028, 0.019332181, 0.019338333, 0.019344083, 0.019349569, 0.019354708, 0.019360472, 0.019364958, 0.019370736, 0.019376319, 0.019381431, 0.019387764, 0.019392208, 0.019396597, 0.019401111, 0.019405764, 0.019410875, 0.019416889, 0.019422653, 0.019427125, 0.019432972, 0.019437542, 0.019442014, 0.019446431, 0.019452375, 0.019458097, 0.019464431, 0.019470319], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 6.208000000000602e-06, 5.153000000000796e-06, 6.333000000000727e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 6.333000000000727e-06, 4.541999999999741e-06, 5.332999999999727e-06, 4.528000000000171e-06, 6.278000000001921e-06, 4.388999999997006e-06, 5.083000000002946e-06, 4.971999999998922e-06, 5.6529999999978264e-06, 4.764000000000851e-06, 4.972000000002391e-06, 5.9579999999968825e-06, 5.917000000001116e-06, 6.278000000001921e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 5.596999999999547e-06, 6.153000000001796e-06, 6.151999999998853e-06, 5.750000000002281e-06, 5.485999999998992e-06, 5.139000000001226e-06, 5.7639999999983815e-06, 4.486000000001461e-06, 5.7779999999979514e-06, 5.582999999999977e-06, 5.11200000000156e-06, 6.3329999999972575e-06, 4.444000000002751e-06, 4.389000000000476e-06, 4.513999999997131e-06, 4.653000000000296e-06, 5.111000000002086e-06, 6.0139999999986316e-06, 5.764000000001851e-06, 4.471999999998422e-06, 5.846999999999797e-06, 4.5699999999988805e-06, 4.472000000001891e-06, 4.416999999999616e-06, 5.944000000000782e-06, 5.721999999999672e-06, 6.334000000000201e-06, 5.887999999999033e-06], 'diff': [0, 6.208000000000602e-06, 5.153000000000796e-06, 6.333000000000727e-06, 4.528000000000171e-06, 6.2779999999984515e-06, 6.333000000000727e-06, 4.541999999999741e-06, 5.332999999999727e-06, 4.528000000000171e-06, 6.278000000001921e-06, 4.388999999997006e-06, 5.083000000002946e-06, 4.971999999998922e-06, 5.6529999999978264e-06, 4.764000000000851e-06, 4.972000000002391e-06, 5.9579999999968825e-06, 5.917000000001116e-06, 6.278000000001921e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 5.596999999999547e-06, 6.153000000001796e-06, 6.151999999998853e-06, 5.750000000002281e-06, 5.485999999998992e-06, 5.139000000001226e-06, 5.7639999999983815e-06, 4.486000000001461e-06, 5.7779999999979514e-06, 5.582999999999977e-06, 5.11200000000156e-06, 6.3329999999972575e-06, 4.444000000002751e-06, 4.389000000000476e-06, 4.513999999997131e-06, 4.653000000000296e-06, 5.111000000002086e-06, 6.0139999999986316e-06, 5.764000000001851e-06, 4.471999999998422e-06, 5.846999999999797e-06, 4.5699999999988805e-06, 4.472000000001891e-06, 4.416999999999616e-06, 5.944000000000782e-06, 5.721999999999672e-06, 6.334000000000201e-06, 5.887999999999033e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:06.122" endtime="20201030 18:31:06.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.118" endtime="20201030 18:31:06.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.128" level="INFO">${RESULT} = [{'diff': 6.208000000000602e-06}, {'diff': 6.333000000000727e-06}, {'diff': 6.2779999999984515e-06}, {'diff': 4.541999999999741e-06}, {'diff': 4.528000000000171e-06}, {'diff': 4.388999999997006e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:06.125" endtime="20201030 18:31:06.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:06.131" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.208000000000602e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.388999999997006e-06, 4.971999999998922e-06, 4.764000000000851e-06, 5.957...</msg>
<status status="PASS" starttime="20201030 18:31:06.129" endtime="20201030 18:31:06.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:06.134" endtime="20201030 18:31:06.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.137" level="INFO">VALUE: [6.208000000000602e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.388999999997006e-06, 4.971999999998922e-06, 4.764000000000851e-06, 5.9579999999968825e-06, 6.278000000001921e-06, 6.3479999999997705e-06, 6.153000000001796e-06, 5.750000000002281e-06, 5.139000000001226e-06, 4.486000000001461e-06, 5.582999999999977e-06, 6.3329999999972575e-06, 4.389000000000476e-06, 4.653000000000296e-06, 6.0139999999986316e-06, 4.471999999998422e-06, 4.5699999999988805e-06, 4.416999999999616e-06, 5.721999999999672e-06, 5.887999999999033e-06]</msg>
<status status="PASS" starttime="20201030 18:31:06.136" endtime="20201030 18:31:06.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.132" endtime="20201030 18:31:06.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.142" endtime="20201030 18:31:06.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.141" endtime="20201030 18:31:06.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.140" endtime="20201030 18:31:06.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.786" endtime="20201030 18:31:06.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.786" endtime="20201030 18:31:06.163"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.171" endtime="20201030 18:31:06.184"></status>
</kw>
<msg timestamp="20201030 18:31:06.185" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.169" endtime="20201030 18:31:06.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.186" endtime="20201030 18:31:06.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.188" endtime="20201030 18:31:06.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.167" endtime="20201030 18:31:06.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.165" endtime="20201030 18:31:06.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.198" endtime="20201030 18:31:06.464"></status>
</kw>
<msg timestamp="20201030 18:31:06.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017449917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.196" endtime="20201030 18:31:06.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017449917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.466" endtime="20201030 18:31:06.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.472" endtime="20201030 18:31:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.193" endtime="20201030 18:31:06.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.191" endtime="20201030 18:31:06.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:06.488" level="INFO">${debug} = {'time': [0.017445014, 0.017449917, 0.017455806, 0.017460986, 0.017467292, 0.017472736, 0.017478792, 0.017484931, 0.017490153, 0.017494667, 0.01749975, 0.017505778, 0.017511306, 0.017516931, 0.0175229...</msg>
<status status="PASS" starttime="20201030 18:31:06.475" endtime="20201030 18:31:06.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.489" endtime="20201030 18:31:06.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.495" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:06.494" endtime="20201030 18:31:06.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.498" level="INFO">VALUE: {'time': [0.017445014, 0.017449917, 0.017455806, 0.017460986, 0.017467292, 0.017472736, 0.017478792, 0.017484931, 0.017490153, 0.017494667, 0.01749975, 0.017505778, 0.017511306, 0.017516931, 0.017522986, 0.017528319, 0.017533417, 0.017537875, 0.017543833, 0.017550111, 0.017555764, 0.017562042, 0.017566431, 0.017571347, 0.017575806, 0.017581708, 0.017586458, 0.017591708, 0.017596958, 0.017601556, 0.017607597, 0.017612292, 0.017618611, 0.017623542, 0.017628236, 0.017632972, 0.017638625, 0.01764325, 0.017648042, 0.017654014, 0.017659458, 0.017663986, 0.017670208, 0.017675903, 0.017681708, 0.017687903, 0.017693819, 0.017699264, 0.017705167, 0.017710625], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.903000000000546e-06, 5.889000000001976e-06, 5.180000000000462e-06, 6.305999999997591e-06, 5.444000000000282e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 5.222000000002641e-06, 4.513999999997131e-06, 5.083000000002946e-06, 6.0279999999982015e-06, 5.528000000001171e-06, 5.624999999998687e-06, 6.055000000001337e-06, 5.332999999999727e-06, 5.09799999999852e-06, 4.458000000002321e-06, 5.958000000000352e-06, 6.2779999999984515e-06, 5.653000000001296e-06, 6.2779999999984515e-06, 4.389000000000476e-06, 4.916000000000642e-06, 4.458999999998325e-06, 5.902000000002072e-06, 4.7499999999978115e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 4.59800000000149e-06, 6.040999999998298e-06, 4.695000000002475e-06, 6.318999999997688e-06, 4.930999999999686e-06, 4.693999999999532e-06, 4.736000000001711e-06, 5.653000000001296e-06, 4.6249999999976865e-06, 4.791999999999991e-06, 5.971999999999922e-06, 5.444000000000282e-06, 4.528000000000171e-06, 6.222000000000172e-06, 5.695000000000006e-06, 5.805000000001087e-06, 6.195000000000506e-06, 5.915999999998173e-06, 5.444999999999756e-06, 5.903000000001546e-06, 5.457999999999852e-06], 'diff': [0, 4.903000000000546e-06, 5.889000000001976e-06, 5.180000000000462e-06, 6.305999999997591e-06, 5.444000000000282e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 5.222000000002641e-06, 4.513999999997131e-06, 5.083000000002946e-06, 6.0279999999982015e-06, 5.528000000001171e-06, 5.624999999998687e-06, 6.055000000001337e-06, 5.332999999999727e-06, 5.09799999999852e-06, 4.458000000002321e-06, 5.958000000000352e-06, 6.2779999999984515e-06, 5.653000000001296e-06, 6.2779999999984515e-06, 4.389000000000476e-06, 4.916000000000642e-06, 4.458999999998325e-06, 5.902000000002072e-06, 4.7499999999978115e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 4.59800000000149e-06, 6.040999999998298e-06, 4.695000000002475e-06, 6.318999999997688e-06, 4.930999999999686e-06, 4.693999999999532e-06, 4.736000000001711e-06, 5.653000000001296e-06, 4.6249999999976865e-06, 4.791999999999991e-06, 5.971999999999922e-06, 5.444000000000282e-06, 4.528000000000171e-06, 6.222000000000172e-06, 5.695000000000006e-06, 5.805000000001087e-06, 6.195000000000506e-06, 5.915999999998173e-06, 5.444999999999756e-06, 5.903000000001546e-06, 5.457999999999852e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:06.496" endtime="20201030 18:31:06.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.492" endtime="20201030 18:31:06.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.509" level="INFO">${RESULT} = [{'diff': 4.903000000000546e-06}, {'diff': 5.180000000000462e-06}, {'diff': 5.444000000000282e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 4.513999999997131e-06}, {'diff': 6.0279999999982015e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:06.506" endtime="20201030 18:31:06.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:06.512" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.903000000000546e-06, 5.180000000000462e-06, 5.444000000000282e-06, 6.1389999999987566e-06, 4.513999999997131e-06, 6.0279999999982015e-06, 5.624999999998687e-06, 5.332999999999727e-06, 4.45...</msg>
<status status="PASS" starttime="20201030 18:31:06.510" endtime="20201030 18:31:06.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:06.515" endtime="20201030 18:31:06.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.519" level="INFO">VALUE: [4.903000000000546e-06, 5.180000000000462e-06, 5.444000000000282e-06, 6.1389999999987566e-06, 4.513999999997131e-06, 6.0279999999982015e-06, 5.624999999998687e-06, 5.332999999999727e-06, 4.458000000002321e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 4.916000000000642e-06, 5.902000000002072e-06, 5.250000000001781e-06, 4.59800000000149e-06, 4.695000000002475e-06, 4.930999999999686e-06, 4.736000000001711e-06, 4.6249999999976865e-06, 5.971999999999922e-06, 4.528000000000171e-06, 5.695000000000006e-06, 6.195000000000506e-06, 5.444999999999756e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201030 18:31:06.517" endtime="20201030 18:31:06.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.513" endtime="20201030 18:31:06.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.523" endtime="20201030 18:31:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.522" endtime="20201030 18:31:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.521" endtime="20201030 18:31:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.164" endtime="20201030 18:31:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.163" endtime="20201030 18:31:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.849" endtime="20201030 18:31:06.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.548" endtime="20201030 18:31:06.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.546" endtime="20201030 18:31:06.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.545" endtime="20201030 18:31:06.568"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:58.775" endtime="20201030 18:31:06.568" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.575" endtime="20201030 18:31:06.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.573" endtime="20201030 18:31:06.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.609" endtime="20201030 18:31:06.625"></status>
</kw>
<msg timestamp="20201030 18:31:06.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.607" endtime="20201030 18:31:06.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.627" endtime="20201030 18:31:06.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:06.630" endtime="20201030 18:31:06.632"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:06.604" endtime="20201030 18:31:06.633"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:06.602" endtime="20201030 18:31:06.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.601" endtime="20201030 18:31:06.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:06.638" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:06.637" endtime="20201030 18:31:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.635" endtime="20201030 18:31:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.600" endtime="20201030 18:31:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.599" endtime="20201030 18:31:06.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.640" endtime="20201030 18:31:06.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.598" endtime="20201030 18:31:06.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.596" endtime="20201030 18:31:06.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.572" endtime="20201030 18:31:06.643"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.651" endtime="20201030 18:31:06.668"></status>
</kw>
<msg timestamp="20201030 18:31:06.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.649" endtime="20201030 18:31:06.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.669" endtime="20201030 18:31:06.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.672" endtime="20201030 18:31:06.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.647" endtime="20201030 18:31:06.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.645" endtime="20201030 18:31:06.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.681" endtime="20201030 18:31:06.965"></status>
</kw>
<msg timestamp="20201030 18:31:06.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065714625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065720208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.679" endtime="20201030 18:31:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065714625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065720208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.969" endtime="20201030 18:31:06.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.977" endtime="20201030 18:31:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.677" endtime="20201030 18:31:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.675" endtime="20201030 18:31:06.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.984" level="INFO">${RESULT} = [{'diff': 5.583000000003446e-06}, {'diff': 1.1949999999955052e-06}, {'diff': 1.1669999999963654e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1530000000037344e-06}, {'diff': 1.1659999999968917e-0...</msg>
<status status="PASS" starttime="20201030 18:31:06.981" endtime="20201030 18:31:06.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:06.988" level="INFO">${OVERHEAD} = {'diff': [5.583000000003446e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1810000000028742e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:06.985" endtime="20201030 18:31:06.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.992" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:06.991" endtime="20201030 18:31:06.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.995" level="INFO">VALUE: [5.583000000003446e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.0970000000054547e-06, 1.1799999999895228e-06, 1.1659999999968917e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1249999999907168e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1799999999895228e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1799999999895228e-06, 1.1660000000107695e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1670000000102432e-06, 1.1250000000045945e-06, 1.1669999999963654e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1799999999895228e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.195000000009383e-06, 1.2220000000090492e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1800000000034006e-06, 1.1799999999895228e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1809999999889964e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1799999999895228e-06, 1.1659999999968917e-06]</msg>
<status status="PASS" starttime="20201030 18:31:06.993" endtime="20201030 18:31:06.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.989" endtime="20201030 18:31:06.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.001" endtime="20201030 18:31:07.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.000" endtime="20201030 18:31:07.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.999" endtime="20201030 18:31:07.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.644" endtime="20201030 18:31:07.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.644" endtime="20201030 18:31:07.022"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.030" endtime="20201030 18:31:07.045"></status>
</kw>
<msg timestamp="20201030 18:31:07.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.028" endtime="20201030 18:31:07.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.048" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.047" endtime="20201030 18:31:07.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.049" endtime="20201030 18:31:07.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.026" endtime="20201030 18:31:07.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.024" endtime="20201030 18:31:07.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.059" endtime="20201030 18:31:07.349"></status>
</kw>
<msg timestamp="20201030 18:31:07.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017855875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.057" endtime="20201030 18:31:07.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017855875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.353" endtime="20201030 18:31:07.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.362" endtime="20201030 18:31:07.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.054" endtime="20201030 18:31:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.052" endtime="20201030 18:31:07.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.368" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.207999999999071e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:07.365" endtime="20201030 18:31:07.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:07.373" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.17...</msg>
<status status="PASS" starttime="20201030 18:31:07.369" endtime="20201030 18:31:07.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:07.376" endtime="20201030 18:31:07.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.382" level="INFO">VALUE: [1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.2370000000011538e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.209000000002014e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:07.380" endtime="20201030 18:31:07.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.374" endtime="20201030 18:31:07.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.390" endtime="20201030 18:31:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.387" endtime="20201030 18:31:07.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.385" endtime="20201030 18:31:07.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.023" endtime="20201030 18:31:07.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.022" endtime="20201030 18:31:07.412"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.422" endtime="20201030 18:31:07.437"></status>
</kw>
<msg timestamp="20201030 18:31:07.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.420" endtime="20201030 18:31:07.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.440" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.438" endtime="20201030 18:31:07.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.441" endtime="20201030 18:31:07.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.418" endtime="20201030 18:31:07.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.415" endtime="20201030 18:31:07.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.450" endtime="20201030 18:31:07.736"></status>
</kw>
<msg timestamp="20201030 18:31:07.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.448" endtime="20201030 18:31:07.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.741" endtime="20201030 18:31:07.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.749" endtime="20201030 18:31:07.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.446" endtime="20201030 18:31:07.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.444" endtime="20201030 18:31:07.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.756" level="INFO">${RESULT} = [{'diff': 1.2360000000016802e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1950000000024441e-...</msg>
<status status="PASS" starttime="20201030 18:31:07.753" endtime="20201030 18:31:07.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:07.761" level="INFO">${OVERHEAD} = {'diff': [1.2360000000016802e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.1520000000007913e-06, 1.1809999999994047e-06...</msg>
<status status="PASS" starttime="20201030 18:31:07.757" endtime="20201030 18:31:07.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.765" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:07.764" endtime="20201030 18:31:07.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.768" level="INFO">VALUE: [1.2360000000016802e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.209000000002014e-06, 1.1669999999998348e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1659999999968917e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1659999999968917e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 18:31:07.766" endtime="20201030 18:31:07.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.762" endtime="20201030 18:31:07.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.772" endtime="20201030 18:31:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.771" endtime="20201030 18:31:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.770" endtime="20201030 18:31:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.414" endtime="20201030 18:31:07.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.413" endtime="20201030 18:31:07.793"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.801" endtime="20201030 18:31:07.816"></status>
</kw>
<msg timestamp="20201030 18:31:07.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.799" endtime="20201030 18:31:07.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.817" endtime="20201030 18:31:07.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.820" endtime="20201030 18:31:07.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.797" endtime="20201030 18:31:07.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.795" endtime="20201030 18:31:07.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.830" endtime="20201030 18:31:08.133"></status>
</kw>
<msg timestamp="20201030 18:31:08.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017825764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.828" endtime="20201030 18:31:08.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017825764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.143" endtime="20201030 18:31:08.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.163" endtime="20201030 18:31:08.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.825" endtime="20201030 18:31:08.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.824" endtime="20201030 18:31:08.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.178" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1529999999967955e-06}, {'diff': 1.1669999999998348e-...</msg>
<status status="PASS" starttime="20201030 18:31:08.170" endtime="20201030 18:31:08.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:08.188" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1660000000003612e-06, 1.1519999999973218e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1520000000007913e-06...</msg>
<status status="PASS" starttime="20201030 18:31:08.180" endtime="20201030 18:31:08.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.196" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:08.194" endtime="20201030 18:31:08.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.201" level="INFO">VALUE: [1.1669999999998348e-06, 1.1660000000003612e-06, 1.1519999999973218e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1659999999968917e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.0969999999985158e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 18:31:08.199" endtime="20201030 18:31:08.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.189" endtime="20201030 18:31:08.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.207" endtime="20201030 18:31:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.205" endtime="20201030 18:31:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.204" endtime="20201030 18:31:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.794" endtime="20201030 18:31:08.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.793" endtime="20201030 18:31:08.228"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.236" endtime="20201030 18:31:08.251"></status>
</kw>
<msg timestamp="20201030 18:31:08.252" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.234" endtime="20201030 18:31:08.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.254" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.253" endtime="20201030 18:31:08.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.255" endtime="20201030 18:31:08.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.232" endtime="20201030 18:31:08.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.230" endtime="20201030 18:31:08.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.265" endtime="20201030 18:31:08.549"></status>
</kw>
<msg timestamp="20201030 18:31:08.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018386069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.263" endtime="20201030 18:31:08.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018386069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.553" endtime="20201030 18:31:08.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.562" endtime="20201030 18:31:08.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.260" endtime="20201030 18:31:08.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.259" endtime="20201030 18:31:08.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.569" level="INFO">${RESULT} = [{'diff': 1.1249999999976557e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1950000000024441e-06...</msg>
<status status="PASS" starttime="20201030 18:31:08.565" endtime="20201030 18:31:08.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:08.573" level="INFO">${OVERHEAD} = {'diff': [1.1249999999976557e-06, 1.1520000000007913e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:08.570" endtime="20201030 18:31:08.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.577" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:08.576" endtime="20201030 18:31:08.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.580" level="INFO">VALUE: [1.1249999999976557e-06, 1.1520000000007913e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1950000000024441e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.207999999999071e-06, 1.179999999999931e-06, 1.1110000000015552e-06, 1.207999999999071e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 18:31:08.579" endtime="20201030 18:31:08.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.574" endtime="20201030 18:31:08.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.584" endtime="20201030 18:31:08.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.583" endtime="20201030 18:31:08.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.582" endtime="20201030 18:31:08.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.229" endtime="20201030 18:31:08.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.228" endtime="20201030 18:31:08.605"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.613" endtime="20201030 18:31:08.627"></status>
</kw>
<msg timestamp="20201030 18:31:08.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.611" endtime="20201030 18:31:08.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.630" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.629" endtime="20201030 18:31:08.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.632" endtime="20201030 18:31:08.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.609" endtime="20201030 18:31:08.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.607" endtime="20201030 18:31:08.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.640" endtime="20201030 18:31:08.940"></status>
</kw>
<msg timestamp="20201030 18:31:08.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017862375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:08.639" endtime="20201030 18:31:08.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017862375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:08.950" endtime="20201030 18:31:08.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.970" endtime="20201030 18:31:08.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.636" endtime="20201030 18:31:08.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.635" endtime="20201030 18:31:08.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.986" level="INFO">${RESULT} = [{'diff': 1.125000000001125e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.139000000000695e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.179999999999931e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:08.979" endtime="20201030 18:31:08.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:08.996" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.18...</msg>
<status status="PASS" starttime="20201030 18:31:08.989" endtime="20201030 18:31:08.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:09.003" endtime="20201030 18:31:09.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.009" level="INFO">VALUE: [1.125000000001125e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.2219999999986408e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.2089999999985446e-06, 1.1520000000007913e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1529999999967955e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:09.007" endtime="20201030 18:31:09.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.998" endtime="20201030 18:31:09.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.014" endtime="20201030 18:31:09.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.012" endtime="20201030 18:31:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.011" endtime="20201030 18:31:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.606" endtime="20201030 18:31:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.605" endtime="20201030 18:31:09.034"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.043" endtime="20201030 18:31:09.058"></status>
</kw>
<msg timestamp="20201030 18:31:09.059" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.041" endtime="20201030 18:31:09.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.060" endtime="20201030 18:31:09.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.062" endtime="20201030 18:31:09.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.038" endtime="20201030 18:31:09.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.037" endtime="20201030 18:31:09.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.072" endtime="20201030 18:31:09.359"></status>
</kw>
<msg timestamp="20201030 18:31:09.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.071" endtime="20201030 18:31:09.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.364" endtime="20201030 18:31:09.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.373" endtime="20201030 18:31:09.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.068" endtime="20201030 18:31:09.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.066" endtime="20201030 18:31:09.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.379" level="INFO">${RESULT} = [{'diff': 1.2220000000021103e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1669999999998348e-...</msg>
<status status="PASS" starttime="20201030 18:31:09.376" endtime="20201030 18:31:09.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:09.384" level="INFO">${OVERHEAD} = {'diff': [1.2220000000021103e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.381" endtime="20201030 18:31:09.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:09.387" endtime="20201030 18:31:09.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.391" level="INFO">VALUE: [1.2220000000021103e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.207999999999071e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 18:31:09.389" endtime="20201030 18:31:09.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.385" endtime="20201030 18:31:09.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.396" endtime="20201030 18:31:09.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.395" endtime="20201030 18:31:09.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.393" endtime="20201030 18:31:09.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.035" endtime="20201030 18:31:09.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.035" endtime="20201030 18:31:09.417"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.425" endtime="20201030 18:31:09.441"></status>
</kw>
<msg timestamp="20201030 18:31:09.441" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.423" endtime="20201030 18:31:09.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.442" endtime="20201030 18:31:09.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.445" endtime="20201030 18:31:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.421" endtime="20201030 18:31:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.419" endtime="20201030 18:31:09.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.456" endtime="20201030 18:31:09.742"></status>
</kw>
<msg timestamp="20201030 18:31:09.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.454" endtime="20201030 18:31:09.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.746" endtime="20201030 18:31:09.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.754" endtime="20201030 18:31:09.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.450" endtime="20201030 18:31:09.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.448" endtime="20201030 18:31:09.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.761" level="INFO">${RESULT} = [{'diff': 1.1660000000003612e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 18:31:09.757" endtime="20201030 18:31:09.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:09.766" level="INFO">${OVERHEAD} = {'diff': [1.1660000000003612e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.762" endtime="20201030 18:31:09.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:09.769" endtime="20201030 18:31:09.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.772" level="INFO">VALUE: [1.1660000000003612e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.207999999999071e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.2360000000016802e-06, 1.1669999999998348e-06, 1.2229999999981145e-06, 1.1949999999989747e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:09.771" endtime="20201030 18:31:09.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.767" endtime="20201030 18:31:09.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.777" endtime="20201030 18:31:09.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.775" endtime="20201030 18:31:09.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.774" endtime="20201030 18:31:09.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.418" endtime="20201030 18:31:09.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.417" endtime="20201030 18:31:09.797"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.805" endtime="20201030 18:31:09.821"></status>
</kw>
<msg timestamp="20201030 18:31:09.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.804" endtime="20201030 18:31:09.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.822" endtime="20201030 18:31:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.825" endtime="20201030 18:31:09.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.801" endtime="20201030 18:31:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.799" endtime="20201030 18:31:09.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.834" endtime="20201030 18:31:10.125"></status>
</kw>
<msg timestamp="20201030 18:31:10.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.833" endtime="20201030 18:31:10.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.130" endtime="20201030 18:31:10.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.141" endtime="20201030 18:31:10.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.830" endtime="20201030 18:31:10.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.828" endtime="20201030 18:31:10.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.151" level="INFO">${RESULT} = [{'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.139000000000695e-06}, {'diff': 1.139000000000695e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:10.146" endtime="20201030 18:31:10.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:10.156" level="INFO">${OVERHEAD} = {'diff': [1.1660000000003612e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 18:31:10.152" endtime="20201030 18:31:10.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.162" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:10.161" endtime="20201030 18:31:10.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.164" level="INFO">VALUE: [1.1660000000003612e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1110000000015552e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.2220000000021103e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.0979999999979895e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1659999999968917e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1659999999968917e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.1520000000007913e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 18:31:10.163" endtime="20201030 18:31:10.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.157" endtime="20201030 18:31:10.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.169" endtime="20201030 18:31:10.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.167" endtime="20201030 18:31:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.166" endtime="20201030 18:31:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.798" endtime="20201030 18:31:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.798" endtime="20201030 18:31:10.190"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.197" endtime="20201030 18:31:10.213"></status>
</kw>
<msg timestamp="20201030 18:31:10.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.196" endtime="20201030 18:31:10.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.214" endtime="20201030 18:31:10.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.217" endtime="20201030 18:31:10.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.193" endtime="20201030 18:31:10.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.192" endtime="20201030 18:31:10.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.227" endtime="20201030 18:31:10.517"></status>
</kw>
<msg timestamp="20201030 18:31:10.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017873319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017874486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.225" endtime="20201030 18:31:10.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017873319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017874486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.521" endtime="20201030 18:31:10.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.529" endtime="20201030 18:31:10.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.223" endtime="20201030 18:31:10.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.221" endtime="20201030 18:31:10.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.536" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.207999999999071e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:10.532" endtime="20201030 18:31:10.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:10.540" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:31:10.537" endtime="20201030 18:31:10.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.544" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:10.543" endtime="20201030 18:31:10.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.546" level="INFO">VALUE: [1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.098000000001459e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.2220000000021103e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 18:31:10.545" endtime="20201030 18:31:10.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.541" endtime="20201030 18:31:10.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.553" endtime="20201030 18:31:10.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.552" endtime="20201030 18:31:10.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.551" endtime="20201030 18:31:10.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.190" endtime="20201030 18:31:10.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.190" endtime="20201030 18:31:10.574"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.582" endtime="20201030 18:31:10.597"></status>
</kw>
<msg timestamp="20201030 18:31:10.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.580" endtime="20201030 18:31:10.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.599" endtime="20201030 18:31:10.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.601" endtime="20201030 18:31:10.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.578" endtime="20201030 18:31:10.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.576" endtime="20201030 18:31:10.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.610" endtime="20201030 18:31:10.894"></status>
</kw>
<msg timestamp="20201030 18:31:10.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.609" endtime="20201030 18:31:10.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.898" endtime="20201030 18:31:10.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.909" endtime="20201030 18:31:10.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.606" endtime="20201030 18:31:10.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.605" endtime="20201030 18:31:10.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.918" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1389999999972256e-...</msg>
<status status="PASS" starttime="20201030 18:31:10.914" endtime="20201030 18:31:10.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:10.924" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.153000000000265e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:10.919" endtime="20201030 18:31:10.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.931" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:10.929" endtime="20201030 18:31:10.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.935" level="INFO">VALUE: [1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.193999999999501e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.2219999999986408e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1810000000028742e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:10.933" endtime="20201030 18:31:10.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.926" endtime="20201030 18:31:10.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.940" endtime="20201030 18:31:10.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.939" endtime="20201030 18:31:10.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.938" endtime="20201030 18:31:10.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.575" endtime="20201030 18:31:10.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.574" endtime="20201030 18:31:10.961"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.970" endtime="20201030 18:31:10.985"></status>
</kw>
<msg timestamp="20201030 18:31:10.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.968" endtime="20201030 18:31:10.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.988" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.987" endtime="20201030 18:31:10.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.989" endtime="20201030 18:31:10.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.965" endtime="20201030 18:31:10.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.963" endtime="20201030 18:31:10.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.998" endtime="20201030 18:31:11.288"></status>
</kw>
<msg timestamp="20201030 18:31:11.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.997" endtime="20201030 18:31:11.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.292" endtime="20201030 18:31:11.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.301" endtime="20201030 18:31:11.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.994" endtime="20201030 18:31:11.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.992" endtime="20201030 18:31:11.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.308" level="INFO">${RESULT} = [{'diff': 1.139000000000695e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.125000000001125e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:11.305" endtime="20201030 18:31:11.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:11.312" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 18:31:11.309" endtime="20201030 18:31:11.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.316" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:11.315" endtime="20201030 18:31:11.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.319" level="INFO">VALUE: [1.139000000000695e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201030 18:31:11.317" endtime="20201030 18:31:11.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.313" endtime="20201030 18:31:11.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.323" endtime="20201030 18:31:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.322" endtime="20201030 18:31:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.321" endtime="20201030 18:31:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.962" endtime="20201030 18:31:11.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.961" endtime="20201030 18:31:11.344"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.352" endtime="20201030 18:31:11.367"></status>
</kw>
<msg timestamp="20201030 18:31:11.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.351" endtime="20201030 18:31:11.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.370" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.368" endtime="20201030 18:31:11.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.371" endtime="20201030 18:31:11.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.348" endtime="20201030 18:31:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.346" endtime="20201030 18:31:11.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.381" endtime="20201030 18:31:11.661"></status>
</kw>
<msg timestamp="20201030 18:31:11.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.379" endtime="20201030 18:31:11.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.665" endtime="20201030 18:31:11.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.673" endtime="20201030 18:31:11.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.376" endtime="20201030 18:31:11.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.375" endtime="20201030 18:31:11.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.680" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 1.1940000000029705e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:11.676" endtime="20201030 18:31:11.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:11.684" level="INFO">${OVERHEAD} = {'diff': [1.179999999999931e-06, 1.1940000000029705e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:31:11.680" endtime="20201030 18:31:11.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.688" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:11.687" endtime="20201030 18:31:11.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.690" level="INFO">VALUE: [1.179999999999931e-06, 1.1940000000029705e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1949999999989747e-06, 1.1670000000033043e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.2219999999986408e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.2219999999986408e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:11.689" endtime="20201030 18:31:11.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.684" endtime="20201030 18:31:11.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.701" endtime="20201030 18:31:11.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.700" endtime="20201030 18:31:11.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.693" endtime="20201030 18:31:11.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.345" endtime="20201030 18:31:11.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.345" endtime="20201030 18:31:11.722"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.730" endtime="20201030 18:31:11.744"></status>
</kw>
<msg timestamp="20201030 18:31:11.745" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.728" endtime="20201030 18:31:11.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.746" endtime="20201030 18:31:11.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.749" endtime="20201030 18:31:11.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.726" endtime="20201030 18:31:11.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.724" endtime="20201030 18:31:11.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.757" endtime="20201030 18:31:12.047"></status>
</kw>
<msg timestamp="20201030 18:31:12.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017892583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.756" endtime="20201030 18:31:12.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017892583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.051" endtime="20201030 18:31:12.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.059" endtime="20201030 18:31:12.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.753" endtime="20201030 18:31:12.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.752" endtime="20201030 18:31:12.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.066" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1660000000003612e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:12.062" endtime="20201030 18:31:12.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:12.071" level="INFO">${OVERHEAD} = {'diff': [1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:12.066" endtime="20201030 18:31:12.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.075" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:12.074" endtime="20201030 18:31:12.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.077" level="INFO">VALUE: [1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.2220000000021103e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 18:31:12.076" endtime="20201030 18:31:12.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.071" endtime="20201030 18:31:12.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.082" endtime="20201030 18:31:12.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.081" endtime="20201030 18:31:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.080" endtime="20201030 18:31:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.723" endtime="20201030 18:31:12.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.723" endtime="20201030 18:31:12.103"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.111" endtime="20201030 18:31:12.126"></status>
</kw>
<msg timestamp="20201030 18:31:12.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.109" endtime="20201030 18:31:12.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.128" endtime="20201030 18:31:12.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.130" endtime="20201030 18:31:12.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.106" endtime="20201030 18:31:12.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.105" endtime="20201030 18:31:12.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.139" endtime="20201030 18:31:12.429"></status>
</kw>
<msg timestamp="20201030 18:31:12.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017836694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.138" endtime="20201030 18:31:12.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017836694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.433" endtime="20201030 18:31:12.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.441" endtime="20201030 18:31:12.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.135" endtime="20201030 18:31:12.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.133" endtime="20201030 18:31:12.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.448" level="INFO">${RESULT} = [{'diff': 1.1380000000012214e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-...</msg>
<status status="PASS" starttime="20201030 18:31:12.445" endtime="20201030 18:31:12.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:12.452" level="INFO">${OVERHEAD} = {'diff': [1.1380000000012214e-06, 1.1660000000003612e-06, 1.1800000000034006e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06...</msg>
<status status="PASS" starttime="20201030 18:31:12.449" endtime="20201030 18:31:12.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.456" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:12.455" endtime="20201030 18:31:12.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.459" level="INFO">VALUE: [1.1380000000012214e-06, 1.1660000000003612e-06, 1.1800000000034006e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1659999999968917e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.2229999999981145e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 18:31:12.457" endtime="20201030 18:31:12.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.453" endtime="20201030 18:31:12.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.464" endtime="20201030 18:31:12.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.462" endtime="20201030 18:31:12.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.461" endtime="20201030 18:31:12.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.104" endtime="20201030 18:31:12.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.103" endtime="20201030 18:31:12.485"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.492" endtime="20201030 18:31:12.508"></status>
</kw>
<msg timestamp="20201030 18:31:12.508" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.491" endtime="20201030 18:31:12.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.509" endtime="20201030 18:31:12.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.512" endtime="20201030 18:31:12.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.488" endtime="20201030 18:31:12.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.487" endtime="20201030 18:31:12.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.522" endtime="20201030 18:31:12.811"></status>
</kw>
<msg timestamp="20201030 18:31:12.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.520" endtime="20201030 18:31:12.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.815" endtime="20201030 18:31:12.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.824" endtime="20201030 18:31:12.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.517" endtime="20201030 18:31:12.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.516" endtime="20201030 18:31:12.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.830" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.2089999999985446e-06}, {'diff': 1.179999999999931e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:12.827" endtime="20201030 18:31:12.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:12.834" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:31:12.831" endtime="20201030 18:31:12.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.838" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:12.837" endtime="20201030 18:31:12.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.841" level="INFO">VALUE: [1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.2360000000016802e-06, 1.179999999999931e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.2080000000025404e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.1660000000003612e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 18:31:12.839" endtime="20201030 18:31:12.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.835" endtime="20201030 18:31:12.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.847" endtime="20201030 18:31:12.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.845" endtime="20201030 18:31:12.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.844" endtime="20201030 18:31:12.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.485" endtime="20201030 18:31:12.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.485" endtime="20201030 18:31:12.867"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.875" endtime="20201030 18:31:12.890"></status>
</kw>
<msg timestamp="20201030 18:31:12.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.874" endtime="20201030 18:31:12.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.892" endtime="20201030 18:31:12.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.894" endtime="20201030 18:31:12.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.871" endtime="20201030 18:31:12.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.869" endtime="20201030 18:31:12.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.903" endtime="20201030 18:31:13.189"></status>
</kw>
<msg timestamp="20201030 18:31:13.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01803275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:12.902" endtime="20201030 18:31:13.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01803275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:13.193" endtime="20201030 18:31:13.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.201" endtime="20201030 18:31:13.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.899" endtime="20201030 18:31:13.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.898" endtime="20201030 18:31:13.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.207" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.209000000002014e-06...</msg>
<status status="PASS" starttime="20201030 18:31:13.204" endtime="20201030 18:31:13.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:13.212" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.209000000002014e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:13.208" endtime="20201030 18:31:13.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:13.215" endtime="20201030 18:31:13.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.219" level="INFO">VALUE: [1.1669999999998348e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.209000000002014e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.2089999999985446e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1519999999973218e-06, 1.1810000000028742e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 18:31:13.218" endtime="20201030 18:31:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.213" endtime="20201030 18:31:13.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.224" endtime="20201030 18:31:13.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.222" endtime="20201030 18:31:13.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.221" endtime="20201030 18:31:13.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.868" endtime="20201030 18:31:13.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.868" endtime="20201030 18:31:13.245"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.252" endtime="20201030 18:31:13.268"></status>
</kw>
<msg timestamp="20201030 18:31:13.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.251" endtime="20201030 18:31:13.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.270" endtime="20201030 18:31:13.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.272" endtime="20201030 18:31:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.248" endtime="20201030 18:31:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.247" endtime="20201030 18:31:13.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.281" endtime="20201030 18:31:13.570"></status>
</kw>
<msg timestamp="20201030 18:31:13.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017808139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017809319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.279" endtime="20201030 18:31:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017808139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017809319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.575" endtime="20201030 18:31:13.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.583" endtime="20201030 18:31:13.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.277" endtime="20201030 18:31:13.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.275" endtime="20201030 18:31:13.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.590" level="INFO">${RESULT} = [{'diff': 1.179999999999931e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1670000000033043e-06}, {'diff': 1.153000000000265e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:13.587" endtime="20201030 18:31:13.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:13.594" level="INFO">${OVERHEAD} = {'diff': [1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 18:31:13.591" endtime="20201030 18:31:13.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:13.597" endtime="20201030 18:31:13.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.601" level="INFO">VALUE: [1.179999999999931e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1529999999967955e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.1529999999967955e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 18:31:13.600" endtime="20201030 18:31:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.595" endtime="20201030 18:31:13.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.606" endtime="20201030 18:31:13.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.604" endtime="20201030 18:31:13.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.603" endtime="20201030 18:31:13.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.245" endtime="20201030 18:31:13.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.245" endtime="20201030 18:31:13.626"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.634" endtime="20201030 18:31:13.650"></status>
</kw>
<msg timestamp="20201030 18:31:13.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.633" endtime="20201030 18:31:13.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.651" endtime="20201030 18:31:13.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.654" endtime="20201030 18:31:13.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.630" endtime="20201030 18:31:13.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.629" endtime="20201030 18:31:13.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.663" endtime="20201030 18:31:13.950"></status>
</kw>
<msg timestamp="20201030 18:31:13.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017995639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.662" endtime="20201030 18:31:13.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017995639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.954" endtime="20201030 18:31:13.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.963" endtime="20201030 18:31:13.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.659" endtime="20201030 18:31:13.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.658" endtime="20201030 18:31:13.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.970" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1120000000010288e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:13.967" endtime="20201030 18:31:13.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:13.974" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1120000000010288e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1660000000003612e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:13.971" endtime="20201030 18:31:13.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:13.977" endtime="20201030 18:31:13.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.981" level="INFO">VALUE: [1.1669999999998348e-06, 1.1120000000010288e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.207999999999071e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:13.980" endtime="20201030 18:31:13.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.975" endtime="20201030 18:31:13.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.989" endtime="20201030 18:31:14.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.987" endtime="20201030 18:31:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.986" endtime="20201030 18:31:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.627" endtime="20201030 18:31:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.627" endtime="20201030 18:31:14.009"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.017" endtime="20201030 18:31:14.032"></status>
</kw>
<msg timestamp="20201030 18:31:14.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.016" endtime="20201030 18:31:14.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.034" endtime="20201030 18:31:14.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.036" endtime="20201030 18:31:14.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.013" endtime="20201030 18:31:14.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.011" endtime="20201030 18:31:14.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.045" endtime="20201030 18:31:14.333"></status>
</kw>
<msg timestamp="20201030 18:31:14.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017983097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.044" endtime="20201030 18:31:14.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017983097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.337" endtime="20201030 18:31:14.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.345" endtime="20201030 18:31:14.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.041" endtime="20201030 18:31:14.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.040" endtime="20201030 18:31:14.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.352" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.139000000000695e-06}, {'diff': 1.153000000000265e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:14.348" endtime="20201030 18:31:14.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:14.356" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 18:31:14.353" endtime="20201030 18:31:14.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.361" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:14.360" endtime="20201030 18:31:14.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.363" level="INFO">VALUE: [1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1940000000029705e-06, 1.2220000000021103e-06, 1.139000000000695e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 18:31:14.362" endtime="20201030 18:31:14.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.357" endtime="20201030 18:31:14.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.368" endtime="20201030 18:31:14.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.366" endtime="20201030 18:31:14.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.365" endtime="20201030 18:31:14.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.010" endtime="20201030 18:31:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.010" endtime="20201030 18:31:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.643" endtime="20201030 18:31:14.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.393" endtime="20201030 18:31:14.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.391" endtime="20201030 18:31:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.390" endtime="20201030 18:31:14.413"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:06.570" endtime="20201030 18:31:14.413" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.420" endtime="20201030 18:31:14.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.419" endtime="20201030 18:31:14.440"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.453" endtime="20201030 18:31:14.472"></status>
</kw>
<msg timestamp="20201030 18:31:14.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.451" endtime="20201030 18:31:14.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.473" endtime="20201030 18:31:14.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.478" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:14.476" endtime="20201030 18:31:14.478"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:14.449" endtime="20201030 18:31:14.479"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:14.446" endtime="20201030 18:31:14.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.445" endtime="20201030 18:31:14.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:14.483" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:14.483" endtime="20201030 18:31:14.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.480" endtime="20201030 18:31:14.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.444" endtime="20201030 18:31:14.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.444" endtime="20201030 18:31:14.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.485" endtime="20201030 18:31:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.442" endtime="20201030 18:31:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.441" endtime="20201030 18:31:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.417" endtime="20201030 18:31:14.488"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.496" endtime="20201030 18:31:14.517"></status>
</kw>
<msg timestamp="20201030 18:31:14.518" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.494" endtime="20201030 18:31:14.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.521" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.519" endtime="20201030 18:31:14.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.522" endtime="20201030 18:31:14.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.492" endtime="20201030 18:31:14.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.490" endtime="20201030 18:31:14.524"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.526" endtime="20201030 18:31:14.528"></status>
</kw>
<msg timestamp="20201030 18:31:14.528" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:14.525" endtime="20201030 18:31:14.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.532" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:14.531" endtime="20201030 18:31:14.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.534" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:14.533" endtime="20201030 18:31:14.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.529" endtime="20201030 18:31:14.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.539" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:14.538" endtime="20201030 18:31:14.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.541" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:14.540" endtime="20201030 18:31:14.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.536" endtime="20201030 18:31:14.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.548" endtime="20201030 18:31:14.835"></status>
</kw>
<msg timestamp="20201030 18:31:14.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066093569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066099625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.547" endtime="20201030 18:31:14.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066093569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066099625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.839" endtime="20201030 18:31:14.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.848" endtime="20201030 18:31:14.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.544" endtime="20201030 18:31:14.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.542" endtime="20201030 18:31:14.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.854" level="INFO">${RESULT} = [{'diff': 6.055999999990402e-06}, {'diff': 7.0280000000061404e-06}, {'diff': 7.068999999998438e-06}, {'diff': 7.000000000007001e-06}, {'diff': 7.054999999991929e-06}, {'diff': 7.0280000000061404e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:14.851" endtime="20201030 18:31:14.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:14.858" level="INFO">${OVERHEAD} = {'diff': [6.055999999990402e-06, 7.0280000000061404e-06, 7.068999999998438e-06, 7.000000000007001e-06, 7.054999999991929e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.04...</msg>
<status status="PASS" starttime="20201030 18:31:14.855" endtime="20201030 18:31:14.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.863" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:14.862" endtime="20201030 18:31:14.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.865" level="INFO">VALUE: [6.055999999990402e-06, 7.0280000000061404e-06, 7.068999999998438e-06, 7.000000000007001e-06, 7.054999999991929e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.040999999999298e-06, 7.027000000006667e-06, 7.013000000000158e-06, 7.013000000000158e-06, 6.999999999993123e-06, 6.971999999993983e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.971999999993983e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.971999999993983e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.971999999993983e-06, 7.027999999992263e-06, 7.013999999999632e-06, 7.027999999992263e-06, 7.027999999992263e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.000000000007001e-06, 7.069999999997911e-06, 6.971999999993983e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.040999999999298e-06, 6.999999999993123e-06, 7.0280000000061404e-06, 6.999999999993123e-06, 7.0280000000061404e-06, 7.068999999998438e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.027000000006667e-06, 7.013999999999632e-06, 6.986000000000492e-06]</msg>
<status status="PASS" starttime="20201030 18:31:14.864" endtime="20201030 18:31:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.859" endtime="20201030 18:31:14.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.870" endtime="20201030 18:31:14.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.868" endtime="20201030 18:31:14.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.867" endtime="20201030 18:31:14.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.488" endtime="20201030 18:31:14.891"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:14.415" endtime="20201030 18:31:14.891" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.898" endtime="20201030 18:31:14.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.896" endtime="20201030 18:31:14.918"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.932" endtime="20201030 18:31:14.950"></status>
</kw>
<msg timestamp="20201030 18:31:14.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.930" endtime="20201030 18:31:14.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.952" endtime="20201030 18:31:14.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.956" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:14.954" endtime="20201030 18:31:14.956"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:14.928" endtime="20201030 18:31:14.957"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:14.926" endtime="20201030 18:31:14.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.924" endtime="20201030 18:31:14.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:14.962" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:14.961" endtime="20201030 18:31:14.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.959" endtime="20201030 18:31:14.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.923" endtime="20201030 18:31:14.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.923" endtime="20201030 18:31:14.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.963" endtime="20201030 18:31:14.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.920" endtime="20201030 18:31:14.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.919" endtime="20201030 18:31:14.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.895" endtime="20201030 18:31:14.966"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.975" endtime="20201030 18:31:15.027"></status>
</kw>
<msg timestamp="20201030 18:31:15.027" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.973" endtime="20201030 18:31:15.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.030" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.029" endtime="20201030 18:31:15.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.031" endtime="20201030 18:31:15.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.970" endtime="20201030 18:31:15.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.968" endtime="20201030 18:31:15.034"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.036" endtime="20201030 18:31:15.037"></status>
</kw>
<msg timestamp="20201030 18:31:15.038" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:15.034" endtime="20201030 18:31:15.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.043" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:15.041" endtime="20201030 18:31:15.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.045" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:15.044" endtime="20201030 18:31:15.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.038" endtime="20201030 18:31:15.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.050" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:15.049" endtime="20201030 18:31:15.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.052" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:15.051" endtime="20201030 18:31:15.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.046" endtime="20201030 18:31:15.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.059" endtime="20201030 18:31:15.347"></status>
</kw>
<msg timestamp="20201030 18:31:15.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067469458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067483153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.057" endtime="20201030 18:31:15.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067469458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067483153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.351" endtime="20201030 18:31:15.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.359" endtime="20201030 18:31:15.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.055" endtime="20201030 18:31:15.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.053" endtime="20201030 18:31:15.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.366" level="INFO">${RESULT} = [{'diff': 1.3695000000008006e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.240300000000417e-05}, {'diff': 2.240300000000417e-05}, {'diff': 2.2387999999998187e-05}, {'diff': 2.2457999999989098e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:15.362" endtime="20201030 18:31:15.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:15.370" level="INFO">${OVERHEAD} = {'diff': [1.3695000000008006e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.240300000000417e-05, 2.2387999999998187e-05, 2.2457999999989098e-05, 2.2348000000005364e-05, 2.2387999999998187e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:15.367" endtime="20201030 18:31:15.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.376" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:15.375" endtime="20201030 18:31:15.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.378" level="INFO">VALUE: [1.3695000000008006e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.240300000000417e-05, 2.2387999999998187e-05, 2.2457999999989098e-05, 2.2348000000005364e-05, 2.2387999999998187e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.2444000000010345e-05, 2.2401999999990818e-05, 2.240300000000417e-05, 2.2374999999991152e-05, 2.238900000001154e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2415999999997327e-05, 2.2402000000004696e-05, 2.2402999999990292e-05, 2.237500000000503e-05, 2.237500000000503e-05, 2.240300000000417e-05, 2.2401999999990818e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.2388000000012065e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.241700000001068e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.2402999999990292e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.238900000001154e-05, 2.236099999999852e-05, 2.2374999999991152e-05, 2.2320000000006224e-05]</msg>
<status status="PASS" starttime="20201030 18:31:15.377" endtime="20201030 18:31:15.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.371" endtime="20201030 18:31:15.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.383" endtime="20201030 18:31:15.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.381" endtime="20201030 18:31:15.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.380" endtime="20201030 18:31:15.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.966" endtime="20201030 18:31:15.403"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:14.893" endtime="20201030 18:31:15.404" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.411" endtime="20201030 18:31:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.409" endtime="20201030 18:31:15.431"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.443" endtime="20201030 18:31:15.461"></status>
</kw>
<msg timestamp="20201030 18:31:15.462" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.442" endtime="20201030 18:31:15.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.463" endtime="20201030 18:31:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.467" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:15.465" endtime="20201030 18:31:15.468"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.439" endtime="20201030 18:31:15.468"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.437" endtime="20201030 18:31:15.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.436" endtime="20201030 18:31:15.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:15.473" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:15.472" endtime="20201030 18:31:15.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.470" endtime="20201030 18:31:15.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.435" endtime="20201030 18:31:15.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.434" endtime="20201030 18:31:15.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.474" endtime="20201030 18:31:15.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.433" endtime="20201030 18:31:15.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.431" endtime="20201030 18:31:15.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.408" endtime="20201030 18:31:15.477"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.488" endtime="20201030 18:31:15.622"></status>
</kw>
<msg timestamp="20201030 18:31:15.622" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.486" endtime="20201030 18:31:15.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.625" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.623" endtime="20201030 18:31:15.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.626" endtime="20201030 18:31:15.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.482" endtime="20201030 18:31:15.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.480" endtime="20201030 18:31:15.628"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.630" endtime="20201030 18:31:15.632"></status>
</kw>
<msg timestamp="20201030 18:31:15.632" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:15.629" endtime="20201030 18:31:15.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.636" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:15.635" endtime="20201030 18:31:15.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.638" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:15.637" endtime="20201030 18:31:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.633" endtime="20201030 18:31:15.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.643" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:15.642" endtime="20201030 18:31:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.645" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:15.644" endtime="20201030 18:31:15.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.640" endtime="20201030 18:31:15.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.653" endtime="20201030 18:31:15.945"></status>
</kw>
<msg timestamp="20201030 18:31:15.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068895042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06892, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:15.651" endtime="20201030 18:31:15.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068895042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06892, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:15.949" endtime="20201030 18:31:15.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.957" endtime="20201030 18:31:15.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.649" endtime="20201030 18:31:15.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.647" endtime="20201030 18:31:15.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.963" level="INFO">${RESULT} = [{'diff': 2.4957999999991598e-05}, {'diff': 4.140199999999594e-05}, {'diff': 4.140200000000982e-05}, {'diff': 4.140199999999594e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.142999999999508e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:15.960" endtime="20201030 18:31:15.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:15.968" level="INFO">${OVERHEAD} = {'diff': [2.4957999999991598e-05, 4.140199999999594e-05, 4.140200000000982e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.142999999999508e-05, 4.1403000000009293e-05, 4.141600000000245e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:31:15.964" endtime="20201030 18:31:15.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.973" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:15.972" endtime="20201030 18:31:15.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.976" level="INFO">VALUE: [2.4957999999991598e-05, 4.140199999999594e-05, 4.140200000000982e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.142999999999508e-05, 4.1403000000009293e-05, 4.141600000000245e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.1403000000009293e-05, 4.1403000000009293e-05, 4.140200000000982e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1403000000009293e-05, 4.1402999999995416e-05, 4.1403000000009293e-05, 4.1402999999995416e-05, 4.1417000000001924e-05, 4.138800000000331e-05, 4.138899999998891e-05, 4.147200000000073e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.141600000001633e-05, 4.1333000000004505e-05, 4.136099999998977e-05, 4.1389000000002785e-05, 4.14170000000158e-05, 4.141699999998805e-05, 4.138899999997503e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.138899999997503e-05, 4.1389000000002785e-05, 4.14170000000158e-05, 4.14170000000158e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.147199999998685e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.140300000002317e-05, 4.1333000000004505e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.141699999998805e-05]</msg>
<status status="PASS" starttime="20201030 18:31:15.974" endtime="20201030 18:31:15.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.970" endtime="20201030 18:31:15.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.980" endtime="20201030 18:31:16.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.979" endtime="20201030 18:31:16.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.978" endtime="20201030 18:31:16.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.478" endtime="20201030 18:31:16.001"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:15.405" endtime="20201030 18:31:16.002" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.008" endtime="20201030 18:31:16.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.007" endtime="20201030 18:31:16.028"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.042" endtime="20201030 18:31:16.061"></status>
</kw>
<msg timestamp="20201030 18:31:16.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.040" endtime="20201030 18:31:16.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.062" endtime="20201030 18:31:16.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.067" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:16.065" endtime="20201030 18:31:16.067"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:16.037" endtime="20201030 18:31:16.068"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:16.035" endtime="20201030 18:31:16.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.034" endtime="20201030 18:31:16.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:16.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:16.072" endtime="20201030 18:31:16.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.069" endtime="20201030 18:31:16.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.033" endtime="20201030 18:31:16.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.032" endtime="20201030 18:31:16.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.075" endtime="20201030 18:31:16.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.031" endtime="20201030 18:31:16.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.029" endtime="20201030 18:31:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.006" endtime="20201030 18:31:16.079"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.088" endtime="20201030 18:31:16.110"></status>
</kw>
<msg timestamp="20201030 18:31:16.111" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.086" endtime="20201030 18:31:16.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.113" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.112" endtime="20201030 18:31:16.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.114" endtime="20201030 18:31:16.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.084" endtime="20201030 18:31:16.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.081" endtime="20201030 18:31:16.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.119" endtime="20201030 18:31:16.121"></status>
</kw>
<msg timestamp="20201030 18:31:16.121" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:16.117" endtime="20201030 18:31:16.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.125" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:16.124" endtime="20201030 18:31:16.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.127" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:16.126" endtime="20201030 18:31:16.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.122" endtime="20201030 18:31:16.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.132" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:16.131" endtime="20201030 18:31:16.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.134" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:16.133" endtime="20201030 18:31:16.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.129" endtime="20201030 18:31:16.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.144" endtime="20201030 18:31:16.433"></status>
</kw>
<msg timestamp="20201030 18:31:16.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069679569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069684153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.142" endtime="20201030 18:31:16.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069679569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069684153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.437" endtime="20201030 18:31:16.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.448" endtime="20201030 18:31:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.137" endtime="20201030 18:31:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.136" endtime="20201030 18:31:16.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.454" level="INFO">${RESULT} = [{'diff': 4.58400000000192e-06}, {'diff': 4.596999999995077e-06}, {'diff': 4.583000000002446e-06}, {'diff': 4.568999999995937e-06}, {'diff': 4.5829999999885684e-06}, {'diff': 4.541999999996271e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:16.451" endtime="20201030 18:31:16.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:16.459" level="INFO">${OVERHEAD} = {'diff': [4.58400000000192e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.5829999999885684e-06, 4.541999999996271e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.5700...</msg>
<status status="PASS" starttime="20201030 18:31:16.455" endtime="20201030 18:31:16.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.467" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:16.466" endtime="20201030 18:31:16.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.469" level="INFO">VALUE: [4.58400000000192e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.5829999999885684e-06, 4.541999999996271e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.570000000009289e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.639000000000726e-06, 4.55600000000278e-06, 4.653000000007235e-06, 4.583000000002446e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.58400000000192e-06, 4.569999999995411e-06, 4.568999999995937e-06, 4.583999999988042e-06, 4.569999999995411e-06, 4.570000000009289e-06, 4.555000000003306e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.570000000009289e-06, 4.597000000008955e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.597000000008955e-06, 4.569000000009815e-06, 4.555000000003306e-06, 4.598000000008429e-06, 4.611000000001586e-06, 4.569000000009815e-06, 4.499999999990623e-06, 4.570000000009289e-06, 4.597000000008955e-06, 4.58400000000192e-06, 4.555000000003306e-06, 4.5829999999885684e-06, 4.568999999995937e-06, 4.58400000000192e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201030 18:31:16.468" endtime="20201030 18:31:16.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.460" endtime="20201030 18:31:16.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.475" endtime="20201030 18:31:16.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.472" endtime="20201030 18:31:16.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.471" endtime="20201030 18:31:16.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.080" endtime="20201030 18:31:16.498"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:16.003" endtime="20201030 18:31:16.499" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.505" endtime="20201030 18:31:16.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.504" endtime="20201030 18:31:16.525"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.539" endtime="20201030 18:31:16.557"></status>
</kw>
<msg timestamp="20201030 18:31:16.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.538" endtime="20201030 18:31:16.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.558" endtime="20201030 18:31:16.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.564" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:16.561" endtime="20201030 18:31:16.564"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:16.535" endtime="20201030 18:31:16.565"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:16.533" endtime="20201030 18:31:16.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.532" endtime="20201030 18:31:16.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:16.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:16.569" endtime="20201030 18:31:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.566" endtime="20201030 18:31:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.531" endtime="20201030 18:31:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.530" endtime="20201030 18:31:16.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.571" endtime="20201030 18:31:16.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.528" endtime="20201030 18:31:16.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.526" endtime="20201030 18:31:16.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.503" endtime="20201030 18:31:16.574"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.582" endtime="20201030 18:31:16.635"></status>
</kw>
<msg timestamp="20201030 18:31:16.635" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.581" endtime="20201030 18:31:16.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.638" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.637" endtime="20201030 18:31:16.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.639" endtime="20201030 18:31:16.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.578" endtime="20201030 18:31:16.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.576" endtime="20201030 18:31:16.642"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.644" endtime="20201030 18:31:16.645"></status>
</kw>
<msg timestamp="20201030 18:31:16.646" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:16.642" endtime="20201030 18:31:16.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.653" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:16.649" endtime="20201030 18:31:16.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.656" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:16.655" endtime="20201030 18:31:16.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.646" endtime="20201030 18:31:16.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.660" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:16.659" endtime="20201030 18:31:16.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.662" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:16.661" endtime="20201030 18:31:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.657" endtime="20201030 18:31:16.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.669" endtime="20201030 18:31:16.977"></status>
</kw>
<msg timestamp="20201030 18:31:16.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067933694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067948292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.668" endtime="20201030 18:31:16.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067933694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067948292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.981" endtime="20201030 18:31:16.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.989" endtime="20201030 18:31:16.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.665" endtime="20201030 18:31:16.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.664" endtime="20201030 18:31:16.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.003" level="INFO">${RESULT} = [{'diff': 1.4597999999990674e-05}, {'diff': 1.4625000000004218e-05}, {'diff': 1.4569000000005938e-05}, {'diff': 1.45969999999912e-05}, {'diff': 1.4583999999998043e-05}, {'diff': 1.45969999999912e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:16.992" endtime="20201030 18:31:17.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:17.007" level="INFO">${OVERHEAD} = {'diff': [1.4597999999990674e-05, 1.4625000000004218e-05, 1.4569000000005938e-05, 1.45969999999912e-05, 1.4583999999998043e-05, 1.45969999999912e-05, 1.45969999999912e-05, 1.458299999999857e-05, 1.461...</msg>
<status status="PASS" starttime="20201030 18:31:17.004" endtime="20201030 18:31:17.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.013" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:17.012" endtime="20201030 18:31:17.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.015" level="INFO">VALUE: [1.4597999999990674e-05, 1.4625000000004218e-05, 1.4569000000005938e-05, 1.45969999999912e-05, 1.4583999999998043e-05, 1.45969999999912e-05, 1.45969999999912e-05, 1.458299999999857e-05, 1.461099999999771e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.458400000001192e-05, 1.458299999999857e-05, 1.461099999999771e-05, 1.4597000000005078e-05, 1.45969999999912e-05, 1.4569000000005938e-05, 1.4625000000004218e-05, 1.4597000000005078e-05, 1.452700000000029e-05, 1.4583999999998043e-05, 1.45969999999912e-05, 1.4583000000012447e-05, 1.458400000001192e-05, 1.4583999999998043e-05, 1.4570000000005412e-05, 1.4597000000005078e-05, 1.4541999999992394e-05, 1.461099999999771e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4598000000004552e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4583999999998043e-05, 1.461099999999771e-05, 1.4570000000005412e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4583000000012447e-05, 1.4570000000005412e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.452700000000029e-05, 1.4569000000005938e-05, 1.4569000000005938e-05, 1.4597000000005078e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.014" endtime="20201030 18:31:17.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.008" endtime="20201030 18:31:17.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.020" endtime="20201030 18:31:17.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.018" endtime="20201030 18:31:17.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.017" endtime="20201030 18:31:17.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.575" endtime="20201030 18:31:17.041"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:16.500" endtime="20201030 18:31:17.041" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.048" endtime="20201030 18:31:17.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.047" endtime="20201030 18:31:17.068"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.082" endtime="20201030 18:31:17.101"></status>
</kw>
<msg timestamp="20201030 18:31:17.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.080" endtime="20201030 18:31:17.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.103" endtime="20201030 18:31:17.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.109" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:17.106" endtime="20201030 18:31:17.109"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:17.077" endtime="20201030 18:31:17.110"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:17.075" endtime="20201030 18:31:17.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.074" endtime="20201030 18:31:17.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:17.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:17.116" endtime="20201030 18:31:17.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.113" endtime="20201030 18:31:17.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.073" endtime="20201030 18:31:17.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.072" endtime="20201030 18:31:17.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.120" endtime="20201030 18:31:17.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.071" endtime="20201030 18:31:17.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.069" endtime="20201030 18:31:17.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.045" endtime="20201030 18:31:17.123"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.133" endtime="20201030 18:31:17.267"></status>
</kw>
<msg timestamp="20201030 18:31:17.268" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.131" endtime="20201030 18:31:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.270" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.269" endtime="20201030 18:31:17.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.272" endtime="20201030 18:31:17.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.127" endtime="20201030 18:31:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.125" endtime="20201030 18:31:17.274"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.276" endtime="20201030 18:31:17.278"></status>
</kw>
<msg timestamp="20201030 18:31:17.279" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:31:17.275" endtime="20201030 18:31:17.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.283" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:17.282" endtime="20201030 18:31:17.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.285" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:17.284" endtime="20201030 18:31:17.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.279" endtime="20201030 18:31:17.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.290" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:17.289" endtime="20201030 18:31:17.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.292" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:17.291" endtime="20201030 18:31:17.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.286" endtime="20201030 18:31:17.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.299" endtime="20201030 18:31:17.598"></status>
</kw>
<msg timestamp="20201030 18:31:17.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0765895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076612222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:17.298" endtime="20201030 18:31:17.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0765895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076612222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:17.607" endtime="20201030 18:31:17.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.626" endtime="20201030 18:31:17.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.295" endtime="20201030 18:31:17.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.293" endtime="20201030 18:31:17.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.641" level="INFO">${RESULT} = [{'diff': 2.2721999999988918e-05}, {'diff': 2.2764000000008444e-05}, {'diff': 2.2722000000002796e-05}, {'diff': 2.272300000000227e-05}, {'diff': 2.2694000000003656e-05}, {'diff': 2.2679999999997147e-0...</msg>
<status status="PASS" starttime="20201030 18:31:17.634" endtime="20201030 18:31:17.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:17.653" level="INFO">${OVERHEAD} = {'diff': [2.2721999999988918e-05, 2.2764000000008444e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.2694000000003656e-05, 2.2679999999997147e-05, 2.2735999999995427e-05, 2.2721999999988918e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:17.644" endtime="20201030 18:31:17.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.663" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:17.661" endtime="20201030 18:31:17.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.669" level="INFO">VALUE: [2.2721999999988918e-05, 2.2764000000008444e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.2694000000003656e-05, 2.2679999999997147e-05, 2.2735999999995427e-05, 2.2721999999988918e-05, 2.268099999999662e-05, 2.2694000000003656e-05, 2.2707999999996287e-05, 2.265299999999748e-05, 2.270899999999576e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.265299999999748e-05, 2.270899999999576e-05, 2.270899999999576e-05, 2.2736000000009304e-05, 2.2707999999996287e-05, 2.2709000000009638e-05, 2.2707999999996287e-05, 2.2708000000010164e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.266599999997676e-05, 2.272300000000227e-05, 2.262499999999834e-05, 2.2708000000010164e-05, 2.2735999999995427e-05, 2.2695000000017007e-05, 2.269499999998925e-05, 2.2708999999981883e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.270799999998241e-05, 2.2722000000002796e-05, 2.2694000000017533e-05, 2.2693999999989778e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2709000000009638e-05, 2.270799999998241e-05, 2.2736000000023182e-05, 2.2750000000015813e-05, 2.2722000000002796e-05, 2.265300000001136e-05, 2.2722000000002796e-05, 2.276399999998069e-05, 2.270799999998241e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.665" endtime="20201030 18:31:17.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.655" endtime="20201030 18:31:17.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.679" endtime="20201030 18:31:17.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.676" endtime="20201030 18:31:17.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.673" endtime="20201030 18:31:17.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.123" endtime="20201030 18:31:17.701"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:17.043" endtime="20201030 18:31:17.701" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.708" endtime="20201030 18:31:17.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.707" endtime="20201030 18:31:17.728"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.747" endtime="20201030 18:31:17.768"></status>
</kw>
<msg timestamp="20201030 18:31:17.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.745" endtime="20201030 18:31:17.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.769" endtime="20201030 18:31:17.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.776" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:17.773" endtime="20201030 18:31:17.776"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:17.742" endtime="20201030 18:31:17.777"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:17.738" endtime="20201030 18:31:17.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.736" endtime="20201030 18:31:17.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:17.782" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:17.782" endtime="20201030 18:31:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.779" endtime="20201030 18:31:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.735" endtime="20201030 18:31:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.734" endtime="20201030 18:31:17.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.784" endtime="20201030 18:31:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.732" endtime="20201030 18:31:17.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.730" endtime="20201030 18:31:17.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.705" endtime="20201030 18:31:17.790"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.794" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:17.802" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:18.839" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:17.792" endtime="20201030 18:31:18.840"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.843" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:31:18.841" endtime="20201030 18:31:19.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.791" endtime="20201030 18:31:19.846"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.873" endtime="20201030 18:31:19.887"></status>
</kw>
<msg timestamp="20201030 18:31:19.888" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.870" endtime="20201030 18:31:19.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.893" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.890" endtime="20201030 18:31:19.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.896" endtime="20201030 18:31:19.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.864" endtime="20201030 18:31:19.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.858" endtime="20201030 18:31:19.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.912" endtime="20201030 18:31:20.200"></status>
</kw>
<msg timestamp="20201030 18:31:20.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.747518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.064604403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.911" endtime="20201030 18:31:20.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.747518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.064604403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.204" endtime="20201030 18:31:20.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.212" endtime="20201030 18:31:20.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.906" endtime="20201030 18:31:20.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.902" endtime="20201030 18:31:20.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:20.219" level="INFO">${PHILIP_RES} = [{'diff': 0.3170862779999999}, {'diff': 1.080499999961404e-05}, {'diff': 6.167000000001366e-06}, {'diff': 6.139000000349171e-06}, {'diff': 6.179999999744723e-06}, {'diff': 6.181000000271553e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:20.215" endtime="20201030 18:31:20.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.224" level="INFO">${RESULT} = {'diff': [0.3170862779999999, 1.080499999961404e-05, 6.167000000001366e-06, 6.139000000349171e-06, 6.179999999744723e-06, 6.181000000271553e-06, 6.153000000175268e-06, 6.166000000362715e-06, 6.1529999...</msg>
<status status="PASS" starttime="20201030 18:31:20.220" endtime="20201030 18:31:20.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.229" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:20.228" endtime="20201030 18:31:20.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.231" level="INFO">VALUE: [0.3170862779999999, 1.080499999961404e-05, 6.167000000001366e-06, 6.139000000349171e-06, 6.179999999744723e-06, 6.181000000271553e-06, 6.153000000175268e-06, 6.166000000362715e-06, 6.152999999731179e-06, 6.179999999744723e-06, 6.167000000001366e-06, 6.180000000188812e-06, 6.167000000001366e-06, 6.180999999827463e-06, 6.139000000349171e-06, 6.207999999841007e-06, 6.179999999744723e-06, 6.180000000188812e-06, 6.19500000009765e-06, 6.1659999999186255e-06, 6.1389999999050815e-06, 6.153000000175268e-06, 6.19400000001491e-06, 6.180999999827463e-06, 6.179999999744723e-06, 6.139000000349171e-06, 6.208999999923748e-06, 6.151999999648439e-06, 6.180999999827463e-06, 6.1659999999186255e-06, 6.181000000271553e-06, 6.153000000175268e-06, 6.180000000188812e-06, 6.167000000001366e-06, 6.153000000175268e-06, 6.152999999731179e-06, 6.180999999827463e-06, 6.221999999667105e-06, 6.181000000271553e-06, 6.180000000188812e-06, 6.153000000175268e-06, 6.19500000009765e-06, 6.1659999999186255e-06, 6.180999999827463e-06, 6.19500000009765e-06, 6.179999999744723e-06, 6.209000000367837e-06, 6.153000000175268e-06, 6.167000000001366e-06, 6.181000000271553e-06, 6.1659999999186255e-06]</msg>
<status status="PASS" starttime="20201030 18:31:20.230" endtime="20201030 18:31:20.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.225" endtime="20201030 18:31:20.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.236" endtime="20201030 18:31:20.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.234" endtime="20201030 18:31:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.233" endtime="20201030 18:31:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.853" endtime="20201030 18:31:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.850" endtime="20201030 18:31:20.257"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.265" endtime="20201030 18:31:20.276"></status>
</kw>
<msg timestamp="20201030 18:31:20.277" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.263" endtime="20201030 18:31:20.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.279" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.278" endtime="20201030 18:31:20.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.280" endtime="20201030 18:31:20.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.261" endtime="20201030 18:31:20.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.259" endtime="20201030 18:31:20.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.290" endtime="20201030 18:31:20.577"></status>
</kw>
<msg timestamp="20201030 18:31:20.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017692319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.287" endtime="20201030 18:31:20.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017692319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.581" endtime="20201030 18:31:20.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.589" endtime="20201030 18:31:20.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.285" endtime="20201030 18:31:20.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.283" endtime="20201030 18:31:20.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:20.596" level="INFO">${PHILIP_RES} = [{'diff': 9.166000000001423e-06}, {'diff': 8.874999999998467e-06}, {'diff': 8.903000000001077e-06}, {'diff': 8.902999999997607e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.820000000003131e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:20.592" endtime="20201030 18:31:20.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.600" level="INFO">${RESULT} = {'diff': [9.166000000001423e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.820000000003131e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.9170...</msg>
<status status="PASS" starttime="20201030 18:31:20.597" endtime="20201030 18:31:20.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.605" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:20.604" endtime="20201030 18:31:20.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.607" level="INFO">VALUE: [9.166000000001423e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.820000000003131e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.915999999997704e-06, 8.832999999999758e-06, 8.903000000001077e-06, 8.887999999998564e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.819999999999661e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.888000000002033e-06, 8.917000000000647e-06, 8.833999999999231e-06, 8.916000000001173e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.833999999999231e-06, 8.916000000001173e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.874999999998467e-06, 8.903000000001077e-06]</msg>
<status status="PASS" starttime="20201030 18:31:20.606" endtime="20201030 18:31:20.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.601" endtime="20201030 18:31:20.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.612" endtime="20201030 18:31:20.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.610" endtime="20201030 18:31:20.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.609" endtime="20201030 18:31:20.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.258" endtime="20201030 18:31:20.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.257" endtime="20201030 18:31:20.635"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.654" endtime="20201030 18:31:20.668"></status>
</kw>
<msg timestamp="20201030 18:31:20.669" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.651" endtime="20201030 18:31:20.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.674" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.671" endtime="20201030 18:31:20.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.677" endtime="20201030 18:31:20.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.644" endtime="20201030 18:31:20.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.640" endtime="20201030 18:31:20.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.696" endtime="20201030 18:31:20.987"></status>
</kw>
<msg timestamp="20201030 18:31:20.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032833417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032845528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.692" endtime="20201030 18:31:20.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032833417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032845528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.991" endtime="20201030 18:31:20.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.999" endtime="20201030 18:31:21.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.687" endtime="20201030 18:31:21.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.683" endtime="20201030 18:31:21.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:21.006" level="INFO">${PHILIP_RES} = [{'diff': 1.2111000000002148e-05}, {'diff': 1.1847000000002328e-05}, {'diff': 1.180499999999668e-05}, {'diff': 1.1847000000002328e-05}, {'diff': 1.1778000000003952e-05}, {'diff': 1.1847000000002328e-0...</msg>
<status status="PASS" starttime="20201030 18:31:21.003" endtime="20201030 18:31:21.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.010" level="INFO">${RESULT} = {'diff': [1.2111000000002148e-05, 1.1847000000002328e-05, 1.180499999999668e-05, 1.1847000000002328e-05, 1.1778000000003952e-05, 1.1847000000002328e-05, 1.1874999999994529e-05, 1.1833000000002758e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:21.007" endtime="20201030 18:31:21.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.015" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:21.014" endtime="20201030 18:31:21.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.018" level="INFO">VALUE: [1.2111000000002148e-05, 1.1847000000002328e-05, 1.180499999999668e-05, 1.1847000000002328e-05, 1.1778000000003952e-05, 1.1847000000002328e-05, 1.1874999999994529e-05, 1.1833000000002758e-05, 1.1833000000002758e-05, 1.1833999999995293e-05, 1.1875000000001468e-05, 1.1861000000001898e-05, 1.1846999999995389e-05, 1.1846999999995389e-05, 1.1847000000002328e-05, 1.1875000000001468e-05, 1.1846999999995389e-05, 1.1806000000003092e-05, 1.1847000000002328e-05, 1.177699999999754e-05, 1.1847000000002328e-05, 1.1848000000001802e-05, 1.1930000000000274e-05, 1.1832999999995819e-05, 1.1861000000001898e-05, 1.1861000000001898e-05, 1.1847999999994863e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1846999999995389e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1847999999994863e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.179099999999711e-05, 1.1846999999995389e-05, 1.1848000000001802e-05, 1.1861000000001898e-05, 1.1860999999994959e-05, 1.1847000000002328e-05, 1.1847000000002328e-05, 1.1846999999995389e-05, 1.1862000000001371e-05, 1.1847000000002328e-05, 1.1791999999996583e-05, 1.1846999999995389e-05, 1.1791000000004048e-05, 1.1833000000002758e-05, 1.1847999999994863e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.017" endtime="20201030 18:31:21.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.011" endtime="20201030 18:31:21.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.022" endtime="20201030 18:31:21.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.021" endtime="20201030 18:31:21.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.020" endtime="20201030 18:31:21.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.637" endtime="20201030 18:31:21.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.636" endtime="20201030 18:31:21.043"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.051" endtime="20201030 18:31:21.063"></status>
</kw>
<msg timestamp="20201030 18:31:21.063" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.050" endtime="20201030 18:31:21.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.066" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.064" endtime="20201030 18:31:21.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.067" endtime="20201030 18:31:21.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.047" endtime="20201030 18:31:21.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.045" endtime="20201030 18:31:21.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.076" endtime="20201030 18:31:21.362"></status>
</kw>
<msg timestamp="20201030 18:31:21.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017706431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.074" endtime="20201030 18:31:21.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017706431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.366" endtime="20201030 18:31:21.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.374" endtime="20201030 18:31:21.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.072" endtime="20201030 18:31:21.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.070" endtime="20201030 18:31:21.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:21.381" level="INFO">${PHILIP_RES} = [{'diff': 1.5278000000000513e-05}, {'diff': 1.501299999999775e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5027999999996794e-05}, {'diff': 1.5028000000000263e-0...</msg>
<status status="PASS" starttime="20201030 18:31:21.378" endtime="20201030 18:31:21.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.386" level="INFO">${RESULT} = {'diff': [1.5278000000000513e-05, 1.501299999999775e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.4971999999998514e-05, 1.5014000000000693e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:21.382" endtime="20201030 18:31:21.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.390" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:21.389" endtime="20201030 18:31:21.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.393" level="INFO">VALUE: [1.5278000000000513e-05, 1.501299999999775e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.4971999999998514e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.5014000000000693e-05, 1.50689999999995e-05, 1.5000000000001124e-05, 1.504100000000036e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.502699999999732e-05, 1.501299999999775e-05, 1.5028000000000263e-05, 1.5013999999997224e-05, 1.4999999999997654e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.50689999999995e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.4972000000001984e-05, 1.508299999999907e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5055999999999403e-05, 1.5069000000002969e-05, 1.5013999999997224e-05, 1.501299999999775e-05, 1.502700000000079e-05, 1.5041999999999833e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.391" endtime="20201030 18:31:21.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.387" endtime="20201030 18:31:21.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.397" endtime="20201030 18:31:21.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.396" endtime="20201030 18:31:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.395" endtime="20201030 18:31:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.044" endtime="20201030 18:31:21.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.043" endtime="20201030 18:31:21.418"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.426" endtime="20201030 18:31:21.441"></status>
</kw>
<msg timestamp="20201030 18:31:21.442" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.424" endtime="20201030 18:31:21.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.447" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.444" endtime="20201030 18:31:21.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.450" endtime="20201030 18:31:21.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.422" endtime="20201030 18:31:21.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.420" endtime="20201030 18:31:21.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.469" endtime="20201030 18:31:21.762"></status>
</kw>
<msg timestamp="20201030 18:31:21.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017485889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.465" endtime="20201030 18:31:21.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017485889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.766" endtime="20201030 18:31:21.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.774" endtime="20201030 18:31:21.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.460" endtime="20201030 18:31:21.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.457" endtime="20201030 18:31:21.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:21.781" level="INFO">${PHILIP_RES} = [{'diff': 1.8707999999999225e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8472000000002015e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.8429999999999835e-0...</msg>
<status status="PASS" starttime="20201030 18:31:21.778" endtime="20201030 18:31:21.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.785" level="INFO">${RESULT} = {'diff': [1.8707999999999225e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8472000000002015e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:31:21.782" endtime="20201030 18:31:21.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.789" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:21.788" endtime="20201030 18:31:21.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.792" level="INFO">VALUE: [1.8707999999999225e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8472000000002015e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.8486000000001584e-05, 1.843099999999931e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.843100000000278e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.844500000000235e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.836100000000146e-05, 1.8500000000001154e-05, 1.8416000000000265e-05, 1.8444000000002875e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8444000000002875e-05, 1.844500000000235e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.843099999999931e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.791" endtime="20201030 18:31:21.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.786" endtime="20201030 18:31:21.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.796" endtime="20201030 18:31:21.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.795" endtime="20201030 18:31:21.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.794" endtime="20201030 18:31:21.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.419" endtime="20201030 18:31:21.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.418" endtime="20201030 18:31:21.817"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.825" endtime="20201030 18:31:21.840"></status>
</kw>
<msg timestamp="20201030 18:31:21.840" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.824" endtime="20201030 18:31:21.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.843" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.841" endtime="20201030 18:31:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.844" endtime="20201030 18:31:21.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.821" endtime="20201030 18:31:21.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.819" endtime="20201030 18:31:21.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.853" endtime="20201030 18:31:22.139"></status>
</kw>
<msg timestamp="20201030 18:31:22.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018465931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.851" endtime="20201030 18:31:22.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018465931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.144" endtime="20201030 18:31:22.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.152" endtime="20201030 18:31:22.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.849" endtime="20201030 18:31:22.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.847" endtime="20201030 18:31:22.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:22.158" level="INFO">${PHILIP_RES} = [{'diff': 2.2334000000002324e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.202700000000085e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2069999999999035e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:22.155" endtime="20201030 18:31:22.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.162" level="INFO">${RESULT} = {'diff': [2.2334000000002324e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.202700000000085e-05, 2.205499999999999e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:22.159" endtime="20201030 18:31:22.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.167" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:22.166" endtime="20201030 18:31:22.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.169" level="INFO">VALUE: [2.2334000000002324e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.202700000000085e-05, 2.205499999999999e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.202700000000085e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2000000000001185e-05, 2.205499999999999e-05, 2.204100000000042e-05, 2.206899999999956e-05, 2.2056000000002934e-05, 2.2083999999998605e-05, 2.2028000000000325e-05, 2.2056000000002934e-05, 2.204100000000042e-05, 2.204100000000042e-05, 2.206899999999956e-05, 2.2028000000000325e-05, 2.2055999999999465e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.1972000000002045e-05, 2.204100000000042e-05, 2.209700000000217e-05, 2.2070000000002504e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.204100000000042e-05, 2.2027999999996856e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2026999999997382e-05, 2.204100000000042e-05, 2.2084000000002074e-05, 2.2055999999999465e-05, 2.2028000000000325e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.168" endtime="20201030 18:31:22.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.163" endtime="20201030 18:31:22.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.177" endtime="20201030 18:31:22.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.175" endtime="20201030 18:31:22.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.174" endtime="20201030 18:31:22.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.818" endtime="20201030 18:31:22.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.817" endtime="20201030 18:31:22.199"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.216" endtime="20201030 18:31:22.230"></status>
</kw>
<msg timestamp="20201030 18:31:22.231" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.212" endtime="20201030 18:31:22.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.233" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.232" endtime="20201030 18:31:22.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.234" endtime="20201030 18:31:22.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.208" endtime="20201030 18:31:22.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.203" endtime="20201030 18:31:22.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.244" endtime="20201030 18:31:22.549"></status>
</kw>
<msg timestamp="20201030 18:31:22.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028180347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028206514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.243" endtime="20201030 18:31:22.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028180347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028206514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.553" endtime="20201030 18:31:22.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.562" endtime="20201030 18:31:22.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.239" endtime="20201030 18:31:22.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.237" endtime="20201030 18:31:22.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:22.569" level="INFO">${PHILIP_RES} = [{'diff': 2.616699999999708e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.5902000000001257e-05}, {'diff': 2.5916000000000827e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:22.565" endtime="20201030 18:31:22.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.574" level="INFO">${RESULT} = {'diff': [2.616699999999708e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5916000000000827e-05, 2.5902000000001257e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.5971999999999107e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:22.570" endtime="20201030 18:31:22.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.578" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:22.577" endtime="20201030 18:31:22.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.581" level="INFO">VALUE: [2.616699999999708e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5916000000000827e-05, 2.5902000000001257e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.5971999999999107e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5832999999999412e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.5832999999999412e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.5901999999997788e-05, 2.588899999999769e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.5929999999996928e-05, 2.5901999999997788e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5930000000000397e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.593099999999987e-05, 2.5916000000000827e-05, 2.5916000000000827e-05, 2.588900000000116e-05, 2.5943999999999967e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.590300000000073e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.580" endtime="20201030 18:31:22.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.575" endtime="20201030 18:31:22.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.586" endtime="20201030 18:31:22.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.584" endtime="20201030 18:31:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.583" endtime="20201030 18:31:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.201" endtime="20201030 18:31:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.199" endtime="20201030 18:31:22.606"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.615" endtime="20201030 18:31:22.628"></status>
</kw>
<msg timestamp="20201030 18:31:22.628" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.613" endtime="20201030 18:31:22.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.631" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.629" endtime="20201030 18:31:22.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.632" endtime="20201030 18:31:22.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.611" endtime="20201030 18:31:22.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.609" endtime="20201030 18:31:22.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.642" endtime="20201030 18:31:22.928"></status>
</kw>
<msg timestamp="20201030 18:31:22.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018129653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.640" endtime="20201030 18:31:22.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018129653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.933" endtime="20201030 18:31:22.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.941" endtime="20201030 18:31:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.637" endtime="20201030 18:31:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.636" endtime="20201030 18:31:22.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:22.949" level="INFO">${PHILIP_RES} = [{'diff': 3.0278000000001637e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.9971999999999638e-...</msg>
<status status="PASS" starttime="20201030 18:31:22.946" endtime="20201030 18:31:22.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.953" level="INFO">${RESULT} = {'diff': [3.0278000000001637e-05, 2.9985999999999208e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05...</msg>
<status status="PASS" starttime="20201030 18:31:22.950" endtime="20201030 18:31:22.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.958" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:22.957" endtime="20201030 18:31:22.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.960" level="INFO">VALUE: [3.0278000000001637e-05, 2.9985999999999208e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9944000000000498e-05, 3.0000000000002247e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.9999999999998778e-05, 2.9972000000003107e-05, 2.9971999999999638e-05, 3.0042000000000957e-05, 2.9999999999998778e-05, 2.9986000000002677e-05, 2.9999999999998778e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 3.0013999999998348e-05, 2.995899999999954e-05, 2.9985999999999208e-05, 2.9972000000003107e-05, 2.9971999999999638e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 2.9972000000003107e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.9931000000000402e-05, 2.995899999999954e-05, 2.9999999999998778e-05, 2.9986000000002677e-05, 2.995899999999954e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9986000000002677e-05, 2.995899999999954e-05, 2.9985999999999208e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.959" endtime="20201030 18:31:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.954" endtime="20201030 18:31:22.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.965" endtime="20201030 18:31:22.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.964" endtime="20201030 18:31:22.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.962" endtime="20201030 18:31:22.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.607" endtime="20201030 18:31:22.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.607" endtime="20201030 18:31:22.986"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.995" endtime="20201030 18:31:23.008"></status>
</kw>
<msg timestamp="20201030 18:31:23.009" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.993" endtime="20201030 18:31:23.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.012" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.010" endtime="20201030 18:31:23.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.013" endtime="20201030 18:31:23.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.990" endtime="20201030 18:31:23.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.988" endtime="20201030 18:31:23.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.022" endtime="20201030 18:31:23.308"></status>
</kw>
<msg timestamp="20201030 18:31:23.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018996681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.020" endtime="20201030 18:31:23.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018996681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.315" endtime="20201030 18:31:23.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.324" endtime="20201030 18:31:23.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.018" endtime="20201030 18:31:23.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.016" endtime="20201030 18:31:23.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:23.334" level="INFO">${PHILIP_RES} = [{'diff': 3.448600000000024e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.429200000000174e-05}, {'diff': 3.427800000000217e-05}, {'diff': 3.4276999999999225e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:23.330" endtime="20201030 18:31:23.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.339" level="INFO">${RESULT} = {'diff': [3.448600000000024e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.429200000000174e-05, 3.427800000000217e-05, 3.4276999999999225e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.429200...</msg>
<status status="PASS" starttime="20201030 18:31:23.335" endtime="20201030 18:31:23.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.343" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:23.342" endtime="20201030 18:31:23.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.346" level="INFO">VALUE: [3.448600000000024e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.429200000000174e-05, 3.427800000000217e-05, 3.4276999999999225e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.429200000000174e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.4304999999998365e-05, 3.427800000000217e-05, 3.4277000000002694e-05, 3.42779999999987e-05, 3.430599999999784e-05, 3.423599999999999e-05, 3.429200000000174e-05, 3.42640000000026e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.4347000000000544e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.4290999999998795e-05, 3.4305000000001834e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.420800000000085e-05, 3.4276999999999225e-05, 3.429199999999827e-05, 3.4347000000000544e-05, 3.4276999999999225e-05, 3.422299999999989e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.429200000000174e-05, 3.4276999999999225e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.4277000000002694e-05, 3.427800000000217e-05, 3.42640000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.345" endtime="20201030 18:31:23.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.340" endtime="20201030 18:31:23.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.352" endtime="20201030 18:31:23.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.350" endtime="20201030 18:31:23.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.349" endtime="20201030 18:31:23.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.987" endtime="20201030 18:31:23.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.986" endtime="20201030 18:31:23.372"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.381" endtime="20201030 18:31:23.396"></status>
</kw>
<msg timestamp="20201030 18:31:23.396" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.380" endtime="20201030 18:31:23.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.399" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.397" endtime="20201030 18:31:23.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.400" endtime="20201030 18:31:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.377" endtime="20201030 18:31:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.375" endtime="20201030 18:31:23.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.409" endtime="20201030 18:31:23.696"></status>
</kw>
<msg timestamp="20201030 18:31:23.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018858028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018897083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.408" endtime="20201030 18:31:23.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018858028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018897083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.700" endtime="20201030 18:31:23.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.709" endtime="20201030 18:31:23.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.405" endtime="20201030 18:31:23.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.403" endtime="20201030 18:31:23.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:23.715" level="INFO">${PHILIP_RES} = [{'diff': 3.9054999999999646e-05}, {'diff': 3.880599999999887e-05}, {'diff': 3.880599999999887e-05}, {'diff': 3.879200000000277e-05}, {'diff': 3.8790999999999826e-05}, {'diff': 3.8804999999999396e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:23.712" endtime="20201030 18:31:23.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.721" level="INFO">${RESULT} = {'diff': [3.9054999999999646e-05, 3.880599999999887e-05, 3.880599999999887e-05, 3.879200000000277e-05, 3.8790999999999826e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.87...</msg>
<status status="PASS" starttime="20201030 18:31:23.717" endtime="20201030 18:31:23.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.725" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:23.724" endtime="20201030 18:31:23.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.728" level="INFO">VALUE: [3.9054999999999646e-05, 3.880599999999887e-05, 3.880599999999887e-05, 3.879200000000277e-05, 3.8790999999999826e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.877799999999973e-05, 3.8875000000000715e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8818999999998965e-05, 3.879200000000277e-05, 3.876400000000016e-05, 3.8790999999999826e-05, 3.8804999999999396e-05, 3.8833000000002005e-05, 3.8833000000002005e-05, 3.8832999999998535e-05, 3.8818999999998965e-05, 3.879200000000277e-05, 3.880599999999887e-05, 3.883399999999801e-05, 3.883399999999801e-05, 3.8804999999999396e-05, 3.8818999999998965e-05, 3.875000000000059e-05, 3.8805000000002865e-05, 3.8790999999999826e-05, 3.87919999999993e-05, 3.880599999999887e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8804999999999396e-05, 3.876400000000016e-05, 3.880600000000234e-05, 3.882000000000191e-05, 3.8790999999999826e-05, 3.877799999999973e-05, 3.87780000000032e-05, 3.873599999999755e-05, 3.8790999999999826e-05, 3.8846999999998105e-05, 3.879200000000277e-05, 3.880599999999887e-05, 3.8846999999998105e-05, 3.8819000000002435e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.726" endtime="20201030 18:31:23.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.722" endtime="20201030 18:31:23.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.732" endtime="20201030 18:31:23.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.731" endtime="20201030 18:31:23.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.730" endtime="20201030 18:31:23.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.373" endtime="20201030 18:31:23.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.373" endtime="20201030 18:31:23.753"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.762" endtime="20201030 18:31:23.777"></status>
</kw>
<msg timestamp="20201030 18:31:23.778" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.761" endtime="20201030 18:31:23.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.780" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.779" endtime="20201030 18:31:23.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.781" endtime="20201030 18:31:23.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.758" endtime="20201030 18:31:23.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.756" endtime="20201030 18:31:23.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.791" endtime="20201030 18:31:24.078"></status>
</kw>
<msg timestamp="20201030 18:31:24.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:23.789" endtime="20201030 18:31:24.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:24.082" endtime="20201030 18:31:24.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.090" endtime="20201030 18:31:24.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.787" endtime="20201030 18:31:24.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.785" endtime="20201030 18:31:24.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:24.098" level="INFO">${PHILIP_RES} = [{'diff': 4.3833000000000066e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.3569000000000246e-05}, {'diff': 4.3555000000000677e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.354199999999711e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:24.095" endtime="20201030 18:31:24.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.103" level="INFO">${RESULT} = {'diff': [4.3833000000000066e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.354199999999711e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:24.099" endtime="20201030 18:31:24.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.107" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:24.106" endtime="20201030 18:31:24.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.110" level="INFO">VALUE: [4.3833000000000066e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.354199999999711e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.3582999999999816e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.3583000000003286e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.358399999999929e-05, 4.3569000000000246e-05, 4.3541000000001107e-05, 4.355600000000015e-05, 4.358399999999929e-05, 4.34999999999984e-05, 4.355600000000015e-05, 4.358400000000276e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.352800000000101e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.354099999999764e-05, 4.354200000000058e-05, 4.354200000000058e-05, 4.3569000000000246e-05, 4.356999999999972e-05, 4.355499999999721e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.352699999999807e-05, 4.355600000000015e-05, 4.352800000000101e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.108" endtime="20201030 18:31:24.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.103" endtime="20201030 18:31:24.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.114" endtime="20201030 18:31:24.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.113" endtime="20201030 18:31:24.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.112" endtime="20201030 18:31:24.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.754" endtime="20201030 18:31:24.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.754" endtime="20201030 18:31:24.135"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.144" endtime="20201030 18:31:24.160"></status>
</kw>
<msg timestamp="20201030 18:31:24.161" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.143" endtime="20201030 18:31:24.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.163" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.162" endtime="20201030 18:31:24.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.164" endtime="20201030 18:31:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.140" endtime="20201030 18:31:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.138" endtime="20201030 18:31:24.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.174" endtime="20201030 18:31:24.460"></status>
</kw>
<msg timestamp="20201030 18:31:24.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.172" endtime="20201030 18:31:24.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.465" endtime="20201030 18:31:24.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.473" endtime="20201030 18:31:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.169" endtime="20201030 18:31:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.167" endtime="20201030 18:31:24.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:24.480" level="INFO">${PHILIP_RES} = [{'diff': 4.879199999999889e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.852800000000254e-05}, {'diff': 4.852800000000254e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:24.477" endtime="20201030 18:31:24.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.484" level="INFO">${RESULT} = {'diff': [4.879199999999889e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.852800000000254e-05, 4.852800000000254e-05, 4.849999999999993e-05, 4.854200000000211e-05, 4.85130...</msg>
<status status="PASS" starttime="20201030 18:31:24.481" endtime="20201030 18:31:24.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.489" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:24.488" endtime="20201030 18:31:24.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.491" level="INFO">VALUE: [4.879199999999889e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.852800000000254e-05, 4.852800000000254e-05, 4.849999999999993e-05, 4.854200000000211e-05, 4.851300000000003e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.847200000000079e-05, 4.85269999999996e-05, 4.854200000000211e-05, 4.854200000000211e-05, 4.849999999999993e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.855599999999821e-05, 4.854200000000211e-05, 4.851400000000297e-05, 4.852800000000254e-05, 4.852799999999907e-05, 4.85269999999996e-05, 4.848600000000036e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.856899999999831e-05, 4.852700000000307e-05, 4.847200000000079e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.851300000000003e-05, 4.858399999999735e-05, 4.852799999999907e-05, 4.854099999999917e-05, 4.852800000000254e-05, 4.854099999999917e-05, 4.85139999999995e-05, 4.855500000000221e-05, 4.848600000000036e-05, 4.854199999999864e-05, 4.855599999999821e-05, 4.85139999999995e-05, 4.852800000000254e-05, 4.85269999999996e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.490" endtime="20201030 18:31:24.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.485" endtime="20201030 18:31:24.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.497" endtime="20201030 18:31:24.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.495" endtime="20201030 18:31:24.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.494" endtime="20201030 18:31:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.136" endtime="20201030 18:31:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.136" endtime="20201030 18:31:24.518"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.527" endtime="20201030 18:31:24.543"></status>
</kw>
<msg timestamp="20201030 18:31:24.543" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.525" endtime="20201030 18:31:24.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.546" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.544" endtime="20201030 18:31:24.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.547" endtime="20201030 18:31:24.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.523" endtime="20201030 18:31:24.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.521" endtime="20201030 18:31:24.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.556" endtime="20201030 18:31:24.844"></status>
</kw>
<msg timestamp="20201030 18:31:24.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.555" endtime="20201030 18:31:24.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.848" endtime="20201030 18:31:24.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.857" endtime="20201030 18:31:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.552" endtime="20201030 18:31:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.550" endtime="20201030 18:31:24.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:24.864" level="INFO">${PHILIP_RES} = [{'diff': 5.3985999999998924e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.369499999999944e-05}, {'diff': 5.3777999999997383e-05}, {'diff': 5.373699999999815e-05}, {'diff': 5.3735999999998674e-05...</msg>
<status status="PASS" starttime="20201030 18:31:24.860" endtime="20201030 18:31:24.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.869" level="INFO">${RESULT} = {'diff': [5.3985999999998924e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.3777999999997383e-05, 5.373699999999815e-05, 5.3735999999998674e-05, 5.380500000000052e-05, 5.3721999999999104e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:31:24.865" endtime="20201030 18:31:24.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.873" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:24.872" endtime="20201030 18:31:24.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.876" level="INFO">VALUE: [5.3985999999998924e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.3777999999997383e-05, 5.373699999999815e-05, 5.3735999999998674e-05, 5.380500000000052e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3693999999999964e-05, 5.372200000000257e-05, 5.3708000000003e-05, 5.370900000000248e-05, 5.372300000000205e-05, 5.381899999999662e-05, 5.3749999999998244e-05, 5.368099999999987e-05, 5.3749999999998244e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.372299999999858e-05, 5.372299999999858e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.372200000000257e-05, 5.380599999999999e-05, 5.373600000000214e-05, 5.380599999999999e-05, 5.3763999999997814e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 5.375000000000171e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.376400000000128e-05, 5.370900000000248e-05, 5.365300000000073e-05, 5.372200000000257e-05, 5.372200000000257e-05, 5.370899999999901e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.3763999999997814e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.875" endtime="20201030 18:31:24.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.870" endtime="20201030 18:31:24.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.881" endtime="20201030 18:31:24.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.880" endtime="20201030 18:31:24.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.878" endtime="20201030 18:31:24.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.519" endtime="20201030 18:31:24.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.519" endtime="20201030 18:31:24.902"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.911" endtime="20201030 18:31:24.927"></status>
</kw>
<msg timestamp="20201030 18:31:24.928" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.909" endtime="20201030 18:31:24.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.930" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.929" endtime="20201030 18:31:24.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.931" endtime="20201030 18:31:24.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.906" endtime="20201030 18:31:24.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.904" endtime="20201030 18:31:24.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.941" endtime="20201030 18:31:25.235"></status>
</kw>
<msg timestamp="20201030 18:31:25.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018400125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.939" endtime="20201030 18:31:25.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018400125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.244" endtime="20201030 18:31:25.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.263" endtime="20201030 18:31:25.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.937" endtime="20201030 18:31:25.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.935" endtime="20201030 18:31:25.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:25.279" level="INFO">${PHILIP_RES} = [{'diff': 5.943099999999868e-05}, {'diff': 5.915299999999929e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.920900000000104e-05}, {'diff': 5.915299999999929e-05}, {'diff': 5.915299999999929e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:25.272" endtime="20201030 18:31:25.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.287" level="INFO">${RESULT} = {'diff': [5.943099999999868e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.920900000000104e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.915...</msg>
<status status="PASS" starttime="20201030 18:31:25.281" endtime="20201030 18:31:25.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.292" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:25.290" endtime="20201030 18:31:25.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.294" level="INFO">VALUE: [5.943099999999868e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.920900000000104e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9194999999998e-05, 5.915299999999929e-05, 5.9165999999999386e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.9179999999998956e-05, 5.913899999999972e-05, 5.915300000000276e-05, 5.912500000000015e-05, 5.915300000000276e-05, 5.913900000000319e-05, 5.916700000000233e-05, 5.915299999999929e-05, 5.916700000000233e-05, 5.9165999999999386e-05, 5.9180000000002425e-05, 5.916700000000233e-05, 5.91810000000019e-05, 5.912500000000015e-05, 5.9165999999999386e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.9208000000001565e-05, 5.913899999999972e-05, 5.9179999999998956e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9165999999999386e-05, 5.916699999999886e-05, 5.9165999999999386e-05, 5.913899999999972e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.920899999999757e-05, 5.913899999999972e-05, 5.913899999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.293" endtime="20201030 18:31:25.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.288" endtime="20201030 18:31:25.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.299" endtime="20201030 18:31:25.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.297" endtime="20201030 18:31:25.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.296" endtime="20201030 18:31:25.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.903" endtime="20201030 18:31:25.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.902" endtime="20201030 18:31:25.320"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.328" endtime="20201030 18:31:25.345"></status>
</kw>
<msg timestamp="20201030 18:31:25.345" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.326" endtime="20201030 18:31:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.348" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.346" endtime="20201030 18:31:25.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.349" endtime="20201030 18:31:25.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.324" endtime="20201030 18:31:25.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.322" endtime="20201030 18:31:25.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.358" endtime="20201030 18:31:25.643"></status>
</kw>
<msg timestamp="20201030 18:31:25.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018558889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.356" endtime="20201030 18:31:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018558889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.647" endtime="20201030 18:31:25.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.656" endtime="20201030 18:31:25.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.354" endtime="20201030 18:31:25.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.352" endtime="20201030 18:31:25.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:25.663" level="INFO">${PHILIP_RES} = [{'diff': 6.50419999999978e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.480500000000111e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.480600000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:25.660" endtime="20201030 18:31:25.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.667" level="INFO">${RESULT} = {'diff': [6.50419999999978e-05, 6.487499999999896e-05, 6.480500000000111e-05, 6.479200000000102e-05, 6.484699999999982e-05, 6.480600000000059e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.47909...</msg>
<status status="PASS" starttime="20201030 18:31:25.664" endtime="20201030 18:31:25.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.671" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:25.670" endtime="20201030 18:31:25.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.674" level="INFO">VALUE: [6.50419999999978e-05, 6.487499999999896e-05, 6.480500000000111e-05, 6.479200000000102e-05, 6.484699999999982e-05, 6.480600000000059e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.479099999999807e-05, 6.479200000000102e-05, 6.483399999999973e-05, 6.479099999999807e-05, 6.479200000000102e-05, 6.477799999999798e-05, 6.479100000000154e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.487499999999896e-05, 6.477799999999798e-05, 6.480600000000059e-05, 6.481900000000068e-05, 6.481899999999721e-05, 6.48479999999993e-05, 6.483300000000025e-05, 6.487500000000243e-05, 6.473599999999927e-05, 6.482000000000016e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.480600000000059e-05, 6.480500000000111e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.479100000000154e-05, 6.479099999999807e-05, 6.480600000000059e-05, 6.479200000000102e-05, 6.480499999999764e-05, 6.480600000000059e-05, 6.47500000000023e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.473599999999927e-05, 6.484699999999982e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.480500000000111e-05, 6.476400000000188e-05, 6.479200000000102e-05, 6.479099999999807e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.672" endtime="20201030 18:31:25.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.668" endtime="20201030 18:31:25.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.682" endtime="20201030 18:31:25.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.680" endtime="20201030 18:31:25.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.679" endtime="20201030 18:31:25.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.320" endtime="20201030 18:31:25.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.320" endtime="20201030 18:31:25.702"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.711" endtime="20201030 18:31:25.728"></status>
</kw>
<msg timestamp="20201030 18:31:25.728" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.709" endtime="20201030 18:31:25.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.731" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.729" endtime="20201030 18:31:25.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.732" endtime="20201030 18:31:25.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.707" endtime="20201030 18:31:25.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.705" endtime="20201030 18:31:25.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.741" endtime="20201030 18:31:26.039"></status>
</kw>
<msg timestamp="20201030 18:31:26.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01761775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:25.739" endtime="20201030 18:31:26.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01761775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:26.049" endtime="20201030 18:31:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.067" endtime="20201030 18:31:26.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.736" endtime="20201030 18:31:26.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.735" endtime="20201030 18:31:26.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:26.082" level="INFO">${PHILIP_RES} = [{'diff': 7.094399999999987e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.065300000000038e-05}, {'diff': 7.068100000000299e-05}, {'diff': 7.068000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:26.075" endtime="20201030 18:31:26.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.093" level="INFO">${RESULT} = {'diff': [7.094399999999987e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.065300000000038e-05, 7.068100000000299e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.066699999999995e-05, 7.0681...</msg>
<status status="PASS" starttime="20201030 18:31:26.084" endtime="20201030 18:31:26.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.100" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:26.099" endtime="20201030 18:31:26.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.102" level="INFO">VALUE: [7.094399999999987e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.065300000000038e-05, 7.068100000000299e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.066699999999995e-05, 7.068100000000299e-05, 7.066699999999995e-05, 7.068000000000005e-05, 7.062499999999777e-05, 7.068100000000299e-05, 7.068100000000299e-05, 7.068000000000005e-05, 7.070800000000266e-05, 7.066699999999995e-05, 7.068100000000299e-05, 7.07360000000018e-05, 7.068000000000005e-05, 7.070900000000213e-05, 7.069500000000256e-05, 7.07360000000018e-05, 7.072199999999876e-05, 7.068000000000005e-05, 7.063900000000081e-05, 7.063900000000081e-05, 7.066599999999701e-05, 7.067999999999658e-05, 7.068099999999952e-05, 7.065300000000038e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.065299999999691e-05, 7.066700000000342e-05, 7.069500000000256e-05, 7.066599999999701e-05, 7.068000000000005e-05, 7.066699999999995e-05, 7.072200000000223e-05, 7.068100000000299e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.069500000000256e-05, 7.069500000000256e-05, 7.06109999999982e-05, 7.068000000000005e-05, 7.069500000000256e-05, 7.066699999999995e-05, 7.068000000000005e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.101" endtime="20201030 18:31:26.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.095" endtime="20201030 18:31:26.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.107" endtime="20201030 18:31:26.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.106" endtime="20201030 18:31:26.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.105" endtime="20201030 18:31:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.703" endtime="20201030 18:31:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.703" endtime="20201030 18:31:26.128"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.137" endtime="20201030 18:31:26.154"></status>
</kw>
<msg timestamp="20201030 18:31:26.155" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.135" endtime="20201030 18:31:26.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.157" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.156" endtime="20201030 18:31:26.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.159" endtime="20201030 18:31:26.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.133" endtime="20201030 18:31:26.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.131" endtime="20201030 18:31:26.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.168" endtime="20201030 18:31:26.454"></status>
</kw>
<msg timestamp="20201030 18:31:26.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018236569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:26.166" endtime="20201030 18:31:26.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018236569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:26.457" endtime="20201030 18:31:26.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.465" endtime="20201030 18:31:26.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.164" endtime="20201030 18:31:26.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.162" endtime="20201030 18:31:26.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:26.473" level="INFO">${PHILIP_RES} = [{'diff': 7.706900000000252e-05}, {'diff': 7.677800000000304e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.6764e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201030 18:31:26.470" endtime="20201030 18:31:26.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.477" level="INFO">${RESULT} = {'diff': [7.706900000000252e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.673600000000086e-05, 7.673600000000086e-05, 7.6764e-05, 7.679199999999914e-05, 7.6764e-05, 7.67770000000001e-05, 7.6790...</msg>
<status status="PASS" starttime="20201030 18:31:26.474" endtime="20201030 18:31:26.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.481" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:26.480" endtime="20201030 18:31:26.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.484" level="INFO">VALUE: [7.706900000000252e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.673600000000086e-05, 7.673600000000086e-05, 7.6764e-05, 7.679199999999914e-05, 7.6764e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.670800000000172e-05, 7.6764e-05, 7.677799999999957e-05, 7.6764e-05, 7.680599999999871e-05, 7.6764e-05, 7.677799999999957e-05, 7.6764e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.672200000000129e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.679099999999967e-05, 7.6764e-05, 7.679200000000261e-05, 7.680499999999923e-05, 7.679199999999914e-05, 7.673600000000086e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.675000000000043e-05, 7.680600000000218e-05, 7.6764e-05, 7.6764e-05, 7.679099999999967e-05, 7.679099999999967e-05, 7.680499999999923e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.683300000000184e-05, 7.677799999999957e-05, 7.686100000000098e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.482" endtime="20201030 18:31:26.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.478" endtime="20201030 18:31:26.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.488" endtime="20201030 18:31:26.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.487" endtime="20201030 18:31:26.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.486" endtime="20201030 18:31:26.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.129" endtime="20201030 18:31:26.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.129" endtime="20201030 18:31:26.509"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.517" endtime="20201030 18:31:26.536"></status>
</kw>
<msg timestamp="20201030 18:31:26.536" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.516" endtime="20201030 18:31:26.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.539" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.537" endtime="20201030 18:31:26.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.540" endtime="20201030 18:31:26.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.513" endtime="20201030 18:31:26.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.511" endtime="20201030 18:31:26.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.549" endtime="20201030 18:31:26.843"></status>
</kw>
<msg timestamp="20201030 18:31:26.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.547" endtime="20201030 18:31:26.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.853" endtime="20201030 18:31:26.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.870" endtime="20201030 18:31:26.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.545" endtime="20201030 18:31:26.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.543" endtime="20201030 18:31:26.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:26.884" level="INFO">${PHILIP_RES} = [{'diff': 8.331999999999784e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.308400000000063e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:31:26.877" endtime="20201030 18:31:26.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.893" level="INFO">${RESULT} = {'diff': [8.331999999999784e-05, 8.31110000000003e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.311100000...</msg>
<status status="PASS" starttime="20201030 18:31:26.886" endtime="20201030 18:31:26.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.901" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:26.899" endtime="20201030 18:31:26.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.906" level="INFO">VALUE: [8.331999999999784e-05, 8.31110000000003e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.305600000000149e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.304200000000192e-05, 8.3152999999999e-05, 8.317999999999867e-05, 8.309699999999726e-05, 8.315199999999953e-05, 8.309699999999726e-05, 8.309699999999726e-05, 8.309699999999726e-05, 8.309699999999726e-05, 8.311199999999977e-05, 8.316700000000204e-05, 8.315300000000247e-05, 8.308299999999769e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.311199999999977e-05, 8.31110000000003e-05, 8.304199999999845e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.30980000000002e-05, 8.31110000000003e-05, 8.30980000000002e-05, 8.306900000000159e-05, 8.312499999999987e-05, 8.311099999999683e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.904" endtime="20201030 18:31:26.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.894" endtime="20201030 18:31:26.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.914" endtime="20201030 18:31:26.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.912" endtime="20201030 18:31:26.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.911" endtime="20201030 18:31:26.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.510" endtime="20201030 18:31:26.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.509" endtime="20201030 18:31:26.934"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.943" endtime="20201030 18:31:26.963"></status>
</kw>
<msg timestamp="20201030 18:31:26.963" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.941" endtime="20201030 18:31:26.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.966" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.964" endtime="20201030 18:31:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.967" endtime="20201030 18:31:26.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.938" endtime="20201030 18:31:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.937" endtime="20201030 18:31:26.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.976" endtime="20201030 18:31:27.261"></status>
</kw>
<msg timestamp="20201030 18:31:27.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018074875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018164806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.974" endtime="20201030 18:31:27.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018074875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018164806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.265" endtime="20201030 18:31:27.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.273" endtime="20201030 18:31:27.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.972" endtime="20201030 18:31:27.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.970" endtime="20201030 18:31:27.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:27.279" level="INFO">${PHILIP_RES} = [{'diff': 8.993099999999796e-05}, {'diff': 8.965300000000204e-05}, {'diff': 8.965299999999857e-05}, {'diff': 8.9638999999999e-05}, {'diff': 8.965299999999857e-05}, {'diff': 8.96670000000016e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:27.276" endtime="20201030 18:31:27.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.284" level="INFO">${RESULT} = {'diff': [8.993099999999796e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.9638999999999e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.969400000000127e-05, 8.967999999999823e-05, 8.9653000...</msg>
<status status="PASS" starttime="20201030 18:31:27.280" endtime="20201030 18:31:27.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.288" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:27.287" endtime="20201030 18:31:27.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.291" level="INFO">VALUE: [8.993099999999796e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.9638999999999e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.969400000000127e-05, 8.967999999999823e-05, 8.965300000000204e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.96519999999991e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.965299999999857e-05, 8.96519999999991e-05, 8.966699999999814e-05, 8.965299999999857e-05, 8.965299999999857e-05, 8.966600000000213e-05, 8.966699999999814e-05, 8.968100000000118e-05, 8.965299999999857e-05, 8.966599999999866e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.965300000000204e-05, 8.96519999999991e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.965300000000204e-05, 8.96670000000016e-05, 8.9638999999999e-05, 8.962499999999943e-05, 8.96670000000016e-05, 8.96519999999991e-05, 8.965299999999857e-05, 8.96250000000029e-05, 8.965299999999857e-05, 8.966600000000213e-05, 8.965299999999857e-05, 8.9638999999999e-05, 8.965299999999857e-05, 8.961099999999986e-05, 8.96670000000016e-05, 8.965299999999857e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.965300000000204e-05, 8.9638999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.289" endtime="20201030 18:31:27.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.285" endtime="20201030 18:31:27.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.303" endtime="20201030 18:31:27.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.301" endtime="20201030 18:31:27.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.300" endtime="20201030 18:31:27.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.935" endtime="20201030 18:31:27.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.935" endtime="20201030 18:31:27.323"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.331" endtime="20201030 18:31:27.352"></status>
</kw>
<msg timestamp="20201030 18:31:27.352" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.330" endtime="20201030 18:31:27.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.355" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.353" endtime="20201030 18:31:27.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.356" endtime="20201030 18:31:27.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.327" endtime="20201030 18:31:27.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.325" endtime="20201030 18:31:27.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.365" endtime="20201030 18:31:27.659"></status>
</kw>
<msg timestamp="20201030 18:31:27.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017671667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.363" endtime="20201030 18:31:27.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017671667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.668" endtime="20201030 18:31:27.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.686" endtime="20201030 18:31:27.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.361" endtime="20201030 18:31:27.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.359" endtime="20201030 18:31:27.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:27.701" level="INFO">${PHILIP_RES} = [{'diff': 9.67080000000009e-05}, {'diff': 9.643000000000151e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.644500000000056e-05}, {'diff': 9.641699999999795e-05}, {'diff': 9.643099999999752e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:27.695" endtime="20201030 18:31:27.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.710" level="INFO">${RESULT} = {'diff': [9.67080000000009e-05, 9.643000000000151e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.641699999999795e-05, 9.643099999999752e-05, 9.644499999999709e-05, 9.643000000000151e-05, 9.64160...</msg>
<status status="PASS" starttime="20201030 18:31:27.703" endtime="20201030 18:31:27.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.719" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:27.717" endtime="20201030 18:31:27.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.722" level="INFO">VALUE: [9.67080000000009e-05, 9.643000000000151e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.641699999999795e-05, 9.643099999999752e-05, 9.644499999999709e-05, 9.643000000000151e-05, 9.641600000000194e-05, 9.643000000000151e-05, 9.644500000000056e-05, 9.641700000000142e-05, 9.643099999999752e-05, 9.641699999999795e-05, 9.645799999999718e-05, 9.640299999999838e-05, 9.641600000000194e-05, 9.644400000000108e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.643099999999752e-05, 9.640299999999838e-05, 9.642999999999805e-05, 9.643000000000151e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.641700000000142e-05, 9.641700000000142e-05, 9.644400000000108e-05, 9.642999999999805e-05, 9.63470000000001e-05, 9.644400000000108e-05, 9.645800000000065e-05, 9.645900000000013e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.644399999999761e-05, 9.644399999999761e-05, 9.641599999999848e-05, 9.645800000000065e-05, 9.641700000000142e-05, 9.640300000000185e-05, 9.644500000000056e-05, 9.641700000000142e-05, 9.645800000000065e-05, 9.642999999999805e-05, 9.644399999999761e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.644500000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.721" endtime="20201030 18:31:27.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.712" endtime="20201030 18:31:27.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.727" endtime="20201030 18:31:27.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.726" endtime="20201030 18:31:27.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.724" endtime="20201030 18:31:27.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.324" endtime="20201030 18:31:27.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.324" endtime="20201030 18:31:27.748"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.756" endtime="20201030 18:31:27.777"></status>
</kw>
<msg timestamp="20201030 18:31:27.778" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.755" endtime="20201030 18:31:27.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.780" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.779" endtime="20201030 18:31:27.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.781" endtime="20201030 18:31:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.752" endtime="20201030 18:31:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.750" endtime="20201030 18:31:27.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.790" endtime="20201030 18:31:28.076"></status>
</kw>
<msg timestamp="20201030 18:31:28.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018676528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01878025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:27.788" endtime="20201030 18:31:28.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018676528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01878025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:28.080" endtime="20201030 18:31:28.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.087" endtime="20201030 18:31:28.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.786" endtime="20201030 18:31:28.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.784" endtime="20201030 18:31:28.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:28.094" level="INFO">${PHILIP_RES} = [{'diff': 0.00010372199999999707}, {'diff': 0.00010341699999999801}, {'diff': 0.00010341700000000148}, {'diff': 0.00010343100000000105}, {'diff': 0.00010344400000000115}, {'diff': 0.000103444000000001...</msg>
<status status="PASS" starttime="20201030 18:31:28.091" endtime="20201030 18:31:28.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.099" level="INFO">${RESULT} = {'diff': [0.00010372199999999707, 0.00010341699999999801, 0.00010341700000000148, 0.00010343100000000105, 0.00010344400000000115, 0.00010344400000000115, 0.00010343100000000105, 0.00010344500000000062...</msg>
<status status="PASS" starttime="20201030 18:31:28.095" endtime="20201030 18:31:28.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.104" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:28.103" endtime="20201030 18:31:28.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.107" level="INFO">VALUE: [0.00010372199999999707, 0.00010341699999999801, 0.00010341700000000148, 0.00010343100000000105, 0.00010344400000000115, 0.00010344400000000115, 0.00010343100000000105, 0.00010344500000000062, 0.00010344400000000115, 0.00010341599999999854, 0.00010343099999999758, 0.00010344500000000062, 0.00010343099999999758, 0.00010344399999999768, 0.00010343099999999758, 0.00010345900000000019, 0.00010343100000000105, 0.00010343000000000158, 0.00010345800000000072, 0.00010340300000000191, 0.00010336099999999973, 0.00010343000000000158, 0.00010343000000000158, 0.00010341700000000148, 0.00010344500000000062, 0.00010344500000000062, 0.00010345800000000072, 0.00010341599999999854, 0.00010344499999999715, 0.0001033749999999993, 0.00010344400000000115, 0.00010344400000000115, 0.00010348599999999986, 0.00010345900000000019, 0.00010344400000000115, 0.00010343000000000158, 0.00010341700000000148, 0.00010341700000000148, 0.00010343100000000105, 0.00010342999999999811, 0.00010342999999999811, 0.00010338899999999887, 0.00010344499999999715, 0.00010344499999999715, 0.00010342999999999811, 0.00010342999999999811, 0.00010341699999999801, 0.00010343100000000105, 0.00010343000000000158, 0.00010343000000000158]</msg>
<status status="PASS" starttime="20201030 18:31:28.105" endtime="20201030 18:31:28.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.100" endtime="20201030 18:31:28.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.117" endtime="20201030 18:31:28.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.115" endtime="20201030 18:31:28.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.113" endtime="20201030 18:31:28.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.749" endtime="20201030 18:31:28.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.748" endtime="20201030 18:31:28.140"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.148" endtime="20201030 18:31:28.170"></status>
</kw>
<msg timestamp="20201030 18:31:28.170" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.147" endtime="20201030 18:31:28.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.173" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.171" endtime="20201030 18:31:28.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.174" endtime="20201030 18:31:28.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.144" endtime="20201030 18:31:28.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.142" endtime="20201030 18:31:28.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.183" endtime="20201030 18:31:28.481"></status>
</kw>
<msg timestamp="20201030 18:31:28.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.181" endtime="20201030 18:31:28.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.491" endtime="20201030 18:31:28.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.509" endtime="20201030 18:31:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.179" endtime="20201030 18:31:28.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.177" endtime="20201030 18:31:28.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:28.523" level="INFO">${PHILIP_RES} = [{'diff': 0.00011086100000000029}, {'diff': 0.00011066700000000179}, {'diff': 0.00011065299999999875}, {'diff': 0.00011065299999999875}, {'diff': 0.00011068100000000136}, {'diff': 0.000110638999999999...</msg>
<status status="PASS" starttime="20201030 18:31:28.516" endtime="20201030 18:31:28.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.532" level="INFO">${RESULT} = {'diff': [0.00011086100000000029, 0.00011066700000000179, 0.00011065299999999875, 0.00011065299999999875, 0.00011068100000000136, 0.00011063899999999918, 0.00011068099999999789, 0.00011063899999999918...</msg>
<status status="PASS" starttime="20201030 18:31:28.525" endtime="20201030 18:31:28.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.537" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:28.535" endtime="20201030 18:31:28.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.539" level="INFO">VALUE: [0.00011086100000000029, 0.00011066700000000179, 0.00011065299999999875, 0.00011065299999999875, 0.00011068100000000136, 0.00011063899999999918, 0.00011068099999999789, 0.00011063899999999918, 0.00011070800000000103, 0.00011067999999999842, 0.00011065299999999875, 0.00011070799999999756, 0.00011068100000000136, 0.00011063799999999971, 0.00011065299999999875, 0.00011068000000000189, 0.0001107090000000005, 0.00011070800000000103, 0.00011066700000000179, 0.00011063900000000265, 0.00011066700000000179, 0.00011066599999999885, 0.00011065300000000222, 0.00011062499999999961, 0.00011063899999999918, 0.00011065299999999875, 0.00011066700000000179, 0.00011065300000000222, 0.00011062499999999961, 0.00011066699999999832, 0.00011065300000000222, 0.00011066699999999832, 0.0001107090000000005, 0.00011065300000000222, 0.00011068000000000189, 0.00011066699999999832, 0.00011065299999999875, 0.00011068100000000136, 0.00011066599999999885, 0.00011065299999999875, 0.00011065199999999928, 0.00011065300000000222, 0.00011065199999999928, 0.00011065299999999875, 0.00011065199999999928, 0.00011066700000000179, 0.00011067999999999842, 0.00011065299999999875, 0.00011066600000000232, 0.00011066699999999832]</msg>
<status status="PASS" starttime="20201030 18:31:28.538" endtime="20201030 18:31:28.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.533" endtime="20201030 18:31:28.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.544" endtime="20201030 18:31:28.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.543" endtime="20201030 18:31:28.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.541" endtime="20201030 18:31:28.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.141" endtime="20201030 18:31:28.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.140" endtime="20201030 18:31:28.565"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.574" endtime="20201030 18:31:28.595"></status>
</kw>
<msg timestamp="20201030 18:31:28.596" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.572" endtime="20201030 18:31:28.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.598" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.597" endtime="20201030 18:31:28.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.600" endtime="20201030 18:31:28.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.570" endtime="20201030 18:31:28.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.567" endtime="20201030 18:31:28.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.609" endtime="20201030 18:31:28.895"></status>
</kw>
<msg timestamp="20201030 18:31:28.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01835925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:28.607" endtime="20201030 18:31:28.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01835925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:28.899" endtime="20201030 18:31:28.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.907" endtime="20201030 18:31:28.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.605" endtime="20201030 18:31:28.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.603" endtime="20201030 18:31:28.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:28.915" level="INFO">${PHILIP_RES} = [{'diff': 0.000118389}, {'diff': 0.0001181110000000006}, {'diff': 0.00011811099999999713}, {'diff': 0.00011812500000000017}, {'diff': 0.0001181110000000006}, {'diff': 0.0001181110000000006}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 18:31:28.912" endtime="20201030 18:31:28.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.919" level="INFO">${RESULT} = {'diff': [0.000118389, 0.0001181110000000006, 0.00011811099999999713, 0.00011812500000000017, 0.0001181110000000006, 0.0001181110000000006, 0.00011811099999999713, 0.00011815299999999931, 0.0001181110...</msg>
<status status="PASS" starttime="20201030 18:31:28.916" endtime="20201030 18:31:28.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.924" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:28.923" endtime="20201030 18:31:28.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.926" level="INFO">VALUE: [0.000118389, 0.0001181110000000006, 0.00011811099999999713, 0.00011812500000000017, 0.0001181110000000006, 0.0001181110000000006, 0.00011811099999999713, 0.00011815299999999931, 0.0001181110000000006, 0.0001181110000000006, 0.00011809700000000103, 0.00011812500000000017, 0.0001181110000000006, 0.00011813899999999974, 0.00011809699999999757, 0.00011812500000000017, 0.00011809700000000103, 0.00011812500000000017, 0.00011809699999999757, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.0001181249999999967, 0.00011809700000000103, 0.00011809700000000103, 0.00011805499999999886, 0.00011816699999999888, 0.00011809700000000103, 0.00011812500000000017, 0.00011805499999999886, 0.00011816699999999888, 0.00011812500000000017, 0.000118082999999998, 0.0001181110000000006, 0.00011802799999999919, 0.00011805500000000232, 0.00011809700000000103, 0.00011812500000000017, 0.00011805499999999886, 0.0001181110000000006, 0.0001181110000000006, 0.00011809700000000103, 0.00011805500000000232, 0.00011812500000000017, 0.00011809700000000103, 0.00011812500000000017, 0.0001181249999999967, 0.0001181110000000006, 0.00011809700000000103, 0.00011811100000000407]</msg>
<status status="PASS" starttime="20201030 18:31:28.925" endtime="20201030 18:31:28.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.920" endtime="20201030 18:31:28.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.931" endtime="20201030 18:31:28.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.930" endtime="20201030 18:31:28.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.928" endtime="20201030 18:31:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.566" endtime="20201030 18:31:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.565" endtime="20201030 18:31:28.952"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.961" endtime="20201030 18:31:28.985"></status>
</kw>
<msg timestamp="20201030 18:31:28.985" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.959" endtime="20201030 18:31:28.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.988" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.986" endtime="20201030 18:31:28.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.989" endtime="20201030 18:31:28.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.957" endtime="20201030 18:31:28.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.955" endtime="20201030 18:31:28.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.999" endtime="20201030 18:31:29.285"></status>
</kw>
<msg timestamp="20201030 18:31:29.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0191485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019274542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:28.997" endtime="20201030 18:31:29.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0191485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019274542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:29.289" endtime="20201030 18:31:29.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.297" endtime="20201030 18:31:29.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.994" endtime="20201030 18:31:29.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.992" endtime="20201030 18:31:29.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:29.303" level="INFO">${PHILIP_RES} = [{'diff': 0.00012604199999999982}, {'diff': 0.0001257910000000001}, {'diff': 0.000125778}, {'diff': 0.00012569500000000206}, {'diff': 0.00012583300000000228}, {'diff': 0.0001257910000000001}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:29.300" endtime="20201030 18:31:29.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.308" level="INFO">${RESULT} = {'diff': [0.00012604199999999982, 0.0001257910000000001, 0.000125778, 0.00012569500000000206, 0.00012583300000000228, 0.0001257910000000001, 0.000125778, 0.000125778, 0.0001257910000000001, 0.00012576...</msg>
<status status="PASS" starttime="20201030 18:31:29.304" endtime="20201030 18:31:29.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.312" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:29.311" endtime="20201030 18:31:29.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.315" level="INFO">VALUE: [0.00012604199999999982, 0.0001257910000000001, 0.000125778, 0.00012569500000000206, 0.00012583300000000228, 0.0001257910000000001, 0.000125778, 0.000125778, 0.0001257910000000001, 0.00012576400000000043, 0.0001258060000000026, 0.00012577700000000053, 0.00012573599999999782, 0.00012579199999999957, 0.0001257910000000001, 0.00012576400000000043, 0.00012579199999999957, 0.00012581899999999924, 0.00012576400000000043, 0.00012579199999999957, 0.00012576400000000043, 0.0001257910000000001, 0.00012576400000000043, 0.00012576400000000043, 0.0001257910000000001, 0.00012579199999999957, 0.00012580599999999914, 0.000125778, 0.00012580499999999967, 0.00012579199999999957, 0.00012584699999999838, 0.00012577700000000053, 0.00012579199999999957, 0.00012576400000000043, 0.0001257910000000001, 0.00012579199999999957, 0.0001258329999999988, 0.000125778, 0.00012570799999999868, 0.0001258060000000026, 0.00012580499999999967, 0.00012577699999999706, 0.0001257360000000013, 0.000125778, 0.0001257910000000001, 0.000125778, 0.00012580599999999914, 0.00012577700000000053, 0.00012576400000000043, 0.000125778]</msg>
<status status="PASS" starttime="20201030 18:31:29.313" endtime="20201030 18:31:29.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.308" endtime="20201030 18:31:29.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.323" endtime="20201030 18:31:29.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.321" endtime="20201030 18:31:29.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.320" endtime="20201030 18:31:29.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.953" endtime="20201030 18:31:29.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.952" endtime="20201030 18:31:29.344"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.352" endtime="20201030 18:31:29.376"></status>
</kw>
<msg timestamp="20201030 18:31:29.377" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.351" endtime="20201030 18:31:29.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.379" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.378" endtime="20201030 18:31:29.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.380" endtime="20201030 18:31:29.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.348" endtime="20201030 18:31:29.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.346" endtime="20201030 18:31:29.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.390" endtime="20201030 18:31:29.676"></status>
</kw>
<msg timestamp="20201030 18:31:29.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018374944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.388" endtime="20201030 18:31:29.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018374944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.680" endtime="20201030 18:31:29.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.688" endtime="20201030 18:31:29.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.385" endtime="20201030 18:31:29.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.384" endtime="20201030 18:31:29.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:29.694" level="INFO">${PHILIP_RES} = [{'diff': 0.0001339869999999986}, {'diff': 0.00013369499999999965}, {'diff': 0.00013370799999999974}, {'diff': 0.0001336670000000005}, {'diff': 0.00013369400000000017}, {'diff': 0.00013369400000000017...</msg>
<status status="PASS" starttime="20201030 18:31:29.691" endtime="20201030 18:31:29.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.699" level="INFO">${RESULT} = {'diff': [0.0001339869999999986, 0.00013369499999999965, 0.00013370799999999974, 0.0001336670000000005, 0.00013369400000000017, 0.00013369400000000017, 0.00013372199999999931, 0.00013366600000000103, ...</msg>
<status status="PASS" starttime="20201030 18:31:29.695" endtime="20201030 18:31:29.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.704" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:29.703" endtime="20201030 18:31:29.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.706" level="INFO">VALUE: [0.0001339869999999986, 0.00013369499999999965, 0.00013370799999999974, 0.0001336670000000005, 0.00013369400000000017, 0.00013369400000000017, 0.00013372199999999931, 0.00013366600000000103, 0.00013369499999999965, 0.00013369400000000017, 0.00013368100000000008, 0.0001336800000000006, 0.00013369400000000017, 0.00013368100000000008, 0.00013369400000000017, 0.00013369500000000312, 0.00013369400000000017, 0.00013366699999999704, 0.0001336670000000005, 0.00013367999999999713, 0.00013369499999999965, 0.00013367999999999713, 0.00013368100000000008, 0.00013368100000000008, 0.0001336670000000005, 0.00013370899999999922, 0.0001336800000000006, 0.0001336250000000018, 0.00013362499999999833, 0.0001336800000000006, 0.00013373600000000235, 0.00013369400000000017, 0.0001337229999999988, 0.00013373599999999888, 0.00013368100000000008, 0.0001336670000000005, 0.00013372200000000278, 0.00013368100000000008, 0.00013372199999999931, 0.00013368100000000008, 0.0001336670000000005, 0.0001336670000000005, 0.00013373600000000235, 0.00013369400000000017, 0.00013368100000000008, 0.00013363799999999842, 0.00013363900000000484, 0.00013369500000000312, 0.00013366599999999756, 0.0001337090000000027]</msg>
<status status="PASS" starttime="20201030 18:31:29.705" endtime="20201030 18:31:29.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.700" endtime="20201030 18:31:29.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.712" endtime="20201030 18:31:29.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.710" endtime="20201030 18:31:29.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.709" endtime="20201030 18:31:29.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.344" endtime="20201030 18:31:29.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.344" endtime="20201030 18:31:29.732"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.741" endtime="20201030 18:31:29.765"></status>
</kw>
<msg timestamp="20201030 18:31:29.766" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.740" endtime="20201030 18:31:29.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.768" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.767" endtime="20201030 18:31:29.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.769" endtime="20201030 18:31:29.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.737" endtime="20201030 18:31:29.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.735" endtime="20201030 18:31:29.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.779" endtime="20201030 18:31:30.065"></status>
</kw>
<msg timestamp="20201030 18:31:30.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018382319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018524389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.777" endtime="20201030 18:31:30.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018382319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018524389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.070" endtime="20201030 18:31:30.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.077" endtime="20201030 18:31:30.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.774" endtime="20201030 18:31:30.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.773" endtime="20201030 18:31:30.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:30.085" level="INFO">${PHILIP_RES} = [{'diff': 0.00014206999999999761}, {'diff': 0.00014180600000000126}, {'diff': 0.0001418050000000018}, {'diff': 0.00014179199999999823}, {'diff': 0.0001418059999999978}, {'diff': 0.0001418050000000018}...</msg>
<status status="PASS" starttime="20201030 18:31:30.082" endtime="20201030 18:31:30.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.089" level="INFO">${RESULT} = {'diff': [0.00014206999999999761, 0.00014180600000000126, 0.0001418050000000018, 0.00014179199999999823, 0.0001418059999999978, 0.0001418050000000018, 0.00014182000000000083, 0.00014182000000000083, 0...</msg>
<status status="PASS" starttime="20201030 18:31:30.086" endtime="20201030 18:31:30.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.094" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:30.093" endtime="20201030 18:31:30.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.096" level="INFO">VALUE: [0.00014206999999999761, 0.00014180600000000126, 0.0001418050000000018, 0.00014179199999999823, 0.0001418059999999978, 0.0001418050000000018, 0.00014182000000000083, 0.00014182000000000083, 0.00014173599999999995, 0.00014180600000000126, 0.00014186100000000007, 0.00014180499999999832, 0.00014181999999999736, 0.00014180600000000126, 0.00014179100000000222, 0.00014180600000000126, 0.0001418059999999978, 0.0001418050000000018, 0.00014176399999999909, 0.0001418340000000004, 0.00014179099999999875, 0.00014181900000000136, 0.00014183300000000093, 0.0001418189999999979, 0.0001418189999999979, 0.00014180600000000126, 0.0001418050000000018, 0.00014180499999999832, 0.00014179199999999823, 0.0001418050000000018, 0.0001418050000000018, 0.00014179199999999823, 0.0001418189999999979, 0.0001418050000000018, 0.00014182000000000083, 0.00014186100000000007, 0.00014180499999999832, 0.0001418340000000004, 0.00014181900000000136, 0.00014179099999999875, 0.00014182000000000083, 0.00014181900000000136, 0.00014177800000000212, 0.00014182000000000083, 0.0001417920000000017, 0.00014180499999999485, 0.00014184799999999997, 0.00014182000000000083, 0.0001418050000000018, 0.0001418340000000004]</msg>
<status status="PASS" starttime="20201030 18:31:30.095" endtime="20201030 18:31:30.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.090" endtime="20201030 18:31:30.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.101" endtime="20201030 18:31:30.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.100" endtime="20201030 18:31:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.099" endtime="20201030 18:31:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.733" endtime="20201030 18:31:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.733" endtime="20201030 18:31:30.122"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.131" endtime="20201030 18:31:30.157"></status>
</kw>
<msg timestamp="20201030 18:31:30.157" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.129" endtime="20201030 18:31:30.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.160" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.159" endtime="20201030 18:31:30.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.161" endtime="20201030 18:31:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.127" endtime="20201030 18:31:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.125" endtime="20201030 18:31:30.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.171" endtime="20201030 18:31:30.457"></status>
</kw>
<msg timestamp="20201030 18:31:30.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.169" endtime="20201030 18:31:30.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.462" endtime="20201030 18:31:30.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.469" endtime="20201030 18:31:30.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.166" endtime="20201030 18:31:30.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.165" endtime="20201030 18:31:30.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:30.476" level="INFO">${PHILIP_RES} = [{'diff': 0.00015043100000000295}, {'diff': 0.00015016699999999966}, {'diff': 0.00015016699999999966}, {'diff': 0.00015019399999999933}, {'diff': 0.0001501530000000001}, {'diff': 0.0001501669999999996...</msg>
<status status="PASS" starttime="20201030 18:31:30.473" endtime="20201030 18:31:30.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.480" level="INFO">${RESULT} = {'diff': [0.00015043100000000295, 0.00015016699999999966, 0.00015016699999999966, 0.00015019399999999933, 0.0001501530000000001, 0.00015016699999999966, 0.00015013900000000052, 0.00015016700000000313,...</msg>
<status status="PASS" starttime="20201030 18:31:30.477" endtime="20201030 18:31:30.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.485" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:30.484" endtime="20201030 18:31:30.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.487" level="INFO">VALUE: [0.00015043100000000295, 0.00015016699999999966, 0.00015016699999999966, 0.00015019399999999933, 0.0001501530000000001, 0.00015016699999999966, 0.00015013900000000052, 0.00015016700000000313, 0.00015016699999999966, 0.0001501530000000001, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.00015015199999999715, 0.0001501940000000028, 0.0001501530000000001, 0.00015017999999999976, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.00015018099999999923, 0.00015018099999999923, 0.00015016699999999966, 0.0001501530000000001, 0.0001501530000000001, 0.00015022200000000194, 0.00015013900000000052, 0.00015019399999999933, 0.00015016699999999966, 0.0001501530000000001, 0.00015018099999999923, 0.00015022200000000194, 0.00015016699999999966, 0.0001501530000000001, 0.00015017999999999976, 0.0001501530000000001, 0.00015015200000000062, 0.0001501660000000002, 0.0001501660000000002, 0.00015017999999999976, 0.00015015199999999368, 0.00015019399999999933, 0.00015015200000000062, 0.0001501530000000001, 0.0001501660000000002, 0.0001501530000000001, 0.00015018099999999923, 0.00015018100000000617, 0.00015016699999999966]</msg>
<status status="PASS" starttime="20201030 18:31:30.486" endtime="20201030 18:31:30.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.481" endtime="20201030 18:31:30.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.493" endtime="20201030 18:31:30.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.492" endtime="20201030 18:31:30.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.491" endtime="20201030 18:31:30.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.123" endtime="20201030 18:31:30.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.123" endtime="20201030 18:31:30.514"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.523" endtime="20201030 18:31:30.549"></status>
</kw>
<msg timestamp="20201030 18:31:30.550" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.521" endtime="20201030 18:31:30.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.555" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.551" endtime="20201030 18:31:30.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.557" endtime="20201030 18:31:30.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.519" endtime="20201030 18:31:30.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.517" endtime="20201030 18:31:30.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.575" endtime="20201030 18:31:30.860"></status>
</kw>
<msg timestamp="20201030 18:31:30.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.573" endtime="20201030 18:31:30.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.864" endtime="20201030 18:31:30.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.872" endtime="20201030 18:31:30.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.567" endtime="20201030 18:31:30.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.564" endtime="20201030 18:31:30.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:30.879" level="INFO">${PHILIP_RES} = [{'diff': 0.00015898599999999985}, {'diff': 0.00015874999999999917}, {'diff': 0.0001587359999999996}, {'diff': 0.00015873699999999907}, {'diff': 0.00015870800000000046}, {'diff': 0.0001587499999999991...</msg>
<status status="PASS" starttime="20201030 18:31:30.876" endtime="20201030 18:31:30.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.884" level="INFO">${RESULT} = {'diff': [0.00015898599999999985, 0.00015874999999999917, 0.0001587359999999996, 0.00015873699999999907, 0.00015870800000000046, 0.00015874999999999917, 0.0001587359999999996, 0.00015872200000000003, ...</msg>
<status status="PASS" starttime="20201030 18:31:30.880" endtime="20201030 18:31:30.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.889" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:30.888" endtime="20201030 18:31:30.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.891" level="INFO">VALUE: [0.00015898599999999985, 0.00015874999999999917, 0.0001587359999999996, 0.00015873699999999907, 0.00015870800000000046, 0.00015874999999999917, 0.0001587359999999996, 0.00015872200000000003, 0.00015874999999999917, 0.0001587359999999996, 0.00015876399999999874, 0.0001587359999999996, 0.00015874999999999917, 0.00015874999999999917, 0.00015873700000000254, 0.00015873600000000307, 0.0001587359999999996, 0.00015875000000000264, 0.0001587359999999996, 0.00015874999999999917, 0.00015877800000000178, 0.0001587359999999996, 0.0001587359999999996, 0.00015876299999999927, 0.0001586940000000009, 0.00015868000000000132, 0.00015881899999999755, 0.00015873600000000307, 0.00015873600000000307, 0.0001587359999999996, 0.00015875000000000264, 0.00015870800000000046, 0.0001587359999999996, 0.00015872200000000003, 0.0001587229999999995, 0.00015866700000000122, 0.00015874999999999917, 0.00015880500000000145, 0.0001586940000000009, 0.00015874999999999917, 0.00015874999999999917, 0.00015874999999999917, 0.00015870800000000046, 0.0001587229999999995, 0.00015870800000000046, 0.00015873699999999907, 0.00015874999999999917, 0.00015872200000000003, 0.0001587359999999996, 0.00015876400000000568]</msg>
<status status="PASS" starttime="20201030 18:31:30.890" endtime="20201030 18:31:30.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.885" endtime="20201030 18:31:30.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.896" endtime="20201030 18:31:30.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.895" endtime="20201030 18:31:30.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.893" endtime="20201030 18:31:30.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.515" endtime="20201030 18:31:30.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.514" endtime="20201030 18:31:30.917"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.926" endtime="20201030 18:31:30.953"></status>
</kw>
<msg timestamp="20201030 18:31:30.953" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.924" endtime="20201030 18:31:30.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.956" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.954" endtime="20201030 18:31:30.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.957" endtime="20201030 18:31:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.921" endtime="20201030 18:31:30.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.919" endtime="20201030 18:31:30.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.966" endtime="20201030 18:31:31.253"></status>
</kw>
<msg timestamp="20201030 18:31:31.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018288181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.965" endtime="20201030 18:31:31.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018288181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.257" endtime="20201030 18:31:31.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.265" endtime="20201030 18:31:31.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.962" endtime="20201030 18:31:31.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.960" endtime="20201030 18:31:31.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:31.273" level="INFO">${PHILIP_RES} = [{'diff': 0.00016780500000000004}, {'diff': 0.00016752700000000065}, {'diff': 0.0001675549999999998}, {'diff': 0.00016752799999999665}, {'diff': 0.00016755599999999926}, {'diff': 0.0001675970000000019...</msg>
<status status="PASS" starttime="20201030 18:31:31.270" endtime="20201030 18:31:31.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.277" level="INFO">${RESULT} = {'diff': [0.00016780500000000004, 0.00016752700000000065, 0.0001675549999999998, 0.00016752799999999665, 0.00016755599999999926, 0.00016759700000000197, 0.0001675419999999997, 0.0001675419999999997, 0...</msg>
<status status="PASS" starttime="20201030 18:31:31.274" endtime="20201030 18:31:31.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.281" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:31.280" endtime="20201030 18:31:31.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.284" level="INFO">VALUE: [0.00016780500000000004, 0.00016752700000000065, 0.0001675549999999998, 0.00016752799999999665, 0.00016755599999999926, 0.00016759700000000197, 0.0001675419999999997, 0.0001675419999999997, 0.0001675549999999998, 0.00016754100000000022, 0.00016752800000000012, 0.0001675419999999997, 0.00016752800000000012, 0.00016755599999999926, 0.00016756999999999883, 0.00016754100000000022, 0.00016752700000000065, 0.00016752700000000065, 0.0001675419999999997, 0.0001675419999999997, 0.0001675419999999997, 0.00016751400000000055, 0.0001675419999999997, 0.0001675549999999998, 0.0001675419999999997, 0.00016754200000000316, 0.00016752800000000012, 0.0001675419999999997, 0.00016751400000000055, 0.00016754100000000022, 0.00016754100000000022, 0.0001675419999999997, 0.0001675419999999997, 0.0001675419999999997, 0.00016751400000000055, 0.00016755599999999926, 0.0001675549999999998, 0.0001675269999999937, 0.0001675419999999997, 0.00016752800000000012, 0.00016755599999999926, 0.00016752800000000012, 0.0001675419999999997, 0.00016755599999999926, 0.00016752700000000065, 0.0001675419999999997, 0.00016756899999999936, 0.0001675419999999997, 0.00016747200000000184, 0.0001675419999999997]</msg>
<status status="PASS" starttime="20201030 18:31:31.282" endtime="20201030 18:31:31.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.278" endtime="20201030 18:31:31.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.289" endtime="20201030 18:31:31.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.288" endtime="20201030 18:31:31.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.286" endtime="20201030 18:31:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.918" endtime="20201030 18:31:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.917" endtime="20201030 18:31:31.310"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.319" endtime="20201030 18:31:31.347"></status>
</kw>
<msg timestamp="20201030 18:31:31.347" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.317" endtime="20201030 18:31:31.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.350" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.348" endtime="20201030 18:31:31.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.351" endtime="20201030 18:31:31.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.315" endtime="20201030 18:31:31.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.313" endtime="20201030 18:31:31.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.360" endtime="20201030 18:31:31.647"></status>
</kw>
<msg timestamp="20201030 18:31:31.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.359" endtime="20201030 18:31:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.651" endtime="20201030 18:31:31.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.659" endtime="20201030 18:31:31.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.356" endtime="20201030 18:31:31.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.354" endtime="20201030 18:31:31.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:31.665" level="INFO">${PHILIP_RES} = [{'diff': 0.0001768059999999981}, {'diff': 0.00017655600000000132}, {'diff': 0.00017655599999999785}, {'diff': 0.00017655600000000132}, {'diff': 0.00017655599999999785}, {'diff': 0.0001765700000000009...</msg>
<status status="PASS" starttime="20201030 18:31:31.662" endtime="20201030 18:31:31.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.670" level="INFO">${RESULT} = {'diff': [0.0001768059999999981, 0.00017655600000000132, 0.00017655599999999785, 0.00017655600000000132, 0.00017655599999999785, 0.0001765700000000009, 0.00017656999999999742, 0.0001766249999999997, 0...</msg>
<status status="PASS" starttime="20201030 18:31:31.666" endtime="20201030 18:31:31.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.674" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:31.673" endtime="20201030 18:31:31.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.677" level="INFO">VALUE: [0.0001768059999999981, 0.00017655600000000132, 0.00017655599999999785, 0.00017655600000000132, 0.00017655599999999785, 0.0001765700000000009, 0.00017656999999999742, 0.0001766249999999997, 0.00017656999999999742, 0.00017658400000000046, 0.00017655600000000132, 0.00017655600000000132, 0.0001765700000000009, 0.00017656899999999795, 0.00017655500000000185, 0.00017656899999999795, 0.00017665199999999937, 0.00017655499999999838, 0.00017656900000000142, 0.00017656899999999795, 0.000176583000000001, 0.00017655500000000185, 0.00017655500000000185, 0.00017656900000000142, 0.0001765409999999988, 0.00017655500000000185, 0.00017656899999999795, 0.00017656900000000142, 0.00017654199999999828, 0.00017659700000000056, 0.00017655599999999785, 0.00017652799999999871, 0.0001765700000000009, 0.0001765700000000009, 0.0001765700000000009, 0.00017655600000000132, 0.00017655600000000132, 0.0001765700000000009, 0.0001765140000000026, 0.00017655600000000132, 0.00017651399999999567, 0.0001765700000000009, 0.0001765700000000009, 0.00017655600000000132, 0.00017656899999999448, 0.000176583000000001, 0.00017655600000000132, 0.000176583000000001, 0.000176583000000001, 0.00017655500000000185]</msg>
<status status="PASS" starttime="20201030 18:31:31.676" endtime="20201030 18:31:31.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.671" endtime="20201030 18:31:31.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.683" endtime="20201030 18:31:31.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.681" endtime="20201030 18:31:31.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.680" endtime="20201030 18:31:31.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.311" endtime="20201030 18:31:31.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.310" endtime="20201030 18:31:31.704"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.712" endtime="20201030 18:31:31.741"></status>
</kw>
<msg timestamp="20201030 18:31:31.741" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.711" endtime="20201030 18:31:31.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.744" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.742" endtime="20201030 18:31:31.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.745" endtime="20201030 18:31:31.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.708" endtime="20201030 18:31:31.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.706" endtime="20201030 18:31:31.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.754" endtime="20201030 18:31:32.041"></status>
</kw>
<msg timestamp="20201030 18:31:32.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018306153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.753" endtime="20201030 18:31:32.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018306153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.045" endtime="20201030 18:31:32.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.053" endtime="20201030 18:31:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.750" endtime="20201030 18:31:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.748" endtime="20201030 18:31:32.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:32.060" level="INFO">${PHILIP_RES} = [{'diff': 0.00018605500000000094}, {'diff': 0.00018577699999999808}, {'diff': 0.00018581900000000026}, {'diff': 0.00018580600000000017}, {'diff': 0.00018580600000000017}, {'diff': 0.000185806000000000...</msg>
<status status="PASS" starttime="20201030 18:31:32.056" endtime="20201030 18:31:32.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.065" level="INFO">${RESULT} = {'diff': [0.00018605500000000094, 0.00018577699999999808, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017, 0.00018580600000000017, 0.00018581900000000026, 0.00018581900000000026...</msg>
<status status="PASS" starttime="20201030 18:31:32.061" endtime="20201030 18:31:32.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.069" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:32.068" endtime="20201030 18:31:32.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.072" level="INFO">VALUE: [0.00018605500000000094, 0.00018577699999999808, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017, 0.00018580600000000017, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.00018587499999999854, 0.00018583299999999983, 0.0001858469999999994, 0.00018581999999999974, 0.00018580600000000017, 0.00018579199999999713, 0.00018580600000000017, 0.00018577800000000103, 0.00018581900000000026, 0.00018579099999999765, 0.00018586100000000244, 0.0001858339999999993, 0.00018576399999999799, 0.00018581999999999974, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.0001857920000000006, 0.00018581999999999974, 0.00018580600000000017, 0.00018581900000000026, 0.0001858050000000007, 0.00018583299999999983, 0.00018581900000000373, 0.00018580499999999722, 0.0001858200000000032, 0.0001858059999999967, 0.0001858200000000032, 0.00018581999999999627, 0.00018581900000000373, 0.00018583299999999636, 0.0001857910000000046, 0.00018573599999999885, 0.00018580500000000416, 0.0001858200000000032, 0.0001858200000000032, 0.0001858200000000032, 0.00018573599999999885, 0.00018581900000000373]</msg>
<status status="PASS" starttime="20201030 18:31:32.070" endtime="20201030 18:31:32.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.066" endtime="20201030 18:31:32.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.077" endtime="20201030 18:31:32.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.075" endtime="20201030 18:31:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.074" endtime="20201030 18:31:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.705" endtime="20201030 18:31:32.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.704" endtime="20201030 18:31:32.098"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.106" endtime="20201030 18:31:32.135"></status>
</kw>
<msg timestamp="20201030 18:31:32.135" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.105" endtime="20201030 18:31:32.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.138" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.136" endtime="20201030 18:31:32.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.139" endtime="20201030 18:31:32.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.102" endtime="20201030 18:31:32.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.100" endtime="20201030 18:31:32.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.148" endtime="20201030 18:31:32.435"></status>
</kw>
<msg timestamp="20201030 18:31:32.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018614278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.147" endtime="20201030 18:31:32.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018614278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.440" endtime="20201030 18:31:32.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.447" endtime="20201030 18:31:32.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.144" endtime="20201030 18:31:32.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.142" endtime="20201030 18:31:32.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:32.454" level="INFO">${PHILIP_RES} = [{'diff': 0.00019558400000000212}, {'diff': 0.0001952919999999997}, {'diff': 0.0001952919999999997}, {'diff': 0.00019522199999999837}, {'diff': 0.0001952919999999997}, {'diff': 0.00019529100000000021}...</msg>
<status status="PASS" starttime="20201030 18:31:32.451" endtime="20201030 18:31:32.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.458" level="INFO">${RESULT} = {'diff': [0.00019558400000000212, 0.0001952919999999997, 0.0001952919999999997, 0.00019522199999999837, 0.0001952919999999997, 0.00019529100000000021, 0.0001952919999999997, 0.00019530599999999926, 0....</msg>
<status status="PASS" starttime="20201030 18:31:32.455" endtime="20201030 18:31:32.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.463" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:32.462" endtime="20201030 18:31:32.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.465" level="INFO">VALUE: [0.00019558400000000212, 0.0001952919999999997, 0.0001952919999999997, 0.00019522199999999837, 0.0001952919999999997, 0.00019529100000000021, 0.0001952919999999997, 0.00019530599999999926, 0.00019529100000000021, 0.00019533299999999892, 0.00019533400000000187, 0.00019530599999999926, 0.00019530600000000273, 0.0001952629999999976, 0.00019527800000000012, 0.00019527800000000012, 0.0001953469999999985, 0.0001952919999999997, 0.00019527700000000064, 0.0001952919999999997, 0.00019529100000000021, 0.00019534700000000196, 0.00019522199999999837, 0.0001952919999999997, 0.00019529200000000316, 0.00019529100000000021, 0.00019527800000000012, 0.00019530599999999926, 0.0001952919999999997, 0.0001952919999999997, 0.00019527700000000064, 0.0001952919999999997, 0.00019530500000000325, 0.00019527800000000012, 0.0001952919999999997, 0.00019527700000000064, 0.0001952919999999997, 0.0001953480000000049, 0.0001952919999999997, 0.00019525000000000098, 0.00019529100000000021, 0.0001952919999999997, 0.00019527800000000012, 0.00019530599999999926, 0.0001952919999999997, 0.00019529100000000021, 0.00019534700000000543, 0.00019536099999999806, 0.0001952919999999997, 0.00019527800000000012]</msg>
<status status="PASS" starttime="20201030 18:31:32.464" endtime="20201030 18:31:32.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.459" endtime="20201030 18:31:32.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.476" endtime="20201030 18:31:32.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.474" endtime="20201030 18:31:32.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.473" endtime="20201030 18:31:32.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.099" endtime="20201030 18:31:32.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.098" endtime="20201030 18:31:32.497"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.506" endtime="20201030 18:31:32.536"></status>
</kw>
<msg timestamp="20201030 18:31:32.537" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.504" endtime="20201030 18:31:32.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.540" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.538" endtime="20201030 18:31:32.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.541" endtime="20201030 18:31:32.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.501" endtime="20201030 18:31:32.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.499" endtime="20201030 18:31:32.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.550" endtime="20201030 18:31:32.836"></status>
</kw>
<msg timestamp="20201030 18:31:32.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019186597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019391847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.548" endtime="20201030 18:31:32.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019186597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019391847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.840" endtime="20201030 18:31:32.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.847" endtime="20201030 18:31:32.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.546" endtime="20201030 18:31:32.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.544" endtime="20201030 18:31:32.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:32.854" level="INFO">${PHILIP_RES} = [{'diff': 0.00020525000000000057}, {'diff': 0.0002050139999999999}, {'diff': 0.00020500000000000032}, {'diff': 0.00020493000000000247}, {'diff': 0.00020502799999999946}, {'diff': 0.0002050000000000003...</msg>
<status status="PASS" starttime="20201030 18:31:32.851" endtime="20201030 18:31:32.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.858" level="INFO">${RESULT} = {'diff': [0.00020525000000000057, 0.0002050139999999999, 0.00020500000000000032, 0.00020493000000000247, 0.00020502799999999946, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032,...</msg>
<status status="PASS" starttime="20201030 18:31:32.855" endtime="20201030 18:31:32.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.863" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:32.862" endtime="20201030 18:31:32.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.865" level="INFO">VALUE: [0.00020525000000000057, 0.0002050139999999999, 0.00020500000000000032, 0.00020493000000000247, 0.00020502799999999946, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.0002050139999999999, 0.00020498599999999728, 0.0002049719999999977, 0.00020497200000000118, 0.00020498599999999728, 0.00020498599999999728, 0.00020498599999999728, 0.00020498599999999728, 0.00020499999999999685, 0.00020499999999999685, 0.00020506999999999817, 0.00020500000000000032, 0.00020507000000000164, 0.00020495799999999814, 0.0002050139999999999, 0.00020498600000000075, 0.00020498600000000075, 0.00020498600000000075, 0.00020497300000000065, 0.0002050139999999999, 0.00020498600000000422, 0.0002049719999999977, 0.00020502800000000293, 0.00020495799999999814, 0.0002050000000000038, 0.00020493099999999848, 0.00020502700000000346, 0.00020498599999999728, 0.0002050000000000038, 0.00020499999999999685, 0.00020498599999999728, 0.00020499999999999685, 0.00020498599999999728, 0.0002049719999999977, 0.0002049719999999977, 0.0002049719999999977, 0.00020501400000000336, 0.00020498599999999728, 0.00020498699999999676, 0.0002050000000000038, 0.00020498599999999728]</msg>
<status status="PASS" starttime="20201030 18:31:32.864" endtime="20201030 18:31:32.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.859" endtime="20201030 18:31:32.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.874" endtime="20201030 18:31:32.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.872" endtime="20201030 18:31:32.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.871" endtime="20201030 18:31:32.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.498" endtime="20201030 18:31:32.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.497" endtime="20201030 18:31:32.895"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.904" endtime="20201030 18:31:32.934"></status>
</kw>
<msg timestamp="20201030 18:31:32.935" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.902" endtime="20201030 18:31:32.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.937" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.936" endtime="20201030 18:31:32.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.938" endtime="20201030 18:31:32.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.899" endtime="20201030 18:31:32.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.897" endtime="20201030 18:31:32.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.948" endtime="20201030 18:31:33.234"></status>
</kw>
<msg timestamp="20201030 18:31:33.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018561708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.946" endtime="20201030 18:31:33.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018561708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.238" endtime="20201030 18:31:33.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.246" endtime="20201030 18:31:33.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.943" endtime="20201030 18:31:33.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.942" endtime="20201030 18:31:33.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:33.253" level="INFO">${PHILIP_RES} = [{'diff': 0.00021519399999999841}, {'diff': 0.0002149450000000011}, {'diff': 0.0002149299999999986}, {'diff': 0.0002149030000000024}, {'diff': 0.00021484699999999718}, {'diff': 0.00021490199999999945}...</msg>
<status status="PASS" starttime="20201030 18:31:33.250" endtime="20201030 18:31:33.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.258" level="INFO">${RESULT} = {'diff': [0.00021519399999999841, 0.0002149450000000011, 0.0002149299999999986, 0.0002149030000000024, 0.00021484699999999718, 0.00021490199999999945, 0.0002148749999999998, 0.0002149999999999999, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:33.254" endtime="20201030 18:31:33.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.262" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:33.261" endtime="20201030 18:31:33.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.265" level="INFO">VALUE: [0.00021519399999999841, 0.0002149450000000011, 0.0002149299999999986, 0.0002149030000000024, 0.00021484699999999718, 0.00021490199999999945, 0.0002148749999999998, 0.0002149999999999999, 0.00021491700000000197, 0.0002149169999999985, 0.00021494399999999816, 0.00021491700000000197, 0.0002149299999999986, 0.00021493100000000154, 0.0002149999999999999, 0.0002149299999999986, 0.00021493100000000154, 0.00021491599999999902, 0.00021497300000000025, 0.00021491599999999902, 0.00021490299999999893, 0.00021493100000000154, 0.0002149169999999985, 0.00021491700000000197, 0.00021488799999999988, 0.0002149169999999985, 0.00021497200000000077, 0.0002149299999999986, 0.00021491700000000197, 0.00021490199999999945, 0.00021491699999999503, 0.00021491700000000197, 0.00021487499999999632, 0.0002149309999999946, 0.00021493000000000206, 0.0002148610000000037, 0.00021492999999999512, 0.0002149450000000011, 0.00021494400000000163, 0.00021493000000000206, 0.00021490299999999546, 0.0002148610000000037, 0.00021491700000000197, 0.00021490299999999546, 0.00021493100000000154, 0.00021493100000000154, 0.00021492999999999512, 0.00021491700000000197, 0.00021490200000000292, 0.00021497300000000025]</msg>
<status status="PASS" starttime="20201030 18:31:33.263" endtime="20201030 18:31:33.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.259" endtime="20201030 18:31:33.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.270" endtime="20201030 18:31:33.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.268" endtime="20201030 18:31:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.267" endtime="20201030 18:31:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.896" endtime="20201030 18:31:33.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.895" endtime="20201030 18:31:33.291"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.299" endtime="20201030 18:31:33.331"></status>
</kw>
<msg timestamp="20201030 18:31:33.331" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.298" endtime="20201030 18:31:33.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.334" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.332" endtime="20201030 18:31:33.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.335" endtime="20201030 18:31:33.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.295" endtime="20201030 18:31:33.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.293" endtime="20201030 18:31:33.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.344" endtime="20201030 18:31:33.632"></status>
</kw>
<msg timestamp="20201030 18:31:33.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018448875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.343" endtime="20201030 18:31:33.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018448875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.636" endtime="20201030 18:31:33.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.644" endtime="20201030 18:31:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.340" endtime="20201030 18:31:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.338" endtime="20201030 18:31:33.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:33.651" level="INFO">${PHILIP_RES} = [{'diff': 0.0002253060000000015}, {'diff': 0.00022508300000000092}, {'diff': 0.00022502799999999865}, {'diff': 0.00022506900000000135}, {'diff': 0.00022507000000000082}, {'diff': 0.0002250690000000013...</msg>
<status status="PASS" starttime="20201030 18:31:33.648" endtime="20201030 18:31:33.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.655" level="INFO">${RESULT} = {'diff': [0.0002253060000000015, 0.00022508300000000092, 0.00022502799999999865, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022508300000000092,...</msg>
<status status="PASS" starttime="20201030 18:31:33.652" endtime="20201030 18:31:33.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.660" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:33.659" endtime="20201030 18:31:33.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.662" level="INFO">VALUE: [0.0002253060000000015, 0.00022508300000000092, 0.00022502799999999865, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022508300000000092, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022506899999999788, 0.0002251389999999992, 0.00022504199999999822, 0.00022508299999999745, 0.00022508299999999745, 0.0002250129999999996, 0.00022506899999999788, 0.0002250970000000005, 0.00022507000000000082, 0.00022505500000000178, 0.00022507000000000082, 0.00022505500000000178, 0.00022504200000000169, 0.00022511100000000006, 0.0002250840000000004, 0.00022506900000000135, 0.00022507000000000082, 0.00022506899999999788, 0.00022507000000000082, 0.00022505500000000178, 0.00022505600000000126, 0.00022504200000000169, 0.00022507000000000082, 0.0002249860000000034, 0.00022508300000000092, 0.00022507000000000082, 0.00022505499999999484, 0.0002250840000000004, 0.0002250689999999944, 0.00022507000000000082, 0.00022504099999999527, 0.00022508399999999346, 0.00022511100000000006, 0.00022506999999999389, 0.00022502799999999518, 0.00022506999999999389, 0.00022506900000000135, 0.00022507000000000082, 0.00022505500000000178]</msg>
<status status="PASS" starttime="20201030 18:31:33.661" endtime="20201030 18:31:33.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.656" endtime="20201030 18:31:33.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.668" endtime="20201030 18:31:33.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.666" endtime="20201030 18:31:33.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.665" endtime="20201030 18:31:33.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.292" endtime="20201030 18:31:33.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.291" endtime="20201030 18:31:33.689"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.697" endtime="20201030 18:31:33.730"></status>
</kw>
<msg timestamp="20201030 18:31:33.730" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.696" endtime="20201030 18:31:33.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.733" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.731" endtime="20201030 18:31:33.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.734" endtime="20201030 18:31:33.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.693" endtime="20201030 18:31:33.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.691" endtime="20201030 18:31:33.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.744" endtime="20201030 18:31:34.031"></status>
</kw>
<msg timestamp="20201030 18:31:34.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.742" endtime="20201030 18:31:34.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.036" endtime="20201030 18:31:34.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.046" endtime="20201030 18:31:34.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.739" endtime="20201030 18:31:34.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.737" endtime="20201030 18:31:34.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:34.055" level="INFO">${PHILIP_RES} = [{'diff': 0.0002357090000000006}, {'diff': 0.0002354580000000009}, {'diff': 0.0002354450000000008}, {'diff': 0.00023547200000000046}, {'diff': 0.00023544400000000132}, {'diff': 0.0002354580000000009},...</msg>
<status status="PASS" starttime="20201030 18:31:34.051" endtime="20201030 18:31:34.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.060" level="INFO">${RESULT} = {'diff': [0.0002357090000000006, 0.0002354580000000009, 0.0002354450000000008, 0.00023547200000000046, 0.00023544400000000132, 0.0002354580000000009, 0.00023543000000000175, 0.00023541700000000165, 0....</msg>
<status status="PASS" starttime="20201030 18:31:34.057" endtime="20201030 18:31:34.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.064" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:34.063" endtime="20201030 18:31:34.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.067" level="INFO">VALUE: [0.0002357090000000006, 0.0002354580000000009, 0.0002354450000000008, 0.00023547200000000046, 0.00023544400000000132, 0.0002354580000000009, 0.00023543000000000175, 0.00023541700000000165, 0.00023543000000000175, 0.0002354450000000008, 0.00023547200000000046, 0.0002354029999999986, 0.00023551400000000264, 0.00023544400000000132, 0.00023545900000000036, 0.0002354580000000009, 0.00023545900000000036, 0.00023545799999999742, 0.00023537499999999947, 0.00023544399999999785, 0.00023543099999999775, 0.00023543099999999775, 0.0002354029999999986, 0.00023543099999999775, 0.00023542999999999828, 0.00023545900000000036, 0.0002354580000000009, 0.00023543100000000122, 0.0002354299999999948, 0.0002354450000000008, 0.0002354580000000009, 0.00023543000000000175, 0.00023541699999999471, 0.00023544400000000132, 0.00023543099999999428, 0.0002354580000000009, 0.00023547200000000046, 0.0002354580000000009, 0.00023544399999999438, 0.00023541700000000165, 0.00023544399999999438, 0.00023545900000000036, 0.0002354580000000009, 0.0002354450000000008, 0.00023544400000000132, 0.00023544400000000132, 0.0002354580000000009, 0.0002354580000000009, 0.00023537500000000294, 0.00023543000000000175]</msg>
<status status="PASS" starttime="20201030 18:31:34.065" endtime="20201030 18:31:34.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.061" endtime="20201030 18:31:34.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.073" endtime="20201030 18:31:34.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.071" endtime="20201030 18:31:34.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.070" endtime="20201030 18:31:34.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.689" endtime="20201030 18:31:34.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.689" endtime="20201030 18:31:34.094"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.103" endtime="20201030 18:31:34.135"></status>
</kw>
<msg timestamp="20201030 18:31:34.136" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.101" endtime="20201030 18:31:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.139" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.137" endtime="20201030 18:31:34.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.140" endtime="20201030 18:31:34.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.098" endtime="20201030 18:31:34.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.096" endtime="20201030 18:31:34.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.150" endtime="20201030 18:31:34.436"></status>
</kw>
<msg timestamp="20201030 18:31:34.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018359972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.148" endtime="20201030 18:31:34.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018359972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.440" endtime="20201030 18:31:34.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.448" endtime="20201030 18:31:34.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.145" endtime="20201030 18:31:34.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.143" endtime="20201030 18:31:34.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:34.454" level="INFO">${PHILIP_RES} = [{'diff': 0.00024638899999999964}, {'diff': 0.00024604200000000187}, {'diff': 0.0002460830000000011}, {'diff': 0.00024602699999999936}, {'diff': 0.0002460549999999985}, {'diff': 0.0002460419999999984}...</msg>
<status status="PASS" starttime="20201030 18:31:34.451" endtime="20201030 18:31:34.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.459" level="INFO">${RESULT} = {'diff': [0.00024638899999999964, 0.00024604200000000187, 0.0002460830000000011, 0.00024602699999999936, 0.0002460549999999985, 0.0002460419999999984, 0.00024602799999999883, 0.00024605600000000144, 0...</msg>
<status status="PASS" starttime="20201030 18:31:34.455" endtime="20201030 18:31:34.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.463" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:34.462" endtime="20201030 18:31:34.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.466" level="INFO">VALUE: [0.00024638899999999964, 0.00024604200000000187, 0.0002460830000000011, 0.00024602699999999936, 0.0002460549999999985, 0.0002460419999999984, 0.00024602799999999883, 0.00024605600000000144, 0.00024605500000000197, 0.00024602699999999936, 0.0002460549999999985, 0.0002460419999999984, 0.0002460839999999971, 0.00024601399999999926, 0.00024604200000000187, 0.00024605500000000197, 0.00024609800000000015, 0.00024606900000000154, 0.00024605599999999797, 0.00024605599999999797, 0.0002460419999999984, 0.0002459999999999997, 0.00024605500000000197, 0.00024605500000000197, 0.0002460419999999984, 0.00024605599999999797, 0.00024605599999999797, 0.00024605600000000144, 0.00024605499999999503, 0.00024604099999999546, 0.00024604099999999546, 0.00024604200000000187, 0.0002460280000000023, 0.000246070000000001, 0.00024604200000000187, 0.00024606900000000154, 0.00024611100000000025, 0.0002460280000000023, 0.000246070000000001, 0.00024604200000000187, 0.00024604200000000187, 0.00024611100000000025, 0.00024604099999999546, 0.00024605499999999503, 0.0002460559999999945, 0.00024604200000000187, 0.00024605600000000144, 0.00024598599999999665, 0.0002460410000000024, 0.0002460410000000024]</msg>
<status status="PASS" starttime="20201030 18:31:34.465" endtime="20201030 18:31:34.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.460" endtime="20201030 18:31:34.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.471" endtime="20201030 18:31:34.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.469" endtime="20201030 18:31:34.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.468" endtime="20201030 18:31:34.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.095" endtime="20201030 18:31:34.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.094" endtime="20201030 18:31:34.491"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.500" endtime="20201030 18:31:34.533"></status>
</kw>
<msg timestamp="20201030 18:31:34.534" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.498" endtime="20201030 18:31:34.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.536" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.535" endtime="20201030 18:31:34.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.537" endtime="20201030 18:31:34.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.496" endtime="20201030 18:31:34.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.494" endtime="20201030 18:31:34.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.546" endtime="20201030 18:31:34.833"></status>
</kw>
<msg timestamp="20201030 18:31:34.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017899667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.544" endtime="20201030 18:31:34.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017899667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.837" endtime="20201030 18:31:34.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.844" endtime="20201030 18:31:34.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.542" endtime="20201030 18:31:34.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.540" endtime="20201030 18:31:34.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:34.851" level="INFO">${PHILIP_RES} = [{'diff': 0.000257139}, {'diff': 0.0002568610000000006}, {'diff': 0.00025687500000000016}, {'diff': 0.00025687500000000016}, {'diff': 0.00025687500000000016}, {'diff': 0.00025687500000000016}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:31:34.848" endtime="20201030 18:31:34.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.855" level="INFO">${RESULT} = {'diff': [0.000257139, 0.0002568610000000006, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025683...</msg>
<status status="PASS" starttime="20201030 18:31:34.852" endtime="20201030 18:31:34.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.859" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:34.858" endtime="20201030 18:31:34.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.862" level="INFO">VALUE: [0.000257139, 0.0002568610000000006, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025683300000000145, 0.0002569020000000033, 0.00025687500000000016, 0.00025688899999999973, 0.0002568610000000006, 0.00025687500000000016, 0.0002568890000000032, 0.0002569159999999994, 0.00025687500000000016, 0.00025683300000000145, 0.0002568610000000006, 0.00025687500000000016, 0.00025695900000000105, 0.00025687500000000016, 0.000256847000000001, 0.0002568610000000006, 0.00025687500000000016, 0.0002568610000000006, 0.0002568890000000032, 0.000256944000000002, 0.00025686100000000406, 0.00025687500000000363, 0.0002568749999999967, 0.0002568609999999971, 0.0002568189999999984, 0.00025687500000000363, 0.00025687500000000363, 0.0002568189999999984, 0.0002568749999999967, 0.00025684699999999755, 0.00025686100000000406, 0.00025687500000000363, 0.0002568749999999967, 0.0002568749999999967, 0.00025680600000000525, 0.00025686100000000406, 0.00025686100000000406, 0.0002568609999999971, 0.00025684699999999755, 0.00025684699999999755, 0.00025686100000000406, 0.0002568609999999971]</msg>
<status status="PASS" starttime="20201030 18:31:34.860" endtime="20201030 18:31:34.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.856" endtime="20201030 18:31:34.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.867" endtime="20201030 18:31:34.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.865" endtime="20201030 18:31:34.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.864" endtime="20201030 18:31:34.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.492" endtime="20201030 18:31:34.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.492" endtime="20201030 18:31:34.887"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.896" endtime="20201030 18:31:34.931"></status>
</kw>
<msg timestamp="20201030 18:31:34.931" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.894" endtime="20201030 18:31:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.934" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.932" endtime="20201030 18:31:34.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.935" endtime="20201030 18:31:34.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.892" endtime="20201030 18:31:34.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.890" endtime="20201030 18:31:34.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.944" endtime="20201030 18:31:35.230"></status>
</kw>
<msg timestamp="20201030 18:31:35.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018771681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.942" endtime="20201030 18:31:35.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018771681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.234" endtime="20201030 18:31:35.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.242" endtime="20201030 18:31:35.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.940" endtime="20201030 18:31:35.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.938" endtime="20201030 18:31:35.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:35.248" level="INFO">${PHILIP_RES} = [{'diff': 0.0002682089999999984}, {'diff': 0.0002679029999999999}, {'diff': 0.00026791699999999946}, {'diff': 0.00026791699999999946}, {'diff': 0.00026791699999999946}, {'diff': 0.0002678470000000016}...</msg>
<status status="PASS" starttime="20201030 18:31:35.245" endtime="20201030 18:31:35.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.252" level="INFO">${RESULT} = {'diff': [0.0002682089999999984, 0.0002679029999999999, 0.00026791699999999946, 0.00026791699999999946, 0.00026791699999999946, 0.0002678470000000016, 0.00026794500000000207, 0.00026793099999999903, 0...</msg>
<status status="PASS" starttime="20201030 18:31:35.249" endtime="20201030 18:31:35.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.256" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:35.255" endtime="20201030 18:31:35.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.259" level="INFO">VALUE: [0.0002682089999999984, 0.0002679029999999999, 0.00026791699999999946, 0.00026791699999999946, 0.00026791699999999946, 0.0002678470000000016, 0.00026794500000000207, 0.00026793099999999903, 0.0002679449999999986, 0.00026783300000000204, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.00026794500000000207, 0.00026791699999999946, 0.00026791699999999946, 0.00026795800000000217, 0.00026794399999999913, 0.00026791699999999946, 0.00026794399999999913, 0.000267916, 0.0002679029999999999, 0.00026792999999999956, 0.00026792999999999956, 0.00026792999999999956, 0.000267916, 0.000267916, 0.0002678890000000003, 0.0002679999999999974, 0.0002679579999999987, 0.000267916, 0.0002679020000000004, 0.00026792999999999956, 0.000267916, 0.000267916, 0.00026792999999999956, 0.00026792999999999956, 0.00026791699999999946, 0.00026794400000000607, 0.00026792999999999956, 0.00026793099999999903, 0.00026791699999999946, 0.0002679029999999999, 0.0002679860000000048, 0.00026793099999999903, 0.00026791699999999946, 0.00026791699999999946, 0.0002679579999999987, 0.00026791699999999946, 0.00026793099999999903]</msg>
<status status="PASS" starttime="20201030 18:31:35.257" endtime="20201030 18:31:35.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.253" endtime="20201030 18:31:35.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.265" endtime="20201030 18:31:35.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.263" endtime="20201030 18:31:35.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.262" endtime="20201030 18:31:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.888" endtime="20201030 18:31:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.888" endtime="20201030 18:31:35.285"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.293" endtime="20201030 18:31:35.329"></status>
</kw>
<msg timestamp="20201030 18:31:35.329" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.292" endtime="20201030 18:31:35.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.332" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.330" endtime="20201030 18:31:35.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.333" endtime="20201030 18:31:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.289" endtime="20201030 18:31:35.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.287" endtime="20201030 18:31:35.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.342" endtime="20201030 18:31:35.634"></status>
</kw>
<msg timestamp="20201030 18:31:35.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017974444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.340" endtime="20201030 18:31:35.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017974444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.642" endtime="20201030 18:31:35.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.659" endtime="20201030 18:31:35.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.337" endtime="20201030 18:31:35.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.336" endtime="20201030 18:31:35.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:35.673" level="INFO">${PHILIP_RES} = [{'diff': 0.0002794579999999998}, {'diff': 0.00027919399999999997}, {'diff': 0.00027920799999999954}, {'diff': 0.00027920799999999954}, {'diff': 0.00027919399999999997}, {'diff': 0.0002791939999999999...</msg>
<status status="PASS" starttime="20201030 18:31:35.666" endtime="20201030 18:31:35.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.683" level="INFO">${RESULT} = {'diff': [0.0002794579999999998, 0.00027919399999999997, 0.00027920799999999954, 0.00027920799999999954, 0.00027919399999999997, 0.00027919399999999997, 0.0002791809999999999, 0.00027922300000000205, ...</msg>
<status status="PASS" starttime="20201030 18:31:35.675" endtime="20201030 18:31:35.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.692" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:35.690" endtime="20201030 18:31:35.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.697" level="INFO">VALUE: [0.0002794579999999998, 0.00027919399999999997, 0.00027920799999999954, 0.00027920799999999954, 0.00027919399999999997, 0.00027919399999999997, 0.0002791809999999999, 0.00027922300000000205, 0.00027919499999999944, 0.00027916600000000083, 0.00027919499999999944, 0.00027919399999999997, 0.00027919399999999997, 0.00027920799999999954, 0.00027920799999999954, 0.00027919399999999997, 0.00027920799999999954, 0.00027919499999999944, 0.0002791670000000003, 0.000279208999999999, 0.0002791800000000004, 0.0002792359999999987, 0.00027919399999999997, 0.00027920799999999954, 0.0002791800000000004, 0.00027920799999999607, 0.000279208000000003, 0.00027916699999999683, 0.000279194999999996, 0.0002792090000000025, 0.00027920899999999554, 0.0002792090000000025, 0.0002791379999999982, 0.0002791939999999965, 0.000279208000000003, 0.0002791939999999965, 0.00027922199999999564, 0.0002792220000000026, 0.0002792499999999948, 0.00027918100000000334, 0.00027918100000000334, 0.000279194999999996, 0.0002791950000000029, 0.000279208000000003, 0.0002791389999999977, 0.00027919400000000344, 0.0002791939999999965, 0.0002791939999999965, 0.000279208000000003, 0.00027920799999999607]</msg>
<status status="PASS" starttime="20201030 18:31:35.694" endtime="20201030 18:31:35.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.685" endtime="20201030 18:31:35.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.707" endtime="20201030 18:31:35.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.704" endtime="20201030 18:31:35.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.701" endtime="20201030 18:31:35.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.286" endtime="20201030 18:31:35.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.286" endtime="20201030 18:31:35.728"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.736" endtime="20201030 18:31:35.773"></status>
</kw>
<msg timestamp="20201030 18:31:35.773" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.735" endtime="20201030 18:31:35.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.776" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.774" endtime="20201030 18:31:35.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.777" endtime="20201030 18:31:35.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.732" endtime="20201030 18:31:35.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.730" endtime="20201030 18:31:35.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.786" endtime="20201030 18:31:36.073"></status>
</kw>
<msg timestamp="20201030 18:31:36.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.784" endtime="20201030 18:31:36.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.077" endtime="20201030 18:31:36.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.085" endtime="20201030 18:31:36.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.782" endtime="20201030 18:31:36.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.780" endtime="20201030 18:31:36.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:36.091" level="INFO">${PHILIP_RES} = [{'diff': 0.00029095900000000036}, {'diff': 0.00029069499999999707}, {'diff': 0.00029069500000000054}, {'diff': 0.00029069499999999707}, {'diff': 0.00029068100000000097}, {'diff': 0.000290709000000000...</msg>
<status status="PASS" starttime="20201030 18:31:36.088" endtime="20201030 18:31:36.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.095" level="INFO">${RESULT} = {'diff': [0.00029095900000000036, 0.00029069499999999707, 0.00029069500000000054, 0.00029069499999999707, 0.00029068100000000097, 0.0002907090000000001, 0.00029069500000000054, 0.0002906809999999975, ...</msg>
<status status="PASS" starttime="20201030 18:31:36.092" endtime="20201030 18:31:36.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.100" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:36.098" endtime="20201030 18:31:36.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.102" level="INFO">VALUE: [0.00029095900000000036, 0.00029069499999999707, 0.00029069500000000054, 0.00029069499999999707, 0.00029068100000000097, 0.0002907090000000001, 0.00029069500000000054, 0.0002906809999999975, 0.00029069500000000054, 0.00029069500000000054, 0.0002907220000000002, 0.0002906669999999979, 0.00029069500000000054, 0.0002907220000000002, 0.00029069500000000054, 0.00029073599999999977, 0.00029073599999999977, 0.0002907090000000001, 0.00029068100000000097, 0.0002907090000000001, 0.0002907220000000002, 0.00029072199999999673, 0.00029069500000000054, 0.00029073599999999977, 0.00029070800000000063, 0.00029074999999999934, 0.0002906949999999936, 0.00029069500000000054, 0.00029069500000000054, 0.0002906530000000018, 0.0002906949999999936, 0.00029068100000000097, 0.0002906800000000015, 0.00029068100000000097, 0.0002907220000000002, 0.0002907220000000002, 0.00029070800000000063, 0.0002907220000000002, 0.0002907779999999985, 0.00029069400000000106, 0.00029069400000000106, 0.00029069400000000106, 0.0002906939999999941, 0.00029070800000000063, 0.0002907779999999985, 0.00029074999999999934, 0.00029067999999999455, 0.00029070800000000063, 0.0002906800000000015, 0.00029069400000000106]</msg>
<status status="PASS" starttime="20201030 18:31:36.101" endtime="20201030 18:31:36.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.096" endtime="20201030 18:31:36.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.107" endtime="20201030 18:31:36.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.105" endtime="20201030 18:31:36.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.104" endtime="20201030 18:31:36.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.729" endtime="20201030 18:31:36.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.728" endtime="20201030 18:31:36.127"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.136" endtime="20201030 18:31:36.173"></status>
</kw>
<msg timestamp="20201030 18:31:36.174" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.134" endtime="20201030 18:31:36.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.176" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.175" endtime="20201030 18:31:36.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.177" endtime="20201030 18:31:36.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.132" endtime="20201030 18:31:36.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.130" endtime="20201030 18:31:36.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.186" endtime="20201030 18:31:36.484"></status>
</kw>
<msg timestamp="20201030 18:31:36.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018931958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.185" endtime="20201030 18:31:36.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018931958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.492" endtime="20201030 18:31:36.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.509" endtime="20201030 18:31:36.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.182" endtime="20201030 18:31:36.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.180" endtime="20201030 18:31:36.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:36.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0003026939999999992}, {'diff': 0.00030243099999999884}, {'diff': 0.00030241699999999927}, {'diff': 0.00030242999999999937}, {'diff': 0.0003025000000000007}, {'diff': 0.0003024029999999997}...</msg>
<status status="PASS" starttime="20201030 18:31:36.516" endtime="20201030 18:31:36.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.524" level="INFO">${RESULT} = {'diff': [0.0003026939999999992, 0.00030243099999999884, 0.00030241699999999927, 0.00030242999999999937, 0.0003025000000000007, 0.0003024029999999997, 0.00030245900000000145, 0.0003024159999999998, 0....</msg>
<status status="PASS" starttime="20201030 18:31:36.521" endtime="20201030 18:31:36.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.528" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:36.527" endtime="20201030 18:31:36.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.530" level="INFO">VALUE: [0.0003026939999999992, 0.00030243099999999884, 0.00030241699999999927, 0.00030242999999999937, 0.0003025000000000007, 0.0003024029999999997, 0.00030245900000000145, 0.0003024159999999998, 0.000302458000000002, 0.00030243099999999884, 0.00030242999999999937, 0.00030234699999999795, 0.00030243099999999884, 0.00030243099999999884, 0.00030242999999999937, 0.00030242999999999937, 0.00030241699999999927, 0.00030242999999999937, 0.00030247200000000155, 0.0003024029999999997, 0.0003024449999999984, 0.0003024029999999997, 0.00030243099999999884, 0.00030243099999999884, 0.00030241699999999927, 0.00030242999999999937, 0.0003024449999999984, 0.00030243099999999884, 0.0003024159999999998, 0.0003024579999999985, 0.00030241699999999927, 0.00030241699999999927, 0.0003024719999999981, 0.00030241699999999927, 0.00030241699999999927, 0.00030242999999999937, 0.00030242999999999937, 0.00030248599999999765, 0.00030242999999999937, 0.00030242999999999937, 0.00030241699999999927, 0.00030238900000000013, 0.00030242999999999937, 0.00030238900000000013, 0.0003024449999999984, 0.0003024449999999984, 0.0003024159999999998, 0.00030243099999999884, 0.0003024449999999984, 0.00030241699999999927]</msg>
<status status="PASS" starttime="20201030 18:31:36.529" endtime="20201030 18:31:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.524" endtime="20201030 18:31:36.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.538" endtime="20201030 18:31:36.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.537" endtime="20201030 18:31:36.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.536" endtime="20201030 18:31:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.128" endtime="20201030 18:31:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.128" endtime="20201030 18:31:36.559"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.567" endtime="20201030 18:31:36.606"></status>
</kw>
<msg timestamp="20201030 18:31:36.606" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.566" endtime="20201030 18:31:36.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.609" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.607" endtime="20201030 18:31:36.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.610" endtime="20201030 18:31:36.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.563" endtime="20201030 18:31:36.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.561" endtime="20201030 18:31:36.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.619" endtime="20201030 18:31:36.905"></status>
</kw>
<msg timestamp="20201030 18:31:36.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018224347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.617" endtime="20201030 18:31:36.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018224347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.909" endtime="20201030 18:31:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.917" endtime="20201030 18:31:36.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.615" endtime="20201030 18:31:36.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.613" endtime="20201030 18:31:36.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:36.924" level="INFO">${PHILIP_RES} = [{'diff': 0.0003146389999999985}, {'diff': 0.0003143610000000026}, {'diff': 0.00031438899999999825}, {'diff': 0.0003143749999999987}, {'diff': 0.0003143609999999991}, {'diff': 0.0003143890000000017}, ...</msg>
<status status="PASS" starttime="20201030 18:31:36.921" endtime="20201030 18:31:36.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.929" level="INFO">${RESULT} = {'diff': [0.0003146389999999985, 0.0003143610000000026, 0.00031438899999999825, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000017, 0.00031438899999999825, 0.0003143879999999988, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:36.925" endtime="20201030 18:31:36.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.933" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:36.932" endtime="20201030 18:31:36.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.936" level="INFO">VALUE: [0.0003146389999999985, 0.0003143610000000026, 0.00031438899999999825, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000017, 0.00031438899999999825, 0.0003143879999999988, 0.00031443100000000043, 0.00031437500000000215, 0.0003143890000000017, 0.0003143749999999987, 0.0003143749999999987, 0.0003144030000000013, 0.0003144030000000013, 0.0003143749999999987, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000017, 0.0003143609999999991, 0.00031444400000000053, 0.0003143749999999987, 0.00031437500000000215, 0.0003143609999999991, 0.00031436100000000605, 0.0003143749999999987, 0.0003143749999999987, 0.00031440300000000476, 0.0003143749999999987, 0.0003143750000000056, 0.0003143749999999987, 0.0003143749999999987, 0.0003143750000000056, 0.0003144169999999974, 0.0003143749999999987, 0.0003143749999999987, 0.0003143749999999987, 0.0003143890000000052, 0.0003143749999999987, 0.0003143749999999987, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000052, 0.00031441700000000433, 0.0003143609999999991, 0.0003143750000000056, 0.0003143749999999987, 0.0003143749999999987, 0.00031438899999999825, 0.00031438899999999825]</msg>
<status status="PASS" starttime="20201030 18:31:36.934" endtime="20201030 18:31:36.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.930" endtime="20201030 18:31:36.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.941" endtime="20201030 18:31:36.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.939" endtime="20201030 18:31:36.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.938" endtime="20201030 18:31:36.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.560" endtime="20201030 18:31:36.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.559" endtime="20201030 18:31:36.962"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.971" endtime="20201030 18:31:37.010"></status>
</kw>
<msg timestamp="20201030 18:31:37.011" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.969" endtime="20201030 18:31:37.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.013" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.012" endtime="20201030 18:31:37.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.014" endtime="20201030 18:31:37.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.966" endtime="20201030 18:31:37.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.964" endtime="20201030 18:31:37.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.024" endtime="20201030 18:31:37.333"></status>
</kw>
<msg timestamp="20201030 18:31:37.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018487667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018814486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.022" endtime="20201030 18:31:37.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018487667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018814486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.337" endtime="20201030 18:31:37.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.345" endtime="20201030 18:31:37.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.020" endtime="20201030 18:31:37.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.018" endtime="20201030 18:31:37.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:37.352" level="INFO">${PHILIP_RES} = [{'diff': 0.000326818999999999}, {'diff': 0.0003265420000000026}, {'diff': 0.00032658299999999835}, {'diff': 0.0003265000000000004}, {'diff': 0.00032656999999999825}, {'diff': 0.0003265549999999992}, ...</msg>
<status status="PASS" starttime="20201030 18:31:37.349" endtime="20201030 18:31:37.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.356" level="INFO">${RESULT} = {'diff': [0.000326818999999999, 0.0003265420000000026, 0.00032658299999999835, 0.0003265000000000004, 0.00032656999999999825, 0.0003265549999999992, 0.00032655600000000215, 0.0003265549999999992, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:37.353" endtime="20201030 18:31:37.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.361" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:37.359" endtime="20201030 18:31:37.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.363" level="INFO">VALUE: [0.000326818999999999, 0.0003265420000000026, 0.00032658299999999835, 0.0003265000000000004, 0.00032656999999999825, 0.0003265549999999992, 0.00032655600000000215, 0.0003265549999999992, 0.00032656999999999825, 0.00032654099999999964, 0.0003265559999999987, 0.0003265550000000027, 0.0003265559999999987, 0.0003265689999999988, 0.0003265559999999987, 0.0003265700000000017, 0.00032654099999999964, 0.0003266390000000001, 0.0003265689999999988, 0.00032652799999999954, 0.00032654099999999964, 0.0003265559999999987, 0.0003265419999999991, 0.00032652799999999954, 0.0003265969999999979, 0.0003265419999999991, 0.00032656999999999825, 0.0003265689999999988, 0.0003265559999999987, 0.0003265549999999992, 0.0003265839999999978, 0.00032654099999999964, 0.0003265559999999987, 0.00032655500000000615, 0.0003265700000000052, 0.00032651399999999997, 0.0003265559999999987, 0.00032661199999999696, 0.0003265549999999992, 0.0003265559999999987, 0.0003265549999999992, 0.0003265419999999991, 0.00032654099999999964, 0.00032648600000000083, 0.0003265549999999992, 0.0003265419999999991, 0.0003265549999999992, 0.0003265559999999987, 0.0003265419999999991, 0.0003265130000000005]</msg>
<status status="PASS" starttime="20201030 18:31:37.362" endtime="20201030 18:31:37.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.357" endtime="20201030 18:31:37.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.368" endtime="20201030 18:31:37.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.367" endtime="20201030 18:31:37.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.365" endtime="20201030 18:31:37.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.963" endtime="20201030 18:31:37.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.962" endtime="20201030 18:31:37.389"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.398" endtime="20201030 18:31:37.439"></status>
</kw>
<msg timestamp="20201030 18:31:37.440" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.396" endtime="20201030 18:31:37.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.442" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.441" endtime="20201030 18:31:37.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.443" endtime="20201030 18:31:37.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.394" endtime="20201030 18:31:37.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.392" endtime="20201030 18:31:37.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.453" endtime="20201030 18:31:37.738"></status>
</kw>
<msg timestamp="20201030 18:31:37.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01929925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.451" endtime="20201030 18:31:37.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01929925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.743" endtime="20201030 18:31:37.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.750" endtime="20201030 18:31:37.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.449" endtime="20201030 18:31:37.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.447" endtime="20201030 18:31:37.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:37.757" level="INFO">${PHILIP_RES} = [{'diff': 0.00033922200000000013}, {'diff': 0.0003390139999999986}, {'diff': 0.0003389580000000003}, {'diff': 0.0003389580000000003}, {'diff': 0.0003389300000000012}, {'diff': 0.00033895799999999685},...</msg>
<status status="PASS" starttime="20201030 18:31:37.754" endtime="20201030 18:31:37.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.761" level="INFO">${RESULT} = {'diff': [0.00033922200000000013, 0.0003390139999999986, 0.0003389580000000003, 0.0003389580000000003, 0.0003389300000000012, 0.00033895799999999685, 0.0003389719999999999, 0.0003389589999999998, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:37.758" endtime="20201030 18:31:37.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.766" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:37.765" endtime="20201030 18:31:37.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.768" level="INFO">VALUE: [0.00033922200000000013, 0.0003390139999999986, 0.0003389580000000003, 0.0003389580000000003, 0.0003389300000000012, 0.00033895799999999685, 0.0003389719999999999, 0.0003389589999999998, 0.0003389719999999999, 0.00033894400000000074, 0.0003389170000000011, 0.00033894400000000074, 0.0003389580000000003, 0.0003389719999999999, 0.0003389580000000003, 0.00033895799999999685, 0.0003390000000000025, 0.0003389719999999999, 0.0003389580000000003, 0.0003389589999999998, 0.00033898599999999945, 0.0003389580000000003, 0.00033901400000000553, 0.0003389580000000003, 0.00033894400000000074, 0.0003389450000000002, 0.00033894400000000074, 0.0003389580000000003, 0.0003389450000000002, 0.0003389580000000003, 0.0003389719999999999, 0.00033895900000000673, 0.000338999999999999, 0.0003389580000000003, 0.00033893100000000065, 0.0003389580000000003, 0.000338999999999999, 0.0003389450000000002, 0.0003389719999999999, 0.0003389450000000002, 0.0003389030000000015, 0.0003389580000000003, 0.00033894400000000074, 0.0003389589999999998, 0.0003389580000000003, 0.0003389589999999998, 0.0003389719999999999, 0.0003389580000000003, 0.0003389580000000003, 0.0003389580000000003]</msg>
<status status="PASS" starttime="20201030 18:31:37.767" endtime="20201030 18:31:37.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.762" endtime="20201030 18:31:37.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.779" endtime="20201030 18:31:37.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.778" endtime="20201030 18:31:37.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.776" endtime="20201030 18:31:37.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.390" endtime="20201030 18:31:37.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.390" endtime="20201030 18:31:37.800"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.809" endtime="20201030 18:31:37.850"></status>
</kw>
<msg timestamp="20201030 18:31:37.850" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.807" endtime="20201030 18:31:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.853" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.851" endtime="20201030 18:31:37.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.854" endtime="20201030 18:31:37.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.804" endtime="20201030 18:31:37.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.802" endtime="20201030 18:31:37.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.863" endtime="20201030 18:31:38.150"></status>
</kw>
<msg timestamp="20201030 18:31:38.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018488875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.862" endtime="20201030 18:31:38.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018488875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.154" endtime="20201030 18:31:38.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.162" endtime="20201030 18:31:38.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.859" endtime="20201030 18:31:38.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.857" endtime="20201030 18:31:38.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:38.168" level="INFO">${PHILIP_RES} = [{'diff': 0.00035184700000000235}, {'diff': 0.0003515419999999998}, {'diff': 0.00035158300000000253}, {'diff': 0.00035158299999999906}, {'diff': 0.0003515559999999994}, {'diff': 0.00035161100000000167...</msg>
<status status="PASS" starttime="20201030 18:31:38.165" endtime="20201030 18:31:38.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.173" level="INFO">${RESULT} = {'diff': [0.00035184700000000235, 0.0003515419999999998, 0.00035158300000000253, 0.00035158299999999906, 0.0003515559999999994, 0.00035161100000000167, 0.00035158399999999854, 0.0003515689999999995, 0...</msg>
<status status="PASS" starttime="20201030 18:31:38.169" endtime="20201030 18:31:38.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.178" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:38.177" endtime="20201030 18:31:38.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.180" level="INFO">VALUE: [0.00035184700000000235, 0.0003515419999999998, 0.00035158300000000253, 0.00035158299999999906, 0.0003515559999999994, 0.00035161100000000167, 0.00035158399999999854, 0.0003515689999999995, 0.00035157000000000244, 0.00035158299999999906, 0.00035159699999999863, 0.00035158300000000253, 0.00035159699999999863, 0.0003516530000000004, 0.00035158300000000253, 0.00035156999999999897, 0.00035161100000000167, 0.00035158300000000253, 0.00035158399999999854, 0.0003515549999999999, 0.0003515970000000021, 0.0003515550000000034, 0.00035159699999999516, 0.000351584000000002, 0.0003515410000000038, 0.0003515699999999955, 0.00035161100000000167, 0.00035157000000000244, 0.0003515829999999956, 0.0003515970000000021, 0.00035158300000000253, 0.00035162500000000124, 0.0003515980000000016, 0.00035158300000000253, 0.00035158399999999507, 0.0003515970000000021, 0.0003515970000000021, 0.000351568999999996, 0.00035158300000000253, 0.00035158300000000253, 0.000351568999999996, 0.000351584000000002, 0.00035158300000000253, 0.00035159699999999516, 0.0003515970000000021, 0.00035156900000000296, 0.0003515139999999972, 0.00035155499999999645, 0.0003515980000000016, 0.0003515829999999956]</msg>
<status status="PASS" starttime="20201030 18:31:38.179" endtime="20201030 18:31:38.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.174" endtime="20201030 18:31:38.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.186" endtime="20201030 18:31:38.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.184" endtime="20201030 18:31:38.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.183" endtime="20201030 18:31:38.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.801" endtime="20201030 18:31:38.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.800" endtime="20201030 18:31:38.206"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.215" endtime="20201030 18:31:38.257"></status>
</kw>
<msg timestamp="20201030 18:31:38.258" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.214" endtime="20201030 18:31:38.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.260" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.259" endtime="20201030 18:31:38.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.262" endtime="20201030 18:31:38.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.211" endtime="20201030 18:31:38.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.209" endtime="20201030 18:31:38.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.271" endtime="20201030 18:31:38.558"></status>
</kw>
<msg timestamp="20201030 18:31:38.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018374236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018738931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.269" endtime="20201030 18:31:38.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018374236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018738931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.562" endtime="20201030 18:31:38.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.570" endtime="20201030 18:31:38.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.267" endtime="20201030 18:31:38.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.265" endtime="20201030 18:31:38.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:38.577" level="INFO">${PHILIP_RES} = [{'diff': 0.0003646950000000017}, {'diff': 0.0003644299999999989}, {'diff': 0.00036444500000000143}, {'diff': 0.00036444499999999797}, {'diff': 0.0003644299999999989}, {'diff': 0.0003644299999999989},...</msg>
<status status="PASS" starttime="20201030 18:31:38.573" endtime="20201030 18:31:38.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.581" level="INFO">${RESULT} = {'diff': [0.0003646950000000017, 0.0003644299999999989, 0.00036444500000000143, 0.00036444499999999797, 0.0003644299999999989, 0.0003644299999999989, 0.00036444500000000143, 0.0003644300000000024, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:38.578" endtime="20201030 18:31:38.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.585" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:38.584" endtime="20201030 18:31:38.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.588" level="INFO">VALUE: [0.0003646950000000017, 0.0003644299999999989, 0.00036444500000000143, 0.00036444499999999797, 0.0003644299999999989, 0.0003644299999999989, 0.00036444500000000143, 0.0003644300000000024, 0.0003644299999999989, 0.00036443100000000186, 0.00036445899999999753, 0.0003644299999999989, 0.0003644439999999985, 0.0003643750000000001, 0.0003644309999999984, 0.000364347000000001, 0.0003644309999999984, 0.0003644720000000011, 0.0003644439999999985, 0.0003644169999999988, 0.0003644309999999984, 0.0003644309999999984, 0.00036443000000000586, 0.0003644309999999984, 0.00036445899999999753, 0.0003644439999999985, 0.0003644299999999989, 0.0003644169999999988, 0.0003644439999999985, 0.00036449999999999677, 0.0003644309999999984, 0.00036441700000000576, 0.0003644299999999989, 0.0003644299999999989, 0.00036445899999999753, 0.00036443100000000533, 0.00036445799999999806, 0.0003644169999999988, 0.00036440299999999926, 0.00036443000000000586, 0.00036444499999999797, 0.0003644729999999971, 0.0003644309999999984, 0.0003644169999999988, 0.00036447300000000404, 0.00036444499999999797, 0.00036445799999999806, 0.0003644439999999985, 0.0003644169999999988, 0.0003644299999999989]</msg>
<status status="PASS" starttime="20201030 18:31:38.586" endtime="20201030 18:31:38.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.582" endtime="20201030 18:31:38.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.593" endtime="20201030 18:31:38.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.591" endtime="20201030 18:31:38.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.590" endtime="20201030 18:31:38.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.207" endtime="20201030 18:31:38.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.207" endtime="20201030 18:31:38.614"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.622" endtime="20201030 18:31:38.666"></status>
</kw>
<msg timestamp="20201030 18:31:38.667" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.621" endtime="20201030 18:31:38.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.670" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.668" endtime="20201030 18:31:38.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.671" endtime="20201030 18:31:38.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.618" endtime="20201030 18:31:38.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.616" endtime="20201030 18:31:38.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.680" endtime="20201030 18:31:38.967"></status>
</kw>
<msg timestamp="20201030 18:31:38.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019137097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.679" endtime="20201030 18:31:38.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019137097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.971" endtime="20201030 18:31:38.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.979" endtime="20201030 18:31:38.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.676" endtime="20201030 18:31:38.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.674" endtime="20201030 18:31:38.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:38.985" level="INFO">${PHILIP_RES} = [{'diff': 0.0003777780000000022}, {'diff': 0.00037749999999999936}, {'diff': 0.00037749999999999936}, {'diff': 0.0003774729999999997}, {'diff': 0.00037750000000000283}, {'diff': 0.0003774859999999998}...</msg>
<status status="PASS" starttime="20201030 18:31:38.982" endtime="20201030 18:31:38.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.990" level="INFO">${RESULT} = {'diff': [0.0003777780000000022, 0.00037749999999999936, 0.00037749999999999936, 0.0003774729999999997, 0.00037750000000000283, 0.0003774859999999998, 0.00037751399999999893, 0.0003775140000000024, 0....</msg>
<status status="PASS" starttime="20201030 18:31:38.987" endtime="20201030 18:31:38.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.994" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:38.993" endtime="20201030 18:31:38.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.997" level="INFO">VALUE: [0.0003777780000000022, 0.00037749999999999936, 0.00037749999999999936, 0.0003774729999999997, 0.00037750000000000283, 0.0003774859999999998, 0.00037751399999999893, 0.0003775140000000024, 0.00037749999999999936, 0.000377528000000002, 0.00037749999999999936, 0.0003775140000000024, 0.00037751399999999893, 0.0003774449999999971, 0.00037751399999999893, 0.00037749999999999936, 0.00037750000000000283, 0.00037749999999999936, 0.0003775140000000024, 0.00037751399999999546, 0.0003774999999999959, 0.0003775140000000024, 0.00037744400000000455, 0.00037751399999999546, 0.0003774859999999963, 0.00037744400000000455, 0.00037750000000000283, 0.0003774999999999959, 0.00037750000000000283, 0.00037750000000000283, 0.00037751399999999546, 0.000377528000000002, 0.0003774720000000037, 0.00037750000000000283, 0.0003774859999999963, 0.000377528000000002, 0.00037758400000000025, 0.0003774999999999959, 0.0003774999999999959, 0.00037750000000000283, 0.00037754200000000154, 0.00037747199999999675, 0.0003775140000000024, 0.00037750000000000283, 0.0003774999999999959, 0.00037751399999999546, 0.000377528000000002, 0.00037758400000000025, 0.0003774869999999958, 0.00037750000000000283]</msg>
<status status="PASS" starttime="20201030 18:31:38.995" endtime="20201030 18:31:38.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.991" endtime="20201030 18:31:38.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.003" endtime="20201030 18:31:39.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.001" endtime="20201030 18:31:39.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.000" endtime="20201030 18:31:39.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.615" endtime="20201030 18:31:39.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.614" endtime="20201030 18:31:39.024"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.032" endtime="20201030 18:31:39.076"></status>
</kw>
<msg timestamp="20201030 18:31:39.076" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.031" endtime="20201030 18:31:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.079" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.077" endtime="20201030 18:31:39.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.080" endtime="20201030 18:31:39.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.028" endtime="20201030 18:31:39.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.026" endtime="20201030 18:31:39.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.089" endtime="20201030 18:31:39.375"></status>
</kw>
<msg timestamp="20201030 18:31:39.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018175583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.087" endtime="20201030 18:31:39.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018175583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.379" endtime="20201030 18:31:39.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.387" endtime="20201030 18:31:39.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.085" endtime="20201030 18:31:39.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.083" endtime="20201030 18:31:39.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:39.394" level="INFO">${PHILIP_RES} = [{'diff': 0.0003910700000000003}, {'diff': 0.00039087499999999886}, {'diff': 0.0003908189999999971}, {'diff': 0.000390790999999998}, {'diff': 0.0003907500000000022}, {'diff': 0.0003908609999999993}, {...</msg>
<status status="PASS" starttime="20201030 18:31:39.390" endtime="20201030 18:31:39.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.399" level="INFO">${RESULT} = {'diff': [0.0003910700000000003, 0.00039087499999999886, 0.0003908189999999971, 0.000390790999999998, 0.0003907500000000022, 0.0003908609999999993, 0.0003908190000000006, 0.0003908060000000005, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:39.395" endtime="20201030 18:31:39.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.403" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:39.402" endtime="20201030 18:31:39.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.406" level="INFO">VALUE: [0.0003910700000000003, 0.00039087499999999886, 0.0003908189999999971, 0.000390790999999998, 0.0003907500000000022, 0.0003908609999999993, 0.0003908190000000006, 0.0003908060000000005, 0.0003907920000000009, 0.0003908060000000005, 0.0003908060000000005, 0.0003908190000000006, 0.000390805000000001, 0.00039087500000000233, 0.0003908609999999993, 0.00039083300000000015, 0.0003908339999999996, 0.00039082000000000006, 0.0003908339999999996, 0.00039088899999999843, 0.00039088900000000537, 0.000390805000000001, 0.0003908190000000006, 0.0003907500000000022, 0.00039082000000000006, 0.0003907920000000009, 0.0003907920000000009, 0.0003908060000000005, 0.00039079100000000144, 0.00039079100000000144, 0.000390805000000001, 0.000390805000000001, 0.0003908190000000006, 0.00039076399999999484, 0.0003908060000000005, 0.0003908060000000005, 0.0003908060000000005, 0.0003908469999999997, 0.0003908190000000006, 0.0003908190000000006, 0.000390805000000001, 0.0003908190000000006, 0.00039082000000000006, 0.00039082000000000006, 0.0003908469999999997, 0.0003908060000000005, 0.0003907909999999945, 0.00039077700000000187, 0.0003908469999999997, 0.0003908190000000006]</msg>
<status status="PASS" starttime="20201030 18:31:39.404" endtime="20201030 18:31:39.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.400" endtime="20201030 18:31:39.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.411" endtime="20201030 18:31:39.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.409" endtime="20201030 18:31:39.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.408" endtime="20201030 18:31:39.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.024" endtime="20201030 18:31:39.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.024" endtime="20201030 18:31:39.432"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.440" endtime="20201030 18:31:39.485"></status>
</kw>
<msg timestamp="20201030 18:31:39.485" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.439" endtime="20201030 18:31:39.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.488" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.486" endtime="20201030 18:31:39.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.489" endtime="20201030 18:31:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.436" endtime="20201030 18:31:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.434" endtime="20201030 18:31:39.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.498" endtime="20201030 18:31:39.785"></status>
</kw>
<msg timestamp="20201030 18:31:39.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:39.497" endtime="20201030 18:31:39.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:39.789" endtime="20201030 18:31:39.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.797" endtime="20201030 18:31:39.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.494" endtime="20201030 18:31:39.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.492" endtime="20201030 18:31:39.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:39.804" level="INFO">${PHILIP_RES} = [{'diff': 0.0004045969999999996}, {'diff': 0.00040438899999999806}, {'diff': 0.00040434699999999935}, {'diff': 0.00040434699999999935}, {'diff': 0.0004043329999999998}, {'diff': 0.00040433399999999925...</msg>
<status status="PASS" starttime="20201030 18:31:39.801" endtime="20201030 18:31:39.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.808" level="INFO">${RESULT} = {'diff': [0.0004045969999999996, 0.00040438899999999806, 0.00040434699999999935, 0.00040434699999999935, 0.0004043329999999998, 0.00040433399999999925, 0.00040434699999999935, 0.00040433300000000325, ...</msg>
<status status="PASS" starttime="20201030 18:31:39.805" endtime="20201030 18:31:39.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.813" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:39.811" endtime="20201030 18:31:39.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.815" level="INFO">VALUE: [0.0004045969999999996, 0.00040438899999999806, 0.00040434699999999935, 0.00040434699999999935, 0.0004043329999999998, 0.00040433399999999925, 0.00040434699999999935, 0.00040433300000000325, 0.0004043190000000002, 0.00040433300000000325, 0.00040433399999999925, 0.0004043329999999998, 0.0004043329999999998, 0.00040429200000000054, 0.0004044029999999976, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.0004043199999999997, 0.00040433399999999925, 0.0004043329999999998, 0.0004043190000000002, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.00040426399999999446, 0.0004043329999999998, 0.00040429200000000054, 0.00040434699999999935, 0.0004043609999999989, 0.00040434699999999935, 0.0004043199999999997, 0.0004043199999999997, 0.00040434699999999935, 0.0004043190000000002, 0.00040434699999999935, 0.0004043479999999988, 0.0004043190000000002, 0.00040434699999999935, 0.0004043329999999998, 0.0004043749999999985, 0.0004043609999999989, 0.0004043470000000063, 0.0004043190000000002, 0.00040433399999999925, 0.00040433399999999925, 0.0004043329999999998, 0.0004043330000000067, 0.0004043879999999986, 0.00040433399999999925]</msg>
<status status="PASS" starttime="20201030 18:31:39.814" endtime="20201030 18:31:39.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.809" endtime="20201030 18:31:39.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.820" endtime="20201030 18:31:39.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.819" endtime="20201030 18:31:39.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.817" endtime="20201030 18:31:39.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.433" endtime="20201030 18:31:39.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.432" endtime="20201030 18:31:39.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.847" endtime="20201030 18:31:39.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.845" endtime="20201030 18:31:39.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.844" endtime="20201030 18:31:39.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.842" endtime="20201030 18:31:39.866"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:17.703" endtime="20201030 18:31:39.866" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:56.334" endtime="20201030 18:31:39.875"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.946" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:39.954" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:41.032" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:39.945" endtime="20201030 18:31:41.033"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.036" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:31:41.034" endtime="20201030 18:31:42.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.944" endtime="20201030 18:31:42.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.043" endtime="20201030 18:31:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.040" endtime="20201030 18:31:42.276"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.289" endtime="20201030 18:31:42.309"></status>
</kw>
<msg timestamp="20201030 18:31:42.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.287" endtime="20201030 18:31:42.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.312" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.310" endtime="20201030 18:31:42.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.315" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:42.313" endtime="20201030 18:31:42.315"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:42.285" endtime="20201030 18:31:42.316"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:42.283" endtime="20201030 18:31:42.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.281" endtime="20201030 18:31:42.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:42.320" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:42.320" endtime="20201030 18:31:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.317" endtime="20201030 18:31:42.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.281" endtime="20201030 18:31:42.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.280" endtime="20201030 18:31:42.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.323" endtime="20201030 18:31:42.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.279" endtime="20201030 18:31:42.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.327" endtime="20201030 18:31:42.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.277" endtime="20201030 18:31:42.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.942" endtime="20201030 18:31:42.329"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.335" endtime="20201030 18:31:42.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.333" endtime="20201030 18:31:42.356"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.368" endtime="20201030 18:31:42.385"></status>
</kw>
<msg timestamp="20201030 18:31:42.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.367" endtime="20201030 18:31:42.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.386" endtime="20201030 18:31:42.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.391" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:42.389" endtime="20201030 18:31:42.391"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:42.364" endtime="20201030 18:31:42.392"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:42.362" endtime="20201030 18:31:42.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.361" endtime="20201030 18:31:42.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:42.396" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:42.395" endtime="20201030 18:31:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.393" endtime="20201030 18:31:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.360" endtime="20201030 18:31:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.359" endtime="20201030 18:31:42.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.398" endtime="20201030 18:31:42.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.358" endtime="20201030 18:31:42.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.356" endtime="20201030 18:31:42.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.332" endtime="20201030 18:31:42.400"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.411" endtime="20201030 18:31:42.429"></status>
</kw>
<msg timestamp="20201030 18:31:42.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.409" endtime="20201030 18:31:42.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.430" endtime="20201030 18:31:42.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.432" endtime="20201030 18:31:42.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.406" endtime="20201030 18:31:42.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.404" endtime="20201030 18:31:42.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.442" endtime="20201030 18:31:42.733"></status>
</kw>
<msg timestamp="20201030 18:31:42.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066712875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066726444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.440" endtime="20201030 18:31:42.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066712875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066726444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.737" endtime="20201030 18:31:42.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.746" endtime="20201030 18:31:42.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.438" endtime="20201030 18:31:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.436" endtime="20201030 18:31:42.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.752" level="INFO">${RESULT} = [{'diff': 1.356899999999106e-05}, {'diff': 1.3638999999995849e-05}, {'diff': 1.4209000000001137e-05}, {'diff': 1.4069999999991034e-05}, {'diff': 1.3638999999995849e-05}, {'diff': 1.3931000000008686e-0...</msg>
<status status="PASS" starttime="20201030 18:31:42.749" endtime="20201030 18:31:42.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.758" level="INFO">${ACCURACY} = {'diff': [1.356899999999106e-05, 1.3638999999995849e-05, 1.4209000000001137e-05, 1.4069999999991034e-05, 1.3638999999995849e-05, 1.3931000000008686e-05, 1.4151999999989506e-05, 1.3929999999995335e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:42.753" endtime="20201030 18:31:42.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.763" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.762" endtime="20201030 18:31:42.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.765" level="INFO">VALUE: [1.356899999999106e-05, 1.3638999999995849e-05, 1.4209000000001137e-05, 1.4069999999991034e-05, 1.3638999999995849e-05, 1.3931000000008686e-05, 1.4151999999989506e-05, 1.3929999999995335e-05, 1.376299999999997e-05, 1.3958000000008353e-05, 1.4334000000004732e-05, 1.4137999999996875e-05, 1.4181000000001998e-05, 1.3972000000000984e-05, 1.4249999999993435e-05, 1.4069000000005438e-05, 1.4512999999993781e-05, 1.4514000000007132e-05, 1.376299999999997e-05, 1.4180000000002524e-05, 1.3929999999995335e-05, 1.4374999999997029e-05, 1.3693999999994655e-05, 1.4153000000002858e-05, 1.4361000000004398e-05, 1.4403000000010047e-05, 1.3778000000005952e-05, 1.4139000000010227e-05, 1.388899999998916e-05, 1.386099999999002e-05, 1.3944000000001844e-05, 1.4250000000007312e-05, 1.4389000000003538e-05, 1.3638999999995849e-05, 1.4249999999993435e-05, 1.3763999999999443e-05, 1.4125000000003718e-05, 1.3542000000005272e-05, 1.4403000000010047e-05, 1.415299999998898e-05, 1.3777999999992074e-05, 1.4263999999999943e-05, 1.3653000000002358e-05, 1.4194999999994629e-05, 1.4083000000011947e-05, 1.4458000000008853e-05, 1.438899999998966e-05, 1.4347999999997363e-05, 1.4125000000003718e-05, 1.386099999999002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.764" endtime="20201030 18:31:42.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.758" endtime="20201030 18:31:42.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.770" endtime="20201030 18:31:42.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.768" endtime="20201030 18:31:42.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.767" endtime="20201030 18:31:42.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.402" endtime="20201030 18:31:42.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.401" endtime="20201030 18:31:42.791"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.799" endtime="20201030 18:31:42.816"></status>
</kw>
<msg timestamp="20201030 18:31:42.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.797" endtime="20201030 18:31:42.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.818" endtime="20201030 18:31:42.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.826" endtime="20201030 18:31:42.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.795" endtime="20201030 18:31:42.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.793" endtime="20201030 18:31:42.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.835" endtime="20201030 18:31:43.120"></status>
</kw>
<msg timestamp="20201030 18:31:43.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.833" endtime="20201030 18:31:43.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.125" endtime="20201030 18:31:43.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.134" endtime="20201030 18:31:43.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.831" endtime="20201030 18:31:43.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.829" endtime="20201030 18:31:43.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.140" level="INFO">${RESULT} = [{'diff': 1.4111000000000679e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.433299999999832e-05}, {'diff': 1.3569999999997473e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.3945000000001317e-0...</msg>
<status status="PASS" starttime="20201030 18:31:43.137" endtime="20201030 18:31:43.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.146" level="INFO">${ACCURACY} = {'diff': [1.4111000000000679e-05, 1.3944000000001844e-05, 1.433299999999832e-05, 1.3569999999997473e-05, 1.3611000000000179e-05, 1.3945000000001317e-05, 1.3638999999999318e-05, 1.4180999999998528e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:43.141" endtime="20201030 18:31:43.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.150" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.149" endtime="20201030 18:31:43.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.153" level="INFO">VALUE: [1.4111000000000679e-05, 1.3944000000001844e-05, 1.433299999999832e-05, 1.3569999999997473e-05, 1.3611000000000179e-05, 1.3945000000001317e-05, 1.3638999999999318e-05, 1.4180999999998528e-05, 1.4444999999998348e-05, 1.4444999999998348e-05, 1.3973000000000457e-05, 1.4055999999998403e-05, 1.3569999999997473e-05, 1.3901999999999665e-05, 1.4334000000001262e-05, 1.3639000000002788e-05, 1.3986000000000554e-05, 1.3945000000001317e-05, 1.4416999999999208e-05, 1.3944999999997848e-05, 1.4514000000000193e-05, 1.3722000000000734e-05, 1.4500000000000624e-05, 1.4360999999997459e-05, 1.3694000000001594e-05, 1.381899999999825e-05, 1.3915999999999235e-05, 1.3708000000001164e-05, 1.4417000000002678e-05, 1.3888999999999568e-05, 1.351299999999972e-05, 1.3597000000000609e-05, 1.4444000000002344e-05, 1.3583000000001039e-05, 1.3819000000001719e-05, 1.3639000000002788e-05, 1.4263999999999943e-05, 1.4000000000000123e-05, 1.3944000000001844e-05, 1.408299999999807e-05, 1.4263999999999943e-05, 1.4208000000001664e-05, 1.4499999999997154e-05, 1.405499999999893e-05, 1.433299999999832e-05, 1.3819000000001719e-05, 1.4389000000000068e-05, 1.4152999999999388e-05, 1.434699999999789e-05, 1.4110999999997209e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.151" endtime="20201030 18:31:43.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.146" endtime="20201030 18:31:43.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.158" endtime="20201030 18:31:43.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.157" endtime="20201030 18:31:43.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.154" endtime="20201030 18:31:43.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.791" endtime="20201030 18:31:43.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.791" endtime="20201030 18:31:43.179"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.188" endtime="20201030 18:31:43.205"></status>
</kw>
<msg timestamp="20201030 18:31:43.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.186" endtime="20201030 18:31:43.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.207" endtime="20201030 18:31:43.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.210" endtime="20201030 18:31:43.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.183" endtime="20201030 18:31:43.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.181" endtime="20201030 18:31:43.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.219" endtime="20201030 18:31:43.504"></status>
</kw>
<msg timestamp="20201030 18:31:43.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.217" endtime="20201030 18:31:43.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.508" endtime="20201030 18:31:43.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.517" endtime="20201030 18:31:43.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.215" endtime="20201030 18:31:43.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.213" endtime="20201030 18:31:43.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.524" level="INFO">${RESULT} = [{'diff': 1.3791999999998583e-05}, {'diff': 1.4111000000000679e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.3917000000002178e-05}, {'diff': 1.4444999999998348e-05}, {'diff': 1.3652999999998888e-...</msg>
<status status="PASS" starttime="20201030 18:31:43.520" endtime="20201030 18:31:43.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.528" level="INFO">${ACCURACY} = {'diff': [1.3791999999998583e-05, 1.4111000000000679e-05, 1.4070000000001442e-05, 1.3917000000002178e-05, 1.4444999999998348e-05, 1.3652999999998888e-05, 1.3638999999999318e-05, 1.3681000000001498e-05...</msg>
<status status="PASS" starttime="20201030 18:31:43.525" endtime="20201030 18:31:43.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.533" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.532" endtime="20201030 18:31:43.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.535" level="INFO">VALUE: [1.3791999999998583e-05, 1.4111000000000679e-05, 1.4070000000001442e-05, 1.3917000000002178e-05, 1.4444999999998348e-05, 1.3652999999998888e-05, 1.3638999999999318e-05, 1.3681000000001498e-05, 1.3834000000000762e-05, 1.3861000000000429e-05, 1.4083999999997543e-05, 1.4153000000002858e-05, 1.4305999999998653e-05, 1.3917000000002178e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.4027999999999263e-05, 1.4070000000001442e-05, 1.4389000000000068e-05, 1.4084000000001012e-05, 1.3958999999997418e-05, 1.4223000000000707e-05, 1.3749999999999873e-05, 1.3874999999999998e-05, 1.4514000000000193e-05, 1.40689999999985e-05, 1.3707999999997694e-05, 1.4236000000000804e-05, 1.430499999999918e-05, 1.4444999999998348e-05, 1.4402000000000165e-05, 1.426300000000047e-05, 1.452700000000029e-05, 1.3597000000000609e-05, 1.3777999999999013e-05, 1.3694000000001594e-05, 1.451300000000072e-05, 1.3931000000001748e-05, 1.3847000000000859e-05, 1.3986000000000554e-05, 1.4443999999998874e-05, 1.430499999999918e-05, 1.3916000000002704e-05, 1.4236000000000804e-05, 1.3861000000000429e-05, 1.3916000000002704e-05, 1.3638999999999318e-05, 1.4443999999998874e-05, 1.3958000000001414e-05, 1.4111000000000679e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.534" endtime="20201030 18:31:43.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.529" endtime="20201030 18:31:43.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.540" endtime="20201030 18:31:43.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.538" endtime="20201030 18:31:43.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.537" endtime="20201030 18:31:43.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.180" endtime="20201030 18:31:43.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.179" endtime="20201030 18:31:43.561"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.571" endtime="20201030 18:31:43.588"></status>
</kw>
<msg timestamp="20201030 18:31:43.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.569" endtime="20201030 18:31:43.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.591" endtime="20201030 18:31:43.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.597" endtime="20201030 18:31:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.566" endtime="20201030 18:31:43.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.563" endtime="20201030 18:31:43.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.617" endtime="20201030 18:31:43.912"></status>
</kw>
<msg timestamp="20201030 18:31:43.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:43.613" endtime="20201030 18:31:43.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:43.916" endtime="20201030 18:31:43.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.925" endtime="20201030 18:31:43.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.607" endtime="20201030 18:31:43.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.604" endtime="20201030 18:31:43.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.932" level="INFO">${RESULT} = [{'diff': 1.3931000000001748e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.3624999999999748e-05}, {'diff': 1.3569000000001469e-...</msg>
<status status="PASS" starttime="20201030 18:31:43.928" endtime="20201030 18:31:43.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.936" level="INFO">${ACCURACY} = {'diff': [1.3931000000001748e-05, 1.3736000000000304e-05, 1.3888999999999568e-05, 1.4013999999999693e-05, 1.3624999999999748e-05, 1.3569000000001469e-05, 1.4179999999999054e-05, 1.3902999999999138e-05...</msg>
<status status="PASS" starttime="20201030 18:31:43.933" endtime="20201030 18:31:43.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.941" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.939" endtime="20201030 18:31:43.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.943" level="INFO">VALUE: [1.3931000000001748e-05, 1.3736000000000304e-05, 1.3888999999999568e-05, 1.4013999999999693e-05, 1.3624999999999748e-05, 1.3569000000001469e-05, 1.4179999999999054e-05, 1.3902999999999138e-05, 1.3957999999997944e-05, 1.3902999999999138e-05, 1.3820000000001192e-05, 1.4389000000000068e-05, 1.3874999999999998e-05, 1.4430999999998778e-05, 1.4292000000002553e-05, 1.4111000000000679e-05, 1.4180999999998528e-05, 1.3834000000000762e-05, 1.3874999999999998e-05, 1.4305999999998653e-05, 1.4041999999998833e-05, 1.4180999999998528e-05, 1.4194999999998098e-05, 1.4125000000000248e-05, 1.3834000000000762e-05, 1.3874999999999998e-05, 1.4334000000001262e-05, 1.3709000000000637e-05, 1.4223000000000707e-05, 1.4389000000000068e-05, 1.3569000000001469e-05, 1.4041999999998833e-05, 1.427700000000004e-05, 1.3763999999999443e-05, 1.4208000000001664e-05, 1.4000000000000123e-05, 1.452699999999682e-05, 1.4193999999998624e-05, 1.3917000000002178e-05, 1.4292000000002553e-05, 1.3986000000000554e-05, 1.4597000000001609e-05, 1.3569000000001469e-05, 1.4165999999999485e-05, 1.4069000000001969e-05, 1.3667000000001928e-05, 1.4263999999999943e-05, 1.3679999999998554e-05, 1.3583000000001039e-05, 1.3708999999997168e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.942" endtime="20201030 18:31:43.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.937" endtime="20201030 18:31:43.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.949" endtime="20201030 18:31:43.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.947" endtime="20201030 18:31:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.946" endtime="20201030 18:31:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.562" endtime="20201030 18:31:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.561" endtime="20201030 18:31:43.970"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.979" endtime="20201030 18:31:43.997"></status>
</kw>
<msg timestamp="20201030 18:31:43.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.977" endtime="20201030 18:31:43.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.999" endtime="20201030 18:31:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.001" endtime="20201030 18:31:44.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.975" endtime="20201030 18:31:44.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.973" endtime="20201030 18:31:44.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.011" endtime="20201030 18:31:44.300"></status>
</kw>
<msg timestamp="20201030 18:31:44.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.009" endtime="20201030 18:31:44.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.304" endtime="20201030 18:31:44.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.313" endtime="20201030 18:31:44.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.006" endtime="20201030 18:31:44.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.005" endtime="20201030 18:31:44.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.320" level="INFO">${RESULT} = [{'diff': 1.377699999999954e-05}, {'diff': 1.381899999999825e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.4179999999999054e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.4236000000000804e-05...</msg>
<status status="PASS" starttime="20201030 18:31:44.316" endtime="20201030 18:31:44.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.325" level="INFO">${ACCURACY} = {'diff': [1.377699999999954e-05, 1.381899999999825e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.4083000000001539e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.40689999999985e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:31:44.321" endtime="20201030 18:31:44.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.330" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.329" endtime="20201030 18:31:44.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.332" level="INFO">VALUE: [1.377699999999954e-05, 1.381899999999825e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.4083000000001539e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.40689999999985e-05, 1.3763999999999443e-05, 1.3666999999998458e-05, 1.4472000000001484e-05, 1.3708000000001164e-05, 1.4152999999999388e-05, 1.3806000000001623e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.3583000000001039e-05, 1.4458000000001914e-05, 1.3638999999999318e-05, 1.4459000000001387e-05, 1.4055999999998403e-05, 1.4069999999997973e-05, 1.3972000000000984e-05, 1.4403000000003108e-05, 1.3763999999999443e-05, 1.4471999999998014e-05, 1.3528000000002233e-05, 1.3805999999998153e-05, 1.3931000000001748e-05, 1.3624999999999748e-05, 1.3915999999999235e-05, 1.4389000000000068e-05, 1.3666999999998458e-05, 1.3861000000000429e-05, 1.4306000000002123e-05, 1.4444999999998348e-05, 1.3902999999999138e-05, 1.3666000000002454e-05, 1.4333000000001789e-05, 1.4443999999998874e-05, 1.4125000000000248e-05, 1.4000000000000123e-05, 1.4138999999999818e-05, 1.4375000000000498e-05, 1.4513999999996724e-05, 1.430499999999918e-05, 1.4180000000002524e-05, 1.4472000000001484e-05, 1.3694000000001594e-05, 1.451299999999725e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.331" endtime="20201030 18:31:44.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.326" endtime="20201030 18:31:44.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.337" endtime="20201030 18:31:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.336" endtime="20201030 18:31:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.335" endtime="20201030 18:31:44.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.971" endtime="20201030 18:31:44.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.970" endtime="20201030 18:31:44.358"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.367" endtime="20201030 18:31:44.385"></status>
</kw>
<msg timestamp="20201030 18:31:44.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.366" endtime="20201030 18:31:44.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.386" endtime="20201030 18:31:44.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.389" endtime="20201030 18:31:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.363" endtime="20201030 18:31:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.361" endtime="20201030 18:31:44.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.399" endtime="20201030 18:31:44.682"></status>
</kw>
<msg timestamp="20201030 18:31:44.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.397" endtime="20201030 18:31:44.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.687" endtime="20201030 18:31:44.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.695" endtime="20201030 18:31:44.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.394" endtime="20201030 18:31:44.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.392" endtime="20201030 18:31:44.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.702" level="INFO">${RESULT} = [{'diff': 1.3556000000001373e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.3639000000002788e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.433299999999832e-05}, {'diff': 1.4402000000000165e-0...</msg>
<status status="PASS" starttime="20201030 18:31:44.699" endtime="20201030 18:31:44.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.706" level="INFO">${ACCURACY} = {'diff': [1.3556000000001373e-05, 1.4389000000000068e-05, 1.3639000000002788e-05, 1.4430999999998778e-05, 1.433299999999832e-05, 1.4402000000000165e-05, 1.4181000000001998e-05, 1.3651999999999415e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:44.703" endtime="20201030 18:31:44.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.711" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.710" endtime="20201030 18:31:44.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.715" level="INFO">VALUE: [1.3556000000001373e-05, 1.4389000000000068e-05, 1.3639000000002788e-05, 1.4430999999998778e-05, 1.433299999999832e-05, 1.4402000000000165e-05, 1.4181000000001998e-05, 1.3651999999999415e-05, 1.4195000000001567e-05, 1.3888999999999568e-05, 1.427700000000004e-05, 1.3583000000001039e-05, 1.402699999999979e-05, 1.4013999999999693e-05, 1.408299999999807e-05, 1.4486000000001054e-05, 1.4181000000001998e-05, 1.3707999999997694e-05, 1.431899999999875e-05, 1.3596999999997139e-05, 1.3653000000002358e-05, 1.4347000000001359e-05, 1.4207999999998194e-05, 1.4111000000000679e-05, 1.3874999999999998e-05, 1.4152999999999388e-05, 1.4263999999999943e-05, 1.3902999999999138e-05, 1.381899999999825e-05, 1.3624999999999748e-05, 1.3874999999999998e-05, 1.4014000000003163e-05, 1.3902999999999138e-05, 1.4069000000001969e-05, 1.3833000000001289e-05, 1.3874999999999998e-05, 1.4250000000000373e-05, 1.4111000000000679e-05, 1.3597000000000609e-05, 1.3695000000001067e-05, 1.431899999999875e-05, 1.3624999999999748e-05, 1.4500000000000624e-05, 1.3874999999999998e-05, 1.3652999999998888e-05, 1.4319999999998223e-05, 1.3611000000000179e-05, 1.4375000000000498e-05, 1.4431000000002248e-05, 1.3848000000000332e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.713" endtime="20201030 18:31:44.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.707" endtime="20201030 18:31:44.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.722" endtime="20201030 18:31:44.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.721" endtime="20201030 18:31:44.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.718" endtime="20201030 18:31:44.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.359" endtime="20201030 18:31:44.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.359" endtime="20201030 18:31:44.744"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.758" endtime="20201030 18:31:44.776"></status>
</kw>
<msg timestamp="20201030 18:31:44.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.755" endtime="20201030 18:31:44.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.778" endtime="20201030 18:31:44.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.781" endtime="20201030 18:31:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.751" endtime="20201030 18:31:44.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.748" endtime="20201030 18:31:44.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.790" endtime="20201030 18:31:45.077"></status>
</kw>
<msg timestamp="20201030 18:31:45.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027158847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027172722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.788" endtime="20201030 18:31:45.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027158847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027172722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.081" endtime="20201030 18:31:45.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.090" endtime="20201030 18:31:45.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.786" endtime="20201030 18:31:45.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.784" endtime="20201030 18:31:45.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.096" level="INFO">${RESULT} = [{'diff': 1.3874999999999998e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.3569000000001469e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3652999999998888e-...</msg>
<status status="PASS" starttime="20201030 18:31:45.093" endtime="20201030 18:31:45.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.101" level="INFO">${ACCURACY} = {'diff': [1.3874999999999998e-05, 1.3874999999999998e-05, 1.4125000000000248e-05, 1.3569000000001469e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.3972000000000984e-05, 1.3555000000001899e-05...</msg>
<status status="PASS" starttime="20201030 18:31:45.097" endtime="20201030 18:31:45.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.105" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.104" endtime="20201030 18:31:45.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.108" level="INFO">VALUE: [1.3874999999999998e-05, 1.3874999999999998e-05, 1.4125000000000248e-05, 1.3569000000001469e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.3972000000000984e-05, 1.3555000000001899e-05, 1.40689999999985e-05, 1.3568999999998e-05, 1.3624999999999748e-05, 1.3624999999999748e-05, 1.3929999999998804e-05, 1.434699999999789e-05, 1.3791999999998583e-05, 1.3527999999998763e-05, 1.4429999999999304e-05, 1.3847000000000859e-05, 1.3681000000001498e-05, 1.3806000000001623e-05, 1.3874999999999998e-05, 1.4263999999999943e-05, 1.4430999999998778e-05, 1.4444999999998348e-05, 1.4472000000001484e-05, 1.4166999999998958e-05, 1.4208999999997668e-05, 1.3861000000000429e-05, 1.3597000000000609e-05, 1.4209000000001137e-05, 1.3958999999997418e-05, 1.3694999999997598e-05, 1.3819999999997723e-05, 1.3611000000000179e-05, 1.3763999999999443e-05, 1.3598000000000082e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.3931000000001748e-05, 1.3791999999998583e-05, 1.4013999999999693e-05, 1.3888999999999568e-05, 1.3819000000001719e-05, 1.4473000000000957e-05, 1.3695000000001067e-05, 1.3833000000001289e-05, 1.4000000000000123e-05, 1.3707999999997694e-05, 1.376299999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.107" endtime="20201030 18:31:45.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.102" endtime="20201030 18:31:45.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.114" endtime="20201030 18:31:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.113" endtime="20201030 18:31:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.111" endtime="20201030 18:31:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.746" endtime="20201030 18:31:45.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.745" endtime="20201030 18:31:45.135"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.144" endtime="20201030 18:31:45.162"></status>
</kw>
<msg timestamp="20201030 18:31:45.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.142" endtime="20201030 18:31:45.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.163" endtime="20201030 18:31:45.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.166" endtime="20201030 18:31:45.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.140" endtime="20201030 18:31:45.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.137" endtime="20201030 18:31:45.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.175" endtime="20201030 18:31:45.461"></status>
</kw>
<msg timestamp="20201030 18:31:45.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.174" endtime="20201030 18:31:45.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.465" endtime="20201030 18:31:45.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.474" endtime="20201030 18:31:45.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.171" endtime="20201030 18:31:45.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.169" endtime="20201030 18:31:45.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.482" level="INFO">${RESULT} = [{'diff': 1.3833000000001289e-05}, {'diff': 1.4207999999998194e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.431899999999875e-0...</msg>
<status status="PASS" starttime="20201030 18:31:45.477" endtime="20201030 18:31:45.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.489" level="INFO">${ACCURACY} = {'diff': [1.3833000000001289e-05, 1.4207999999998194e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.4361000000000929e-05, 1.431899999999875e-05, 1.355499999999843e-05, 1.4375000000000498e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:45.483" endtime="20201030 18:31:45.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.494" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.493" endtime="20201030 18:31:45.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.497" level="INFO">VALUE: [1.3833000000001289e-05, 1.4207999999998194e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.4361000000000929e-05, 1.431899999999875e-05, 1.355499999999843e-05, 1.4375000000000498e-05, 1.4027999999999263e-05, 1.3985999999997084e-05, 1.3958000000001414e-05, 1.3902999999999138e-05, 1.3597000000000609e-05, 1.3943999999998374e-05, 1.4013999999999693e-05, 1.4333000000001789e-05, 1.4333000000001789e-05, 1.405499999999893e-05, 1.3917000000002178e-05, 1.3596999999997139e-05, 1.4056000000001873e-05, 1.4221999999997764e-05, 1.3569999999997473e-05, 1.4181000000001998e-05, 1.4305999999998653e-05, 1.40689999999985e-05, 1.3820000000001192e-05, 1.4471999999998014e-05, 1.3653000000002358e-05, 1.4000000000000123e-05, 1.4209000000001137e-05, 1.4430999999998778e-05, 1.3708999999997168e-05, 1.4180999999998528e-05, 1.4277999999999513e-05, 1.4514000000000193e-05, 1.4194999999998098e-05, 1.4250000000000373e-05, 1.3763999999999443e-05, 1.4208999999997668e-05, 1.4486000000001054e-05, 1.4514000000000193e-05, 1.4000000000000123e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3986000000000554e-05, 1.4319000000002219e-05, 1.4263999999999943e-05, 1.3569999999997473e-05, 1.4042000000002303e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.495" endtime="20201030 18:31:45.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.490" endtime="20201030 18:31:45.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.502" endtime="20201030 18:31:45.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.500" endtime="20201030 18:31:45.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.499" endtime="20201030 18:31:45.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.136" endtime="20201030 18:31:45.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.135" endtime="20201030 18:31:45.523"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.532" endtime="20201030 18:31:45.549"></status>
</kw>
<msg timestamp="20201030 18:31:45.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.530" endtime="20201030 18:31:45.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.551" endtime="20201030 18:31:45.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.554" endtime="20201030 18:31:45.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.527" endtime="20201030 18:31:45.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.525" endtime="20201030 18:31:45.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.563" endtime="20201030 18:31:45.847"></status>
</kw>
<msg timestamp="20201030 18:31:45.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.561" endtime="20201030 18:31:45.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.852" endtime="20201030 18:31:45.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.860" endtime="20201030 18:31:45.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.559" endtime="20201030 18:31:45.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.557" endtime="20201030 18:31:45.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.867" level="INFO">${RESULT} = [{'diff': 1.3833000000001289e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.3915999999999235e-05}, {'diff': 1.3931000000001748e-05}, {'diff': 1.3625000000003218e-...</msg>
<status status="PASS" starttime="20201030 18:31:45.864" endtime="20201030 18:31:45.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.871" level="INFO">${ACCURACY} = {'diff': [1.3833000000001289e-05, 1.3749999999999873e-05, 1.3874999999999998e-05, 1.3915999999999235e-05, 1.3931000000001748e-05, 1.3625000000003218e-05, 1.4055999999998403e-05, 1.4429999999999304e-05...</msg>
<status status="PASS" starttime="20201030 18:31:45.868" endtime="20201030 18:31:45.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.876" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.875" endtime="20201030 18:31:45.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.878" level="INFO">VALUE: [1.3833000000001289e-05, 1.3749999999999873e-05, 1.3874999999999998e-05, 1.3915999999999235e-05, 1.3931000000001748e-05, 1.3625000000003218e-05, 1.4055999999998403e-05, 1.4429999999999304e-05, 1.4138000000000345e-05, 1.4472000000001484e-05, 1.4277999999999513e-05, 1.40689999999985e-05, 1.3861999999999902e-05, 1.4097000000001109e-05, 1.3820000000001192e-05, 1.3584000000000512e-05, 1.3820000000001192e-05, 1.3805000000002149e-05, 1.3764000000002913e-05, 1.4263999999999943e-05, 1.4013999999999693e-05, 1.4181000000001998e-05, 1.4320000000001692e-05, 1.4180999999998528e-05, 1.4472000000001484e-05, 1.4263999999999943e-05, 1.3764000000002913e-05, 1.3861000000000429e-05, 1.358299999999757e-05, 1.4430999999998778e-05, 1.4193999999998624e-05, 1.4472999999997488e-05, 1.3806000000001623e-05, 1.4514000000000193e-05, 1.3973000000000457e-05, 1.4347000000001359e-05, 1.4362000000000402e-05, 1.4500000000000624e-05, 1.431899999999875e-05, 1.4500000000000624e-05, 1.4000000000000123e-05, 1.379099999999911e-05, 1.4319000000002219e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.383299999999782e-05, 1.3638999999999318e-05, 1.4193999999998624e-05, 1.3763999999999443e-05, 1.3638999999999318e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.877" endtime="20201030 18:31:45.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.872" endtime="20201030 18:31:45.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.884" endtime="20201030 18:31:45.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.882" endtime="20201030 18:31:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.881" endtime="20201030 18:31:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.524" endtime="20201030 18:31:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.523" endtime="20201030 18:31:45.904"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.913" endtime="20201030 18:31:45.932"></status>
</kw>
<msg timestamp="20201030 18:31:45.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.912" endtime="20201030 18:31:45.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.934" endtime="20201030 18:31:45.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.936" endtime="20201030 18:31:45.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.909" endtime="20201030 18:31:45.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.907" endtime="20201030 18:31:45.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.946" endtime="20201030 18:31:46.232"></status>
</kw>
<msg timestamp="20201030 18:31:46.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.944" endtime="20201030 18:31:46.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.237" endtime="20201030 18:31:46.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.246" endtime="20201030 18:31:46.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.942" endtime="20201030 18:31:46.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.940" endtime="20201030 18:31:46.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.253" level="INFO">${RESULT} = [{'diff': 1.4208000000001664e-05}, {'diff': 1.4263999999999943e-05}, {'diff': 1.4207999999998194e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.4402999999999638e-0...</msg>
<status status="PASS" starttime="20201030 18:31:46.250" endtime="20201030 18:31:46.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.257" level="INFO">${ACCURACY} = {'diff': [1.4208000000001664e-05, 1.4263999999999943e-05, 1.4207999999998194e-05, 1.4347000000001359e-05, 1.405499999999893e-05, 1.4402999999999638e-05, 1.4069000000001969e-05, 1.3569000000001469e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:46.254" endtime="20201030 18:31:46.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.262" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.261" endtime="20201030 18:31:46.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.264" level="INFO">VALUE: [1.4208000000001664e-05, 1.4263999999999943e-05, 1.4207999999998194e-05, 1.4347000000001359e-05, 1.405499999999893e-05, 1.4402999999999638e-05, 1.4069000000001969e-05, 1.3569000000001469e-05, 1.3667000000001928e-05, 1.3652999999998888e-05, 1.383299999999782e-05, 1.4389000000000068e-05, 1.3583000000001039e-05, 1.4402999999999638e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3570000000000942e-05, 1.3945000000001317e-05, 1.4194999999998098e-05, 1.3874999999999998e-05, 1.3889000000003038e-05, 1.4305999999998653e-05, 1.4527999999999763e-05, 1.4514000000000193e-05, 1.4402999999999638e-05, 1.3666999999998458e-05, 1.4277999999999513e-05, 1.3902999999999138e-05, 1.4097000000001109e-05, 1.3652999999998888e-05, 1.4138999999999818e-05, 1.4083000000001539e-05, 1.3777000000003009e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.4514000000000193e-05, 1.3555999999997903e-05, 1.404099999999936e-05, 1.4500000000000624e-05, 1.4292000000002553e-05, 1.3736000000000304e-05, 1.3791999999998583e-05, 1.4194999999998098e-05, 1.426300000000047e-05, 1.4458000000001914e-05, 1.4250000000000373e-05, 1.4013999999999693e-05, 1.3555000000001899e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.263" endtime="20201030 18:31:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.258" endtime="20201030 18:31:46.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.271" endtime="20201030 18:31:46.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.269" endtime="20201030 18:31:46.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.268" endtime="20201030 18:31:46.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.905" endtime="20201030 18:31:46.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.905" endtime="20201030 18:31:46.291"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.300" endtime="20201030 18:31:46.317"></status>
</kw>
<msg timestamp="20201030 18:31:46.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.299" endtime="20201030 18:31:46.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.319" endtime="20201030 18:31:46.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.322" endtime="20201030 18:31:46.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.296" endtime="20201030 18:31:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.294" endtime="20201030 18:31:46.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.331" endtime="20201030 18:31:46.616"></status>
</kw>
<msg timestamp="20201030 18:31:46.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.329" endtime="20201030 18:31:46.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.621" endtime="20201030 18:31:46.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.629" endtime="20201030 18:31:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.327" endtime="20201030 18:31:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.325" endtime="20201030 18:31:46.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.636" level="INFO">${RESULT} = [{'diff': 1.4985999999998084e-05}, {'diff': 1.5471999999999014e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.5193999999999624e-05}, {'diff': 1.537499999999803e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:46.633" endtime="20201030 18:31:46.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.641" level="INFO">${ACCURACY} = {'diff': [1.4985999999998084e-05, 1.5471999999999014e-05, 1.5250000000001374e-05, 1.50689999999995e-05, 1.5193999999999624e-05, 1.537499999999803e-05, 1.5485999999998584e-05, 1.5457999999999444e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:31:46.637" endtime="20201030 18:31:46.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.646" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.645" endtime="20201030 18:31:46.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.649" level="INFO">VALUE: [1.4985999999998084e-05, 1.5471999999999014e-05, 1.5250000000001374e-05, 1.50689999999995e-05, 1.5193999999999624e-05, 1.537499999999803e-05, 1.5485999999998584e-05, 1.5457999999999444e-05, 1.533299999999932e-05, 1.5194999999999098e-05, 1.5514000000001194e-05, 1.4639000000000318e-05, 1.5000000000001124e-05, 1.5485999999998584e-05, 1.4625000000000749e-05, 1.5249999999997904e-05, 1.4665999999999985e-05, 1.4833999999998293e-05, 1.4514000000000193e-05, 1.4583999999998043e-05, 1.5055999999999403e-05, 1.4653000000003358e-05, 1.5083999999998543e-05, 1.4611000000001179e-05, 1.540300000000064e-05, 1.533299999999932e-05, 1.5291999999996614e-05, 1.5305999999999653e-05, 1.481899999999925e-05, 1.531900000000322e-05, 1.531899999999975e-05, 1.5237000000001277e-05, 1.455499999999943e-05, 1.4679999999999555e-05, 1.4569000000002469e-05, 1.531899999999975e-05, 1.4750000000000874e-05, 1.458299999999857e-05, 1.5014000000000693e-05, 1.5249999999997904e-05, 1.4736000000001304e-05, 1.5528000000000763e-05, 1.5250000000001374e-05, 1.455499999999943e-05, 1.533299999999932e-05, 1.5139000000000818e-05, 1.4943999999999374e-05, 1.508299999999907e-05, 1.53889999999976e-05, 1.5013999999997224e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.647" endtime="20201030 18:31:46.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.642" endtime="20201030 18:31:46.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.654" endtime="20201030 18:31:46.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.652" endtime="20201030 18:31:46.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.651" endtime="20201030 18:31:46.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.292" endtime="20201030 18:31:46.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.292" endtime="20201030 18:31:46.674"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.684" endtime="20201030 18:31:46.701"></status>
</kw>
<msg timestamp="20201030 18:31:46.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.682" endtime="20201030 18:31:46.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.703" endtime="20201030 18:31:46.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.705" endtime="20201030 18:31:46.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.679" endtime="20201030 18:31:46.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.677" endtime="20201030 18:31:46.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.715" endtime="20201030 18:31:47.000"></status>
</kw>
<msg timestamp="20201030 18:31:47.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.713" endtime="20201030 18:31:47.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.005" endtime="20201030 18:31:47.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.013" endtime="20201030 18:31:47.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.711" endtime="20201030 18:31:47.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.709" endtime="20201030 18:31:47.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.020" level="INFO">${RESULT} = [{'diff': 1.6458000000000444e-05}, {'diff': 1.613900000000182e-05}, {'diff': 1.605500000000093e-05}, {'diff': 1.590300000000114e-05}, {'diff': 1.6013999999998224e-05}, {'diff': 1.558299999999957e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:47.017" endtime="20201030 18:31:47.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.024" level="INFO">${ACCURACY} = {'diff': [1.6458000000000444e-05, 1.613900000000182e-05, 1.605500000000093e-05, 1.590300000000114e-05, 1.6013999999998224e-05, 1.558299999999957e-05, 1.586099999999896e-05, 1.5915999999997765e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 18:31:47.021" endtime="20201030 18:31:47.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.029" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.028" endtime="20201030 18:31:47.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.032" level="INFO">VALUE: [1.6458000000000444e-05, 1.613900000000182e-05, 1.605500000000093e-05, 1.590300000000114e-05, 1.6013999999998224e-05, 1.558299999999957e-05, 1.586099999999896e-05, 1.5915999999997765e-05, 1.563900000000132e-05, 1.5764000000001444e-05, 1.588900000000157e-05, 1.563899999999785e-05, 1.5707999999999694e-05, 1.6028000000001263e-05, 1.6056000000000403e-05, 1.558299999999957e-05, 1.5681000000000028e-05, 1.5985999999999084e-05, 1.6458000000000444e-05, 1.633299999999685e-05, 1.616699999999749e-05, 1.616700000000096e-05, 1.613900000000182e-05, 1.612500000000225e-05, 1.565300000000089e-05, 1.5694999999999598e-05, 1.6513999999998724e-05, 1.6195000000000098e-05, 1.5958999999999418e-05, 1.5986999999998558e-05, 1.586100000000243e-05, 1.6306000000000653e-05, 1.5694999999999598e-05, 1.6333999999999793e-05, 1.563900000000132e-05, 1.5986000000002554e-05, 1.613900000000182e-05, 1.5652000000001415e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.5958999999999418e-05, 1.6249999999998904e-05, 1.5861999999998433e-05, 1.577700000000154e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.6444000000000875e-05, 1.606899999999703e-05, 1.576300000000197e-05, 1.6263999999998474e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.030" endtime="20201030 18:31:47.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.025" endtime="20201030 18:31:47.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.037" endtime="20201030 18:31:47.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.035" endtime="20201030 18:31:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.034" endtime="20201030 18:31:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.675" endtime="20201030 18:31:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.675" endtime="20201030 18:31:47.058"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.067" endtime="20201030 18:31:47.085"></status>
</kw>
<msg timestamp="20201030 18:31:47.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.065" endtime="20201030 18:31:47.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.087" endtime="20201030 18:31:47.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.090" endtime="20201030 18:31:47.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.062" endtime="20201030 18:31:47.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.060" endtime="20201030 18:31:47.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.099" endtime="20201030 18:31:47.386"></status>
</kw>
<msg timestamp="20201030 18:31:47.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.097" endtime="20201030 18:31:47.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.390" endtime="20201030 18:31:47.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.399" endtime="20201030 18:31:47.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.095" endtime="20201030 18:31:47.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.093" endtime="20201030 18:31:47.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.405" level="INFO">${RESULT} = [{'diff': 1.7429999999998835e-05}, {'diff': 1.745899999999745e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.7208000000001195e-05}, {'diff': 1.6791999999998114e-05}, {'diff': 1.712499999999978e-05...</msg>
<status status="PASS" starttime="20201030 18:31:47.402" endtime="20201030 18:31:47.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.410" level="INFO">${ACCURACY} = {'diff': [1.7429999999998835e-05, 1.745899999999745e-05, 1.6749999999999404e-05, 1.7208000000001195e-05, 1.6791999999998114e-05, 1.712499999999978e-05, 1.737500000000003e-05, 1.737499999999656e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:31:47.406" endtime="20201030 18:31:47.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.414" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.413" endtime="20201030 18:31:47.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.417" level="INFO">VALUE: [1.7429999999998835e-05, 1.745899999999745e-05, 1.6749999999999404e-05, 1.7208000000001195e-05, 1.6791999999998114e-05, 1.712499999999978e-05, 1.737500000000003e-05, 1.737499999999656e-05, 1.7208000000001195e-05, 1.7263999999999474e-05, 1.656899999999753e-05, 1.6958000000000945e-05, 1.6693999999997655e-05, 1.741699999999874e-05, 1.712499999999978e-05, 1.6749999999999404e-05, 1.686099999999996e-05, 1.7193999999998155e-05, 1.7055999999997934e-05, 1.743100000000178e-05, 1.662499999999928e-05, 1.6820000000000723e-05, 1.741700000000221e-05, 1.7457999999997975e-05, 1.7013999999999224e-05, 1.663900000000232e-05, 1.7528000000002764e-05, 1.719499999999763e-05, 1.715299999999892e-05, 1.7013999999999224e-05, 1.7056000000001403e-05, 1.7249999999999904e-05, 1.708300000000107e-05, 1.6820000000000723e-05, 1.7055999999997934e-05, 1.665299999999842e-05, 1.691700000000171e-05, 1.7207999999997725e-05, 1.662500000000275e-05, 1.683300000000082e-05, 1.7137999999999876e-05, 1.731900000000175e-05, 1.711100000000021e-05, 1.7263e-05, 1.706899999999803e-05, 1.6707999999997225e-05, 1.7249999999999904e-05, 1.7013999999999224e-05, 1.7179999999998585e-05, 1.731900000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.415" endtime="20201030 18:31:47.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.411" endtime="20201030 18:31:47.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.423" endtime="20201030 18:31:47.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.421" endtime="20201030 18:31:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.420" endtime="20201030 18:31:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.059" endtime="20201030 18:31:47.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.058" endtime="20201030 18:31:47.444"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.453" endtime="20201030 18:31:47.471"></status>
</kw>
<msg timestamp="20201030 18:31:47.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.451" endtime="20201030 18:31:47.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.472" endtime="20201030 18:31:47.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.475" endtime="20201030 18:31:47.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.448" endtime="20201030 18:31:47.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.446" endtime="20201030 18:31:47.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.484" endtime="20201030 18:31:47.770"></status>
</kw>
<msg timestamp="20201030 18:31:47.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:47.483" endtime="20201030 18:31:47.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:47.775" endtime="20201030 18:31:47.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.783" endtime="20201030 18:31:47.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.480" endtime="20201030 18:31:47.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.478" endtime="20201030 18:31:47.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.790" level="INFO">${RESULT} = [{'diff': 1.761099999999724e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.8249999999997435e-05}, {'diff': 1.844499999999888e-05}, {'diff': 1.7777999999999544e-05}, {'diff': 1.8027999999999794e-05...</msg>
<status status="PASS" starttime="20201030 18:31:47.787" endtime="20201030 18:31:47.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.795" level="INFO">${ACCURACY} = {'diff': [1.761099999999724e-05, 1.7763999999999974e-05, 1.8249999999997435e-05, 1.844499999999888e-05, 1.7777999999999544e-05, 1.8027999999999794e-05, 1.812500000000078e-05, 1.787499999999706e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:31:47.791" endtime="20201030 18:31:47.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.800" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.799" endtime="20201030 18:31:47.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.802" level="INFO">VALUE: [1.761099999999724e-05, 1.7763999999999974e-05, 1.8249999999997435e-05, 1.844499999999888e-05, 1.7777999999999544e-05, 1.8027999999999794e-05, 1.812500000000078e-05, 1.787499999999706e-05, 1.82089999999982e-05, 1.765299999999942e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.769499999999813e-05, 1.815299999999992e-05, 1.78890000000001e-05, 1.78890000000001e-05, 1.78890000000001e-05, 1.8084000000001543e-05, 1.8084000000001543e-05, 1.7957999999998475e-05, 1.8334000000001793e-05, 1.831899999999928e-05, 1.8112000000000683e-05, 1.7750000000000404e-05, 1.784699999999792e-05, 1.8250000000000904e-05, 1.7694000000002125e-05, 1.831899999999928e-05, 1.8402000000000696e-05, 1.815299999999992e-05, 1.8179999999999585e-05, 1.783300000000182e-05, 1.754100000000286e-05, 1.8500000000001154e-05, 1.8250000000000904e-05, 1.834699999999842e-05, 1.7943999999998905e-05, 1.837499999999756e-05, 1.7679999999999085e-05, 1.8207999999998725e-05, 1.8292000000003084e-05, 1.8513999999997255e-05, 1.784700000000139e-05, 1.8193999999999155e-05, 1.8264000000000474e-05, 1.7958000000001945e-05, 1.7556000000001903e-05, 1.7819999999998254e-05, 1.791700000000271e-05, 1.836099999999799e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.801" endtime="20201030 18:31:47.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.796" endtime="20201030 18:31:47.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.808" endtime="20201030 18:31:47.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.806" endtime="20201030 18:31:47.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.805" endtime="20201030 18:31:47.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.445" endtime="20201030 18:31:47.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.444" endtime="20201030 18:31:47.829"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.838" endtime="20201030 18:31:47.856"></status>
</kw>
<msg timestamp="20201030 18:31:47.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.836" endtime="20201030 18:31:47.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.857" endtime="20201030 18:31:47.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.860" endtime="20201030 18:31:47.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.833" endtime="20201030 18:31:47.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.831" endtime="20201030 18:31:47.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.870" endtime="20201030 18:31:48.157"></status>
</kw>
<msg timestamp="20201030 18:31:48.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.868" endtime="20201030 18:31:48.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.162" endtime="20201030 18:31:48.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.170" endtime="20201030 18:31:48.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.865" endtime="20201030 18:31:48.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.863" endtime="20201030 18:31:48.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.177" level="INFO">${RESULT} = [{'diff': 1.880500000000021e-05}, {'diff': 1.8680000000000085e-05}, {'diff': 1.940300000000117e-05}, {'diff': 1.9263999999998005e-05}, {'diff': 1.938899999999813e-05}, {'diff': 1.9207999999999725e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:48.174" endtime="20201030 18:31:48.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.181" level="INFO">${ACCURACY} = {'diff': [1.880500000000021e-05, 1.8680000000000085e-05, 1.940300000000117e-05, 1.9263999999998005e-05, 1.938899999999813e-05, 1.9207999999999725e-05, 1.9430000000000835e-05, 1.8764000000000974e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:31:48.178" endtime="20201030 18:31:48.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.186" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.185" endtime="20201030 18:31:48.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.189" level="INFO">VALUE: [1.880500000000021e-05, 1.8680000000000085e-05, 1.940300000000117e-05, 1.9263999999998005e-05, 1.938899999999813e-05, 1.9207999999999725e-05, 1.9430000000000835e-05, 1.8764000000000974e-05, 1.8957999999999475e-05, 1.8999999999998185e-05, 1.8930000000000335e-05, 1.936099999999899e-05, 1.9513999999998255e-05, 1.879100000000064e-05, 1.938899999999813e-05, 1.911099999999874e-05, 1.869499999999913e-05, 1.937500000000203e-05, 1.906900000000003e-05, 1.937500000000203e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.943100000000031e-05, 1.8833999999998824e-05, 1.9319999999999754e-05, 1.940300000000117e-05, 1.886100000000196e-05, 1.944499999999988e-05, 1.9249999999998435e-05, 1.9514000000001724e-05, 1.9528000000001294e-05, 1.9042000000000364e-05, 1.9263999999998005e-05, 1.9083999999999074e-05, 1.9292000000000614e-05, 1.8721999999998795e-05, 1.944499999999988e-05, 1.938899999999813e-05, 1.937499999999856e-05, 1.856899999999953e-05, 1.8569999999999004e-05, 1.9194000000000155e-05, 1.909699999999917e-05, 1.88890000000011e-05, 1.8930000000000335e-05, 1.941700000000074e-05, 1.929100000000114e-05, 1.861100000000171e-05, 1.8665999999997046e-05, 1.8792000000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.187" endtime="20201030 18:31:48.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.182" endtime="20201030 18:31:48.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.198" endtime="20201030 18:31:48.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.197" endtime="20201030 18:31:48.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.195" endtime="20201030 18:31:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.830" endtime="20201030 18:31:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.829" endtime="20201030 18:31:48.219"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.228" endtime="20201030 18:31:48.249"></status>
</kw>
<msg timestamp="20201030 18:31:48.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.227" endtime="20201030 18:31:48.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.251" endtime="20201030 18:31:48.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.255" endtime="20201030 18:31:48.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.224" endtime="20201030 18:31:48.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.222" endtime="20201030 18:31:48.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.271" endtime="20201030 18:31:48.573"></status>
</kw>
<msg timestamp="20201030 18:31:48.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02099475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:48.269" endtime="20201030 18:31:48.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02099475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:48.577" endtime="20201030 18:31:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.586" endtime="20201030 18:31:48.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.264" endtime="20201030 18:31:48.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.261" endtime="20201030 18:31:48.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.592" level="INFO">${RESULT} = [{'diff': 1.9527999999997825e-05}, {'diff': 2.0513999999999255e-05}, {'diff': 1.966700000000099e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 1.9749999999998935e-05}, {'diff': 2.013900000000235e-05...</msg>
<status status="PASS" starttime="20201030 18:31:48.589" endtime="20201030 18:31:48.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.596" level="INFO">${ACCURACY} = {'diff': [1.9527999999997825e-05, 2.0513999999999255e-05, 1.966700000000099e-05, 1.9570000000000004e-05, 1.9749999999998935e-05, 2.013900000000235e-05, 2.011099999999974e-05, 1.969500000000013e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:48.593" endtime="20201030 18:31:48.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.601" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.600" endtime="20201030 18:31:48.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.603" level="INFO">VALUE: [1.9527999999997825e-05, 2.0513999999999255e-05, 1.966700000000099e-05, 1.9570000000000004e-05, 1.9749999999998935e-05, 2.013900000000235e-05, 2.011099999999974e-05, 1.969500000000013e-05, 2.0347999999999894e-05, 2.0013999999998755e-05, 1.9833999999999824e-05, 1.961099999999924e-05, 2.0250000000002905e-05, 1.9764000000001974e-05, 1.995899999999995e-05, 2.0222000000000295e-05, 1.966700000000099e-05, 1.9820000000000254e-05, 2.051299999999978e-05, 2.036099999999999e-05, 2.0305999999997715e-05, 1.9972000000000045e-05, 1.97769999999986e-05, 1.9944000000000905e-05, 1.981900000000078e-05, 1.97089999999997e-05, 2.015300000000192e-05, 2.0249999999999435e-05, 1.9708000000000225e-05, 2.012499999999931e-05, 1.956900000000053e-05, 2.0499999999999685e-05, 2.015300000000192e-05, 1.959700000000314e-05, 2.0250000000002905e-05, 1.956900000000053e-05, 1.988899999999863e-05, 2.0222000000000295e-05, 1.9930000000001336e-05, 2.005500000000146e-05, 2.038899999999913e-05, 2.0443999999997936e-05, 2.006900000000103e-05, 2.006899999999756e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.0320000000000754e-05, 2.02090000000002e-05, 2.038899999999913e-05, 1.993100000000081e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.602" endtime="20201030 18:31:48.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.597" endtime="20201030 18:31:48.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.609" endtime="20201030 18:31:48.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.608" endtime="20201030 18:31:48.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.606" endtime="20201030 18:31:48.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.220" endtime="20201030 18:31:48.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.220" endtime="20201030 18:31:48.630"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.639" endtime="20201030 18:31:48.660"></status>
</kw>
<msg timestamp="20201030 18:31:48.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.637" endtime="20201030 18:31:48.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.663" endtime="20201030 18:31:48.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.668" endtime="20201030 18:31:48.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.634" endtime="20201030 18:31:48.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.632" endtime="20201030 18:31:48.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.687" endtime="20201030 18:31:48.981"></status>
</kw>
<msg timestamp="20201030 18:31:48.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.684" endtime="20201030 18:31:48.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.985" endtime="20201030 18:31:48.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.993" endtime="20201030 18:31:48.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.678" endtime="20201030 18:31:48.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.675" endtime="20201030 18:31:48.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.000" level="INFO">${RESULT} = [{'diff': 2.062499999999981e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.094500000000138e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.093100000000181e-05}, {'diff': 2.0749999999999935e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:48.997" endtime="20201030 18:31:49.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.007" level="INFO">${ACCURACY} = {'diff': [2.062499999999981e-05, 2.0986000000000615e-05, 2.094500000000138e-05, 2.086100000000049e-05, 2.093100000000181e-05, 2.0749999999999935e-05, 2.108299999999813e-05, 2.111100000000074e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 18:31:49.001" endtime="20201030 18:31:49.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.012" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.011" endtime="20201030 18:31:49.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.015" level="INFO">VALUE: [2.062499999999981e-05, 2.0986000000000615e-05, 2.094500000000138e-05, 2.086100000000049e-05, 2.093100000000181e-05, 2.0749999999999935e-05, 2.108299999999813e-05, 2.111100000000074e-05, 2.138900000000013e-05, 2.1457999999998506e-05, 2.112500000000031e-05, 2.1457999999998506e-05, 2.1250000000000435e-05, 2.1180000000002586e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.1193999999998686e-05, 2.111100000000074e-05, 2.1000000000000185e-05, 2.0499999999999685e-05, 2.113899999999988e-05, 2.12770000000001e-05, 2.1165999999999546e-05, 2.1541999999999395e-05, 2.1264000000000005e-05, 2.0736000000000365e-05, 2.062499999999981e-05, 2.1193999999998686e-05, 2.1250000000000435e-05, 2.090300000000267e-05, 2.1457999999998506e-05, 2.1486000000001115e-05, 2.0944000000001906e-05, 2.059700000000067e-05, 2.0513999999999255e-05, 2.1207999999998256e-05, 2.094499999999791e-05, 2.119499999999816e-05, 2.0499999999999685e-05, 2.1236000000000865e-05, 2.113899999999988e-05, 2.061100000000024e-05, 2.0763999999999505e-05, 2.1500000000000685e-05, 2.0834000000000824e-05, 2.1500000000000685e-05, 2.1264000000000005e-05, 2.1028000000002794e-05, 2.097300000000052e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.013" endtime="20201030 18:31:49.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.008" endtime="20201030 18:31:49.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.020" endtime="20201030 18:31:49.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.018" endtime="20201030 18:31:49.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.017" endtime="20201030 18:31:49.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.631" endtime="20201030 18:31:49.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.630" endtime="20201030 18:31:49.040"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.049" endtime="20201030 18:31:49.065"></status>
</kw>
<msg timestamp="20201030 18:31:49.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.047" endtime="20201030 18:31:49.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.066" endtime="20201030 18:31:49.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.069" endtime="20201030 18:31:49.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.045" endtime="20201030 18:31:49.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.043" endtime="20201030 18:31:49.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.078" endtime="20201030 18:31:49.366"></status>
</kw>
<msg timestamp="20201030 18:31:49.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.076" endtime="20201030 18:31:49.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.370" endtime="20201030 18:31:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.378" endtime="20201030 18:31:49.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.074" endtime="20201030 18:31:49.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.072" endtime="20201030 18:31:49.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.385" level="INFO">${RESULT} = [{'diff': 2.2513999999997786e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.161099999999777e-05}, {'diff': 2.2458000000002976e-05}, {'diff': 2.2000000000001185e-05}, {'diff': 2.220899999999873e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:49.382" endtime="20201030 18:31:49.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.389" level="INFO">${ACCURACY} = {'diff': [2.2513999999997786e-05, 2.234700000000242e-05, 2.161099999999777e-05, 2.2458000000002976e-05, 2.2000000000001185e-05, 2.220899999999873e-05, 2.184700000000192e-05, 2.1833999999998355e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:49.386" endtime="20201030 18:31:49.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.394" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.392" endtime="20201030 18:31:49.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.396" level="INFO">VALUE: [2.2513999999997786e-05, 2.234700000000242e-05, 2.161099999999777e-05, 2.2458000000002976e-05, 2.2000000000001185e-05, 2.220899999999873e-05, 2.184700000000192e-05, 2.1833999999998355e-05, 2.2070000000002504e-05, 2.2041999999999895e-05, 2.2319999999999285e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.1764000000000505e-05, 2.188900000000063e-05, 2.243099999999984e-05, 2.2499999999998216e-05, 2.187499999999759e-05, 2.1569999999998535e-05, 2.1763999999997036e-05, 2.2069999999999035e-05, 2.188900000000063e-05, 2.243099999999984e-05, 2.1957999999999006e-05, 2.181899999999931e-05, 2.236099999999852e-05, 2.1971999999998576e-05, 2.1943999999999436e-05, 2.2179999999996647e-05, 2.213900000000088e-05, 2.1693999999999186e-05, 2.1957999999999006e-05, 2.1750000000000935e-05, 2.156900000000253e-05, 2.1971999999998576e-05, 2.183300000000235e-05, 2.159700000000167e-05, 2.2194000000003156e-05, 2.188900000000063e-05, 2.183299999999888e-05, 2.1527999999999825e-05, 2.181899999999931e-05, 2.213900000000088e-05, 2.194500000000238e-05, 2.159700000000167e-05, 2.1778000000000075e-05, 2.163900000000038e-05, 2.2471999999999076e-05, 2.2264000000001005e-05, 2.1750000000000935e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.395" endtime="20201030 18:31:49.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.390" endtime="20201030 18:31:49.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.401" endtime="20201030 18:31:49.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.399" endtime="20201030 18:31:49.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.398" endtime="20201030 18:31:49.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.041" endtime="20201030 18:31:49.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.041" endtime="20201030 18:31:49.422"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.430" endtime="20201030 18:31:49.452"></status>
</kw>
<msg timestamp="20201030 18:31:49.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.429" endtime="20201030 18:31:49.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.455" endtime="20201030 18:31:49.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.460" endtime="20201030 18:31:49.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.426" endtime="20201030 18:31:49.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.424" endtime="20201030 18:31:49.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.478" endtime="20201030 18:31:49.773"></status>
</kw>
<msg timestamp="20201030 18:31:49.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.475" endtime="20201030 18:31:49.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.777" endtime="20201030 18:31:49.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.786" endtime="20201030 18:31:49.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.470" endtime="20201030 18:31:49.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.466" endtime="20201030 18:31:49.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.793" level="INFO">${RESULT} = [{'diff': 2.2778000000001075e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.2637999999998437e-05}, {'diff': 2.287499999999859e-05...</msg>
<status status="PASS" starttime="20201030 18:31:49.789" endtime="20201030 18:31:49.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.797" level="INFO">${ACCURACY} = {'diff': [2.2778000000001075e-05, 2.2985999999999146e-05, 2.3013999999998286e-05, 2.283299999999988e-05, 2.2637999999998437e-05, 2.287499999999859e-05, 2.2971999999999576e-05, 2.2612000000001714e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:49.794" endtime="20201030 18:31:49.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.801" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.800" endtime="20201030 18:31:49.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.804" level="INFO">VALUE: [2.2778000000001075e-05, 2.2985999999999146e-05, 2.3013999999998286e-05, 2.283299999999988e-05, 2.2637999999998437e-05, 2.287499999999859e-05, 2.2971999999999576e-05, 2.2612000000001714e-05, 2.283299999999988e-05, 2.268100000000009e-05, 2.287500000000206e-05, 2.290299999999773e-05, 2.305500000000099e-05, 2.3263999999998536e-05, 2.256900000000006e-05, 2.3485999999999646e-05, 2.3277999999998106e-05, 2.3263999999998536e-05, 2.336099999999952e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.3486000000003115e-05, 2.30969999999997e-05, 2.306900000000056e-05, 2.3499999999999216e-05, 2.262500000000181e-05, 2.306900000000056e-05, 2.348699999999912e-05, 2.2707999999999756e-05, 2.345899999999998e-05, 2.2527999999997356e-05, 2.315300000000145e-05, 2.2833999999999355e-05, 2.266700000000052e-05, 2.2819999999999785e-05, 2.263899999999791e-05, 2.355500000000149e-05, 2.312499999999884e-05, 2.313900000000188e-05, 2.338900000000213e-05, 2.2763999999998036e-05, 2.337499999999909e-05, 2.261100000000224e-05, 2.2735999999998896e-05, 2.27770000000016e-05, 2.3194000000000686e-05, 2.3499999999999216e-05, 2.2901999999998257e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.802" endtime="20201030 18:31:49.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.797" endtime="20201030 18:31:49.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.809" endtime="20201030 18:31:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.808" endtime="20201030 18:31:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.807" endtime="20201030 18:31:49.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.422" endtime="20201030 18:31:49.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.422" endtime="20201030 18:31:49.830"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.839" endtime="20201030 18:31:49.856"></status>
</kw>
<msg timestamp="20201030 18:31:49.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.837" endtime="20201030 18:31:49.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.858" endtime="20201030 18:31:49.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.860" endtime="20201030 18:31:49.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.835" endtime="20201030 18:31:49.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.833" endtime="20201030 18:31:49.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.869" endtime="20201030 18:31:50.155"></status>
</kw>
<msg timestamp="20201030 18:31:50.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.868" endtime="20201030 18:31:50.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.159" endtime="20201030 18:31:50.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.168" endtime="20201030 18:31:50.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.865" endtime="20201030 18:31:50.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.864" endtime="20201030 18:31:50.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.174" level="INFO">${RESULT} = [{'diff': 2.434700000000095e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.386100000000002e-05}, {'diff': 2.386100000000002e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:50.171" endtime="20201030 18:31:50.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.179" level="INFO">${ACCURACY} = {'diff': [2.434700000000095e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.406900000000156e-05, 2.386100000000002e-05, 2.386100000000002e-05, 2.40970000000007e-05, 2.394500000000091e-05, 2.394...</msg>
<status status="PASS" starttime="20201030 18:31:50.175" endtime="20201030 18:31:50.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.184" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.183" endtime="20201030 18:31:50.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.186" level="INFO">VALUE: [2.434700000000095e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.406900000000156e-05, 2.386100000000002e-05, 2.386100000000002e-05, 2.40970000000007e-05, 2.394500000000091e-05, 2.3943999999997967e-05, 2.363900000000238e-05, 2.4070000000001035e-05, 2.418099999999812e-05, 2.368100000000109e-05, 2.3680000000001616e-05, 2.4084000000000605e-05, 2.383300000000088e-05, 2.416699999999855e-05, 2.369500000000066e-05, 2.4264000000003005e-05, 2.393099999999787e-05, 2.4500000000000216e-05, 2.386100000000002e-05, 2.384700000000045e-05, 2.4263000000000062e-05, 2.366700000000152e-05, 2.4319999999997816e-05, 2.444499999999794e-05, 2.3791999999998176e-05, 2.3971999999997107e-05, 2.3570000000000535e-05, 2.4222000000000826e-05, 2.4429999999998897e-05, 2.387499999999959e-05, 2.4249999999999966e-05, 2.4444000000001936e-05, 2.4457999999998037e-05, 2.4555999999998496e-05, 2.4513999999999786e-05, 2.436100000000052e-05, 2.4249999999999966e-05, 2.3778000000002075e-05, 2.3694000000001186e-05, 2.4014000000002755e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.4014000000002755e-05, 2.4249999999999966e-05, 2.3694000000001186e-05, 2.434700000000095e-05, 2.3708000000000756e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.185" endtime="20201030 18:31:50.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.180" endtime="20201030 18:31:50.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.191" endtime="20201030 18:31:50.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.190" endtime="20201030 18:31:50.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.189" endtime="20201030 18:31:50.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.831" endtime="20201030 18:31:50.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.830" endtime="20201030 18:31:50.212"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.221" endtime="20201030 18:31:50.238"></status>
</kw>
<msg timestamp="20201030 18:31:50.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.219" endtime="20201030 18:31:50.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.239" endtime="20201030 18:31:50.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.242" endtime="20201030 18:31:50.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.216" endtime="20201030 18:31:50.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.214" endtime="20201030 18:31:50.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.251" endtime="20201030 18:31:50.537"></status>
</kw>
<msg timestamp="20201030 18:31:50.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.249" endtime="20201030 18:31:50.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.542" endtime="20201030 18:31:50.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.550" endtime="20201030 18:31:50.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.247" endtime="20201030 18:31:50.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.245" endtime="20201030 18:31:50.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.557" level="INFO">${RESULT} = [{'diff': 2.5179999999999647e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.5263999999997067e-05}, {'diff': 2.5277000000000632e-05}, {'diff': 2.463899999999991e-0...</msg>
<status status="PASS" starttime="20201030 18:31:50.553" endtime="20201030 18:31:50.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.561" level="INFO">${ACCURACY} = {'diff': [2.5179999999999647e-05, 2.4596999999997732e-05, 2.5264000000000536e-05, 2.5263999999997067e-05, 2.5277000000000632e-05, 2.463899999999991e-05, 2.5514000000000786e-05, 2.5305999999999246e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:50.557" endtime="20201030 18:31:50.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.565" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.564" endtime="20201030 18:31:50.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.568" level="INFO">VALUE: [2.5179999999999647e-05, 2.4596999999997732e-05, 2.5264000000000536e-05, 2.5263999999997067e-05, 2.5277000000000632e-05, 2.463899999999991e-05, 2.5514000000000786e-05, 2.5305999999999246e-05, 2.5068999999999092e-05, 2.5014000000000286e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.4542000000002395e-05, 2.4707999999998287e-05, 2.462500000000034e-05, 2.466699999999905e-05, 2.5541999999999926e-05, 2.4541999999998926e-05, 2.5012999999997343e-05, 2.5014000000000286e-05, 2.4820000000001785e-05, 2.4583999999997636e-05, 2.4820000000001785e-05, 2.468100000000209e-05, 2.4777999999999606e-05, 2.463899999999991e-05, 2.50970000000017e-05, 2.4957999999998537e-05, 2.469500000000166e-05, 2.5083999999998136e-05, 2.5097999999997705e-05, 2.5471999999998607e-05, 2.5319999999998816e-05, 2.5443999999999467e-05, 2.462500000000034e-05, 2.4707999999998287e-05, 2.4929999999999397e-05, 2.5179999999999647e-05, 2.5193999999999217e-05, 2.4554999999999022e-05, 2.516699999999955e-05, 2.481900000000231e-05, 2.4526999999999882e-05, 2.488900000000016e-05, 2.4764000000000036e-05, 2.5082999999998662e-05, 2.5250000000000966e-05, 2.5000000000000716e-05, 2.5360999999998052e-05, 2.5194000000002686e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.566" endtime="20201030 18:31:50.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.562" endtime="20201030 18:31:50.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.573" endtime="20201030 18:31:50.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.571" endtime="20201030 18:31:50.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.570" endtime="20201030 18:31:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.213" endtime="20201030 18:31:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.212" endtime="20201030 18:31:50.593"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.602" endtime="20201030 18:31:50.621"></status>
</kw>
<msg timestamp="20201030 18:31:50.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.600" endtime="20201030 18:31:50.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.622" endtime="20201030 18:31:50.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.624" endtime="20201030 18:31:50.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.598" endtime="20201030 18:31:50.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.596" endtime="20201030 18:31:50.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.634" endtime="20201030 18:31:50.920"></status>
</kw>
<msg timestamp="20201030 18:31:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.632" endtime="20201030 18:31:50.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.924" endtime="20201030 18:31:50.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.932" endtime="20201030 18:31:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.629" endtime="20201030 18:31:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.628" endtime="20201030 18:31:50.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.938" level="INFO">${RESULT} = [{'diff': 2.6000000000001716e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.637500000000209e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.6165999999997608e-05...</msg>
<status status="PASS" starttime="20201030 18:31:50.935" endtime="20201030 18:31:50.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.943" level="INFO">${ACCURACY} = {'diff': [2.6000000000001716e-05, 2.5860999999998552e-05, 2.637500000000209e-05, 2.5735999999998427e-05, 2.588900000000116e-05, 2.6165999999997608e-05, 2.5762999999998093e-05, 2.5943999999999967e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:50.939" endtime="20201030 18:31:50.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.947" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.946" endtime="20201030 18:31:50.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.950" level="INFO">VALUE: [2.6000000000001716e-05, 2.5860999999998552e-05, 2.637500000000209e-05, 2.5735999999998427e-05, 2.588900000000116e-05, 2.6165999999997608e-05, 2.5762999999998093e-05, 2.5943999999999967e-05, 2.5637999999997968e-05, 2.5693999999999717e-05, 2.5957999999999537e-05, 2.6070000000003035e-05, 2.64170000000008e-05, 2.637500000000209e-05, 2.6444000000000467e-05, 2.6027999999997387e-05, 2.6305000000000772e-05, 2.6458000000000037e-05, 2.5735999999998427e-05, 2.5957999999999537e-05, 2.5764000000001036e-05, 2.6333999999999386e-05, 2.6318999999996873e-05, 2.6055000000000522e-05, 2.6264000000001536e-05, 2.588899999999769e-05, 2.593099999999987e-05, 2.618100000000012e-05, 2.5763999999997567e-05, 2.6249999999998497e-05, 2.6042000000000426e-05, 2.563899999999744e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.5847999999998456e-05, 2.5902000000001257e-05, 2.6444000000000467e-05, 2.6402000000001757e-05, 2.6333999999999386e-05, 2.5985999999998677e-05, 2.644499999999994e-05, 2.6082999999999662e-05, 2.60970000000027e-05, 2.5612000000001245e-05, 2.6013000000001812e-05, 2.5764000000001036e-05, 2.5763000000001562e-05, 2.6221999999999357e-05, 2.6360999999999052e-05, 2.5750000000001466e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.948" endtime="20201030 18:31:50.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.944" endtime="20201030 18:31:50.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.955" endtime="20201030 18:31:50.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.954" endtime="20201030 18:31:50.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.953" endtime="20201030 18:31:50.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.594" endtime="20201030 18:31:50.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.594" endtime="20201030 18:31:50.976"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.984" endtime="20201030 18:31:51.002"></status>
</kw>
<msg timestamp="20201030 18:31:51.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.983" endtime="20201030 18:31:51.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.004" endtime="20201030 18:31:51.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.006" endtime="20201030 18:31:51.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.980" endtime="20201030 18:31:51.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.978" endtime="20201030 18:31:51.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.015" endtime="20201030 18:31:51.301"></status>
</kw>
<msg timestamp="20201030 18:31:51.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.013" endtime="20201030 18:31:51.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.305" endtime="20201030 18:31:51.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.314" endtime="20201030 18:31:51.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.011" endtime="20201030 18:31:51.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.009" endtime="20201030 18:31:51.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.321" level="INFO">${RESULT} = [{'diff': 2.6527999999997887e-05}, {'diff': 2.6972000000000107e-05}, {'diff': 2.7083000000000662e-05}, {'diff': 2.7137999999999468e-05}, {'diff': 2.7444000000001467e-05}, {'diff': 2.7110999999999802e-...</msg>
<status status="PASS" starttime="20201030 18:31:51.317" endtime="20201030 18:31:51.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.326" level="INFO">${ACCURACY} = {'diff': [2.6527999999997887e-05, 2.6972000000000107e-05, 2.7083000000000662e-05, 2.7137999999999468e-05, 2.7444000000001467e-05, 2.7110999999999802e-05, 2.6874999999999122e-05, 2.740299999999876e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:51.322" endtime="20201030 18:31:51.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.330" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.329" endtime="20201030 18:31:51.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.332" level="INFO">VALUE: [2.6527999999997887e-05, 2.6972000000000107e-05, 2.7083000000000662e-05, 2.7137999999999468e-05, 2.7444000000001467e-05, 2.7110999999999802e-05, 2.6874999999999122e-05, 2.740299999999876e-05, 2.6888999999998692e-05, 2.6540999999997983e-05, 2.6792000000001176e-05, 2.7055000000001522e-05, 2.7388999999999192e-05, 2.7264000000002536e-05, 2.6943999999997498e-05, 2.7193999999997748e-05, 2.665300000000148e-05, 2.7499999999999747e-05, 2.6958000000000537e-05, 2.7070000000000566e-05, 2.6819000000000842e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.6541999999997457e-05, 2.7013000000002813e-05, 2.7069999999997096e-05, 2.662500000000234e-05, 2.6556000000000496e-05, 2.6597999999999206e-05, 2.7499999999999747e-05, 2.6833999999999886e-05, 2.722299999999983e-05, 2.665300000000148e-05, 2.6985999999999677e-05, 2.6833000000000412e-05, 2.718100000000112e-05, 2.6570000000000066e-05, 2.6804999999997803e-05, 2.7194000000001217e-05, 2.7137999999999468e-05, 2.670899999999976e-05, 2.7319000000001342e-05, 2.6944000000000967e-05, 2.6819000000000842e-05, 2.665300000000148e-05, 2.6958000000000537e-05, 2.6569000000000592e-05, 2.6652000000002007e-05, 2.7277999999998637e-05, 2.6985999999999677e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.331" endtime="20201030 18:31:51.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.326" endtime="20201030 18:31:51.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.337" endtime="20201030 18:31:51.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.336" endtime="20201030 18:31:51.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.335" endtime="20201030 18:31:51.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.977" endtime="20201030 18:31:51.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.976" endtime="20201030 18:31:51.358"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.367" endtime="20201030 18:31:51.385"></status>
</kw>
<msg timestamp="20201030 18:31:51.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.365" endtime="20201030 18:31:51.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.386" endtime="20201030 18:31:51.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.389" endtime="20201030 18:31:51.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.363" endtime="20201030 18:31:51.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.361" endtime="20201030 18:31:51.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.398" endtime="20201030 18:31:51.691"></status>
</kw>
<msg timestamp="20201030 18:31:51.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.396" endtime="20201030 18:31:51.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.701" endtime="20201030 18:31:51.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.719" endtime="20201030 18:31:51.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.394" endtime="20201030 18:31:51.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.392" endtime="20201030 18:31:51.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.733" level="INFO">${RESULT} = [{'diff': 2.7902999999999262e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.7776999999999663e-05}, {'diff': 2.8290999999999733e-05}, {'diff': 2.8068999999998623e-05}, {'diff': 2.8207999999998318e-...</msg>
<status status="PASS" starttime="20201030 18:31:51.726" endtime="20201030 18:31:51.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.742" level="INFO">${ACCURACY} = {'diff': [2.7902999999999262e-05, 2.7680000000002147e-05, 2.7776999999999663e-05, 2.8290999999999733e-05, 2.8068999999998623e-05, 2.8207999999998318e-05, 2.8250000000000497e-05, 2.8443999999998998e-05...</msg>
<status status="PASS" starttime="20201030 18:31:51.735" endtime="20201030 18:31:51.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.751" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.749" endtime="20201030 18:31:51.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.756" level="INFO">VALUE: [2.7902999999999262e-05, 2.7680000000002147e-05, 2.7776999999999663e-05, 2.8290999999999733e-05, 2.8068999999998623e-05, 2.8207999999998318e-05, 2.8250000000000497e-05, 2.8443999999998998e-05, 2.7875000000000122e-05, 2.7568999999998123e-05, 2.7819000000001842e-05, 2.7805000000002272e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.8000000000000247e-05, 2.7957999999998068e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.7722000000000857e-05, 2.7763999999999567e-05, 2.768100000000162e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.8070000000001566e-05, 2.7763999999999567e-05, 2.8389000000000192e-05, 2.822300000000083e-05, 2.818099999999865e-05, 2.845899999999804e-05, 2.820900000000126e-05, 2.793100000000187e-05, 2.7569999999997596e-05, 2.7763999999999567e-05, 2.8083000000001662e-05, 2.8374999999997152e-05, 2.7862000000000026e-05, 2.8000000000000247e-05, 2.8083000000001662e-05, 2.7749999999999997e-05, 2.8402000000000288e-05, 2.8415999999999858e-05, 2.8069000000002092e-05, 2.7597000000000732e-05, 2.8402999999999762e-05, 2.8055999999998527e-05, 2.7777999999999137e-05, 2.8236000000000927e-05, 2.7790999999999233e-05, 2.7652999999999012e-05, 2.8333000000001912e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.753" endtime="20201030 18:31:51.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.743" endtime="20201030 18:31:51.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.766" endtime="20201030 18:31:51.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.763" endtime="20201030 18:31:51.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.761" endtime="20201030 18:31:51.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.359" endtime="20201030 18:31:51.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.359" endtime="20201030 18:31:51.787"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.796" endtime="20201030 18:31:51.815"></status>
</kw>
<msg timestamp="20201030 18:31:51.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.795" endtime="20201030 18:31:51.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.817" endtime="20201030 18:31:51.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.819" endtime="20201030 18:31:51.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.792" endtime="20201030 18:31:51.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.790" endtime="20201030 18:31:51.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.828" endtime="20201030 18:31:52.113"></status>
</kw>
<msg timestamp="20201030 18:31:52.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:51.826" endtime="20201030 18:31:52.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:52.117" endtime="20201030 18:31:52.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.126" endtime="20201030 18:31:52.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.824" endtime="20201030 18:31:52.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.822" endtime="20201030 18:31:52.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.132" level="INFO">${RESULT} = [{'diff': 2.9096999999998763e-05}, {'diff': 2.9471999999999138e-05}, {'diff': 2.9097000000002232e-05}, {'diff': 2.8860999999998083e-05}, {'diff': 2.8916999999999832e-05}, {'diff': 2.9152999999997042e-...</msg>
<status status="PASS" starttime="20201030 18:31:52.129" endtime="20201030 18:31:52.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.137" level="INFO">${ACCURACY} = {'diff': [2.9096999999998763e-05, 2.9471999999999138e-05, 2.9097000000002232e-05, 2.8860999999998083e-05, 2.8916999999999832e-05, 2.9152999999997042e-05, 2.9443999999999998e-05, 2.8708000000002287e-05...</msg>
<status status="PASS" starttime="20201030 18:31:52.133" endtime="20201030 18:31:52.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.143" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.142" endtime="20201030 18:31:52.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.146" level="INFO">VALUE: [2.9096999999998763e-05, 2.9471999999999138e-05, 2.9097000000002232e-05, 2.8860999999998083e-05, 2.8916999999999832e-05, 2.9152999999997042e-05, 2.9443999999999998e-05, 2.8708000000002287e-05, 2.9500000000001747e-05, 2.9528000000000887e-05, 2.9124999999997903e-05, 2.8875000000001122e-05, 2.9124999999997903e-05, 2.89309999999994e-05, 2.89309999999994e-05, 2.8639000000000442e-05, 2.8569999999998597e-05, 2.8903000000000262e-05, 2.9124999999997903e-05, 2.8736000000001427e-05, 2.9083999999998666e-05, 2.9388999999997723e-05, 2.8750000000000997e-05, 2.9153000000000512e-05, 2.9153000000000512e-05, 2.9111000000001802e-05, 2.9055999999999527e-05, 2.8721999999998388e-05, 2.8569999999998597e-05, 2.9250000000001497e-05, 2.8929999999999928e-05, 2.9389000000001192e-05, 2.8707999999998818e-05, 2.8929999999999928e-05, 2.9278000000000637e-05, 2.8944000000002967e-05, 2.9443999999999998e-05, 2.9180000000000178e-05, 2.9055999999999527e-05, 2.9193999999999748e-05, 2.9499999999998278e-05, 2.918099999999965e-05, 2.8736000000001427e-05, 2.9500000000001747e-05, 2.9278000000000637e-05, 2.8624999999997403e-05, 2.9250000000001497e-05, 2.9389000000001192e-05, 2.8555999999999027e-05, 2.9472000000002607e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.144" endtime="20201030 18:31:52.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.138" endtime="20201030 18:31:52.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.151" endtime="20201030 18:31:52.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.150" endtime="20201030 18:31:52.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.149" endtime="20201030 18:31:52.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.788" endtime="20201030 18:31:52.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.788" endtime="20201030 18:31:52.172"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.181" endtime="20201030 18:31:52.198"></status>
</kw>
<msg timestamp="20201030 18:31:52.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.179" endtime="20201030 18:31:52.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.199" endtime="20201030 18:31:52.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.202" endtime="20201030 18:31:52.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.177" endtime="20201030 18:31:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.175" endtime="20201030 18:31:52.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.211" endtime="20201030 18:31:52.497"></status>
</kw>
<msg timestamp="20201030 18:31:52.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.209" endtime="20201030 18:31:52.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.501" endtime="20201030 18:31:52.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.510" endtime="20201030 18:31:52.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.207" endtime="20201030 18:31:52.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.205" endtime="20201030 18:31:52.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.516" level="INFO">${RESULT} = [{'diff': 3.0110999999999333e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 3.0318999999997404e-05}, {'diff': 2.9764000000001567e-05}, {'diff': 3.0055000000001053e-05}, {'diff': 2.9819999999999847e-...</msg>
<status status="PASS" starttime="20201030 18:31:52.513" endtime="20201030 18:31:52.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.524" level="INFO">${ACCURACY} = {'diff': [3.0110999999999333e-05, 2.9624999999998403e-05, 3.0318999999997404e-05, 2.9764000000001567e-05, 3.0055000000001053e-05, 2.9819999999999847e-05, 3.0139000000001942e-05, 2.994499999999997e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:52.517" endtime="20201030 18:31:52.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.528" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.527" endtime="20201030 18:31:52.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.531" level="INFO">VALUE: [3.0110999999999333e-05, 2.9624999999998403e-05, 3.0318999999997404e-05, 2.9764000000001567e-05, 3.0055000000001053e-05, 2.9819999999999847e-05, 3.0139000000001942e-05, 2.994499999999997e-05, 2.9638999999997973e-05, 2.9681000000000152e-05, 2.9583999999999167e-05, 3.0056000000000527e-05, 3.0403000000001762e-05, 3.0138999999998473e-05, 2.970900000000276e-05, 3.0360999999999583e-05, 3.0056000000000527e-05, 3.0320000000000347e-05, 2.967999999999721e-05, 2.9806000000000277e-05, 3.0417000000001332e-05, 2.96379999999985e-05, 3.0499999999999278e-05, 2.9569000000000123e-05, 3.0249999999999028e-05, 3.0333000000000443e-05, 2.9694000000000248e-05, 2.9819000000000373e-05, 2.9625000000001872e-05, 2.9971999999999638e-05, 3.0444000000000998e-05, 3.0402999999998293e-05, 3.0416999999997862e-05, 2.9763999999998098e-05, 3.0070000000000097e-05, 3.0249999999999028e-05, 2.9847000000002982e-05, 2.9681000000000152e-05, 2.9875000000002122e-05, 3.0514000000002317e-05, 2.9652999999997542e-05, 2.9778000000001137e-05, 3.0027999999997917e-05, 3.0167000000001082e-05, 3.0070000000000097e-05, 2.9917000000000832e-05, 3.0513999999998848e-05, 2.9653000000001012e-05, 2.9749999999998528e-05, 2.992999999999746e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.529" endtime="20201030 18:31:52.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.524" endtime="20201030 18:31:52.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.535" endtime="20201030 18:31:52.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.534" endtime="20201030 18:31:52.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.533" endtime="20201030 18:31:52.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.173" endtime="20201030 18:31:52.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.172" endtime="20201030 18:31:52.556"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.565" endtime="20201030 18:31:52.582"></status>
</kw>
<msg timestamp="20201030 18:31:52.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.563" endtime="20201030 18:31:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.583" endtime="20201030 18:31:52.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.586" endtime="20201030 18:31:52.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.561" endtime="20201030 18:31:52.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.558" endtime="20201030 18:31:52.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.595" endtime="20201030 18:31:52.881"></status>
</kw>
<msg timestamp="20201030 18:31:52.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.593" endtime="20201030 18:31:52.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.885" endtime="20201030 18:31:52.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.893" endtime="20201030 18:31:52.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.591" endtime="20201030 18:31:52.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.589" endtime="20201030 18:31:52.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.900" level="INFO">${RESULT} = [{'diff': 3.132000000000135e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.086100000000008e-05}, {'diff': 3.1362000000000056e-05}, {'diff': 3.145900000000104e-05}, {'diff': 3.147300000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:52.896" endtime="20201030 18:31:52.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.904" level="INFO">${ACCURACY} = {'diff': [3.132000000000135e-05, 3.06249999999994e-05, 3.086100000000008e-05, 3.1362000000000056e-05, 3.145900000000104e-05, 3.147300000000061e-05, 3.144500000000147e-05, 3.1012999999999874e-05, 3.133...</msg>
<status status="PASS" starttime="20201030 18:31:52.901" endtime="20201030 18:31:52.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.908" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.907" endtime="20201030 18:31:52.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.911" level="INFO">VALUE: [3.132000000000135e-05, 3.06249999999994e-05, 3.086100000000008e-05, 3.1362000000000056e-05, 3.145900000000104e-05, 3.147300000000061e-05, 3.144500000000147e-05, 3.1012999999999874e-05, 3.133300000000144e-05, 3.11249999999999e-05, 3.093000000000193e-05, 3.150000000000028e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.07639999999991e-05, 3.0750000000003e-05, 3.079200000000171e-05, 3.091599999999889e-05, 3.150000000000028e-05, 3.144500000000147e-05, 3.150000000000028e-05, 3.102800000000239e-05, 3.150000000000028e-05, 3.094500000000097e-05, 3.106900000000162e-05, 3.099999999999978e-05, 3.132000000000135e-05, 3.140299999999929e-05, 3.063899999999897e-05, 3.070900000000029e-05, 3.072299999999986e-05, 3.066699999999811e-05, 3.115299999999904e-05, 3.074999999999953e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.113899999999947e-05, 3.074999999999953e-05, 3.066700000000158e-05, 3.055599999999756e-05, 3.061099999999983e-05, 3.120799999999785e-05, 3.147200000000114e-05, 3.141599999999939e-05, 3.062500000000287e-05, 3.118000000000218e-05, 3.1082999999997724e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.909" endtime="20201030 18:31:52.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.905" endtime="20201030 18:31:52.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.915" endtime="20201030 18:31:52.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.914" endtime="20201030 18:31:52.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.913" endtime="20201030 18:31:52.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.557" endtime="20201030 18:31:52.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.556" endtime="20201030 18:31:52.936"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.945" endtime="20201030 18:31:52.963"></status>
</kw>
<msg timestamp="20201030 18:31:52.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.943" endtime="20201030 18:31:52.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.965" endtime="20201030 18:31:52.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.967" endtime="20201030 18:31:52.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.941" endtime="20201030 18:31:52.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.938" endtime="20201030 18:31:52.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.976" endtime="20201030 18:31:53.283"></status>
</kw>
<msg timestamp="20201030 18:31:53.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.975" endtime="20201030 18:31:53.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.293" endtime="20201030 18:31:53.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.311" endtime="20201030 18:31:53.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.972" endtime="20201030 18:31:53.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.970" endtime="20201030 18:31:53.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.325" level="INFO">${RESULT} = [{'diff': 3.1777000000000194e-05}, {'diff': 3.250000000000128e-05}, {'diff': 3.169400000000225e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.2512999999997905e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:53.318" endtime="20201030 18:31:53.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.334" level="INFO">${ACCURACY} = {'diff': [3.1777000000000194e-05, 3.250000000000128e-05, 3.169400000000225e-05, 3.197200000000164e-05, 3.188900000000022e-05, 3.2512999999997905e-05, 3.16250000000004e-05, 3.192999999999946e-05, 3.186...</msg>
<status status="PASS" starttime="20201030 18:31:53.327" endtime="20201030 18:31:53.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.343" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.341" endtime="20201030 18:31:53.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.349" level="INFO">VALUE: [3.1777000000000194e-05, 3.250000000000128e-05, 3.169400000000225e-05, 3.197200000000164e-05, 3.188900000000022e-05, 3.2512999999997905e-05, 3.16250000000004e-05, 3.192999999999946e-05, 3.1860999999997613e-05, 3.2068999999999154e-05, 3.17640000000001e-05, 3.173599999999749e-05, 3.2318999999999404e-05, 3.163899999999997e-05, 3.152800000000289e-05, 3.217999999999971e-05, 3.19579999999986e-05, 3.180600000000228e-05, 3.247199999999867e-05, 3.231900000000287e-05, 3.231999999999888e-05, 3.225000000000103e-05, 3.1860999999997613e-05, 3.204199999999949e-05, 3.182000000000185e-05, 3.223600000000146e-05, 3.20700000000021e-05, 3.240300000000029e-05, 3.172300000000086e-05, 3.240200000000082e-05, 3.237500000000115e-05, 3.2013000000000874e-05, 3.16250000000004e-05, 3.165200000000007e-05, 3.217999999999971e-05, 3.2276999999997225e-05, 3.2318999999999404e-05, 3.248600000000171e-05, 3.188900000000022e-05, 3.183300000000194e-05, 3.244399999999953e-05, 3.187500000000065e-05, 3.1818999999998904e-05, 3.233300000000244e-05, 3.183400000000142e-05, 3.223600000000146e-05, 3.2304999999999834e-05, 3.231900000000287e-05, 3.193099999999893e-05, 3.205600000000253e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.346" endtime="20201030 18:31:53.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.336" endtime="20201030 18:31:53.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.362" endtime="20201030 18:31:53.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.359" endtime="20201030 18:31:53.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.356" endtime="20201030 18:31:53.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.937" endtime="20201030 18:31:53.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.936" endtime="20201030 18:31:53.384"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.392" endtime="20201030 18:31:53.410"></status>
</kw>
<msg timestamp="20201030 18:31:53.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.391" endtime="20201030 18:31:53.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.411" endtime="20201030 18:31:53.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.414" endtime="20201030 18:31:53.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.388" endtime="20201030 18:31:53.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.386" endtime="20201030 18:31:53.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.423" endtime="20201030 18:31:53.709"></status>
</kw>
<msg timestamp="20201030 18:31:53.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.421" endtime="20201030 18:31:53.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.713" endtime="20201030 18:31:53.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.721" endtime="20201030 18:31:53.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.419" endtime="20201030 18:31:53.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.417" endtime="20201030 18:31:53.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.728" level="INFO">${RESULT} = [{'diff': 3.2762999999998155e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.323600000000246e-05}, {'diff': 3.331999999999988e-05}, {'diff': 3.344400000000053e-05}, {'diff': 3.320799999999985e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:53.725" endtime="20201030 18:31:53.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.733" level="INFO">${ACCURACY} = {'diff': [3.2762999999998155e-05, 3.265300000000054e-05, 3.323600000000246e-05, 3.331999999999988e-05, 3.344400000000053e-05, 3.320799999999985e-05, 3.280599999999981e-05, 3.27779999999972e-05, 3.2818...</msg>
<status status="PASS" starttime="20201030 18:31:53.729" endtime="20201030 18:31:53.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.737" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.736" endtime="20201030 18:31:53.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.740" level="INFO">VALUE: [3.2762999999998155e-05, 3.265300000000054e-05, 3.323600000000246e-05, 3.331999999999988e-05, 3.344400000000053e-05, 3.320799999999985e-05, 3.280599999999981e-05, 3.27779999999972e-05, 3.2818999999999904e-05, 3.299999999999831e-05, 3.338900000000172e-05, 3.318000000000071e-05, 3.270800000000282e-05, 3.319400000000028e-05, 3.254199999999999e-05, 3.316700000000061e-05, 3.275000000000153e-05, 3.297200000000264e-05, 3.269499999999925e-05, 3.319400000000028e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.302800000000092e-05, 3.284700000000251e-05, 3.30839999999992e-05, 3.3388999999998253e-05, 3.343100000000043e-05, 3.3096999999999294e-05, 3.347199999999967e-05, 3.3304999999997364e-05, 3.268000000000021e-05, 3.3096999999999294e-05, 3.3124999999998433e-05, 3.315300000000104e-05, 3.3319000000000404e-05, 3.325000000000203e-05, 3.2568999999999654e-05, 3.297199999999917e-05, 3.301399999999788e-05, 3.350000000000228e-05, 3.3319000000000404e-05, 3.275000000000153e-05, 3.342999999999749e-05, 3.263900000000097e-05, 3.3305000000000834e-05, 3.288900000000122e-05, 3.27640000000011e-05, 3.349999999999881e-05, 3.274999999999806e-05, 3.290300000000079e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.738" endtime="20201030 18:31:53.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.734" endtime="20201030 18:31:53.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.745" endtime="20201030 18:31:53.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.743" endtime="20201030 18:31:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.742" endtime="20201030 18:31:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.384" endtime="20201030 18:31:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.384" endtime="20201030 18:31:53.765"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.774" endtime="20201030 18:31:53.791"></status>
</kw>
<msg timestamp="20201030 18:31:53.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.772" endtime="20201030 18:31:53.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.793" endtime="20201030 18:31:53.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.795" endtime="20201030 18:31:53.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.770" endtime="20201030 18:31:53.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.768" endtime="20201030 18:31:53.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.804" endtime="20201030 18:31:54.092"></status>
</kw>
<msg timestamp="20201030 18:31:54.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.803" endtime="20201030 18:31:54.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.096" endtime="20201030 18:31:54.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.106" endtime="20201030 18:31:54.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.800" endtime="20201030 18:31:54.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.798" endtime="20201030 18:31:54.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.113" level="INFO">${RESULT} = [{'diff': 3.3624999999998934e-05}, {'diff': 3.424999999999956e-05}, {'diff': 3.430599999999784e-05}, {'diff': 3.3888999999998753e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.4445000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:54.110" endtime="20201030 18:31:54.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.118" level="INFO">${ACCURACY} = {'diff': [3.3624999999998934e-05, 3.424999999999956e-05, 3.430599999999784e-05, 3.3888999999998753e-05, 3.419500000000075e-05, 3.4445000000001e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.43470...</msg>
<status status="PASS" starttime="20201030 18:31:54.115" endtime="20201030 18:31:54.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.124" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.123" endtime="20201030 18:31:54.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.126" level="INFO">VALUE: [3.3624999999998934e-05, 3.424999999999956e-05, 3.430599999999784e-05, 3.3888999999998753e-05, 3.419500000000075e-05, 3.4445000000001e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.4347000000000544e-05, 3.447300000000014e-05, 3.433400000000045e-05, 3.423699999999946e-05, 3.382000000000038e-05, 3.3888999999998753e-05, 3.448699999999971e-05, 3.44580000000011e-05, 3.4124999999999434e-05, 3.3804999999997865e-05, 3.420800000000085e-05, 3.392999999999799e-05, 3.395799999999713e-05, 3.413900000000247e-05, 3.4347000000000544e-05, 3.3874999999999184e-05, 3.391600000000189e-05, 3.44580000000011e-05, 3.402800000000192e-05, 3.377800000000167e-05, 3.4319000000001404e-05, 3.4055000000001584e-05, 3.393100000000093e-05, 3.4138999999999003e-05, 3.363900000000197e-05, 3.355600000000056e-05, 3.426399999999913e-05, 3.423699999999946e-05, 3.376399999999863e-05, 3.369499999999678e-05, 3.370899999999982e-05, 3.369500000000025e-05, 3.395900000000007e-05, 3.432000000000088e-05, 3.391599999999842e-05, 3.388900000000222e-05, 3.440199999999935e-05, 3.3874999999999184e-05, 3.3805000000001334e-05, 3.449999999999981e-05, 3.369400000000078e-05, 3.423599999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.125" endtime="20201030 18:31:54.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.119" endtime="20201030 18:31:54.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.131" endtime="20201030 18:31:54.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.130" endtime="20201030 18:31:54.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.128" endtime="20201030 18:31:54.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.766" endtime="20201030 18:31:54.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.766" endtime="20201030 18:31:54.152"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.160" endtime="20201030 18:31:54.179"></status>
</kw>
<msg timestamp="20201030 18:31:54.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.159" endtime="20201030 18:31:54.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.181" endtime="20201030 18:31:54.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.183" endtime="20201030 18:31:54.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.156" endtime="20201030 18:31:54.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.154" endtime="20201030 18:31:54.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.192" endtime="20201030 18:31:54.478"></status>
</kw>
<msg timestamp="20201030 18:31:54.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.190" endtime="20201030 18:31:54.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.482" endtime="20201030 18:31:54.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.490" endtime="20201030 18:31:54.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.188" endtime="20201030 18:31:54.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.186" endtime="20201030 18:31:54.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.497" level="INFO">${RESULT} = [{'diff': 3.5124999999996964e-05}, {'diff': 3.5389000000000254e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.54719999999982e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.473600000000049e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:54.494" endtime="20201030 18:31:54.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.501" level="INFO">${ACCURACY} = {'diff': [3.5124999999996964e-05, 3.5389000000000254e-05, 3.5304999999999365e-05, 3.54719999999982e-05, 3.472200000000092e-05, 3.473600000000049e-05, 3.5041000000003014e-05, 3.5125000000000434e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:54.498" endtime="20201030 18:31:54.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.506" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.505" endtime="20201030 18:31:54.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.508" level="INFO">VALUE: [3.5124999999996964e-05, 3.5389000000000254e-05, 3.5304999999999365e-05, 3.54719999999982e-05, 3.472200000000092e-05, 3.473600000000049e-05, 3.5041000000003014e-05, 3.5125000000000434e-05, 3.5026999999999975e-05, 3.4555000000002084e-05, 3.5333000000001974e-05, 3.4888999999999754e-05, 3.4875000000000184e-05, 3.5083000000001724e-05, 3.491699999999889e-05, 3.520800000000185e-05, 3.545799999999863e-05, 3.4832999999998004e-05, 3.4569000000001654e-05, 3.4833000000001474e-05, 3.5318999999998935e-05, 3.493100000000193e-05, 3.551400000000038e-05, 3.548600000000124e-05, 3.501399999999988e-05, 3.520900000000132e-05, 3.4888999999999754e-05, 3.483400000000095e-05, 3.493099999999846e-05, 3.547300000000114e-05, 3.5040999999999545e-05, 3.500000000000031e-05, 3.493000000000246e-05, 3.4624999999999934e-05, 3.5332999999998504e-05, 3.511200000000034e-05, 3.513800000000053e-05, 3.526400000000013e-05, 3.5277000000000225e-05, 3.4902999999999323e-05, 3.467999999999874e-05, 3.541599999999992e-05, 3.4611000000000364e-05, 3.5125000000000434e-05, 3.54719999999982e-05, 3.552799999999995e-05, 3.524999999999709e-05, 3.467999999999874e-05, 3.5083000000001724e-05, 3.4875000000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.507" endtime="20201030 18:31:54.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.502" endtime="20201030 18:31:54.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.514" endtime="20201030 18:31:54.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.512" endtime="20201030 18:31:54.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.511" endtime="20201030 18:31:54.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.153" endtime="20201030 18:31:54.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.152" endtime="20201030 18:31:54.534"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.543" endtime="20201030 18:31:54.561"></status>
</kw>
<msg timestamp="20201030 18:31:54.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.541" endtime="20201030 18:31:54.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.562" endtime="20201030 18:31:54.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.564" endtime="20201030 18:31:54.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.539" endtime="20201030 18:31:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.537" endtime="20201030 18:31:54.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.573" endtime="20201030 18:31:54.860"></status>
</kw>
<msg timestamp="20201030 18:31:54.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.572" endtime="20201030 18:31:54.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.864" endtime="20201030 18:31:54.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.872" endtime="20201030 18:31:54.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.569" endtime="20201030 18:31:54.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.568" endtime="20201030 18:31:54.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.879" level="INFO">${RESULT} = [{'diff': 3.6055000000000115e-05}, {'diff': 3.5916999999999893e-05}, {'diff': 3.6139000000001004e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.5653000000000074e-05}, {'diff': 3.6166999999996674e-...</msg>
<status status="PASS" starttime="20201030 18:31:54.876" endtime="20201030 18:31:54.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.884" level="INFO">${ACCURACY} = {'diff': [3.6055000000000115e-05, 3.5916999999999893e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.5653000000000074e-05, 3.6166999999996674e-05, 3.6375000000001684e-05, 3.6068999999999685e-05...</msg>
<status status="PASS" starttime="20201030 18:31:54.880" endtime="20201030 18:31:54.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.888" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.887" endtime="20201030 18:31:54.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.891" level="INFO">VALUE: [3.6055000000000115e-05, 3.5916999999999893e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.5653000000000074e-05, 3.6166999999996674e-05, 3.6375000000001684e-05, 3.6068999999999685e-05, 3.576399999999716e-05, 3.598600000000174e-05, 3.62780000000007e-05, 3.6083000000002724e-05, 3.575000000000106e-05, 3.6416999999996924e-05, 3.631999999999941e-05, 3.575000000000106e-05, 3.5638999999997034e-05, 3.5790999999996825e-05, 3.600000000000131e-05, 3.6430999999999963e-05, 3.5889000000000754e-05, 3.6139000000001004e-05, 3.580599999999934e-05, 3.569399999999931e-05, 3.6096999999998824e-05, 3.5777000000000725e-05, 3.6374999999998214e-05, 3.6139000000001004e-05, 3.5804999999999865e-05, 3.5583000000002224e-05, 3.6139000000001004e-05, 3.576400000000063e-05, 3.64589999999991e-05, 3.649999999999834e-05, 3.650000000000181e-05, 3.5903000000000324e-05, 3.5875000000001184e-05, 3.576399999999716e-05, 3.6375000000001684e-05, 3.6153000000000574e-05, 3.6347000000002544e-05, 3.623599999999852e-05, 3.649999999999834e-05, 3.57780000000002e-05, 3.623599999999852e-05, 3.633399999999898e-05, 3.599999999999784e-05, 3.630599999999984e-05, 3.5777000000000725e-05, 3.56520000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.889" endtime="20201030 18:31:54.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.885" endtime="20201030 18:31:54.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.896" endtime="20201030 18:31:54.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.894" endtime="20201030 18:31:54.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.893" endtime="20201030 18:31:54.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.535" endtime="20201030 18:31:54.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.535" endtime="20201030 18:31:54.916"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.925" endtime="20201030 18:31:54.942"></status>
</kw>
<msg timestamp="20201030 18:31:54.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.923" endtime="20201030 18:31:54.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.944" endtime="20201030 18:31:54.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.946" endtime="20201030 18:31:54.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.921" endtime="20201030 18:31:54.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.919" endtime="20201030 18:31:54.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.955" endtime="20201030 18:31:55.242"></status>
</kw>
<msg timestamp="20201030 18:31:55.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019438653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.953" endtime="20201030 18:31:55.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019438653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.246" endtime="20201030 18:31:55.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.254" endtime="20201030 18:31:55.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.951" endtime="20201030 18:31:55.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.949" endtime="20201030 18:31:55.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.261" level="INFO">${RESULT} = [{'diff': 3.680600000000034e-05}, {'diff': 3.7195000000000283e-05}, {'diff': 3.7195000000000283e-05}, {'diff': 3.676400000000163e-05}, {'diff': 3.7389000000002254e-05}, {'diff': 3.670899999999935e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:55.258" endtime="20201030 18:31:55.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.265" level="INFO">${ACCURACY} = {'diff': [3.680600000000034e-05, 3.7195000000000283e-05, 3.7195000000000283e-05, 3.676400000000163e-05, 3.7389000000002254e-05, 3.670899999999935e-05, 3.749999999999934e-05, 3.6625000000001934e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:55.262" endtime="20201030 18:31:55.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.269" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.268" endtime="20201030 18:31:55.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.272" level="INFO">VALUE: [3.680600000000034e-05, 3.7195000000000283e-05, 3.7195000000000283e-05, 3.676400000000163e-05, 3.7389000000002254e-05, 3.670899999999935e-05, 3.749999999999934e-05, 3.6625000000001934e-05, 3.71520000000021e-05, 3.724999999999909e-05, 3.738799999999931e-05, 3.730599999999737e-05, 3.7319000000000935e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6541000000001045e-05, 3.74720000000002e-05, 3.742999999999802e-05, 3.7374999999999214e-05, 3.679200000000077e-05, 3.702799999999798e-05, 3.670799999999988e-05, 3.720800000000038e-05, 3.6681000000000213e-05, 3.724999999999909e-05, 3.722199999999995e-05, 3.702800000000145e-05, 3.669499999999978e-05, 3.698599999999927e-05, 3.69589999999996e-05, 3.7445000000000533e-05, 3.6902999999997854e-05, 3.702800000000145e-05, 3.704199999999755e-05, 3.7195000000000283e-05, 3.7291000000001795e-05, 3.7445000000000533e-05, 3.7124999999998964e-05, 3.659800000000227e-05, 3.702799999999798e-05, 3.751399999999891e-05, 3.6889000000001754e-05, 3.7388999999998784e-05, 3.7318999999997465e-05, 3.674999999999859e-05, 3.750000000000281e-05, 3.7083000000000255e-05, 3.6639000000001504e-05, 3.6819000000000435e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.270" endtime="20201030 18:31:55.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.266" endtime="20201030 18:31:55.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.277" endtime="20201030 18:31:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.275" endtime="20201030 18:31:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.274" endtime="20201030 18:31:55.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.917" endtime="20201030 18:31:55.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.917" endtime="20201030 18:31:55.297"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.306" endtime="20201030 18:31:55.326"></status>
</kw>
<msg timestamp="20201030 18:31:55.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.304" endtime="20201030 18:31:55.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.328" endtime="20201030 18:31:55.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.330" endtime="20201030 18:31:55.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.302" endtime="20201030 18:31:55.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.300" endtime="20201030 18:31:55.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.339" endtime="20201030 18:31:55.640"></status>
</kw>
<msg timestamp="20201030 18:31:55.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.337" endtime="20201030 18:31:55.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.644" endtime="20201030 18:31:55.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.652" endtime="20201030 18:31:55.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.335" endtime="20201030 18:31:55.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.333" endtime="20201030 18:31:55.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.659" level="INFO">${RESULT} = [{'diff': 3.795800000000113e-05}, {'diff': 3.77780000000022e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.848600000000077e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.7958999999997134e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:55.656" endtime="20201030 18:31:55.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.663" level="INFO">${ACCURACY} = {'diff': [3.795800000000113e-05, 3.77780000000022e-05, 3.7874999999999714e-05, 3.848600000000077e-05, 3.826399999999966e-05, 3.7958999999997134e-05, 3.79590000000006e-05, 3.757000000000066e-05, 3.8263...</msg>
<status status="PASS" starttime="20201030 18:31:55.660" endtime="20201030 18:31:55.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.668" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.667" endtime="20201030 18:31:55.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.671" level="INFO">VALUE: [3.795800000000113e-05, 3.77780000000022e-05, 3.7874999999999714e-05, 3.848600000000077e-05, 3.826399999999966e-05, 3.7958999999997134e-05, 3.79590000000006e-05, 3.757000000000066e-05, 3.826399999999966e-05, 3.8138999999999534e-05, 3.813800000000006e-05, 3.8083000000001255e-05, 3.7610999999999895e-05, 3.770799999999741e-05, 3.7653000000002074e-05, 3.825000000000009e-05, 3.7818999999997965e-05, 3.7624999999999464e-05, 3.8388999999999784e-05, 3.794400000000156e-05, 3.776399999999916e-05, 3.802800000000245e-05, 3.7931000000001464e-05, 3.7861000000000145e-05, 3.822199999999748e-05, 3.7930999999997994e-05, 3.8138999999999534e-05, 3.830599999999837e-05, 3.826399999999966e-05, 3.801400000000288e-05, 3.8152999999999104e-05, 3.780600000000134e-05, 3.8444999999998064e-05, 3.770900000000035e-05, 3.758400000000023e-05, 3.841599999999945e-05, 3.8458999999997634e-05, 3.831999999999794e-05, 3.813800000000006e-05, 3.769399999999784e-05, 3.795800000000113e-05, 3.81659999999992e-05, 3.802800000000245e-05, 3.7568999999997715e-05, 3.7583000000000755e-05, 3.825000000000009e-05, 3.752800000000195e-05, 3.7916999999998424e-05, 3.845800000000163e-05, 3.851399999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.670" endtime="20201030 18:31:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.664" endtime="20201030 18:31:55.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.677" endtime="20201030 18:31:55.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.675" endtime="20201030 18:31:55.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.674" endtime="20201030 18:31:55.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.298" endtime="20201030 18:31:55.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.298" endtime="20201030 18:31:55.698"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.707" endtime="20201030 18:31:55.724"></status>
</kw>
<msg timestamp="20201030 18:31:55.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.705" endtime="20201030 18:31:55.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.726" endtime="20201030 18:31:55.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.728" endtime="20201030 18:31:55.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.703" endtime="20201030 18:31:55.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.700" endtime="20201030 18:31:55.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.738" endtime="20201030 18:31:56.024"></status>
</kw>
<msg timestamp="20201030 18:31:56.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.736" endtime="20201030 18:31:56.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.028" endtime="20201030 18:31:56.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.037" endtime="20201030 18:31:56.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.733" endtime="20201030 18:31:56.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.732" endtime="20201030 18:31:56.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.044" level="INFO">${RESULT} = [{'diff': 3.9555000000000146e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.8916999999999424e-05}, {'diff': 3.8763000000000686e-05}, {'diff': 3.9458999999998634e-05}, {'diff': 3.870799999999841e-0...</msg>
<status status="PASS" starttime="20201030 18:31:56.040" endtime="20201030 18:31:56.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.051" level="INFO">${ACCURACY} = {'diff': [3.9555000000000146e-05, 3.8902999999999854e-05, 3.8916999999999424e-05, 3.8763000000000686e-05, 3.9458999999998634e-05, 3.870799999999841e-05, 3.8931000000002464e-05, 3.9082999999998785e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:56.045" endtime="20201030 18:31:56.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.056" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.055" endtime="20201030 18:31:56.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.059" level="INFO">VALUE: [3.9555000000000146e-05, 3.8902999999999854e-05, 3.8916999999999424e-05, 3.8763000000000686e-05, 3.9458999999998634e-05, 3.870799999999841e-05, 3.8931000000002464e-05, 3.9082999999998785e-05, 3.9041000000000076e-05, 3.943000000000002e-05, 3.8916999999999424e-05, 3.894399999999909e-05, 3.876399999999669e-05, 3.870799999999841e-05, 3.8639000000000034e-05, 3.943000000000002e-05, 3.9304999999999896e-05, 3.900000000000084e-05, 3.854200000000252e-05, 3.8902999999999854e-05, 3.876400000000016e-05, 3.8832999999998535e-05, 3.8639000000000034e-05, 3.925000000000109e-05, 3.9318999999999465e-05, 3.9138999999997065e-05, 3.877799999999973e-05, 3.933399999999851e-05, 3.898600000000127e-05, 3.8695000000001784e-05, 3.858400000000123e-05, 3.930599999999937e-05, 3.8832999999998535e-05, 3.9291000000000326e-05, 3.8680999999998744e-05, 3.9304999999999896e-05, 3.873600000000102e-05, 3.943000000000002e-05, 3.876400000000016e-05, 3.927800000000023e-05, 3.876400000000016e-05, 3.870799999999841e-05, 3.8554999999999146e-05, 3.9388999999997315e-05, 3.944399999999959e-05, 3.9389000000000784e-05, 3.9459000000002104e-05, 3.9068999999999215e-05, 3.8568999999998715e-05, 3.8762999999997216e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.057" endtime="20201030 18:31:56.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.052" endtime="20201030 18:31:56.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.064" endtime="20201030 18:31:56.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.062" endtime="20201030 18:31:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.061" endtime="20201030 18:31:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.699" endtime="20201030 18:31:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.698" endtime="20201030 18:31:56.084"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.094" endtime="20201030 18:31:56.112"></status>
</kw>
<msg timestamp="20201030 18:31:56.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.092" endtime="20201030 18:31:56.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.113" endtime="20201030 18:31:56.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.116" endtime="20201030 18:31:56.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.089" endtime="20201030 18:31:56.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.087" endtime="20201030 18:31:56.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.125" endtime="20201030 18:31:56.413"></status>
</kw>
<msg timestamp="20201030 18:31:56.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.124" endtime="20201030 18:31:56.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.417" endtime="20201030 18:31:56.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.426" endtime="20201030 18:31:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.121" endtime="20201030 18:31:56.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.119" endtime="20201030 18:31:56.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.432" level="INFO">${RESULT} = [{'diff': 3.974999999999812e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.0431000000000494e-05}, {'diff': 4.0431000000000494e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.9944999999999564e-0...</msg>
<status status="PASS" starttime="20201030 18:31:56.429" endtime="20201030 18:31:56.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.437" level="INFO">${ACCURACY} = {'diff': [3.974999999999812e-05, 4.0167000000000674e-05, 4.0431000000000494e-05, 4.0431000000000494e-05, 3.9639000000001035e-05, 3.9944999999999564e-05, 4.0181000000000244e-05, 4.052800000000148e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:56.433" endtime="20201030 18:31:56.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.441" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.440" endtime="20201030 18:31:56.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.444" level="INFO">VALUE: [3.974999999999812e-05, 4.0167000000000674e-05, 4.0431000000000494e-05, 4.0431000000000494e-05, 3.9639000000001035e-05, 3.9944999999999564e-05, 4.0181000000000244e-05, 4.052800000000148e-05, 3.9694999999999314e-05, 3.9708999999998884e-05, 3.9888999999997815e-05, 3.993000000000052e-05, 3.9791000000000826e-05, 4.000000000000184e-05, 4.0389000000001785e-05, 4.044400000000059e-05, 3.9945000000003034e-05, 4.0082999999999785e-05, 3.9555000000000146e-05, 3.9652999999997135e-05, 3.95980000000018e-05, 3.9583000000002755e-05, 3.9903000000000854e-05, 3.9875000000001715e-05, 3.956999999999919e-05, 4.002800000000098e-05, 4.026400000000166e-05, 4.0167000000000674e-05, 3.9847000000002575e-05, 4.0125000000001965e-05, 4.033399999999951e-05, 3.9639000000001035e-05, 4.000000000000184e-05, 3.954200000000005e-05, 4.008399999999926e-05, 4.033399999999951e-05, 4.047199999999973e-05, 3.9804999999996926e-05, 3.986200000000162e-05, 4.0139000000001535e-05, 4.051400000000191e-05, 4.018000000000077e-05, 4.0541000000001576e-05, 3.9917000000000424e-05, 4.000000000000184e-05, 4.019400000000034e-05, 4.024999999999862e-05, 4.0069000000000216e-05, 4.004200000000055e-05, 4.051400000000191e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.443" endtime="20201030 18:31:56.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.438" endtime="20201030 18:31:56.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.449" endtime="20201030 18:31:56.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.447" endtime="20201030 18:31:56.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.446" endtime="20201030 18:31:56.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.085" endtime="20201030 18:31:56.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.085" endtime="20201030 18:31:56.470"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.479" endtime="20201030 18:31:56.498"></status>
</kw>
<msg timestamp="20201030 18:31:56.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.477" endtime="20201030 18:31:56.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.500" endtime="20201030 18:31:56.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.502" endtime="20201030 18:31:56.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.475" endtime="20201030 18:31:56.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.472" endtime="20201030 18:31:56.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.512" endtime="20201030 18:31:56.798"></status>
</kw>
<msg timestamp="20201030 18:31:56.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020928597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.510" endtime="20201030 18:31:56.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020928597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.802" endtime="20201030 18:31:56.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.811" endtime="20201030 18:31:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.508" endtime="20201030 18:31:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.506" endtime="20201030 18:31:56.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.818" level="INFO">${RESULT} = [{'diff': 4.108400000000026e-05}, {'diff': 4.115199999999916e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.144400000000159e-05}, {'diff': 4.074999999999912e-05}, {'diff': 4.0652999999998135e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:56.814" endtime="20201030 18:31:56.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.822" level="INFO">${ACCURACY} = {'diff': [4.108400000000026e-05, 4.115199999999916e-05, 4.09859999999998e-05, 4.144400000000159e-05, 4.074999999999912e-05, 4.0652999999998135e-05, 4.126399999999919e-05, 4.0624999999998995e-05, 4.105...</msg>
<status status="PASS" starttime="20201030 18:31:56.819" endtime="20201030 18:31:56.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.827" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.826" endtime="20201030 18:31:56.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.829" level="INFO">VALUE: [4.108400000000026e-05, 4.115199999999916e-05, 4.09859999999998e-05, 4.144400000000159e-05, 4.074999999999912e-05, 4.0652999999998135e-05, 4.126399999999919e-05, 4.0624999999998995e-05, 4.1054999999998176e-05, 4.1124999999999495e-05, 4.070800000000041e-05, 4.073599999999955e-05, 4.1333000000001036e-05, 4.101399999999894e-05, 4.0888999999998815e-05, 4.0681000000000744e-05, 4.126399999999919e-05, 4.0917000000001424e-05, 4.0889000000002285e-05, 4.1459000000000634e-05, 4.1458999999997165e-05, 4.0694999999996845e-05, 4.1110999999999925e-05, 4.1444999999997595e-05, 4.132000000000094e-05, 4.065199999999866e-05, 4.0874999999999245e-05, 4.090199999999891e-05, 4.101399999999894e-05, 4.14860000000003e-05, 4.1459000000000634e-05, 4.0610999999999425e-05, 4.0860999999999675e-05, 4.145799999999769e-05, 4.126399999999919e-05, 4.0569000000000716e-05, 4.1124999999999495e-05, 4.080600000000087e-05, 4.102799999999851e-05, 4.1124999999999495e-05, 4.1012999999999467e-05, 4.0903000000001855e-05, 4.107000000000069e-05, 4.130600000000137e-05, 4.101399999999894e-05, 4.1388999999999315e-05, 4.107000000000069e-05, 4.083400000000001e-05, 4.1138999999999065e-05, 4.082000000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.828" endtime="20201030 18:31:56.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.823" endtime="20201030 18:31:56.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.835" endtime="20201030 18:31:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.834" endtime="20201030 18:31:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.832" endtime="20201030 18:31:56.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.471" endtime="20201030 18:31:56.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.470" endtime="20201030 18:31:56.856"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.865" endtime="20201030 18:31:56.884"></status>
</kw>
<msg timestamp="20201030 18:31:56.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.863" endtime="20201030 18:31:56.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.885" endtime="20201030 18:31:56.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.888" endtime="20201030 18:31:56.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.861" endtime="20201030 18:31:56.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.859" endtime="20201030 18:31:56.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.897" endtime="20201030 18:31:57.184"></status>
</kw>
<msg timestamp="20201030 18:31:57.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.896" endtime="20201030 18:31:57.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.188" endtime="20201030 18:31:57.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.197" endtime="20201030 18:31:57.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.893" endtime="20201030 18:31:57.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.891" endtime="20201030 18:31:57.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.204" level="INFO">${RESULT} = [{'diff': 4.172199999999751e-05}, {'diff': 4.220799999999844e-05}, {'diff': 4.2402999999999885e-05}, {'diff': 4.2416999999999455e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.2124999999997026e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:57.200" endtime="20201030 18:31:57.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.209" level="INFO">${ACCURACY} = {'diff': [4.172199999999751e-05, 4.220799999999844e-05, 4.2402999999999885e-05, 4.2416999999999455e-05, 4.158400000000076e-05, 4.2124999999997026e-05, 4.223600000000105e-05, 4.251400000000044e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:31:57.205" endtime="20201030 18:31:57.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.214" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.212" endtime="20201030 18:31:57.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.216" level="INFO">VALUE: [4.172199999999751e-05, 4.220799999999844e-05, 4.2402999999999885e-05, 4.2416999999999455e-05, 4.158400000000076e-05, 4.2124999999997026e-05, 4.223600000000105e-05, 4.251400000000044e-05, 4.2180999999998775e-05, 4.1902999999999385e-05, 4.225000000000062e-05, 4.183399999999754e-05, 4.229199999999933e-05, 4.2152999999999635e-05, 4.2375000000000745e-05, 4.1847000000001106e-05, 4.1819000000001966e-05, 4.220799999999844e-05, 4.229199999999933e-05, 4.1638999999999565e-05, 4.247200000000173e-05, 4.1652999999999135e-05, 4.242999999999955e-05, 4.1624999999999995e-05, 4.2111000000000925e-05, 4.194400000000209e-05, 4.194399999999862e-05, 4.1624999999999995e-05, 4.1875000000000245e-05, 4.170799999999794e-05, 4.226400000000019e-05, 4.2402999999999885e-05, 4.2152999999999635e-05, 4.173600000000055e-05, 4.175000000000012e-05, 4.1569000000001716e-05, 4.179199999999883e-05, 4.155599999999815e-05, 4.207000000000169e-05, 4.205599999999865e-05, 4.176399999999969e-05, 4.2554999999999676e-05, 4.163800000000009e-05, 4.2125000000000495e-05, 4.1568999999998246e-05, 4.241599999999998e-05, 4.170799999999794e-05, 4.1818999999998496e-05, 4.16799999999988e-05, 4.1875000000000245e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.215" endtime="20201030 18:31:57.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.210" endtime="20201030 18:31:57.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.221" endtime="20201030 18:31:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.220" endtime="20201030 18:31:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.219" endtime="20201030 18:31:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.857" endtime="20201030 18:31:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.856" endtime="20201030 18:31:57.242"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.251" endtime="20201030 18:31:57.269"></status>
</kw>
<msg timestamp="20201030 18:31:57.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.250" endtime="20201030 18:31:57.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.270" endtime="20201030 18:31:57.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.273" endtime="20201030 18:31:57.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.247" endtime="20201030 18:31:57.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.245" endtime="20201030 18:31:57.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.282" endtime="20201030 18:31:57.570"></status>
</kw>
<msg timestamp="20201030 18:31:57.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.281" endtime="20201030 18:31:57.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.574" endtime="20201030 18:31:57.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.583" endtime="20201030 18:31:57.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.278" endtime="20201030 18:31:57.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.276" endtime="20201030 18:31:57.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.590" level="INFO">${RESULT} = [{'diff': 4.319400000000334e-05}, {'diff': 4.301400000000094e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.301399999999747e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.3318999999999996e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:57.586" endtime="20201030 18:31:57.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.594" level="INFO">${ACCURACY} = {'diff': [4.319400000000334e-05, 4.301400000000094e-05, 4.3110999999998456e-05, 4.301399999999747e-05, 4.325000000000162e-05, 4.3318999999999996e-05, 4.281999999999897e-05, 4.3124999999998026e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:31:57.591" endtime="20201030 18:31:57.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.599" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.598" endtime="20201030 18:31:57.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.601" level="INFO">VALUE: [4.319400000000334e-05, 4.301400000000094e-05, 4.3110999999998456e-05, 4.301399999999747e-05, 4.325000000000162e-05, 4.3318999999999996e-05, 4.281999999999897e-05, 4.3124999999998026e-05, 4.3431000000000025e-05, 4.3444999999999595e-05, 4.274999999999765e-05, 4.304200000000008e-05, 4.2888999999997346e-05, 4.308399999999879e-05, 4.2944999999999095e-05, 4.255599999999915e-05, 4.2708999999998415e-05, 4.344400000000012e-05, 4.2833000000002536e-05, 4.3374999999998276e-05, 4.3068999999999746e-05, 4.3318999999999996e-05, 4.304099999999714e-05, 4.3305000000000426e-05, 4.293000000000005e-05, 4.2639000000000565e-05, 4.300000000000137e-05, 4.2832999999999066e-05, 4.2653000000000135e-05, 4.3318999999999996e-05, 4.319399999999987e-05, 4.350000000000187e-05, 4.272199999999851e-05, 4.254199999999958e-05, 4.259800000000133e-05, 4.2625000000000995e-05, 4.2708999999998415e-05, 4.3194999999999345e-05, 4.284800000000158e-05, 4.3125000000001495e-05, 4.33059999999999e-05, 4.350000000000187e-05, 4.3139000000001065e-05, 4.347199999999926e-05, 4.294399999999962e-05, 4.341600000000098e-05, 4.275000000000112e-05, 4.2625000000000995e-05, 4.2555000000003146e-05, 4.2818999999999496e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.600" endtime="20201030 18:31:57.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.595" endtime="20201030 18:31:57.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.606" endtime="20201030 18:31:57.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.605" endtime="20201030 18:31:57.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.604" endtime="20201030 18:31:57.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.243" endtime="20201030 18:31:57.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.243" endtime="20201030 18:31:57.627"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.636" endtime="20201030 18:31:57.655"></status>
</kw>
<msg timestamp="20201030 18:31:57.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.635" endtime="20201030 18:31:57.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.657" endtime="20201030 18:31:57.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.660" endtime="20201030 18:31:57.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.632" endtime="20201030 18:31:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.630" endtime="20201030 18:31:57.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.669" endtime="20201030 18:31:57.955"></status>
</kw>
<msg timestamp="20201030 18:31:57.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021070444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021113986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.667" endtime="20201030 18:31:57.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021070444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021113986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.960" endtime="20201030 18:31:57.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.968" endtime="20201030 18:31:57.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.665" endtime="20201030 18:31:57.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.663" endtime="20201030 18:31:57.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.975" level="INFO">${RESULT} = [{'diff': 4.354200000000058e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.3888999999998346e-05}, {'diff': 4.376399999999822e-05}, {'diff': 4.3902999999997916e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:57.972" endtime="20201030 18:31:57.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.979" level="INFO">${ACCURACY} = {'diff': [4.354200000000058e-05, 4.448599999999983e-05, 4.369400000000037e-05, 4.3888999999998346e-05, 4.376399999999822e-05, 4.3902999999997916e-05, 4.424999999999915e-05, 4.420800000000044e-05, 4.41...</msg>
<status status="PASS" starttime="20201030 18:31:57.976" endtime="20201030 18:31:57.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.984" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.983" endtime="20201030 18:31:57.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.987" level="INFO">VALUE: [4.354200000000058e-05, 4.448599999999983e-05, 4.369400000000037e-05, 4.3888999999998346e-05, 4.376399999999822e-05, 4.3902999999997916e-05, 4.424999999999915e-05, 4.420800000000044e-05, 4.4153000000001635e-05, 4.4360999999999706e-05, 4.377800000000126e-05, 4.4459000000000165e-05, 4.394400000000062e-05, 4.4389000000002315e-05, 4.3889000000001815e-05, 4.423600000000305e-05, 4.370799999999994e-05, 4.422200000000001e-05, 4.3737000000002024e-05, 4.4124999999999026e-05, 4.404100000000161e-05, 4.379099999999789e-05, 4.4319000000000996e-05, 4.400000000000237e-05, 4.377800000000126e-05, 4.4110999999999456e-05, 4.404199999999761e-05, 4.434699999999667e-05, 4.419400000000087e-05, 4.376399999999822e-05, 4.4403000000001885e-05, 4.3582999999999816e-05, 4.405600000000065e-05, 4.395800000000019e-05, 4.407000000000022e-05, 4.408399999999979e-05, 4.401400000000194e-05, 4.4445000000000595e-05, 4.425000000000262e-05, 4.3694999999999845e-05, 4.448599999999983e-05, 4.390199999999844e-05, 4.415199999999869e-05, 4.3833000000000066e-05, 4.3819000000000496e-05, 4.426399999999872e-05, 4.445799999999722e-05, 4.3582999999999816e-05, 4.376399999999822e-05, 4.369400000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.985" endtime="20201030 18:31:57.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.980" endtime="20201030 18:31:57.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.993" endtime="20201030 18:31:58.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.991" endtime="20201030 18:31:58.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.990" endtime="20201030 18:31:58.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.628" endtime="20201030 18:31:58.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.628" endtime="20201030 18:31:58.013"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.022" endtime="20201030 18:31:58.041"></status>
</kw>
<msg timestamp="20201030 18:31:58.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.021" endtime="20201030 18:31:58.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.042" endtime="20201030 18:31:58.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.045" endtime="20201030 18:31:58.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.018" endtime="20201030 18:31:58.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.016" endtime="20201030 18:31:58.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.054" endtime="20201030 18:31:58.341"></status>
</kw>
<msg timestamp="20201030 18:31:58.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.053" endtime="20201030 18:31:58.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.345" endtime="20201030 18:31:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.354" endtime="20201030 18:31:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.050" endtime="20201030 18:31:58.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.048" endtime="20201030 18:31:58.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.360" level="INFO">${RESULT} = [{'diff': 4.4861000000000206e-05}, {'diff': 4.5473000000000735e-05}, {'diff': 4.4931000000001525e-05}, {'diff': 4.541599999999951e-05}, {'diff': 4.481899999999803e-05}, {'diff': 4.5111000000000456e-05...</msg>
<status status="PASS" starttime="20201030 18:31:58.357" endtime="20201030 18:31:58.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.366" level="INFO">${ACCURACY} = {'diff': [4.4861000000000206e-05, 4.5473000000000735e-05, 4.4931000000001525e-05, 4.541599999999951e-05, 4.481899999999803e-05, 4.5111000000000456e-05, 4.4624999999999526e-05, 4.5333000000001566e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:58.362" endtime="20201030 18:31:58.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.370" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.369" endtime="20201030 18:31:58.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.373" level="INFO">VALUE: [4.4861000000000206e-05, 4.5473000000000735e-05, 4.4931000000001525e-05, 4.541599999999951e-05, 4.481899999999803e-05, 4.5111000000000456e-05, 4.4624999999999526e-05, 4.5333000000001566e-05, 4.49999999999999e-05, 4.495799999999772e-05, 4.4610999999999956e-05, 4.5097000000000886e-05, 4.4833000000001066e-05, 4.49999999999999e-05, 4.530499999999896e-05, 4.545799999999822e-05, 4.5097000000000886e-05, 4.5195000000001345e-05, 4.4944999999997626e-05, 4.4737000000003024e-05, 4.456999999999725e-05, 4.527799999999929e-05, 4.484799999999664e-05, 4.4931000000001525e-05, 4.5445000000001595e-05, 4.4888999999999346e-05, 4.547200000000126e-05, 4.5319000000001997e-05, 4.49999999999999e-05, 4.540199999999994e-05, 4.473600000000008e-05, 4.4597000000000386e-05, 4.5402999999999416e-05, 4.547200000000126e-05, 4.508400000000079e-05, 4.4819000000001497e-05, 4.536099999999724e-05, 4.527799999999929e-05, 4.508299999999785e-05, 4.473600000000008e-05, 4.509699999999742e-05, 4.501399999999947e-05, 4.455599999999768e-05, 4.555599999999868e-05, 4.5459000000001165e-05, 4.5459000000001165e-05, 4.5472999999997266e-05, 4.5388999999999846e-05, 4.49999999999999e-05, 4.5430999999998556e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.371" endtime="20201030 18:31:58.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.367" endtime="20201030 18:31:58.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.383" endtime="20201030 18:31:58.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.381" endtime="20201030 18:31:58.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.380" endtime="20201030 18:31:58.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.014" endtime="20201030 18:31:58.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.014" endtime="20201030 18:31:58.404"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.413" endtime="20201030 18:31:58.431"></status>
</kw>
<msg timestamp="20201030 18:31:58.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.411" endtime="20201030 18:31:58.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.433" endtime="20201030 18:31:58.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.436" endtime="20201030 18:31:58.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.408" endtime="20201030 18:31:58.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.406" endtime="20201030 18:31:58.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.445" endtime="20201030 18:31:58.733"></status>
</kw>
<msg timestamp="20201030 18:31:58.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.444" endtime="20201030 18:31:58.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.738" endtime="20201030 18:31:58.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.746" endtime="20201030 18:31:58.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.441" endtime="20201030 18:31:58.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.439" endtime="20201030 18:31:58.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.753" level="INFO">${RESULT} = [{'diff': 4.648599999999836e-05}, {'diff': 4.651400000000097e-05}, {'diff': 4.5709000000001415e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.576400000000022e-05}, {'diff': 4.65139999999975e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:58.750" endtime="20201030 18:31:58.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.757" level="INFO">${ACCURACY} = {'diff': [4.648599999999836e-05, 4.651400000000097e-05, 4.5709000000001415e-05, 4.5611000000000956e-05, 4.576400000000022e-05, 4.65139999999975e-05, 4.6194999999998876e-05, 4.5680999999998806e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 18:31:58.754" endtime="20201030 18:31:58.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.762" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.761" endtime="20201030 18:31:58.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.764" level="INFO">VALUE: [4.648599999999836e-05, 4.651400000000097e-05, 4.5709000000001415e-05, 4.5611000000000956e-05, 4.576400000000022e-05, 4.65139999999975e-05, 4.6194999999998876e-05, 4.5680999999998806e-05, 4.595800000000219e-05, 4.584699999999817e-05, 4.6125000000001026e-05, 4.6222999999998016e-05, 4.633400000000204e-05, 4.58199999999985e-05, 4.6459000000002165e-05, 4.60000000000009e-05, 4.626400000000072e-05, 4.644400000000312e-05, 4.567999999999933e-05, 4.594399999999915e-05, 4.575000000000065e-05, 4.5652999999999666e-05, 4.5916999999999486e-05, 4.5666999999999236e-05, 4.5583000000001817e-05, 4.58329999999986e-05, 4.6319000000003e-05, 4.602800000000004e-05, 4.644399999999965e-05, 4.575000000000065e-05, 4.624999999999768e-05, 4.602800000000004e-05, 4.5916999999999486e-05, 4.605600000000265e-05, 4.626399999999725e-05, 4.558400000000129e-05, 4.576399999999675e-05, 4.634800000000161e-05, 4.601400000000047e-05, 4.573599999999761e-05, 4.634699999999867e-05, 4.626299999999778e-05, 4.645799999999922e-05, 4.597199999999829e-05, 4.588800000000087e-05, 4.5652999999999666e-05, 4.576400000000022e-05, 4.592999999999958e-05, 4.611099999999799e-05, 4.575000000000065e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.763" endtime="20201030 18:31:58.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.758" endtime="20201030 18:31:58.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.770" endtime="20201030 18:31:58.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.768" endtime="20201030 18:31:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.767" endtime="20201030 18:31:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.405" endtime="20201030 18:31:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.404" endtime="20201030 18:31:58.790"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.799" endtime="20201030 18:31:58.819"></status>
</kw>
<msg timestamp="20201030 18:31:58.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.798" endtime="20201030 18:31:58.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.820" endtime="20201030 18:31:58.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.823" endtime="20201030 18:31:58.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.795" endtime="20201030 18:31:58.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.793" endtime="20201030 18:31:58.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.832" endtime="20201030 18:31:59.118"></status>
</kw>
<msg timestamp="20201030 18:31:59.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.831" endtime="20201030 18:31:59.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.122" endtime="20201030 18:31:59.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.131" endtime="20201030 18:31:59.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.828" endtime="20201030 18:31:59.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.826" endtime="20201030 18:31:59.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.137" level="INFO">${RESULT} = [{'diff': 4.73330000000001e-05}, {'diff': 4.730600000000043e-05}, {'diff': 4.683300000000307e-05}, {'diff': 4.6861000000002206e-05}, {'diff': 4.752799999999807e-05}, {'diff': 4.705600000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:59.134" endtime="20201030 18:31:59.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.142" level="INFO">${ACCURACY} = {'diff': [4.73330000000001e-05, 4.730600000000043e-05, 4.683300000000307e-05, 4.6861000000002206e-05, 4.752799999999807e-05, 4.705600000000018e-05, 4.7459000000003165e-05, 4.702800000000104e-05, 4.733...</msg>
<status status="PASS" starttime="20201030 18:31:59.138" endtime="20201030 18:31:59.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.146" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.145" endtime="20201030 18:31:59.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.149" level="INFO">VALUE: [4.73330000000001e-05, 4.730600000000043e-05, 4.683300000000307e-05, 4.6861000000002206e-05, 4.752799999999807e-05, 4.705600000000018e-05, 4.7459000000003165e-05, 4.702800000000104e-05, 4.733399999999957e-05, 4.741599999999804e-05, 4.695799999999972e-05, 4.73879999999989e-05, 4.659800000000186e-05, 4.7125000000002026e-05, 4.751299999999903e-05, 4.747200000000326e-05, 4.681900000000003e-05, 4.694400000000015e-05, 4.723599999999911e-05, 4.747199999999979e-05, 4.718000000000083e-05, 4.743000000000108e-05, 4.680599999999993e-05, 4.7125000000002026e-05, 4.701400000000147e-05, 4.737499999999881e-05, 4.730600000000043e-05, 4.6987000000001805e-05, 4.725000000000215e-05, 4.70000000000019e-05, 4.699999999999843e-05, 4.6944999999999626e-05, 4.7458999999999696e-05, 4.6944999999999626e-05, 4.724999999999868e-05, 4.747200000000326e-05, 4.656999999999925e-05, 4.71940000000004e-05, 4.6597000000002387e-05, 4.680500000000046e-05, 4.681900000000003e-05, 4.6653000000000666e-05, 4.709699999999942e-05, 4.7389000000001846e-05, 4.6903000000000916e-05, 4.68329999999996e-05, 4.652800000000054e-05, 4.680599999999993e-05, 4.661099999999849e-05, 4.6944999999999626e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.147" endtime="20201030 18:31:59.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.143" endtime="20201030 18:31:59.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.155" endtime="20201030 18:31:59.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.153" endtime="20201030 18:31:59.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.152" endtime="20201030 18:31:59.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.791" endtime="20201030 18:31:59.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.791" endtime="20201030 18:31:59.176"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.185" endtime="20201030 18:31:59.203"></status>
</kw>
<msg timestamp="20201030 18:31:59.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.183" endtime="20201030 18:31:59.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.204" endtime="20201030 18:31:59.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.207" endtime="20201030 18:31:59.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.180" endtime="20201030 18:31:59.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.178" endtime="20201030 18:31:59.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.216" endtime="20201030 18:31:59.502"></status>
</kw>
<msg timestamp="20201030 18:31:59.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.215" endtime="20201030 18:31:59.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.507" endtime="20201030 18:31:59.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.515" endtime="20201030 18:31:59.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.212" endtime="20201030 18:31:59.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.210" endtime="20201030 18:31:59.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.522" level="INFO">${RESULT} = [{'diff': 4.8459000000000696e-05}, {'diff': 4.78330000000006e-05}, {'diff': 4.7959000000000196e-05}, {'diff': 4.831899999999806e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.797200000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:59.519" endtime="20201030 18:31:59.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.530" level="INFO">${ACCURACY} = {'diff': [4.8459000000000696e-05, 4.78330000000006e-05, 4.7959000000000196e-05, 4.831899999999806e-05, 4.85139999999995e-05, 4.797200000000029e-05, 4.776400000000222e-05, 4.780500000000146e-05, 4.8208...</msg>
<status status="PASS" starttime="20201030 18:31:59.523" endtime="20201030 18:31:59.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.534" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.533" endtime="20201030 18:31:59.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.537" level="INFO">VALUE: [4.8459000000000696e-05, 4.78330000000006e-05, 4.7959000000000196e-05, 4.831899999999806e-05, 4.85139999999995e-05, 4.797200000000029e-05, 4.776400000000222e-05, 4.780500000000146e-05, 4.820800000000097e-05, 4.820800000000097e-05, 4.776399999999875e-05, 4.806900000000128e-05, 4.776399999999875e-05, 4.826399999999925e-05, 4.8013999999999e-05, 4.7695000000000376e-05, 4.8181000000001306e-05, 4.824999999999968e-05, 4.777799999999832e-05, 4.8139000000002596e-05, 4.808400000000032e-05, 4.8320000000001e-05, 4.811099999999999e-05, 4.78330000000006e-05, 4.822199999999707e-05, 4.812499999999956e-05, 4.843099999999809e-05, 4.794399999999768e-05, 4.799999999999943e-05, 4.808299999999738e-05, 4.7889000000002346e-05, 4.80000000000029e-05, 4.812499999999956e-05, 4.779200000000136e-05, 4.759699999999992e-05, 4.824999999999968e-05, 4.813899999999913e-05, 4.795800000000072e-05, 4.776399999999875e-05, 4.7695000000000376e-05, 4.806900000000128e-05, 4.787499999999931e-05, 4.766699999999777e-05, 4.757000000000025e-05, 4.8195000000000876e-05, 4.807000000000075e-05, 4.7945000000000626e-05, 4.759699999999992e-05, 4.841599999999904e-05, 4.820800000000097e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.535" endtime="20201030 18:31:59.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.531" endtime="20201030 18:31:59.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.542" endtime="20201030 18:31:59.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.540" endtime="20201030 18:31:59.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.539" endtime="20201030 18:31:59.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.177" endtime="20201030 18:31:59.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.176" endtime="20201030 18:31:59.563"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.572" endtime="20201030 18:31:59.590"></status>
</kw>
<msg timestamp="20201030 18:31:59.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.570" endtime="20201030 18:31:59.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.592" endtime="20201030 18:31:59.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.594" endtime="20201030 18:31:59.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.567" endtime="20201030 18:31:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.565" endtime="20201030 18:31:59.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.604" endtime="20201030 18:31:59.889"></status>
</kw>
<msg timestamp="20201030 18:31:59.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.602" endtime="20201030 18:31:59.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.893" endtime="20201030 18:31:59.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.902" endtime="20201030 18:31:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.600" endtime="20201030 18:31:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.598" endtime="20201030 18:31:59.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.909" level="INFO">${RESULT} = [{'diff': 4.900000000000043e-05}, {'diff': 4.9181000000002306e-05}, {'diff': 4.8958999999997727e-05}, {'diff': 4.9320000000002e-05}, {'diff': 4.913900000000013e-05}, {'diff': 4.857000000000125e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:59.905" endtime="20201030 18:31:59.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.913" level="INFO">${ACCURACY} = {'diff': [4.900000000000043e-05, 4.9181000000002306e-05, 4.8958999999997727e-05, 4.9320000000002e-05, 4.913900000000013e-05, 4.857000000000125e-05, 4.911100000000099e-05, 4.9388000000000903e-05, 4.931...</msg>
<status status="PASS" starttime="20201030 18:31:59.910" endtime="20201030 18:31:59.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.917" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.916" endtime="20201030 18:31:59.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.920" level="INFO">VALUE: [4.900000000000043e-05, 4.9181000000002306e-05, 4.8958999999997727e-05, 4.9320000000002e-05, 4.913900000000013e-05, 4.857000000000125e-05, 4.911100000000099e-05, 4.9388000000000903e-05, 4.931999999999853e-05, 4.8889000000003346e-05, 4.922199999999807e-05, 4.888899999999988e-05, 4.897199999999782e-05, 4.875000000000018e-05, 4.881900000000203e-05, 4.92079999999985e-05, 4.95140000000005e-05, 4.897199999999782e-05, 4.856899999999831e-05, 4.906900000000228e-05, 4.890299999999945e-05, 4.849999999999993e-05, 4.927799999999982e-05, 4.8945000000001626e-05, 4.925000000000068e-05, 4.890199999999997e-05, 4.900000000000043e-05, 4.906899999999881e-05, 4.93330000000021e-05, 4.888899999999988e-05, 4.86529999999992e-05, 4.863899999999963e-05, 4.940299999999995e-05, 4.938900000000038e-05, 4.904200000000261e-05, 4.919399999999893e-05, 4.88339999999976e-05, 4.95140000000005e-05, 4.888899999999988e-05, 4.913900000000013e-05, 4.862500000000006e-05, 4.92079999999985e-05, 4.872199999999757e-05, 4.938900000000038e-05, 4.876399999999975e-05, 4.86940000000019e-05, 4.876399999999975e-05, 4.905600000000218e-05, 4.908400000000132e-05, 4.9014e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.919" endtime="20201030 18:31:59.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.914" endtime="20201030 18:31:59.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.925" endtime="20201030 18:31:59.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.924" endtime="20201030 18:31:59.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.922" endtime="20201030 18:31:59.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.564" endtime="20201030 18:31:59.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.563" endtime="20201030 18:31:59.946"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.955" endtime="20201030 18:31:59.974"></status>
</kw>
<msg timestamp="20201030 18:31:59.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.953" endtime="20201030 18:31:59.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.976" endtime="20201030 18:31:59.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.979" endtime="20201030 18:31:59.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.951" endtime="20201030 18:31:59.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.949" endtime="20201030 18:31:59.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.988" endtime="20201030 18:32:00.272"></status>
</kw>
<msg timestamp="20201030 18:32:00.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020826403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.986" endtime="20201030 18:32:00.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020826403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.277" endtime="20201030 18:32:00.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.285" endtime="20201030 18:32:00.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.984" endtime="20201030 18:32:00.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.982" endtime="20201030 18:32:00.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.292" level="INFO">${RESULT} = [{'diff': 4.973599999999814e-05}, {'diff': 4.955599999999921e-05}, {'diff': 4.991700000000002e-05}, {'diff': 5.012500000000156e-05}, {'diff': 5.00279999999971e-05}, {'diff': 5.025000000000168e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:00.289" endtime="20201030 18:32:00.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.296" level="INFO">${ACCURACY} = {'diff': [4.973599999999814e-05, 4.955599999999921e-05, 4.991700000000002e-05, 5.012500000000156e-05, 5.00279999999971e-05, 5.025000000000168e-05, 5.043100000000009e-05, 5.013899999999766e-05, 4.98610...</msg>
<status status="PASS" starttime="20201030 18:32:00.293" endtime="20201030 18:32:00.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.301" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.300" endtime="20201030 18:32:00.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.303" level="INFO">VALUE: [4.973599999999814e-05, 4.955599999999921e-05, 4.991700000000002e-05, 5.012500000000156e-05, 5.00279999999971e-05, 5.025000000000168e-05, 5.043100000000009e-05, 5.013899999999766e-05, 4.986100000000174e-05, 5.026400000000125e-05, 4.973600000000161e-05, 5.005500000000024e-05, 5.036200000000171e-05, 5.0402000000001473e-05, 5.006899999999981e-05, 4.984700000000217e-05, 5.030500000000049e-05, 4.959700000000192e-05, 5.031900000000006e-05, 5.051399999999803e-05, 5.027800000000082e-05, 4.995799999999925e-05, 5.034700000000267e-05, 4.998600000000186e-05, 5.040300000000095e-05, 5.0195000000002876e-05, 4.995800000000272e-05, 5.004200000000014e-05, 4.966699999999977e-05, 4.968099999999934e-05, 5.0014000000001e-05, 5.012500000000156e-05, 5.038899999999791e-05, 5.020899999999898e-05, 5.029199999999692e-05, 5.026300000000178e-05, 5.045799999999975e-05, 5.0138000000001653e-05, 5.013899999999766e-05, 5.048600000000236e-05, 5.013900000000113e-05, 5.012499999999809e-05, 5.027799999999735e-05, 4.958299999999888e-05, 5.058400000000282e-05, 5.000000000000143e-05, 4.970899999999848e-05, 5.0014000000001e-05, 4.962500000000106e-05, 5.03339999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.302" endtime="20201030 18:32:00.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.297" endtime="20201030 18:32:00.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.310" endtime="20201030 18:32:00.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.308" endtime="20201030 18:32:00.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.307" endtime="20201030 18:32:00.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.947" endtime="20201030 18:32:00.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.946" endtime="20201030 18:32:00.330"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.339" endtime="20201030 18:32:00.358"></status>
</kw>
<msg timestamp="20201030 18:32:00.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.338" endtime="20201030 18:32:00.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.360" endtime="20201030 18:32:00.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.362" endtime="20201030 18:32:00.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.335" endtime="20201030 18:32:00.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.333" endtime="20201030 18:32:00.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.372" endtime="20201030 18:32:00.658"></status>
</kw>
<msg timestamp="20201030 18:32:00.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.370" endtime="20201030 18:32:00.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.662" endtime="20201030 18:32:00.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.671" endtime="20201030 18:32:00.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.368" endtime="20201030 18:32:00.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.366" endtime="20201030 18:32:00.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.677" level="INFO">${RESULT} = [{'diff': 5.131899999999759e-05}, {'diff': 5.081900000000056e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.090300000000145e-05}, {'diff': 5.056900000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:00.674" endtime="20201030 18:32:00.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.683" level="INFO">${ACCURACY} = {'diff': [5.131899999999759e-05, 5.081900000000056e-05, 5.073599999999914e-05, 5.072199999999957e-05, 5.090300000000145e-05, 5.056900000000031e-05, 5.15279999999986e-05, 5.091700000000102e-05, 5.11249...</msg>
<status status="PASS" starttime="20201030 18:32:00.679" endtime="20201030 18:32:00.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.687" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.686" endtime="20201030 18:32:00.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.690" level="INFO">VALUE: [5.131899999999759e-05, 5.081900000000056e-05, 5.073599999999914e-05, 5.072199999999957e-05, 5.090300000000145e-05, 5.056900000000031e-05, 5.15279999999986e-05, 5.091700000000102e-05, 5.112499999999909e-05, 5.123599999999964e-05, 5.145800000000075e-05, 5.101399999999853e-05, 5.15140000000025e-05, 5.088900000000188e-05, 5.059700000000292e-05, 5.061099999999902e-05, 5.1415999999998574e-05, 5.06530000000012e-05, 5.05140000000015e-05, 5.152800000000207e-05, 5.074999999999871e-05, 5.111099999999952e-05, 5.076300000000228e-05, 5.069400000000043e-05, 5.0679999999997394e-05, 5.063900000000163e-05, 5.0708e-05, 5.102800000000157e-05, 5.143000000000161e-05, 5.072199999999957e-05, 5.056900000000031e-05, 5.106900000000081e-05, 5.108300000000038e-05, 5.145800000000075e-05, 5.112499999999909e-05, 5.08339999999996e-05, 5.098599999999939e-05, 5.14729999999998e-05, 5.074999999999871e-05, 5.102800000000157e-05, 5.124999999999921e-05, 5.094500000000016e-05, 5.074999999999871e-05, 5.130499999999802e-05, 5.1014000000002e-05, 5.073599999999914e-05, 5.087499999999884e-05, 5.063899999999816e-05, 5.095800000000025e-05, 5.081900000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.689" endtime="20201030 18:32:00.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.684" endtime="20201030 18:32:00.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.695" endtime="20201030 18:32:00.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.694" endtime="20201030 18:32:00.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.692" endtime="20201030 18:32:00.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.331" endtime="20201030 18:32:00.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.331" endtime="20201030 18:32:00.716"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.725" endtime="20201030 18:32:00.744"></status>
</kw>
<msg timestamp="20201030 18:32:00.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.723" endtime="20201030 18:32:00.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.745" endtime="20201030 18:32:00.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.748" endtime="20201030 18:32:00.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.721" endtime="20201030 18:32:00.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.719" endtime="20201030 18:32:00.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.757" endtime="20201030 18:32:01.044"></status>
</kw>
<msg timestamp="20201030 18:32:01.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.755" endtime="20201030 18:32:01.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.048" endtime="20201030 18:32:01.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.056" endtime="20201030 18:32:01.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.753" endtime="20201030 18:32:01.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.751" endtime="20201030 18:32:01.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.063" level="INFO">${RESULT} = [{'diff': 5.205500000000224e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.158300000000088e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.168100000000134e-05}, {'diff': 5.162499999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:01.060" endtime="20201030 18:32:01.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.068" level="INFO">${ACCURACY} = {'diff': [5.205500000000224e-05, 5.166700000000177e-05, 5.158300000000088e-05, 5.176399999999928e-05, 5.168100000000134e-05, 5.162499999999959e-05, 5.181899999999809e-05, 5.2249999999996743e-05, 5.206...</msg>
<status status="PASS" starttime="20201030 18:32:01.064" endtime="20201030 18:32:01.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.072" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.071" endtime="20201030 18:32:01.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.075" level="INFO">VALUE: [5.205500000000224e-05, 5.166700000000177e-05, 5.158300000000088e-05, 5.176399999999928e-05, 5.168100000000134e-05, 5.162499999999959e-05, 5.181899999999809e-05, 5.2249999999996743e-05, 5.206900000000181e-05, 5.186100000000027e-05, 5.18340000000006e-05, 5.251400000000003e-05, 5.168000000000186e-05, 5.231999999999806e-05, 5.248600000000089e-05, 5.195800000000125e-05, 5.195900000000073e-05, 5.202699999999963e-05, 5.20279999999991e-05, 5.245800000000175e-05, 5.174999999999971e-05, 5.227799999999935e-05, 5.234699999999773e-05, 5.159700000000045e-05, 5.2499999999996994e-05, 5.2235999999997174e-05, 5.213899999999966e-05, 5.226399999999978e-05, 5.208300000000138e-05, 5.158300000000088e-05, 5.188899999999941e-05, 5.195800000000125e-05, 5.251400000000003e-05, 5.176399999999928e-05, 5.176400000000275e-05, 5.187499999999984e-05, 5.183299999999766e-05, 5.157000000000078e-05, 5.168099999999787e-05, 5.162499999999959e-05, 5.230499999999902e-05, 5.227799999999935e-05, 5.174999999999971e-05, 5.237500000000034e-05, 5.227699999999988e-05, 5.2207999999998034e-05, 5.169400000000143e-05, 5.225000000000021e-05, 5.183299999999766e-05, 5.157000000000078e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.073" endtime="20201030 18:32:01.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.069" endtime="20201030 18:32:01.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.080" endtime="20201030 18:32:01.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.079" endtime="20201030 18:32:01.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.077" endtime="20201030 18:32:01.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.717" endtime="20201030 18:32:01.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.716" endtime="20201030 18:32:01.101"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.110" endtime="20201030 18:32:01.129"></status>
</kw>
<msg timestamp="20201030 18:32:01.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.108" endtime="20201030 18:32:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.130" endtime="20201030 18:32:01.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.133" endtime="20201030 18:32:01.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.105" endtime="20201030 18:32:01.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.103" endtime="20201030 18:32:01.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.142" endtime="20201030 18:32:01.427"></status>
</kw>
<msg timestamp="20201030 18:32:01.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.141" endtime="20201030 18:32:01.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.431" endtime="20201030 18:32:01.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.440" endtime="20201030 18:32:01.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.138" endtime="20201030 18:32:01.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.136" endtime="20201030 18:32:01.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.446" level="INFO">${RESULT} = [{'diff': 5.302700000000063e-05}, {'diff': 5.326400000000078e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.319400000000293e-05}, {'diff': 5.283299999999866e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:01.443" endtime="20201030 18:32:01.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.451" level="INFO">${ACCURACY} = {'diff': [5.302700000000063e-05, 5.326400000000078e-05, 5.262500000000059e-05, 5.288900000000041e-05, 5.319400000000293e-05, 5.283299999999866e-05, 5.3430000000000144e-05, 5.284699999999823e-05, 5.295...</msg>
<status status="PASS" starttime="20201030 18:32:01.447" endtime="20201030 18:32:01.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.455" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.454" endtime="20201030 18:32:01.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.458" level="INFO">VALUE: [5.302700000000063e-05, 5.326400000000078e-05, 5.262500000000059e-05, 5.288900000000041e-05, 5.319400000000293e-05, 5.283299999999866e-05, 5.3430000000000144e-05, 5.284699999999823e-05, 5.2957999999998784e-05, 5.35280000000006e-05, 5.3499999999997994e-05, 5.290299999999998e-05, 5.3013999999997063e-05, 5.282000000000203e-05, 5.326400000000078e-05, 5.286100000000127e-05, 5.331999999999906e-05, 5.309700000000195e-05, 5.276400000000028e-05, 5.343099999999962e-05, 5.283299999999866e-05, 5.288900000000041e-05, 5.33609999999983e-05, 5.323600000000164e-05, 5.315300000000023e-05, 5.2929999999999644e-05, 5.315300000000023e-05, 5.341700000000005e-05, 5.254200000000264e-05, 5.3443999999999714e-05, 5.313900000000066e-05, 5.288900000000041e-05, 5.276400000000028e-05, 5.263900000000016e-05, 5.326400000000078e-05, 5.28340000000016e-05, 5.280599999999899e-05, 5.327800000000035e-05, 5.283399999999813e-05, 5.3151999999997285e-05, 5.301300000000106e-05, 5.273600000000114e-05, 5.25409999999997e-05, 5.3179999999999894e-05, 5.256899999999884e-05, 5.3179999999999894e-05, 5.331899999999959e-05, 5.337500000000134e-05, 5.306899999999934e-05, 5.327800000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.456" endtime="20201030 18:32:01.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.451" endtime="20201030 18:32:01.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.464" endtime="20201030 18:32:01.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.462" endtime="20201030 18:32:01.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.461" endtime="20201030 18:32:01.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.102" endtime="20201030 18:32:01.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.101" endtime="20201030 18:32:01.486"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.502" endtime="20201030 18:32:01.520"></status>
</kw>
<msg timestamp="20201030 18:32:01.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.499" endtime="20201030 18:32:01.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.522" endtime="20201030 18:32:01.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.524" endtime="20201030 18:32:01.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.494" endtime="20201030 18:32:01.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.490" endtime="20201030 18:32:01.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.534" endtime="20201030 18:32:01.822"></status>
</kw>
<msg timestamp="20201030 18:32:01.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028459736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028513319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.532" endtime="20201030 18:32:01.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028459736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028513319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.826" endtime="20201030 18:32:01.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.834" endtime="20201030 18:32:01.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.530" endtime="20201030 18:32:01.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.528" endtime="20201030 18:32:01.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.841" level="INFO">${RESULT} = [{'diff': 5.358299999999941e-05}, {'diff': 5.4249999999998744e-05}, {'diff': 5.3652000000001254e-05}, {'diff': 5.4249999999998744e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.411199999999852e-05...</msg>
<status status="PASS" starttime="20201030 18:32:01.838" endtime="20201030 18:32:01.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.846" level="INFO">${ACCURACY} = {'diff': [5.358299999999941e-05, 5.4249999999998744e-05, 5.3652000000001254e-05, 5.4249999999998744e-05, 5.3957999999999784e-05, 5.411199999999852e-05, 5.4499999999998994e-05, 5.4194000000000464e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:01.842" endtime="20201030 18:32:01.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.851" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.850" endtime="20201030 18:32:01.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.854" level="INFO">VALUE: [5.358299999999941e-05, 5.4249999999998744e-05, 5.3652000000001254e-05, 5.4249999999998744e-05, 5.3957999999999784e-05, 5.411199999999852e-05, 5.4499999999998994e-05, 5.4194000000000464e-05, 5.3735999999998674e-05, 5.437499999999887e-05, 5.40280000000011e-05, 5.413899999999819e-05, 5.415300000000123e-05, 5.447299999999933e-05, 5.369500000000291e-05, 5.388900000000141e-05, 5.422299999999908e-05, 5.450000000000246e-05, 5.448700000000237e-05, 5.356899999999984e-05, 5.3638000000001684e-05, 5.3693999999999964e-05, 5.438899999999844e-05, 5.3901999999998035e-05, 5.400000000000196e-05, 5.380500000000052e-05, 5.390300000000098e-05, 5.406900000000034e-05, 5.4499999999998994e-05, 5.437499999999887e-05, 5.376299999999834e-05, 5.408299999999991e-05, 5.40280000000011e-05, 5.430600000000049e-05, 5.363900000000116e-05, 5.373699999999815e-05, 5.359799999999845e-05, 5.394499999999969e-05, 5.430600000000049e-05, 5.363899999999769e-05, 5.375000000000171e-05, 5.4499999999998994e-05, 5.4485999999999424e-05, 5.3693999999999964e-05, 5.377699999999791e-05, 5.4166000000001324e-05, 5.405500000000424e-05, 5.408299999999644e-05, 5.43470000000032e-05, 5.358299999999594e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.852" endtime="20201030 18:32:01.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.847" endtime="20201030 18:32:01.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.859" endtime="20201030 18:32:01.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.857" endtime="20201030 18:32:01.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.856" endtime="20201030 18:32:01.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.487" endtime="20201030 18:32:01.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.486" endtime="20201030 18:32:01.880"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.889" endtime="20201030 18:32:01.907"></status>
</kw>
<msg timestamp="20201030 18:32:01.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.887" endtime="20201030 18:32:01.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.908" endtime="20201030 18:32:01.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.911" endtime="20201030 18:32:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.884" endtime="20201030 18:32:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.882" endtime="20201030 18:32:01.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.920" endtime="20201030 18:32:02.208"></status>
</kw>
<msg timestamp="20201030 18:32:02.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.919" endtime="20201030 18:32:02.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.213" endtime="20201030 18:32:02.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.221" endtime="20201030 18:32:02.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.916" endtime="20201030 18:32:02.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.914" endtime="20201030 18:32:02.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.228" level="INFO">${RESULT} = [{'diff': 5.4749999999999244e-05}, {'diff': 5.508400000000038e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.533400000000063e-05}, {'diff': 5.541699999999858e-05}, {'diff': 5.5472000000000854e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:02.225" endtime="20201030 18:32:02.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.232" level="INFO">${ACCURACY} = {'diff': [5.4749999999999244e-05, 5.508400000000038e-05, 5.5499999999999994e-05, 5.533400000000063e-05, 5.541699999999858e-05, 5.5472000000000854e-05, 5.509700000000048e-05, 5.456899999999737e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:32:02.229" endtime="20201030 18:32:02.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.237" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.236" endtime="20201030 18:32:02.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.239" level="INFO">VALUE: [5.4749999999999244e-05, 5.508400000000038e-05, 5.5499999999999994e-05, 5.533400000000063e-05, 5.541699999999858e-05, 5.5472000000000854e-05, 5.509700000000048e-05, 5.456899999999737e-05, 5.459699999999998e-05, 5.463900000000216e-05, 5.462499999999912e-05, 5.5277999999998884e-05, 5.538899999999944e-05, 5.5277999999998884e-05, 5.508300000000091e-05, 5.456900000000084e-05, 5.4958000000000784e-05, 5.4985999999999924e-05, 5.5013999999999064e-05, 5.470900000000001e-05, 5.5513999999999564e-05, 5.477800000000185e-05, 5.5291999999998453e-05, 5.512499999999962e-05, 5.4708000000000534e-05, 5.487499999999937e-05, 5.508300000000091e-05, 5.512499999999962e-05, 5.51809999999979e-05, 5.531900000000159e-05, 5.458300000000041e-05, 5.4958000000000784e-05, 5.508300000000091e-05, 5.490299999999851e-05, 5.488899999999894e-05, 5.461100000000302e-05, 5.488899999999894e-05, 5.5027999999998634e-05, 5.5013999999999064e-05, 5.494500000000069e-05, 5.461100000000302e-05, 5.4527999999998134e-05, 5.508400000000038e-05, 5.465300000000173e-05, 5.494500000000069e-05, 5.476400000000228e-05, 5.483400000000013e-05, 5.475000000000271e-05, 5.4637999999999215e-05, 5.4929999999998175e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.238" endtime="20201030 18:32:02.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.233" endtime="20201030 18:32:02.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.245" endtime="20201030 18:32:02.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.243" endtime="20201030 18:32:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.242" endtime="20201030 18:32:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.881" endtime="20201030 18:32:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.880" endtime="20201030 18:32:02.265"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.274" endtime="20201030 18:32:02.295"></status>
</kw>
<msg timestamp="20201030 18:32:02.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.273" endtime="20201030 18:32:02.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.296" endtime="20201030 18:32:02.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.299" endtime="20201030 18:32:02.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.270" endtime="20201030 18:32:02.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.268" endtime="20201030 18:32:02.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.308" endtime="20201030 18:32:02.594"></status>
</kw>
<msg timestamp="20201030 18:32:02.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021003208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.306" endtime="20201030 18:32:02.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021003208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.598" endtime="20201030 18:32:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.607" endtime="20201030 18:32:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.304" endtime="20201030 18:32:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.302" endtime="20201030 18:32:02.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.614" level="INFO">${RESULT} = [{'diff': 5.638900000000044e-05}, {'diff': 5.602700000000016e-05}, {'diff': 5.5902000000000035e-05}, {'diff': 5.6194000000002464e-05}, {'diff': 5.6443999999999245e-05}, {'diff': 5.5971999999997885e-05...</msg>
<status status="PASS" starttime="20201030 18:32:02.610" endtime="20201030 18:32:02.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.618" level="INFO">${ACCURACY} = {'diff': [5.638900000000044e-05, 5.602700000000016e-05, 5.5902000000000035e-05, 5.6194000000002464e-05, 5.6443999999999245e-05, 5.5971999999997885e-05, 5.606899999999887e-05, 5.5707999999998065e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:02.615" endtime="20201030 18:32:02.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.623" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.622" endtime="20201030 18:32:02.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.625" level="INFO">VALUE: [5.638900000000044e-05, 5.602700000000016e-05, 5.5902000000000035e-05, 5.6194000000002464e-05, 5.6443999999999245e-05, 5.5971999999997885e-05, 5.606899999999887e-05, 5.5707999999998065e-05, 5.641699999999958e-05, 5.588899999999994e-05, 5.584699999999776e-05, 5.612500000000062e-05, 5.587500000000037e-05, 5.587500000000037e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.556999999999784e-05, 5.602700000000016e-05, 5.640300000000001e-05, 5.59870000000004e-05, 5.593100000000212e-05, 5.577699999999991e-05, 5.55549999999988e-05, 5.630499999999955e-05, 5.579099999999948e-05, 5.588899999999994e-05, 5.6249999999997274e-05, 5.633299999999869e-05, 5.565299999999926e-05, 5.565299999999926e-05, 5.5750000000000244e-05, 5.61809999999989e-05, 5.570900000000101e-05, 5.5763999999999814e-05, 5.641699999999958e-05, 5.5736000000000674e-05, 5.597300000000083e-05, 5.606999999999834e-05, 5.570900000000101e-05, 5.577699999999991e-05, 5.6388000000000965e-05, 5.565299999999926e-05, 5.637500000000087e-05, 5.5777999999999384e-05, 5.612500000000062e-05, 5.5958000000001784e-05, 5.570900000000101e-05, 5.587500000000037e-05, 5.5722000000001104e-05, 5.631899999999912e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.624" endtime="20201030 18:32:02.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.619" endtime="20201030 18:32:02.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.631" endtime="20201030 18:32:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.630" endtime="20201030 18:32:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.628" endtime="20201030 18:32:02.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.266" endtime="20201030 18:32:02.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.266" endtime="20201030 18:32:02.652"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.661" endtime="20201030 18:32:02.680"></status>
</kw>
<msg timestamp="20201030 18:32:02.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.660" endtime="20201030 18:32:02.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.682" endtime="20201030 18:32:02.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.684" endtime="20201030 18:32:02.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.657" endtime="20201030 18:32:02.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.655" endtime="20201030 18:32:02.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.694" endtime="20201030 18:32:02.979"></status>
</kw>
<msg timestamp="20201030 18:32:02.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.692" endtime="20201030 18:32:02.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.983" endtime="20201030 18:32:02.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.992" endtime="20201030 18:32:02.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.689" endtime="20201030 18:32:02.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.687" endtime="20201030 18:32:02.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.999" level="INFO">${RESULT} = [{'diff': 5.741700000000058e-05}, {'diff': 5.7263999999997844e-05}, {'diff': 5.712500000000162e-05}, {'diff': 5.7278000000000884e-05}, {'diff': 5.7513999999998094e-05}, {'diff': 5.7000000000001494e-05...</msg>
<status status="PASS" starttime="20201030 18:32:02.995" endtime="20201030 18:32:02.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.006" level="INFO">${ACCURACY} = {'diff': [5.741700000000058e-05, 5.7263999999997844e-05, 5.712500000000162e-05, 5.7278000000000884e-05, 5.7513999999998094e-05, 5.7000000000001494e-05, 5.744499999999972e-05, 5.729099999999751e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:03.000" endtime="20201030 18:32:03.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.011" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.010" endtime="20201030 18:32:03.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.014" level="INFO">VALUE: [5.741700000000058e-05, 5.7263999999997844e-05, 5.712500000000162e-05, 5.7278000000000884e-05, 5.7513999999998094e-05, 5.7000000000001494e-05, 5.744499999999972e-05, 5.729099999999751e-05, 5.683299999999919e-05, 5.6555999999999274e-05, 5.734699999999926e-05, 5.6721999999998635e-05, 5.7278000000000884e-05, 5.7444000000000245e-05, 5.7278000000000884e-05, 5.681899999999962e-05, 5.740300000000101e-05, 5.713900000000119e-05, 5.654200000000317e-05, 5.7499999999998525e-05, 5.7042000000000204e-05, 5.66809999999994e-05, 5.6764000000000814e-05, 5.683400000000213e-05, 5.712500000000162e-05, 5.666699999999983e-05, 5.747300000000233e-05, 5.7402000000001535e-05, 5.738899999999797e-05, 5.7402000000001535e-05, 5.673699999999768e-05, 5.752700000000166e-05, 5.711099999999858e-05, 5.740300000000101e-05, 5.684699999999876e-05, 5.736099999999883e-05, 5.706899999999987e-05, 5.713900000000119e-05, 5.706899999999987e-05, 5.6944000000003214e-05, 5.7277999999997414e-05, 5.740300000000101e-05, 5.7152000000001285e-05, 5.6652000000000785e-05, 5.745899999999929e-05, 5.6528000000000134e-05, 5.7542000000000704e-05, 5.7306000000000024e-05, 5.751299999999862e-05, 5.706899999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.012" endtime="20201030 18:32:03.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.007" endtime="20201030 18:32:03.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.019" endtime="20201030 18:32:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.017" endtime="20201030 18:32:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.016" endtime="20201030 18:32:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.653" endtime="20201030 18:32:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.652" endtime="20201030 18:32:03.040"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.049" endtime="20201030 18:32:03.068"></status>
</kw>
<msg timestamp="20201030 18:32:03.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.047" endtime="20201030 18:32:03.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.069" endtime="20201030 18:32:03.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.072" endtime="20201030 18:32:03.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.045" endtime="20201030 18:32:03.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.042" endtime="20201030 18:32:03.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.081" endtime="20201030 18:32:03.368"></status>
</kw>
<msg timestamp="20201030 18:32:03.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.080" endtime="20201030 18:32:03.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.373" endtime="20201030 18:32:03.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.381" endtime="20201030 18:32:03.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.077" endtime="20201030 18:32:03.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.075" endtime="20201030 18:32:03.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.388" level="INFO">${RESULT} = [{'diff': 5.813899999999872e-05}, {'diff': 5.8250000000002744e-05}, {'diff': 5.7944000000000745e-05}, {'diff': 5.8263999999998844e-05}, {'diff': 5.7666000000001355e-05}, {'diff': 5.7708000000000065e-0...</msg>
<status status="PASS" starttime="20201030 18:32:03.385" endtime="20201030 18:32:03.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.392" level="INFO">${ACCURACY} = {'diff': [5.813899999999872e-05, 5.8250000000002744e-05, 5.7944000000000745e-05, 5.8263999999998844e-05, 5.7666000000001355e-05, 5.7708000000000065e-05, 5.8207999999997095e-05, 5.816699999999786e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:03.389" endtime="20201030 18:32:03.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.397" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.396" endtime="20201030 18:32:03.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.399" level="INFO">VALUE: [5.813899999999872e-05, 5.8250000000002744e-05, 5.7944000000000745e-05, 5.8263999999998844e-05, 5.7666000000001355e-05, 5.7708000000000065e-05, 5.8207999999997095e-05, 5.816699999999786e-05, 5.812499999999915e-05, 5.8221999999996665e-05, 5.8415999999998636e-05, 5.840299999999854e-05, 5.816700000000133e-05, 5.7694000000000495e-05, 5.8292000000001454e-05, 5.769499999999997e-05, 5.820900000000004e-05, 5.7749999999998775e-05, 5.759799999999898e-05, 5.7820000000000094e-05, 5.843099999999768e-05, 5.852699999999919e-05, 5.7806000000000524e-05, 5.840300000000201e-05, 5.7999999999999025e-05, 5.763900000000169e-05, 5.8597999999999983e-05, 5.787500000000237e-05, 5.808300000000044e-05, 5.8235999999999705e-05, 5.8291999999997984e-05, 5.7721999999999635e-05, 5.7944000000000745e-05, 5.8222000000000135e-05, 5.7556000000000274e-05, 5.8000000000002494e-05, 5.8056000000000774e-05, 5.8292000000001454e-05, 5.811099999999958e-05, 5.7833999999999663e-05, 5.8334000000000163e-05, 5.8401999999999066e-05, 5.8070000000000344e-05, 5.8402000000002535e-05, 5.8513999999999095e-05, 5.812499999999915e-05, 5.8430000000001675e-05, 5.841699999999811e-05, 5.840300000000201e-05, 5.790300000000151e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.398" endtime="20201030 18:32:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.393" endtime="20201030 18:32:03.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.413" endtime="20201030 18:32:03.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.411" endtime="20201030 18:32:03.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.410" endtime="20201030 18:32:03.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.041" endtime="20201030 18:32:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.040" endtime="20201030 18:32:03.434"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.443" endtime="20201030 18:32:03.463"></status>
</kw>
<msg timestamp="20201030 18:32:03.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.441" endtime="20201030 18:32:03.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.464" endtime="20201030 18:32:03.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.467" endtime="20201030 18:32:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.438" endtime="20201030 18:32:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.436" endtime="20201030 18:32:03.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.476" endtime="20201030 18:32:03.761"></status>
</kw>
<msg timestamp="20201030 18:32:03.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.475" endtime="20201030 18:32:03.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.765" endtime="20201030 18:32:03.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.774" endtime="20201030 18:32:03.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.472" endtime="20201030 18:32:03.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.470" endtime="20201030 18:32:03.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.781" level="INFO">${RESULT} = [{'diff': 5.9263999999999845e-05}, {'diff': 5.9055999999998304e-05}, {'diff': 5.9222000000001135e-05}, {'diff': 5.883300000000119e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.906900000000187e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:03.777" endtime="20201030 18:32:03.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.785" level="INFO">${ACCURACY} = {'diff': [5.9263999999999845e-05, 5.9055999999998304e-05, 5.9222000000001135e-05, 5.883300000000119e-05, 5.916699999999886e-05, 5.906900000000187e-05, 5.938899999999997e-05, 5.869500000000097e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:32:03.782" endtime="20201030 18:32:03.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.790" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.789" endtime="20201030 18:32:03.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.792" level="INFO">VALUE: [5.9263999999999845e-05, 5.9055999999998304e-05, 5.9222000000001135e-05, 5.883300000000119e-05, 5.916699999999886e-05, 5.906900000000187e-05, 5.938899999999997e-05, 5.869500000000097e-05, 5.863900000000269e-05, 5.8791999999998484e-05, 5.8806000000001524e-05, 5.9263999999999845e-05, 5.9069999999997874e-05, 5.883299999999772e-05, 5.9250000000000275e-05, 5.862499999999965e-05, 5.909700000000101e-05, 5.9193999999998526e-05, 5.940299999999954e-05, 5.941699999999911e-05, 5.90550000000023e-05, 5.8694000000001495e-05, 5.883300000000119e-05, 5.863899999999922e-05, 5.9236000000000705e-05, 5.9000000000000025e-05, 5.9278000000002884e-05, 5.8569999999997374e-05, 5.912500000000015e-05, 5.890299999999904e-05, 5.9250000000000275e-05, 5.9084000000000914e-05, 5.894500000000122e-05, 5.8708000000001065e-05, 5.9193999999998526e-05, 5.9458000000001815e-05, 5.9263999999999845e-05, 5.9250000000000275e-05, 5.931900000000212e-05, 5.9027999999999164e-05, 5.9236000000000705e-05, 5.9013999999999595e-05, 5.8556000000001274e-05, 5.9222000000001135e-05, 5.9194999999998e-05, 5.8556000000001274e-05, 5.9320000000001594e-05, 5.941700000000258e-05, 5.86949999999975e-05, 5.873699999999968e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.791" endtime="20201030 18:32:03.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.786" endtime="20201030 18:32:03.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.798" endtime="20201030 18:32:03.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.797" endtime="20201030 18:32:03.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.796" endtime="20201030 18:32:03.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.435" endtime="20201030 18:32:03.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.434" endtime="20201030 18:32:03.819"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.828" endtime="20201030 18:32:03.847"></status>
</kw>
<msg timestamp="20201030 18:32:03.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.827" endtime="20201030 18:32:03.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.848" endtime="20201030 18:32:03.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.851" endtime="20201030 18:32:03.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.824" endtime="20201030 18:32:03.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.822" endtime="20201030 18:32:03.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.861" endtime="20201030 18:32:04.147"></status>
</kw>
<msg timestamp="20201030 18:32:04.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.859" endtime="20201030 18:32:04.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.152" endtime="20201030 18:32:04.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.161" endtime="20201030 18:32:04.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.856" endtime="20201030 18:32:04.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.854" endtime="20201030 18:32:04.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.169" level="INFO">${RESULT} = [{'diff': 6.0361999999997834e-05}, {'diff': 6.0514000000001095e-05}, {'diff': 5.9999999999997555e-05}, {'diff': 5.995900000000179e-05}, {'diff': 6.044500000000272e-05}, {'diff': 6.0250000000001275e-05...</msg>
<status status="PASS" starttime="20201030 18:32:04.165" endtime="20201030 18:32:04.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.174" level="INFO">${ACCURACY} = {'diff': [6.0361999999997834e-05, 6.0514000000001095e-05, 5.9999999999997555e-05, 5.995900000000179e-05, 6.044500000000272e-05, 6.0250000000001275e-05, 5.9694000000002495e-05, 5.9957999999998846e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:04.170" endtime="20201030 18:32:04.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.179" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.177" endtime="20201030 18:32:04.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.181" level="INFO">VALUE: [6.0361999999997834e-05, 6.0514000000001095e-05, 5.9999999999997555e-05, 5.995900000000179e-05, 6.044500000000272e-05, 6.0250000000001275e-05, 5.9694000000002495e-05, 5.9957999999998846e-05, 5.9764000000000345e-05, 5.9834000000001664e-05, 6.040299999999707e-05, 5.9943999999999276e-05, 5.9736000000001205e-05, 6.038900000000097e-05, 5.9791999999999484e-05, 5.988900000000047e-05, 6.0041999999999734e-05, 6.0263999999997375e-05, 5.997300000000136e-05, 6.0514000000001095e-05, 6.044499999999925e-05, 6.040300000000054e-05, 5.993099999999918e-05, 6.015299999999682e-05, 6.0235999999998235e-05, 5.958300000000194e-05, 5.981899999999915e-05, 6.0250000000001275e-05, 5.9722000000001635e-05, 6.008299999999897e-05, 6.0069999999998874e-05, 5.9679999999999456e-05, 5.988900000000047e-05, 6.0457999999999346e-05, 5.969500000000197e-05, 6.0028000000000165e-05, 5.98750000000009e-05, 5.965299999999979e-05, 6.041700000000011e-05, 5.962500000000065e-05, 5.98750000000009e-05, 5.961100000000108e-05, 5.983300000000219e-05, 5.95689999999989e-05, 5.9764000000000345e-05, 5.972300000000111e-05, 5.9694000000002495e-05, 5.9929999999999706e-05, 6.00689999999994e-05, 6.0291999999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.180" endtime="20201030 18:32:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.175" endtime="20201030 18:32:04.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.186" endtime="20201030 18:32:04.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.185" endtime="20201030 18:32:04.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.183" endtime="20201030 18:32:04.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.820" endtime="20201030 18:32:04.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.820" endtime="20201030 18:32:04.207"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.216" endtime="20201030 18:32:04.236"></status>
</kw>
<msg timestamp="20201030 18:32:04.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.214" endtime="20201030 18:32:04.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.237" endtime="20201030 18:32:04.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.240" endtime="20201030 18:32:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.212" endtime="20201030 18:32:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.210" endtime="20201030 18:32:04.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.250" endtime="20201030 18:32:04.537"></status>
</kw>
<msg timestamp="20201030 18:32:04.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.248" endtime="20201030 18:32:04.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.541" endtime="20201030 18:32:04.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.550" endtime="20201030 18:32:04.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.245" endtime="20201030 18:32:04.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.243" endtime="20201030 18:32:04.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.557" level="INFO">${RESULT} = [{'diff': 6.131899999999718e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.091699999999714e-05}, {'diff': 6.0708000000003065e-05}, {'diff': 6.104200000000073e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:04.553" endtime="20201030 18:32:04.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.561" level="INFO">${ACCURACY} = {'diff': [6.131899999999718e-05, 6.090300000000104e-05, 6.0721999999999166e-05, 6.091699999999714e-05, 6.0708000000003065e-05, 6.104200000000073e-05, 6.081900000000015e-05, 6.091700000000061e-05, 6.09...</msg>
<status status="PASS" starttime="20201030 18:32:04.558" endtime="20201030 18:32:04.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.566" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.565" endtime="20201030 18:32:04.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.568" level="INFO">VALUE: [6.131899999999718e-05, 6.090300000000104e-05, 6.0721999999999166e-05, 6.091699999999714e-05, 6.0708000000003065e-05, 6.104200000000073e-05, 6.081900000000015e-05, 6.091700000000061e-05, 6.0944000000000276e-05, 6.145899999999982e-05, 6.090300000000104e-05, 6.127800000000141e-05, 6.1000000000002025e-05, 6.06949999999995e-05, 6.151399999999863e-05, 6.113799999999878e-05, 6.143100000000068e-05, 6.129100000000151e-05, 6.0694000000000026e-05, 6.151399999999863e-05, 6.0971999999999416e-05, 6.119400000000053e-05, 6.131899999999718e-05, 6.131899999999718e-05, 6.061100000000208e-05, 6.0999999999998555e-05, 6.1195e-05, 6.062500000000165e-05, 6.070899999999907e-05, 6.0735999999998735e-05, 6.090299999999757e-05, 6.14300000000012e-05, 6.1028000000001165e-05, 6.0971999999999416e-05, 6.136099999999936e-05, 6.08750000000019e-05, 6.131900000000065e-05, 6.0749999999998305e-05, 6.0735999999998735e-05, 6.113899999999825e-05, 6.113899999999825e-05, 6.13889999999985e-05, 6.087499999999843e-05, 6.0764000000001345e-05, 6.063899999999775e-05, 6.122300000000261e-05, 6.062500000000165e-05, 6.0597999999998514e-05, 6.108399999999944e-05, 6.120899999999957e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.567" endtime="20201030 18:32:04.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.562" endtime="20201030 18:32:04.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.573" endtime="20201030 18:32:04.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.572" endtime="20201030 18:32:04.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.571" endtime="20201030 18:32:04.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.208" endtime="20201030 18:32:04.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.207" endtime="20201030 18:32:04.594"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.603" endtime="20201030 18:32:04.624"></status>
</kw>
<msg timestamp="20201030 18:32:04.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.602" endtime="20201030 18:32:04.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.625" endtime="20201030 18:32:04.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.628" endtime="20201030 18:32:04.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.599" endtime="20201030 18:32:04.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.597" endtime="20201030 18:32:04.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.637" endtime="20201030 18:32:04.923"></status>
</kw>
<msg timestamp="20201030 18:32:04.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.636" endtime="20201030 18:32:04.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.928" endtime="20201030 18:32:04.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.936" endtime="20201030 18:32:04.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.633" endtime="20201030 18:32:04.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.631" endtime="20201030 18:32:04.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.943" level="INFO">${RESULT} = [{'diff': 6.184700000000029e-05}, {'diff': 6.176399999999888e-05}, {'diff': 6.247200000000092e-05}, {'diff': 6.258300000000147e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.23889999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:04.940" endtime="20201030 18:32:04.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.947" level="INFO">${ACCURACY} = {'diff': [6.184700000000029e-05, 6.176399999999888e-05, 6.247200000000092e-05, 6.258300000000147e-05, 6.191700000000161e-05, 6.23889999999995e-05, 6.213899999999925e-05, 6.168100000000093e-05, 6.24299...</msg>
<status status="PASS" starttime="20201030 18:32:04.944" endtime="20201030 18:32:04.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.952" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.951" endtime="20201030 18:32:04.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.955" level="INFO">VALUE: [6.184700000000029e-05, 6.176399999999888e-05, 6.247200000000092e-05, 6.258300000000147e-05, 6.191700000000161e-05, 6.23889999999995e-05, 6.213899999999925e-05, 6.168100000000093e-05, 6.242999999999874e-05, 6.223600000000024e-05, 6.22629999999999e-05, 6.215199999999935e-05, 6.176399999999888e-05, 6.181900000000115e-05, 6.169400000000103e-05, 6.183300000000072e-05, 6.168000000000146e-05, 6.163900000000222e-05, 6.173599999999974e-05, 6.236100000000036e-05, 6.202800000000216e-05, 6.184700000000029e-05, 6.227799999999895e-05, 6.213900000000272e-05, 6.250000000000006e-05, 6.184799999999976e-05, 6.22499999999998e-05, 6.251399999999963e-05, 6.248699999999996e-05, 6.204100000000226e-05, 6.244400000000178e-05, 6.20690000000014e-05, 6.20140000000026e-05, 6.17499999999993e-05, 6.179099999999854e-05, 6.230500000000208e-05, 6.165300000000179e-05, 6.159700000000004e-05, 6.193100000000118e-05, 6.23889999999995e-05, 6.18750000000029e-05, 6.188799999999953e-05, 6.205599999999784e-05, 6.245900000000082e-05, 6.177800000000191e-05, 6.198599999999999e-05, 6.23889999999995e-05, 6.168100000000093e-05, 6.194499999999728e-05, 6.17080000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.953" endtime="20201030 18:32:04.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.948" endtime="20201030 18:32:04.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.961" endtime="20201030 18:32:04.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.959" endtime="20201030 18:32:04.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.958" endtime="20201030 18:32:04.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.595" endtime="20201030 18:32:04.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.595" endtime="20201030 18:32:04.981"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.990" endtime="20201030 18:32:05.010"></status>
</kw>
<msg timestamp="20201030 18:32:05.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.989" endtime="20201030 18:32:05.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.012" endtime="20201030 18:32:05.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.014" endtime="20201030 18:32:05.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.986" endtime="20201030 18:32:05.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.984" endtime="20201030 18:32:05.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.024" endtime="20201030 18:32:05.309"></status>
</kw>
<msg timestamp="20201030 18:32:05.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.022" endtime="20201030 18:32:05.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.313" endtime="20201030 18:32:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.321" endtime="20201030 18:32:05.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.019" endtime="20201030 18:32:05.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.018" endtime="20201030 18:32:05.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.328" level="INFO">${RESULT} = [{'diff': 6.282000000000162e-05}, {'diff': 6.350000000000106e-05}, {'diff': 6.269399999999856e-05}, {'diff': 6.326299999999743e-05}, {'diff': 6.345799999999888e-05}, {'diff': 6.276399999999988e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:05.325" endtime="20201030 18:32:05.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.333" level="INFO">${ACCURACY} = {'diff': [6.282000000000162e-05, 6.350000000000106e-05, 6.269399999999856e-05, 6.326299999999743e-05, 6.345799999999888e-05, 6.276399999999988e-05, 6.283300000000172e-05, 6.350000000000106e-05, 6.2805...</msg>
<status status="PASS" starttime="20201030 18:32:05.329" endtime="20201030 18:32:05.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.338" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.337" endtime="20201030 18:32:05.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.341" level="INFO">VALUE: [6.282000000000162e-05, 6.350000000000106e-05, 6.269399999999856e-05, 6.326299999999743e-05, 6.345799999999888e-05, 6.276399999999988e-05, 6.283300000000172e-05, 6.350000000000106e-05, 6.280500000000258e-05, 6.337499999999746e-05, 6.327799999999995e-05, 6.27080000000016e-05, 6.312500000000068e-05, 6.290299999999957e-05, 6.295899999999785e-05, 6.33340000000017e-05, 6.26950000000015e-05, 6.258400000000094e-05, 6.276399999999988e-05, 6.27089999999976e-05, 6.272300000000064e-05, 6.27630000000004e-05, 6.351300000000115e-05, 6.351400000000063e-05, 6.32500000000008e-05, 6.349999999999759e-05, 6.315299999999982e-05, 6.27219999999977e-05, 6.258300000000147e-05, 6.338899999999703e-05, 6.262500000000018e-05, 6.259700000000104e-05, 6.308300000000197e-05, 6.259800000000051e-05, 6.291699999999914e-05, 6.270900000000107e-05, 6.340300000000007e-05, 6.286100000000086e-05, 6.344499999999878e-05, 6.254099999999929e-05, 6.273600000000074e-05, 6.25690000000019e-05, 6.276400000000334e-05, 6.313900000000025e-05, 6.27500000000003e-05, 6.318099999999896e-05, 6.27500000000003e-05, 6.265299999999932e-05, 6.313900000000025e-05, 6.351400000000063e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.339" endtime="20201030 18:32:05.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.334" endtime="20201030 18:32:05.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.346" endtime="20201030 18:32:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.344" endtime="20201030 18:32:05.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.343" endtime="20201030 18:32:05.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.982" endtime="20201030 18:32:05.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.982" endtime="20201030 18:32:05.369"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.382" endtime="20201030 18:32:05.402"></status>
</kw>
<msg timestamp="20201030 18:32:05.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.379" endtime="20201030 18:32:05.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.404" endtime="20201030 18:32:05.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.407" endtime="20201030 18:32:05.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.376" endtime="20201030 18:32:05.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.373" endtime="20201030 18:32:05.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.416" endtime="20201030 18:32:05.703"></status>
</kw>
<msg timestamp="20201030 18:32:05.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027122819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027186444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.415" endtime="20201030 18:32:05.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027122819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027186444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.708" endtime="20201030 18:32:05.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.716" endtime="20201030 18:32:05.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.412" endtime="20201030 18:32:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.410" endtime="20201030 18:32:05.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.723" level="INFO">${RESULT} = [{'diff': 6.362500000000118e-05}, {'diff': 6.401399999999766e-05}, {'diff': 6.413899999999778e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.406899999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:05.720" endtime="20201030 18:32:05.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.727" level="INFO">${ACCURACY} = {'diff': [6.362500000000118e-05, 6.401399999999766e-05, 6.413899999999778e-05, 6.381899999999968e-05, 6.44440000000003e-05, 6.406899999999993e-05, 6.441700000000064e-05, 6.367999999999999e-05, 6.38470...</msg>
<status status="PASS" starttime="20201030 18:32:05.724" endtime="20201030 18:32:05.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.732" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.731" endtime="20201030 18:32:05.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.735" level="INFO">VALUE: [6.362500000000118e-05, 6.401399999999766e-05, 6.413899999999778e-05, 6.381899999999968e-05, 6.44440000000003e-05, 6.406899999999993e-05, 6.441700000000064e-05, 6.367999999999999e-05, 6.384700000000229e-05, 6.433399999999923e-05, 6.37639999999974e-05, 6.384699999999882e-05, 6.393099999999971e-05, 6.42089999999991e-05, 6.365300000000032e-05, 6.3889000000001e-05, 6.37089999999986e-05, 6.454200000000077e-05, 6.394499999999928e-05, 6.406899999999993e-05, 6.44020000000016e-05, 6.419400000000006e-05, 6.438899999999803e-05, 6.433299999999975e-05, 6.359699999999857e-05, 6.420799999999963e-05, 6.397199999999895e-05, 6.438899999999803e-05, 6.372200000000217e-05, 6.377800000000045e-05, 6.405599999999984e-05, 6.452799999999773e-05, 6.400000000000156e-05, 6.405599999999984e-05, 6.369499999999903e-05, 6.434700000000279e-05, 6.444499999999978e-05, 6.369399999999956e-05, 6.395799999999938e-05, 6.419400000000006e-05, 6.395799999999938e-05, 6.381899999999968e-05, 6.413899999999778e-05, 6.404200000000027e-05, 6.361100000000161e-05, 6.419400000000006e-05, 6.426400000000138e-05, 6.416699999999692e-05, 6.437499999999846e-05, 6.437499999999846e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.733" endtime="20201030 18:32:05.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.728" endtime="20201030 18:32:05.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.740" endtime="20201030 18:32:05.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.738" endtime="20201030 18:32:05.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.737" endtime="20201030 18:32:05.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.371" endtime="20201030 18:32:05.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.370" endtime="20201030 18:32:05.761"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.770" endtime="20201030 18:32:05.789"></status>
</kw>
<msg timestamp="20201030 18:32:05.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.768" endtime="20201030 18:32:05.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.791" endtime="20201030 18:32:05.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.793" endtime="20201030 18:32:05.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.765" endtime="20201030 18:32:05.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.763" endtime="20201030 18:32:05.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.803" endtime="20201030 18:32:06.088"></status>
</kw>
<msg timestamp="20201030 18:32:06.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.801" endtime="20201030 18:32:06.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.093" endtime="20201030 18:32:06.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.101" endtime="20201030 18:32:06.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.799" endtime="20201030 18:32:06.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.797" endtime="20201030 18:32:06.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.108" level="INFO">${RESULT} = [{'diff': 6.540300000000207e-05}, {'diff': 6.543100000000121e-05}, {'diff': 6.515300000000182e-05}, {'diff': 6.477799999999798e-05}, {'diff': 6.516600000000192e-05}, {'diff': 6.545800000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.105" endtime="20201030 18:32:06.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.112" level="INFO">${ACCURACY} = {'diff': [6.540300000000207e-05, 6.543100000000121e-05, 6.515300000000182e-05, 6.477799999999798e-05, 6.516600000000192e-05, 6.545800000000088e-05, 6.509700000000007e-05, 6.529100000000204e-05, 6.4889...</msg>
<status status="PASS" starttime="20201030 18:32:06.109" endtime="20201030 18:32:06.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.117" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.116" endtime="20201030 18:32:06.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.120" level="INFO">VALUE: [6.540300000000207e-05, 6.543100000000121e-05, 6.515300000000182e-05, 6.477799999999798e-05, 6.516600000000192e-05, 6.545800000000088e-05, 6.509700000000007e-05, 6.529100000000204e-05, 6.4889000000002e-05, 6.49440000000008e-05, 6.463900000000175e-05, 6.54440000000013e-05, 6.50280000000017e-05, 6.531900000000118e-05, 6.480599999999712e-05, 6.494500000000028e-05, 6.519500000000053e-05, 6.494500000000028e-05, 6.495899999999985e-05, 6.550000000000306e-05, 6.52639999999989e-05, 6.515299999999835e-05, 6.482000000000016e-05, 6.545800000000088e-05, 6.484699999999982e-05, 6.49440000000008e-05, 6.501399999999866e-05, 6.52220000000002e-05, 6.538899999999903e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.544399999999784e-05, 6.50830000000005e-05, 6.545799999999741e-05, 6.461100000000261e-05, 6.469500000000003e-05, 6.549999999999959e-05, 6.529199999999805e-05, 6.54029999999986e-05, 6.462499999999871e-05, 6.488899999999853e-05, 6.527799999999848e-05, 6.455599999999687e-05, 6.473599999999927e-05, 6.527799999999848e-05, 6.491600000000167e-05, 6.462499999999871e-05, 6.462499999999871e-05, 6.47219999999997e-05, 6.506900000000093e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.118" endtime="20201030 18:32:06.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.113" endtime="20201030 18:32:06.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.126" endtime="20201030 18:32:06.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.124" endtime="20201030 18:32:06.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.123" endtime="20201030 18:32:06.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.761" endtime="20201030 18:32:06.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.761" endtime="20201030 18:32:06.146"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.155" endtime="20201030 18:32:06.175"></status>
</kw>
<msg timestamp="20201030 18:32:06.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.154" endtime="20201030 18:32:06.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.176" endtime="20201030 18:32:06.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.179" endtime="20201030 18:32:06.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.151" endtime="20201030 18:32:06.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.149" endtime="20201030 18:32:06.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.188" endtime="20201030 18:32:06.474"></status>
</kw>
<msg timestamp="20201030 18:32:06.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:06.186" endtime="20201030 18:32:06.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:06.478" endtime="20201030 18:32:06.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.486" endtime="20201030 18:32:06.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.184" endtime="20201030 18:32:06.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.182" endtime="20201030 18:32:06.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.493" level="INFO">${RESULT} = [{'diff': 6.616699999999892e-05}, {'diff': 6.62220000000012e-05}, {'diff': 6.590199999999963e-05}, {'diff': 6.651400000000016e-05}, {'diff': 6.609800000000055e-05}, {'diff': 6.587499999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:06.490" endtime="20201030 18:32:06.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.501" level="INFO">${ACCURACY} = {'diff': [6.616699999999892e-05, 6.62220000000012e-05, 6.590199999999963e-05, 6.651400000000016e-05, 6.609800000000055e-05, 6.587499999999996e-05, 6.60830000000015e-05, 6.625000000000034e-05, 6.594400...</msg>
<status status="PASS" starttime="20201030 18:32:06.494" endtime="20201030 18:32:06.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.506" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.505" endtime="20201030 18:32:06.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.508" level="INFO">VALUE: [6.616699999999892e-05, 6.62220000000012e-05, 6.590199999999963e-05, 6.651400000000016e-05, 6.609800000000055e-05, 6.587499999999996e-05, 6.60830000000015e-05, 6.625000000000034e-05, 6.59440000000018e-05, 6.601399999999966e-05, 6.559700000000057e-05, 6.586100000000039e-05, 6.643099999999874e-05, 6.613899999999978e-05, 6.641700000000264e-05, 6.620899999999763e-05, 6.618100000000196e-05, 6.618099999999849e-05, 6.60419999999988e-05, 6.55700000000009e-05, 6.644399999999884e-05, 6.652700000000025e-05, 6.616699999999892e-05, 6.583300000000125e-05, 6.580499999999864e-05, 6.600000000000009e-05, 6.64029999999996e-05, 6.588899999999953e-05, 6.651400000000016e-05, 6.619400000000206e-05, 6.64029999999996e-05, 6.633300000000175e-05, 6.616700000000239e-05, 6.615299999999935e-05, 6.568100000000146e-05, 6.59029999999991e-05, 6.57639999999994e-05, 6.558400000000048e-05, 6.6277e-05, 6.594499999999781e-05, 6.588800000000006e-05, 6.587499999999996e-05, 6.595800000000138e-05, 6.595800000000138e-05, 6.588899999999953e-05, 6.652799999999973e-05, 6.568099999999799e-05, 6.57639999999994e-05, 6.57220000000007e-05, 6.651400000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.507" endtime="20201030 18:32:06.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.502" endtime="20201030 18:32:06.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.513" endtime="20201030 18:32:06.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.512" endtime="20201030 18:32:06.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.511" endtime="20201030 18:32:06.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.147" endtime="20201030 18:32:06.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.147" endtime="20201030 18:32:06.534"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.543" endtime="20201030 18:32:06.562"></status>
</kw>
<msg timestamp="20201030 18:32:06.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.542" endtime="20201030 18:32:06.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.564" endtime="20201030 18:32:06.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.567" endtime="20201030 18:32:06.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.539" endtime="20201030 18:32:06.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.537" endtime="20201030 18:32:06.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.576" endtime="20201030 18:32:06.863"></status>
</kw>
<msg timestamp="20201030 18:32:06.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:06.574" endtime="20201030 18:32:06.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:06.867" endtime="20201030 18:32:06.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.876" endtime="20201030 18:32:06.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.572" endtime="20201030 18:32:06.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.570" endtime="20201030 18:32:06.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.883" level="INFO">${RESULT} = [{'diff': 6.679199999999955e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.695900000000185e-05}, {'diff': 6.694499999999881e-05}, {'diff': 6.748600000000202e-05}, {'diff': 6.680499999999964e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.879" endtime="20201030 18:32:06.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.887" level="INFO">${ACCURACY} = {'diff': [6.679199999999955e-05, 6.665299999999985e-05, 6.695900000000185e-05, 6.694499999999881e-05, 6.748600000000202e-05, 6.680499999999964e-05, 6.719399999999959e-05, 6.688900000000053e-05, 6.7402...</msg>
<status status="PASS" starttime="20201030 18:32:06.884" endtime="20201030 18:32:06.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.892" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.890" endtime="20201030 18:32:06.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.894" level="INFO">VALUE: [6.679199999999955e-05, 6.665299999999985e-05, 6.695900000000185e-05, 6.694499999999881e-05, 6.748600000000202e-05, 6.680499999999964e-05, 6.719399999999959e-05, 6.688900000000053e-05, 6.740299999999713e-05, 6.702800000000023e-05, 6.70419999999998e-05, 6.701400000000066e-05, 6.680499999999964e-05, 6.651400000000016e-05, 6.67220000000017e-05, 6.694499999999881e-05, 6.738900000000103e-05, 6.738900000000103e-05, 6.751399999999769e-05, 6.659800000000105e-05, 6.74160000000007e-05, 6.738900000000103e-05, 6.674999999999737e-05, 6.719500000000253e-05, 6.663799999999734e-05, 6.701400000000066e-05, 6.69160000000002e-05, 6.743000000000027e-05, 6.706899999999946e-05, 6.731899999999971e-05, 6.688899999999706e-05, 6.748599999999855e-05, 6.70700000000024e-05, 6.744499999999931e-05, 6.680599999999912e-05, 6.655600000000234e-05, 6.729200000000005e-05, 6.672199999999823e-05, 6.656999999999844e-05, 6.655599999999887e-05, 6.711199999999765e-05, 6.731899999999971e-05, 6.687500000000096e-05, 6.74030000000006e-05, 6.658299999999853e-05, 6.737499999999799e-05, 6.745799999999941e-05, 6.670799999999866e-05, 6.672199999999823e-05, 6.69030000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.893" endtime="20201030 18:32:06.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.888" endtime="20201030 18:32:06.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.899" endtime="20201030 18:32:06.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.898" endtime="20201030 18:32:06.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.896" endtime="20201030 18:32:06.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.535" endtime="20201030 18:32:06.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.534" endtime="20201030 18:32:06.920"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.929" endtime="20201030 18:32:06.949"></status>
</kw>
<msg timestamp="20201030 18:32:06.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.927" endtime="20201030 18:32:06.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.950" endtime="20201030 18:32:06.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.953" endtime="20201030 18:32:06.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.925" endtime="20201030 18:32:06.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.923" endtime="20201030 18:32:06.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.962" endtime="20201030 18:32:07.248"></status>
</kw>
<msg timestamp="20201030 18:32:07.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.961" endtime="20201030 18:32:07.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.252" endtime="20201030 18:32:07.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.261" endtime="20201030 18:32:07.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.958" endtime="20201030 18:32:07.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.956" endtime="20201030 18:32:07.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.268" level="INFO">${RESULT} = [{'diff': 6.781900000000021e-05}, {'diff': 6.813899999999831e-05}, {'diff': 6.806899999999699e-05}, {'diff': 6.851399999999869e-05}, {'diff': 6.801399999999819e-05}, {'diff': 6.794499999999981e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:07.264" endtime="20201030 18:32:07.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.272" level="INFO">${ACCURACY} = {'diff': [6.781900000000021e-05, 6.813899999999831e-05, 6.806899999999699e-05, 6.851399999999869e-05, 6.801399999999819e-05, 6.794499999999981e-05, 6.756999999999944e-05, 6.797300000000242e-05, 6.8292...</msg>
<status status="PASS" starttime="20201030 18:32:07.269" endtime="20201030 18:32:07.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.277" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.276" endtime="20201030 18:32:07.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.279" level="INFO">VALUE: [6.781900000000021e-05, 6.813899999999831e-05, 6.806899999999699e-05, 6.851399999999869e-05, 6.801399999999819e-05, 6.794499999999981e-05, 6.756999999999944e-05, 6.797300000000242e-05, 6.829200000000105e-05, 6.78480000000023e-05, 6.800000000000209e-05, 6.797199999999948e-05, 6.843000000000127e-05, 6.850000000000259e-05, 6.843000000000127e-05, 6.770799999999966e-05, 6.813899999999831e-05, 6.830499999999767e-05, 6.776399999999794e-05, 6.840299999999813e-05, 6.851399999999869e-05, 6.830600000000062e-05, 6.783299999999978e-05, 6.783400000000273e-05, 6.769499999999956e-05, 6.812500000000221e-05, 6.809799999999908e-05, 6.801399999999819e-05, 6.801399999999819e-05, 6.790199999999816e-05, 6.79160000000012e-05, 6.77909999999976e-05, 6.837500000000246e-05, 6.763900000000128e-05, 6.794400000000034e-05, 6.851399999999869e-05, 6.781900000000021e-05, 6.802799999999776e-05, 6.833300000000028e-05, 6.799999999999862e-05, 6.840299999999813e-05, 6.769499999999956e-05, 6.849999999999912e-05, 6.788900000000153e-05, 6.849999999999912e-05, 6.811099999999917e-05, 6.794400000000034e-05, 6.813799999999884e-05, 6.843000000000127e-05, 6.777800000000098e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.278" endtime="20201030 18:32:07.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.273" endtime="20201030 18:32:07.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.285" endtime="20201030 18:32:07.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.284" endtime="20201030 18:32:07.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.283" endtime="20201030 18:32:07.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.921" endtime="20201030 18:32:07.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.920" endtime="20201030 18:32:07.306"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.315" endtime="20201030 18:32:07.334"></status>
</kw>
<msg timestamp="20201030 18:32:07.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.313" endtime="20201030 18:32:07.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.336" endtime="20201030 18:32:07.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.338" endtime="20201030 18:32:07.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.311" endtime="20201030 18:32:07.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.309" endtime="20201030 18:32:07.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.347" endtime="20201030 18:32:07.634"></status>
</kw>
<msg timestamp="20201030 18:32:07.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.346" endtime="20201030 18:32:07.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.639" endtime="20201030 18:32:07.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.647" endtime="20201030 18:32:07.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.343" endtime="20201030 18:32:07.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.341" endtime="20201030 18:32:07.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.654" level="INFO">${RESULT} = [{'diff': 6.924999999999987e-05}, {'diff': 6.861099999999967e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.927799999999901e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.950000000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:07.651" endtime="20201030 18:32:07.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.659" level="INFO">${ACCURACY} = {'diff': [6.924999999999987e-05, 6.861099999999967e-05, 6.938899999999956e-05, 6.927799999999901e-05, 6.894400000000134e-05, 6.950000000000012e-05, 6.952799999999926e-05, 6.913900000000278e-05, 6.8555...</msg>
<status status="PASS" starttime="20201030 18:32:07.655" endtime="20201030 18:32:07.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.664" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.663" endtime="20201030 18:32:07.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.666" level="INFO">VALUE: [6.924999999999987e-05, 6.861099999999967e-05, 6.938899999999956e-05, 6.927799999999901e-05, 6.894400000000134e-05, 6.950000000000012e-05, 6.952799999999926e-05, 6.913900000000278e-05, 6.85559999999974e-05, 6.934800000000033e-05, 6.881900000000121e-05, 6.912499999999974e-05, 6.952699999999978e-05, 6.927699999999953e-05, 6.883300000000078e-05, 6.905499999999842e-05, 6.934699999999738e-05, 6.894399999999787e-05, 6.94299999999988e-05, 6.85420000000013e-05, 6.85970000000001e-05, 6.927800000000248e-05, 6.933300000000128e-05, 6.863899999999881e-05, 6.85559999999974e-05, 6.934800000000033e-05, 6.879200000000155e-05, 6.951399999999969e-05, 6.930599999999815e-05, 6.902699999999928e-05, 6.87359999999998e-05, 6.898600000000005e-05, 6.931899999999824e-05, 6.90840000000005e-05, 6.905499999999842e-05, 6.952799999999926e-05, 6.881900000000121e-05, 6.855500000000139e-05, 6.870800000000066e-05, 6.877799999999851e-05, 6.862499999999924e-05, 6.888899999999906e-05, 6.870900000000013e-05, 6.950000000000012e-05, 6.92230000000002e-05, 6.890299999999863e-05, 6.948700000000002e-05, 6.87359999999998e-05, 6.884700000000035e-05, 6.948600000000055e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.665" endtime="20201030 18:32:07.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.660" endtime="20201030 18:32:07.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.672" endtime="20201030 18:32:07.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.670" endtime="20201030 18:32:07.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.669" endtime="20201030 18:32:07.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.307" endtime="20201030 18:32:07.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.306" endtime="20201030 18:32:07.693"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.702" endtime="20201030 18:32:07.721"></status>
</kw>
<msg timestamp="20201030 18:32:07.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.700" endtime="20201030 18:32:07.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.722" endtime="20201030 18:32:07.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.725" endtime="20201030 18:32:07.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.697" endtime="20201030 18:32:07.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.695" endtime="20201030 18:32:07.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.734" endtime="20201030 18:32:08.020"></status>
</kw>
<msg timestamp="20201030 18:32:08.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.733" endtime="20201030 18:32:08.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.024" endtime="20201030 18:32:08.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.033" endtime="20201030 18:32:08.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.730" endtime="20201030 18:32:08.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.728" endtime="20201030 18:32:08.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.040" level="INFO">${RESULT} = [{'diff': 7.007000000000194e-05}, {'diff': 7.006900000000246e-05}, {'diff': 7.00970000000016e-05}, {'diff': 7.033399999999829e-05}, {'diff': 6.993099999999877e-05}, {'diff': 7.006999999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:08.037" endtime="20201030 18:32:08.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.044" level="INFO">${ACCURACY} = {'diff': [7.007000000000194e-05, 7.006900000000246e-05, 7.00970000000016e-05, 7.033399999999829e-05, 6.993099999999877e-05, 7.006999999999847e-05, 6.997300000000095e-05, 7.047199999999851e-05, 7.01390...</msg>
<status status="PASS" starttime="20201030 18:32:08.041" endtime="20201030 18:32:08.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.049" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.048" endtime="20201030 18:32:08.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.051" level="INFO">VALUE: [7.007000000000194e-05, 7.006900000000246e-05, 7.00970000000016e-05, 7.033399999999829e-05, 6.993099999999877e-05, 7.006999999999847e-05, 6.997300000000095e-05, 7.047199999999851e-05, 7.013900000000031e-05, 7.026400000000044e-05, 6.988799999999712e-05, 6.995799999999844e-05, 7.034699999999838e-05, 6.972199999999776e-05, 7.043100000000274e-05, 7.041700000000317e-05, 7.052800000000026e-05, 7.01109999999977e-05, 7.016699999999945e-05, 6.997200000000148e-05, 7.026399999999697e-05, 6.984800000000083e-05, 7.037500000000099e-05, 6.983400000000126e-05, 6.958299999999806e-05, 7.045799999999894e-05, 6.977799999999951e-05, 6.967999999999905e-05, 7.033299999999881e-05, 7.008299999999856e-05, 7.04169999999997e-05, 7.025000000000087e-05, 6.970799999999819e-05, 7.043099999999927e-05, 6.981900000000221e-05, 7.054199999999983e-05, 7.008399999999804e-05, 6.969500000000156e-05, 7.016699999999945e-05, 7.050000000000112e-05, 6.958300000000153e-05, 6.976399999999994e-05, 7.01109999999977e-05, 7.030499999999967e-05, 7.047199999999851e-05, 7.00559999999989e-05, 7.051399999999722e-05, 7.019399999999912e-05, 6.99299999999993e-05, 6.995799999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.050" endtime="20201030 18:32:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.045" endtime="20201030 18:32:08.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.057" endtime="20201030 18:32:08.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.055" endtime="20201030 18:32:08.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.054" endtime="20201030 18:32:08.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.694" endtime="20201030 18:32:08.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.693" endtime="20201030 18:32:08.077"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.086" endtime="20201030 18:32:08.107"></status>
</kw>
<msg timestamp="20201030 18:32:08.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.085" endtime="20201030 18:32:08.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.109" endtime="20201030 18:32:08.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.111" endtime="20201030 18:32:08.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.082" endtime="20201030 18:32:08.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.080" endtime="20201030 18:32:08.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.121" endtime="20201030 18:32:08.406"></status>
</kw>
<msg timestamp="20201030 18:32:08.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:08.119" endtime="20201030 18:32:08.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:08.410" endtime="20201030 18:32:08.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.419" endtime="20201030 18:32:08.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.116" endtime="20201030 18:32:08.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.114" endtime="20201030 18:32:08.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.425" level="INFO">${RESULT} = [{'diff': 7.081899999999974e-05}, {'diff': 7.104200000000033e-05}, {'diff': 7.097200000000248e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.09170000000002e-05}, {'diff': 7.140300000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:08.422" endtime="20201030 18:32:08.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.430" level="INFO">${ACCURACY} = {'diff': [7.081899999999974e-05, 7.104200000000033e-05, 7.097200000000248e-05, 7.133299999999981e-05, 7.09170000000002e-05, 7.140300000000113e-05, 7.063899999999734e-05, 7.10559999999999e-05, 7.140199...</msg>
<status status="PASS" starttime="20201030 18:32:08.426" endtime="20201030 18:32:08.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.434" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.433" endtime="20201030 18:32:08.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.437" level="INFO">VALUE: [7.081899999999974e-05, 7.104200000000033e-05, 7.097200000000248e-05, 7.133299999999981e-05, 7.09170000000002e-05, 7.140300000000113e-05, 7.063899999999734e-05, 7.10559999999999e-05, 7.140199999999819e-05, 7.081900000000321e-05, 7.065300000000038e-05, 7.080500000000017e-05, 7.072199999999876e-05, 7.058299999999906e-05, 7.152800000000126e-05, 7.099999999999815e-05, 7.077800000000051e-05, 7.065300000000038e-05, 7.111100000000217e-05, 7.069499999999909e-05, 7.113899999999784e-05, 7.112499999999827e-05, 7.079200000000008e-05, 7.101400000000119e-05, 7.140299999999766e-05, 7.14300000000008e-05, 7.131999999999972e-05, 7.05689999999995e-05, 7.087500000000149e-05, 7.079200000000008e-05, 7.097199999999901e-05, 7.140300000000113e-05, 7.150000000000212e-05, 7.120799999999969e-05, 7.120799999999969e-05, 7.133299999999981e-05, 7.098600000000205e-05, 7.152800000000126e-05, 7.058399999999854e-05, 7.0584000000002e-05, 7.119400000000012e-05, 7.075000000000137e-05, 7.072199999999876e-05, 7.136100000000242e-05, 7.105500000000042e-05, 7.111100000000217e-05, 7.14439999999969e-05, 7.084700000000235e-05, 7.087500000000149e-05, 7.090300000000063e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.435" endtime="20201030 18:32:08.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.431" endtime="20201030 18:32:08.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.447" endtime="20201030 18:32:08.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.446" endtime="20201030 18:32:08.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.445" endtime="20201030 18:32:08.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.078" endtime="20201030 18:32:08.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.078" endtime="20201030 18:32:08.468"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.477" endtime="20201030 18:32:08.497"></status>
</kw>
<msg timestamp="20201030 18:32:08.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.475" endtime="20201030 18:32:08.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.499" endtime="20201030 18:32:08.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.502" endtime="20201030 18:32:08.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.473" endtime="20201030 18:32:08.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.471" endtime="20201030 18:32:08.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.511" endtime="20201030 18:32:08.796"></status>
</kw>
<msg timestamp="20201030 18:32:08.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.509" endtime="20201030 18:32:08.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.800" endtime="20201030 18:32:08.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.809" endtime="20201030 18:32:08.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.507" endtime="20201030 18:32:08.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.505" endtime="20201030 18:32:08.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.815" level="INFO">${RESULT} = [{'diff': 7.15560000000004e-05}, {'diff': 7.240299999999866e-05}, {'diff': 7.158399999999954e-05}, {'diff': 7.201400000000219e-05}, {'diff': 7.213900000000231e-05}, {'diff': 7.162499999999877e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:08.812" endtime="20201030 18:32:08.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.821" level="INFO">${ACCURACY} = {'diff': [7.15560000000004e-05, 7.240299999999866e-05, 7.158399999999954e-05, 7.201400000000219e-05, 7.213900000000231e-05, 7.162499999999877e-05, 7.207000000000047e-05, 7.172199999999976e-05, 7.17769...</msg>
<status status="PASS" starttime="20201030 18:32:08.816" endtime="20201030 18:32:08.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.825" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.824" endtime="20201030 18:32:08.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.828" level="INFO">VALUE: [7.15560000000004e-05, 7.240299999999866e-05, 7.158399999999954e-05, 7.201400000000219e-05, 7.213900000000231e-05, 7.162499999999877e-05, 7.207000000000047e-05, 7.172199999999976e-05, 7.177699999999856e-05, 7.216599999999851e-05, 7.23049999999982e-05, 7.222200000000026e-05, 7.212499999999927e-05, 7.170800000000019e-05, 7.158300000000006e-05, 7.240300000000213e-05, 7.227799999999854e-05, 7.249999999999965e-05, 7.226400000000244e-05, 7.2069999999997e-05, 7.202800000000176e-05, 7.193100000000077e-05, 7.176300000000246e-05, 7.170800000000019e-05, 7.188899999999859e-05, 7.218000000000155e-05, 7.194400000000087e-05, 7.241699999999823e-05, 7.241599999999876e-05, 7.233300000000081e-05, 7.181900000000074e-05, 7.226399999999897e-05, 7.204200000000133e-05, 7.154200000000083e-05, 7.186099999999945e-05, 7.232000000000072e-05, 7.208400000000004e-05, 7.220800000000069e-05, 7.230600000000115e-05, 7.198599999999958e-05, 7.209700000000013e-05, 7.181899999999727e-05, 7.176399999999847e-05, 7.218100000000102e-05, 7.219399999999765e-05, 7.213899999999884e-05, 7.188899999999859e-05, 7.251400000000269e-05, 7.190300000000163e-05, 7.226400000000244e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.826" endtime="20201030 18:32:08.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.822" endtime="20201030 18:32:08.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.833" endtime="20201030 18:32:08.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.832" endtime="20201030 18:32:08.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.830" endtime="20201030 18:32:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.469" endtime="20201030 18:32:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.468" endtime="20201030 18:32:08.854"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.863" endtime="20201030 18:32:08.883"></status>
</kw>
<msg timestamp="20201030 18:32:08.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.861" endtime="20201030 18:32:08.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.884" endtime="20201030 18:32:08.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.887" endtime="20201030 18:32:08.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.859" endtime="20201030 18:32:08.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.856" endtime="20201030 18:32:08.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.896" endtime="20201030 18:32:09.182"></status>
</kw>
<msg timestamp="20201030 18:32:09.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.895" endtime="20201030 18:32:09.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.186" endtime="20201030 18:32:09.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.195" endtime="20201030 18:32:09.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.892" endtime="20201030 18:32:09.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.890" endtime="20201030 18:32:09.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.202" level="INFO">${RESULT} = [{'diff': 7.308400000000104e-05}, {'diff': 7.313900000000331e-05}, {'diff': 7.283300000000131e-05}, {'diff': 7.354199999999936e-05}, {'diff': 7.349999999999718e-05}, {'diff': 7.316699999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:09.198" endtime="20201030 18:32:09.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.206" level="INFO">${ACCURACY} = {'diff': [7.308400000000104e-05, 7.313900000000331e-05, 7.283300000000131e-05, 7.354199999999936e-05, 7.349999999999718e-05, 7.316699999999898e-05, 7.33049999999992e-05, 7.329099999999963e-05, 7.29580...</msg>
<status status="PASS" starttime="20201030 18:32:09.203" endtime="20201030 18:32:09.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.211" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.209" endtime="20201030 18:32:09.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.213" level="INFO">VALUE: [7.308400000000104e-05, 7.313900000000331e-05, 7.283300000000131e-05, 7.354199999999936e-05, 7.349999999999718e-05, 7.316699999999898e-05, 7.33049999999992e-05, 7.329099999999963e-05, 7.295800000000144e-05, 7.273599999999686e-05, 7.283299999999784e-05, 7.312500000000027e-05, 7.331999999999825e-05, 7.298600000000058e-05, 7.332000000000172e-05, 7.298700000000005e-05, 7.269500000000109e-05, 7.263899999999934e-05, 7.308300000000156e-05, 7.29439999999984e-05, 7.33049999999992e-05, 7.351400000000022e-05, 7.283299999999784e-05, 7.270800000000119e-05, 7.301399999999972e-05, 7.305499999999895e-05, 7.320800000000169e-05, 7.326399999999997e-05, 7.345900000000141e-05, 7.262499999999977e-05, 7.338900000000009e-05, 7.315299999999941e-05, 7.33049999999992e-05, 7.29300000000023e-05, 7.262499999999977e-05, 7.281899999999827e-05, 7.350000000000065e-05, 7.32500000000004e-05, 7.258300000000106e-05, 7.354199999999936e-05, 7.273599999999686e-05, 7.295800000000144e-05, 7.313899999999984e-05, 7.347299999999751e-05, 7.27499999999999e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.301400000000319e-05, 7.313800000000037e-05, 7.329200000000258e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.212" endtime="20201030 18:32:09.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.207" endtime="20201030 18:32:09.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.218" endtime="20201030 18:32:09.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.217" endtime="20201030 18:32:09.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.215" endtime="20201030 18:32:09.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.855" endtime="20201030 18:32:09.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.854" endtime="20201030 18:32:09.239"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.248" endtime="20201030 18:32:09.269"></status>
</kw>
<msg timestamp="20201030 18:32:09.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.246" endtime="20201030 18:32:09.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.271" endtime="20201030 18:32:09.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.273" endtime="20201030 18:32:09.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.244" endtime="20201030 18:32:09.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.242" endtime="20201030 18:32:09.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.283" endtime="20201030 18:32:09.569"></status>
</kw>
<msg timestamp="20201030 18:32:09.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020979431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.281" endtime="20201030 18:32:09.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020979431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.573" endtime="20201030 18:32:09.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.582" endtime="20201030 18:32:09.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.279" endtime="20201030 18:32:09.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.277" endtime="20201030 18:32:09.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.589" level="INFO">${RESULT} = [{'diff': 7.35829999999986e-05}, {'diff': 7.387500000000102e-05}, {'diff': 7.409799999999814e-05}, {'diff': 7.394500000000234e-05}, {'diff': 7.370900000000166e-05}, {'diff': 7.369499999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:09.585" endtime="20201030 18:32:09.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.593" level="INFO">${ACCURACY} = {'diff': [7.35829999999986e-05, 7.387500000000102e-05, 7.409799999999814e-05, 7.394500000000234e-05, 7.370900000000166e-05, 7.369499999999862e-05, 7.38049999999997e-05, 7.387499999999755e-05, 7.394399...</msg>
<status status="PASS" starttime="20201030 18:32:09.590" endtime="20201030 18:32:09.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.598" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.597" endtime="20201030 18:32:09.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.601" level="INFO">VALUE: [7.35829999999986e-05, 7.387500000000102e-05, 7.409799999999814e-05, 7.394500000000234e-05, 7.370900000000166e-05, 7.369499999999862e-05, 7.38049999999997e-05, 7.387499999999755e-05, 7.39439999999994e-05, 7.391600000000026e-05, 7.437500000000152e-05, 7.408300000000256e-05, 7.426400000000097e-05, 7.39439999999994e-05, 7.355499999999945e-05, 7.436100000000195e-05, 7.438899999999762e-05, 7.359700000000163e-05, 7.391699999999973e-05, 7.383399999999832e-05, 7.39309999999993e-05, 7.413900000000084e-05, 7.438799999999815e-05, 7.369500000000209e-05, 7.423599999999836e-05, 7.369399999999915e-05, 7.427799999999707e-05, 7.359700000000163e-05, 7.365300000000338e-05, 7.451400000000122e-05, 7.361099999999773e-05, 7.394500000000234e-05, 7.370799999999872e-05, 7.405599999999943e-05, 7.4069999999999e-05, 7.358399999999807e-05, 7.427800000000054e-05, 7.355599999999893e-05, 7.395799999999897e-05, 7.42630000000015e-05, 7.418000000000008e-05, 7.377700000000056e-05, 7.40829999999991e-05, 7.452800000000079e-05, 7.434699999999891e-05, 7.359699999999816e-05, 7.39439999999994e-05, 7.451399999999775e-05, 7.383399999999832e-05, 7.401399999999725e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.600" endtime="20201030 18:32:09.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.594" endtime="20201030 18:32:09.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.607" endtime="20201030 18:32:09.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.606" endtime="20201030 18:32:09.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.605" endtime="20201030 18:32:09.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.240" endtime="20201030 18:32:09.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.240" endtime="20201030 18:32:09.628"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.637" endtime="20201030 18:32:09.657"></status>
</kw>
<msg timestamp="20201030 18:32:09.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.636" endtime="20201030 18:32:09.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.659" endtime="20201030 18:32:09.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.661" endtime="20201030 18:32:09.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.633" endtime="20201030 18:32:09.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.631" endtime="20201030 18:32:09.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.671" endtime="20201030 18:32:09.957"></status>
</kw>
<msg timestamp="20201030 18:32:09.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.669" endtime="20201030 18:32:09.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.961" endtime="20201030 18:32:09.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.970" endtime="20201030 18:32:09.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.666" endtime="20201030 18:32:09.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.665" endtime="20201030 18:32:09.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.976" level="INFO">${RESULT} = [{'diff': 7.509699999999966e-05}, {'diff': 7.538899999999862e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.483299999999984e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.46249999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:09.973" endtime="20201030 18:32:09.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.984" level="INFO">${ACCURACY} = {'diff': [7.509699999999966e-05, 7.538899999999862e-05, 7.541699999999776e-05, 7.483299999999984e-05, 7.54440000000009e-05, 7.46249999999983e-05, 7.527799999999807e-05, 7.470799999999972e-05, 7.502800...</msg>
<status status="PASS" starttime="20201030 18:32:09.977" endtime="20201030 18:32:09.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.989" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.988" endtime="20201030 18:32:09.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.991" level="INFO">VALUE: [7.509699999999966e-05, 7.538899999999862e-05, 7.541699999999776e-05, 7.483299999999984e-05, 7.54440000000009e-05, 7.46249999999983e-05, 7.527799999999807e-05, 7.470799999999972e-05, 7.502800000000129e-05, 7.468100000000005e-05, 7.547200000000004e-05, 7.500000000000215e-05, 7.502800000000129e-05, 7.54310000000008e-05, 7.487499999999855e-05, 7.488800000000212e-05, 7.456900000000002e-05, 7.509699999999966e-05, 7.54440000000009e-05, 7.461099999999873e-05, 7.484700000000288e-05, 7.551400000000222e-05, 7.524999999999893e-05, 7.549999999999918e-05, 7.45829999999996e-05, 7.501400000000172e-05, 7.522199999999979e-05, 7.494499999999987e-05, 7.483399999999932e-05, 7.469499999999962e-05, 7.463899999999787e-05, 7.506900000000052e-05, 7.47500000000019e-05, 7.506900000000052e-05, 7.498600000000258e-05, 7.481900000000027e-05, 7.505500000000095e-05, 7.470799999999972e-05, 7.511099999999923e-05, 7.5457999999997e-05, 7.544500000000037e-05, 7.494499999999987e-05, 7.551400000000222e-05, 7.474999999999843e-05, 7.530600000000068e-05, 7.47500000000019e-05, 7.527800000000154e-05, 7.51249999999988e-05, 7.513899999999837e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.990" endtime="20201030 18:32:09.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.985" endtime="20201030 18:32:09.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.996" endtime="20201030 18:32:10.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.995" endtime="20201030 18:32:10.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.994" endtime="20201030 18:32:10.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.629" endtime="20201030 18:32:10.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.628" endtime="20201030 18:32:10.018"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.034" endtime="20201030 18:32:10.055"></status>
</kw>
<msg timestamp="20201030 18:32:10.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.031" endtime="20201030 18:32:10.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.057" endtime="20201030 18:32:10.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.059" endtime="20201030 18:32:10.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.027" endtime="20201030 18:32:10.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.023" endtime="20201030 18:32:10.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.069" endtime="20201030 18:32:10.356"></status>
</kw>
<msg timestamp="20201030 18:32:10.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028677778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028754292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.067" endtime="20201030 18:32:10.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028677778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028754292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.360" endtime="20201030 18:32:10.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.368" endtime="20201030 18:32:10.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.064" endtime="20201030 18:32:10.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.062" endtime="20201030 18:32:10.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.375" level="INFO">${RESULT} = [{'diff': 7.651399999999975e-05}, {'diff': 7.563900000000234e-05}, {'diff': 7.652799999999932e-05}, {'diff': 7.583300000000084e-05}, {'diff': 7.559700000000016e-05}, {'diff': 7.645800000000147e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:10.372" endtime="20201030 18:32:10.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.380" level="INFO">${ACCURACY} = {'diff': [7.651399999999975e-05, 7.563900000000234e-05, 7.652799999999932e-05, 7.583300000000084e-05, 7.559700000000016e-05, 7.645800000000147e-05, 7.637500000000005e-05, 7.593000000000183e-05, 7.5735...</msg>
<status status="PASS" starttime="20201030 18:32:10.376" endtime="20201030 18:32:10.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.384" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.383" endtime="20201030 18:32:10.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.387" level="INFO">VALUE: [7.651399999999975e-05, 7.563900000000234e-05, 7.652799999999932e-05, 7.583300000000084e-05, 7.559700000000016e-05, 7.645800000000147e-05, 7.637500000000005e-05, 7.593000000000183e-05, 7.573599999999986e-05, 7.640300000000266e-05, 7.55830000000006e-05, 7.598600000000011e-05, 7.55830000000006e-05, 7.606900000000152e-05, 7.588899999999912e-05, 7.573599999999986e-05, 7.64310000000018e-05, 7.604199999999839e-05, 7.615299999999894e-05, 7.569500000000062e-05, 7.633400000000082e-05, 7.588899999999912e-05, 7.626300000000003e-05, 7.626300000000003e-05, 7.59440000000014e-05, 7.647200000000104e-05, 7.584700000000041e-05, 7.648599999999714e-05, 7.651399999999975e-05, 7.619400000000165e-05, 7.651399999999975e-05, 7.645900000000094e-05, 7.569500000000062e-05, 7.622300000000026e-05, 7.619500000000112e-05, 7.602799999999882e-05, 7.601299999999978e-05, 7.590300000000216e-05, 7.654099999999942e-05, 7.6069000000005e-05, 7.630599999999821e-05, 7.647200000000104e-05, 7.633300000000481e-05, 7.590299999999522e-05, 7.652799999999932e-05, 7.574999999999943e-05, 7.582000000000422e-05, 7.5763999999999e-05, 7.62639999999995e-05, 7.588899999999565e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.385" endtime="20201030 18:32:10.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.380" endtime="20201030 18:32:10.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.392" endtime="20201030 18:32:10.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.390" endtime="20201030 18:32:10.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.389" endtime="20201030 18:32:10.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.020" endtime="20201030 18:32:10.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.019" endtime="20201030 18:32:10.413"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.422" endtime="20201030 18:32:10.443"></status>
</kw>
<msg timestamp="20201030 18:32:10.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.420" endtime="20201030 18:32:10.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.444" endtime="20201030 18:32:10.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.447" endtime="20201030 18:32:10.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.417" endtime="20201030 18:32:10.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.415" endtime="20201030 18:32:10.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.456" endtime="20201030 18:32:10.742"></status>
</kw>
<msg timestamp="20201030 18:32:10.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.455" endtime="20201030 18:32:10.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.746" endtime="20201030 18:32:10.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.755" endtime="20201030 18:32:10.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.452" endtime="20201030 18:32:10.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.450" endtime="20201030 18:32:10.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.762" level="INFO">${RESULT} = [{'diff': 7.654099999999942e-05}, {'diff': 7.750000000000118e-05}, {'diff': 7.661100000000073e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.724999999999746e-05}, {'diff': 7.71250000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:10.759" endtime="20201030 18:32:10.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.766" level="INFO">${ACCURACY} = {'diff': [7.654099999999942e-05, 7.750000000000118e-05, 7.661100000000073e-05, 7.701400000000025e-05, 7.724999999999746e-05, 7.71250000000008e-05, 7.719400000000265e-05, 7.670899999999772e-05, 7.73750...</msg>
<status status="PASS" starttime="20201030 18:32:10.763" endtime="20201030 18:32:10.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.771" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.770" endtime="20201030 18:32:10.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.773" level="INFO">VALUE: [7.654099999999942e-05, 7.750000000000118e-05, 7.661100000000073e-05, 7.701400000000025e-05, 7.724999999999746e-05, 7.71250000000008e-05, 7.719400000000265e-05, 7.670899999999772e-05, 7.737500000000105e-05, 7.693099999999883e-05, 7.700000000000068e-05, 7.704199999999939e-05, 7.656999999999803e-05, 7.701400000000025e-05, 7.702699999999688e-05, 7.654099999999942e-05, 7.73189999999993e-05, 7.71250000000008e-05, 7.751400000000075e-05, 7.672200000000129e-05, 7.681999999999828e-05, 7.656999999999803e-05, 7.69449999999984e-05, 7.683400000000132e-05, 7.725000000000093e-05, 7.700000000000068e-05, 7.69029999999997e-05, 7.71250000000008e-05, 7.720799999999875e-05, 7.687500000000055e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.74030000000002e-05, 7.713900000000037e-05, 7.656900000000202e-05, 7.661100000000073e-05, 7.683300000000184e-05, 7.71250000000008e-05, 7.713900000000037e-05, 7.716699999999951e-05, 7.691699999999926e-05, 7.693099999999883e-05, 7.752700000000085e-05, 7.683400000000132e-05, 7.66250000000003e-05, 7.733300000000234e-05, 7.738899999999715e-05, 7.733299999999887e-05, 7.663899999999987e-05, 7.662499999999683e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.772" endtime="20201030 18:32:10.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.767" endtime="20201030 18:32:10.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.779" endtime="20201030 18:32:10.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.778" endtime="20201030 18:32:10.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.777" endtime="20201030 18:32:10.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.413" endtime="20201030 18:32:10.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.413" endtime="20201030 18:32:10.800"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.809" endtime="20201030 18:32:10.829"></status>
</kw>
<msg timestamp="20201030 18:32:10.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.808" endtime="20201030 18:32:10.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.831" endtime="20201030 18:32:10.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.833" endtime="20201030 18:32:10.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.805" endtime="20201030 18:32:10.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.803" endtime="20201030 18:32:10.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.843" endtime="20201030 18:32:11.128"></status>
</kw>
<msg timestamp="20201030 18:32:11.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.841" endtime="20201030 18:32:11.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.133" endtime="20201030 18:32:11.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.141" endtime="20201030 18:32:11.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.838" endtime="20201030 18:32:11.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.837" endtime="20201030 18:32:11.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.148" level="INFO">${RESULT} = [{'diff': 7.844400000000043e-05}, {'diff': 7.786099999999851e-05}, {'diff': 7.823599999999889e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.797199999999907e-05}, {'diff': 7.765200000000097e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:11.145" endtime="20201030 18:32:11.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.153" level="INFO">${ACCURACY} = {'diff': [7.844400000000043e-05, 7.786099999999851e-05, 7.823599999999889e-05, 7.788900000000112e-05, 7.797199999999907e-05, 7.765200000000097e-05, 7.793000000000036e-05, 7.837499999999858e-05, 7.8276...</msg>
<status status="PASS" starttime="20201030 18:32:11.149" endtime="20201030 18:32:11.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.158" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.157" endtime="20201030 18:32:11.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.160" level="INFO">VALUE: [7.844400000000043e-05, 7.786099999999851e-05, 7.823599999999889e-05, 7.788900000000112e-05, 7.797199999999907e-05, 7.765200000000097e-05, 7.793000000000036e-05, 7.837499999999858e-05, 7.827699999999813e-05, 7.777800000000057e-05, 7.833299999999987e-05, 7.83190000000003e-05, 7.815299999999747e-05, 7.843099999999686e-05, 7.852800000000132e-05, 7.849999999999871e-05, 7.765299999999697e-05, 7.765300000000044e-05, 7.830600000000021e-05, 7.80839999999991e-05, 7.827800000000107e-05, 7.766600000000054e-05, 7.800000000000168e-05, 7.786099999999851e-05, 7.794399999999993e-05, 7.758299999999912e-05, 7.83190000000003e-05, 7.836100000000248e-05, 7.848600000000261e-05, 7.800000000000168e-05, 7.847199999999957e-05, 7.833299999999987e-05, 7.804200000000039e-05, 7.756999999999903e-05, 7.841600000000129e-05, 7.77909999999972e-05, 7.783400000000232e-05, 7.758299999999912e-05, 7.806999999999953e-05, 7.813799999999843e-05, 7.793000000000036e-05, 7.806900000000006e-05, 7.826399999999803e-05, 7.840299999999772e-05, 7.783300000000284e-05, 7.766700000000001e-05, 7.831999999999978e-05, 7.769499999999915e-05, 7.798700000000158e-05, 7.80839999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.159" endtime="20201030 18:32:11.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.154" endtime="20201030 18:32:11.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.166" endtime="20201030 18:32:11.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.164" endtime="20201030 18:32:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.163" endtime="20201030 18:32:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.801" endtime="20201030 18:32:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.801" endtime="20201030 18:32:11.186"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.195" endtime="20201030 18:32:11.216"></status>
</kw>
<msg timestamp="20201030 18:32:11.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.194" endtime="20201030 18:32:11.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.217" endtime="20201030 18:32:11.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.220" endtime="20201030 18:32:11.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.191" endtime="20201030 18:32:11.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.189" endtime="20201030 18:32:11.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.229" endtime="20201030 18:32:11.516"></status>
</kw>
<msg timestamp="20201030 18:32:11.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.228" endtime="20201030 18:32:11.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.520" endtime="20201030 18:32:11.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.529" endtime="20201030 18:32:11.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.225" endtime="20201030 18:32:11.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.223" endtime="20201030 18:32:11.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.535" level="INFO">${RESULT} = [{'diff': 7.877800000000157e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.879199999999767e-05}, {'diff': 7.883399999999985e-05}, {'diff': 7.912499999999933e-05}, {'diff': 7.943099999999786e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:11.532" endtime="20201030 18:32:11.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.540" level="INFO">${ACCURACY} = {'diff': [7.877800000000157e-05, 7.8764000000002e-05, 7.879199999999767e-05, 7.883399999999985e-05, 7.912499999999933e-05, 7.943099999999786e-05, 7.937499999999958e-05, 7.863799999999893e-05, 7.863900...</msg>
<status status="PASS" starttime="20201030 18:32:11.536" endtime="20201030 18:32:11.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.544" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.543" endtime="20201030 18:32:11.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.547" level="INFO">VALUE: [7.877800000000157e-05, 7.8764000000002e-05, 7.879199999999767e-05, 7.883399999999985e-05, 7.912499999999933e-05, 7.943099999999786e-05, 7.937499999999958e-05, 7.863799999999893e-05, 7.863900000000187e-05, 7.9458000000001e-05, 7.891600000000179e-05, 7.926399999999903e-05, 7.920800000000075e-05, 7.948600000000014e-05, 7.920800000000075e-05, 7.941700000000176e-05, 7.894400000000093e-05, 7.943000000000186e-05, 7.865300000000144e-05, 7.89450000000004e-05, 7.894499999999693e-05, 7.91250000000028e-05, 7.856900000000056e-05, 7.911099999999976e-05, 7.86250000000023e-05, 7.901399999999878e-05, 7.868000000000111e-05, 7.90970000000002e-05, 7.938899999999915e-05, 7.862499999999883e-05, 7.915299999999847e-05, 7.911099999999976e-05, 7.88190000000008e-05, 7.92779999999986e-05, 7.886200000000246e-05, 7.888899999999865e-05, 7.936100000000001e-05, 7.877699999999863e-05, 7.863799999999893e-05, 7.922200000000032e-05, 7.92779999999986e-05, 7.938900000000262e-05, 7.873599999999939e-05, 7.926399999999903e-05, 7.938899999999915e-05, 7.882000000000028e-05, 7.888899999999865e-05, 7.89450000000004e-05, 7.922200000000032e-05, 7.882000000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.545" endtime="20201030 18:32:11.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.541" endtime="20201030 18:32:11.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.552" endtime="20201030 18:32:11.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.551" endtime="20201030 18:32:11.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.549" endtime="20201030 18:32:11.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.187" endtime="20201030 18:32:11.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.187" endtime="20201030 18:32:11.573"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.582" endtime="20201030 18:32:11.602"></status>
</kw>
<msg timestamp="20201030 18:32:11.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.580" endtime="20201030 18:32:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.604" endtime="20201030 18:32:11.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.606" endtime="20201030 18:32:11.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.577" endtime="20201030 18:32:11.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.575" endtime="20201030 18:32:11.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.616" endtime="20201030 18:32:11.903"></status>
</kw>
<msg timestamp="20201030 18:32:11.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020917569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.614" endtime="20201030 18:32:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020917569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.907" endtime="20201030 18:32:11.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.916" endtime="20201030 18:32:11.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.611" endtime="20201030 18:32:11.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.610" endtime="20201030 18:32:11.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.923" level="INFO">${RESULT} = [{'diff': 8.036200000000049e-05}, {'diff': 7.977800000000257e-05}, {'diff': 7.95840000000006e-05}, {'diff': 8.034800000000092e-05}, {'diff': 8.04169999999993e-05}, {'diff': 8.017999999999914e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:11.920" endtime="20201030 18:32:11.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.927" level="INFO">${ACCURACY} = {'diff': [8.036200000000049e-05, 7.977800000000257e-05, 7.95840000000006e-05, 8.034800000000092e-05, 8.04169999999993e-05, 8.017999999999914e-05, 8.008300000000163e-05, 8.031899999999884e-05, 8.031899...</msg>
<status status="PASS" starttime="20201030 18:32:11.924" endtime="20201030 18:32:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.932" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.931" endtime="20201030 18:32:11.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.934" level="INFO">VALUE: [8.036200000000049e-05, 7.977800000000257e-05, 7.95840000000006e-05, 8.034800000000092e-05, 8.04169999999993e-05, 8.017999999999914e-05, 8.008300000000163e-05, 8.031899999999884e-05, 8.031899999999884e-05, 8.001399999999978e-05, 7.986100000000051e-05, 8.004199999999892e-05, 8.043099999999886e-05, 8.033400000000135e-05, 7.988899999999965e-05, 8.02779999999996e-05, 8.033400000000135e-05, 7.976399999999953e-05, 8.005499999999902e-05, 8.022200000000132e-05, 8.050000000000071e-05, 7.99580000000015e-05, 7.970800000000125e-05, 8.005599999999849e-05, 8.016699999999904e-05, 7.955600000000146e-05, 8.008299999999816e-05, 8.022200000000132e-05, 8.048599999999767e-05, 8.02230000000008e-05, 7.988899999999965e-05, 7.958300000000113e-05, 8.0152e-05, 8.031899999999884e-05, 7.98329999999979e-05, 8.042999999999939e-05, 8.029199999999917e-05, 8.052799999999985e-05, 8.008299999999816e-05, 8.044399999999896e-05, 8.001399999999978e-05, 8.001399999999978e-05, 7.96250000000033e-05, 8.011100000000076e-05, 7.990299999999922e-05, 8.056900000000256e-05, 8.005599999999849e-05, 8.04030000000032e-05, 8.012500000000033e-05, 8.024999999999699e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.933" endtime="20201030 18:32:11.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.928" endtime="20201030 18:32:11.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.940" endtime="20201030 18:32:11.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.939" endtime="20201030 18:32:11.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.938" endtime="20201030 18:32:11.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.574" endtime="20201030 18:32:11.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.573" endtime="20201030 18:32:11.961"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.970" endtime="20201030 18:32:11.990"></status>
</kw>
<msg timestamp="20201030 18:32:11.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.968" endtime="20201030 18:32:11.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.992" endtime="20201030 18:32:11.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.994" endtime="20201030 18:32:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.966" endtime="20201030 18:32:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.964" endtime="20201030 18:32:11.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.004" endtime="20201030 18:32:12.289"></status>
</kw>
<msg timestamp="20201030 18:32:12.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.002" endtime="20201030 18:32:12.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.293" endtime="20201030 18:32:12.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.302" endtime="20201030 18:32:12.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.999" endtime="20201030 18:32:12.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.997" endtime="20201030 18:32:12.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.309" level="INFO">${RESULT} = [{'diff': 8.059699999999823e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.081999999999881e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.129099999999723e-05}, {'diff': 8.11109999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:12.305" endtime="20201030 18:32:12.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.314" level="INFO">${ACCURACY} = {'diff': [8.059699999999823e-05, 8.104199999999992e-05, 8.081999999999881e-05, 8.073600000000139e-05, 8.129099999999723e-05, 8.11109999999983e-05, 8.072200000000182e-05, 8.138900000000115e-05, 8.12079...</msg>
<status status="PASS" starttime="20201030 18:32:12.310" endtime="20201030 18:32:12.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.318" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.317" endtime="20201030 18:32:12.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.321" level="INFO">VALUE: [8.059699999999823e-05, 8.104199999999992e-05, 8.081999999999881e-05, 8.073600000000139e-05, 8.129099999999723e-05, 8.11109999999983e-05, 8.072200000000182e-05, 8.138900000000115e-05, 8.120799999999928e-05, 8.113899999999744e-05, 8.056899999999909e-05, 8.147200000000257e-05, 8.083399999999838e-05, 8.131999999999931e-05, 8.093099999999936e-05, 8.104100000000045e-05, 8.126399999999756e-05, 8.144399999999996e-05, 8.148699999999814e-05, 8.109699999999873e-05, 8.101400000000078e-05, 8.055499999999952e-05, 8.152800000000085e-05, 8.070799999999878e-05, 8.106899999999959e-05, 8.08329999999989e-05, 8.152800000000085e-05, 8.06109999999978e-05, 8.056999999999856e-05, 8.06390000000004e-05, 8.127799999999713e-05, 8.055599999999899e-05, 8.084700000000195e-05, 8.149999999999824e-05, 8.088900000000065e-05, 8.143099999999986e-05, 8.122200000000232e-05, 8.102800000000035e-05, 8.105500000000002e-05, 8.069399999999921e-05, 8.141699999999683e-05, 8.08329999999989e-05, 8.068100000000258e-05, 8.066700000000301e-05, 8.09589999999985e-05, 8.113899999999744e-05, 8.140200000000125e-05, 8.08329999999989e-05, 8.088900000000065e-05, 8.145799999999953e-05]</msg>
<status status="PASS" starttime="20201030 18:32:12.320" endtime="20201030 18:32:12.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.315" endtime="20201030 18:32:12.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.326" endtime="20201030 18:32:12.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.325" endtime="20201030 18:32:12.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.323" endtime="20201030 18:32:12.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.962" endtime="20201030 18:32:12.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.962" endtime="20201030 18:32:12.347"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.356" endtime="20201030 18:32:12.375"></status>
</kw>
<msg timestamp="20201030 18:32:12.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.354" endtime="20201030 18:32:12.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.377" endtime="20201030 18:32:12.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.380" endtime="20201030 18:32:12.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.352" endtime="20201030 18:32:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.349" endtime="20201030 18:32:12.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.389" endtime="20201030 18:32:12.675"></status>
</kw>
<msg timestamp="20201030 18:32:12.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020039403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.387" endtime="20201030 18:32:12.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020039403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.680" endtime="20201030 18:32:12.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.688" endtime="20201030 18:32:12.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.385" endtime="20201030 18:32:12.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.383" endtime="20201030 18:32:12.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.695" level="INFO">${RESULT} = [{'diff': 8.19589999999995e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.161100000000227e-05}, {'diff': 8.238900000000215e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:12.692" endtime="20201030 18:32:12.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.700" level="INFO">${ACCURACY} = {'diff': [8.19589999999995e-05, 8.2152999999998e-05, 8.199999999999874e-05, 8.223599999999942e-05, 8.161100000000227e-05, 8.238900000000215e-05, 8.18329999999999e-05, 8.17910000000012e-05, 8.215199999...</msg>
<status status="PASS" starttime="20201030 18:32:12.696" endtime="20201030 18:32:12.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.704" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.703" endtime="20201030 18:32:12.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.707" level="INFO">VALUE: [8.19589999999995e-05, 8.2152999999998e-05, 8.199999999999874e-05, 8.223599999999942e-05, 8.161100000000227e-05, 8.238900000000215e-05, 8.18329999999999e-05, 8.17910000000012e-05, 8.215199999999853e-05, 8.176399999999806e-05, 8.158299999999966e-05, 8.231900000000084e-05, 8.155599999999999e-05, 8.169400000000021e-05, 8.186099999999905e-05, 8.183400000000285e-05, 8.180600000000024e-05, 8.172299999999882e-05, 8.204100000000145e-05, 8.205600000000049e-05, 8.23330000000004e-05, 8.193000000000089e-05, 8.233299999999694e-05, 8.250000000000271e-05, 8.168099999999665e-05, 8.199999999999874e-05, 8.2152999999998e-05, 8.193100000000036e-05, 8.199999999999874e-05, 8.17780000000011e-05, 8.188900000000165e-05, 8.252800000000185e-05, 8.173599999999892e-05, 8.191699999999733e-05, 8.165199999999803e-05, 8.244399999999749e-05, 8.21109999999993e-05, 8.251400000000228e-05, 8.180500000000077e-05, 8.190300000000122e-05, 8.180600000000024e-05, 8.226399999999856e-05, 8.215300000000147e-05, 8.24720000000001e-05, 8.190300000000122e-05, 8.2459e-05, 8.158399999999913e-05, 8.183399999999938e-05, 8.181999999999981e-05, 8.244399999999749e-05]</msg>
<status status="PASS" starttime="20201030 18:32:12.705" endtime="20201030 18:32:12.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.700" endtime="20201030 18:32:12.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.712" endtime="20201030 18:32:12.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.710" endtime="20201030 18:32:12.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.709" endtime="20201030 18:32:12.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.348" endtime="20201030 18:32:12.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.347" endtime="20201030 18:32:12.733"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.742" endtime="20201030 18:32:12.763"></status>
</kw>
<msg timestamp="20201030 18:32:12.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.740" endtime="20201030 18:32:12.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.765" endtime="20201030 18:32:12.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.767" endtime="20201030 18:32:12.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.737" endtime="20201030 18:32:12.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.735" endtime="20201030 18:32:12.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.777" endtime="20201030 18:32:13.062"></status>
</kw>
<msg timestamp="20201030 18:32:13.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.775" endtime="20201030 18:32:13.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.066" endtime="20201030 18:32:13.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.075" endtime="20201030 18:32:13.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.772" endtime="20201030 18:32:13.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.771" endtime="20201030 18:32:13.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.082" level="INFO">${RESULT} = [{'diff': 8.281900000000134e-05}, {'diff': 8.26390000000024e-05}, {'diff': 8.340299999999926e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.320800000000128e-05}, {'diff': 8.341699999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:13.078" endtime="20201030 18:32:13.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.086" level="INFO">${ACCURACY} = {'diff': [8.281900000000134e-05, 8.26390000000024e-05, 8.340299999999926e-05, 8.348600000000067e-05, 8.320800000000128e-05, 8.341699999999883e-05, 8.327799999999913e-05, 8.31659999999991e-05, 8.322200...</msg>
<status status="PASS" starttime="20201030 18:32:13.083" endtime="20201030 18:32:13.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.091" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.090" endtime="20201030 18:32:13.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.093" level="INFO">VALUE: [8.281900000000134e-05, 8.26390000000024e-05, 8.340299999999926e-05, 8.348600000000067e-05, 8.320800000000128e-05, 8.341699999999883e-05, 8.327799999999913e-05, 8.31659999999991e-05, 8.322200000000085e-05, 8.309699999999726e-05, 8.290199999999928e-05, 8.284700000000048e-05, 8.269400000000121e-05, 8.293000000000189e-05, 8.350000000000024e-05, 8.297199999999713e-05, 8.319399999999824e-05, 8.332000000000131e-05, 8.345799999999806e-05, 8.27919999999982e-05, 8.34720000000011e-05, 8.332000000000131e-05, 8.3459000000001e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.322199999999738e-05, 8.269399999999774e-05, 8.290299999999876e-05, 8.276399999999906e-05, 8.27780000000021e-05, 8.298600000000017e-05, 8.272200000000035e-05, 8.319500000000118e-05, 8.331900000000184e-05, 8.338899999999969e-05, 8.308400000000063e-05, 8.257000000000056e-05, 8.320900000000075e-05, 8.3152999999999e-05, 8.299999999999974e-05, 8.352699999999991e-05, 8.337500000000012e-05, 8.290299999999876e-05, 8.315300000000247e-05, 8.313899999999944e-05, 8.290299999999876e-05, 8.269399999999774e-05, 8.258300000000066e-05, 8.299999999999974e-05, 8.322300000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.092" endtime="20201030 18:32:13.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.087" endtime="20201030 18:32:13.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.099" endtime="20201030 18:32:13.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.098" endtime="20201030 18:32:13.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.096" endtime="20201030 18:32:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.734" endtime="20201030 18:32:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.733" endtime="20201030 18:32:13.120"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.129" endtime="20201030 18:32:13.150"></status>
</kw>
<msg timestamp="20201030 18:32:13.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.127" endtime="20201030 18:32:13.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.151" endtime="20201030 18:32:13.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.154" endtime="20201030 18:32:13.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.125" endtime="20201030 18:32:13.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.123" endtime="20201030 18:32:13.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.163" endtime="20201030 18:32:13.449"></status>
</kw>
<msg timestamp="20201030 18:32:13.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.162" endtime="20201030 18:32:13.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.453" endtime="20201030 18:32:13.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.461" endtime="20201030 18:32:13.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.159" endtime="20201030 18:32:13.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.157" endtime="20201030 18:32:13.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.468" level="INFO">${RESULT} = [{'diff': 8.409700000000173e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.419500000000218e-05}, {'diff': 8.395800000000203e-05}, {'diff': 8.424999999999752e-05}, {'diff': 8.452800000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:13.465" endtime="20201030 18:32:13.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.476" level="INFO">${ACCURACY} = {'diff': [8.409700000000173e-05, 8.412500000000087e-05, 8.419500000000218e-05, 8.395800000000203e-05, 8.424999999999752e-05, 8.452800000000038e-05, 8.377799999999963e-05, 8.445899999999854e-05, 8.3652...</msg>
<status status="PASS" starttime="20201030 18:32:13.469" endtime="20201030 18:32:13.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.481" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.480" endtime="20201030 18:32:13.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.483" level="INFO">VALUE: [8.409700000000173e-05, 8.412500000000087e-05, 8.419500000000218e-05, 8.395800000000203e-05, 8.424999999999752e-05, 8.452800000000038e-05, 8.377799999999963e-05, 8.445899999999854e-05, 8.36529999999995e-05, 8.381899999999887e-05, 8.394499999999847e-05, 8.395800000000203e-05, 8.401400000000031e-05, 8.399999999999727e-05, 8.404099999999998e-05, 8.359700000000123e-05, 8.41110000000013e-05, 8.42919999999997e-05, 8.404199999999945e-05, 8.391699999999933e-05, 8.400000000000074e-05, 8.445899999999854e-05, 8.366699999999908e-05, 8.379099999999973e-05, 8.400000000000074e-05, 8.419399999999924e-05, 8.431899999999937e-05, 8.440300000000026e-05, 8.451400000000081e-05, 8.391599999999985e-05, 8.388899999999672e-05, 8.365300000000297e-05, 8.445799999999906e-05, 8.357000000000156e-05, 8.437499999999765e-05, 8.386200000000052e-05, 8.408299999999869e-05, 8.4459000000002e-05, 8.395799999999856e-05, 8.444400000000296e-05, 8.376400000000006e-05, 8.395799999999856e-05, 8.408299999999869e-05, 8.423599999999795e-05, 8.426399999999709e-05, 8.437500000000112e-05, 8.441699999999983e-05, 8.433399999999841e-05, 8.450000000000124e-05, 8.451400000000081e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.482" endtime="20201030 18:32:13.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.477" endtime="20201030 18:32:13.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.493" endtime="20201030 18:32:13.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.492" endtime="20201030 18:32:13.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.490" endtime="20201030 18:32:13.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.121" endtime="20201030 18:32:13.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.121" endtime="20201030 18:32:13.514"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.523" endtime="20201030 18:32:13.544"></status>
</kw>
<msg timestamp="20201030 18:32:13.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.521" endtime="20201030 18:32:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.545" endtime="20201030 18:32:13.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.548" endtime="20201030 18:32:13.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.519" endtime="20201030 18:32:13.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.516" endtime="20201030 18:32:13.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.557" endtime="20201030 18:32:13.848"></status>
</kw>
<msg timestamp="20201030 18:32:13.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.555" endtime="20201030 18:32:13.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.853" endtime="20201030 18:32:13.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.862" endtime="20201030 18:32:13.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.553" endtime="20201030 18:32:13.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.551" endtime="20201030 18:32:13.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.868" level="INFO">${RESULT} = [{'diff': 8.462500000000137e-05}, {'diff': 8.491700000000033e-05}, {'diff': 8.520899999999929e-05}, {'diff': 8.504100000000098e-05}, {'diff': 8.463799999999799e-05}, {'diff': 8.498600000000217e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:13.865" endtime="20201030 18:32:13.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.874" level="INFO">${ACCURACY} = {'diff': [8.462500000000137e-05, 8.491700000000033e-05, 8.520899999999929e-05, 8.504100000000098e-05, 8.463799999999799e-05, 8.498600000000217e-05, 8.463800000000146e-05, 8.469399999999974e-05, 8.5264...</msg>
<status status="PASS" starttime="20201030 18:32:13.870" endtime="20201030 18:32:13.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.879" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.878" endtime="20201030 18:32:13.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.881" level="INFO">VALUE: [8.462500000000137e-05, 8.491700000000033e-05, 8.520899999999929e-05, 8.504100000000098e-05, 8.463799999999799e-05, 8.498600000000217e-05, 8.463800000000146e-05, 8.469399999999974e-05, 8.526400000000156e-05, 8.533299999999994e-05, 8.531900000000037e-05, 8.513899999999797e-05, 8.477800000000063e-05, 8.487500000000162e-05, 8.47920000000002e-05, 8.470900000000225e-05, 8.520900000000275e-05, 8.499999999999827e-05, 8.533399999999941e-05, 8.490199999999781e-05, 8.531900000000037e-05, 8.538900000000169e-05, 8.497199999999913e-05, 8.483299999999944e-05, 8.550000000000224e-05, 8.463899999999747e-05, 8.470799999999931e-05, 8.501400000000131e-05, 8.54310000000004e-05, 8.469499999999922e-05, 8.501400000000131e-05, 8.551400000000181e-05, 8.497199999999913e-05, 8.531999999999984e-05, 8.483299999999944e-05, 8.490300000000076e-05, 8.459699999999876e-05, 8.476400000000106e-05, 8.538900000000169e-05, 8.551400000000181e-05, 8.526400000000156e-05, 8.470799999999931e-05, 8.522300000000232e-05, 8.51110000000023e-05, 8.520899999999929e-05, 8.558300000000019e-05, 8.54729999999991e-05, 8.487499999999815e-05, 8.476400000000106e-05, 8.53050000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.880" endtime="20201030 18:32:13.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.875" endtime="20201030 18:32:13.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.886" endtime="20201030 18:32:13.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.885" endtime="20201030 18:32:13.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.884" endtime="20201030 18:32:13.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.515" endtime="20201030 18:32:13.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.514" endtime="20201030 18:32:13.907"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.917" endtime="20201030 18:32:13.939"></status>
</kw>
<msg timestamp="20201030 18:32:13.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.915" endtime="20201030 18:32:13.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.941" endtime="20201030 18:32:13.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.943" endtime="20201030 18:32:13.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.913" endtime="20201030 18:32:13.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.910" endtime="20201030 18:32:13.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.953" endtime="20201030 18:32:14.239"></status>
</kw>
<msg timestamp="20201030 18:32:14.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.951" endtime="20201030 18:32:14.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.244" endtime="20201030 18:32:14.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.252" endtime="20201030 18:32:14.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.949" endtime="20201030 18:32:14.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.946" endtime="20201030 18:32:14.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.259" level="INFO">${RESULT} = [{'diff': 8.638900000000269e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.599999999999927e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.624999999999952e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:14.256" endtime="20201030 18:32:14.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.263" level="INFO">${ACCURACY} = {'diff': [8.638900000000269e-05, 8.581900000000087e-05, 8.599999999999927e-05, 8.570800000000031e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.59310000000009e-05, 8.604200000000145e-05, 8.633299...</msg>
<status status="PASS" starttime="20201030 18:32:14.260" endtime="20201030 18:32:14.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.268" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.267" endtime="20201030 18:32:14.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.271" level="INFO">VALUE: [8.638900000000269e-05, 8.581900000000087e-05, 8.599999999999927e-05, 8.570800000000031e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.59310000000009e-05, 8.604200000000145e-05, 8.633299999999747e-05, 8.56249999999989e-05, 8.573599999999945e-05, 8.601400000000231e-05, 8.626400000000256e-05, 8.595900000000004e-05, 8.647199999999716e-05, 8.638899999999922e-05, 8.626299999999962e-05, 8.5847e-05, 8.556900000000062e-05, 8.613899999999897e-05, 8.63059999999978e-05, 8.566700000000108e-05, 8.602800000000188e-05, 8.591700000000133e-05, 8.615299999999854e-05, 8.61669999999981e-05, 8.561099999999933e-05, 8.619500000000072e-05, 8.607000000000059e-05, 8.641599999999888e-05, 8.622200000000038e-05, 8.577699999999869e-05, 8.613899999999897e-05, 8.587499999999915e-05, 8.627799999999866e-05, 8.56530000000015e-05, 8.5944999999997e-05, 8.583399999999991e-05, 8.587499999999915e-05, 8.602799999999841e-05, 8.64860000000002e-05, 8.633400000000041e-05, 8.565199999999856e-05, 8.645799999999759e-05, 8.611099999999983e-05, 8.627799999999866e-05, 8.556899999999715e-05, 8.634699999999704e-05, 8.633299999999747e-05, 8.645799999999759e-05]</msg>
<status status="PASS" starttime="20201030 18:32:14.269" endtime="20201030 18:32:14.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.264" endtime="20201030 18:32:14.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.277" endtime="20201030 18:32:14.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.275" endtime="20201030 18:32:14.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.274" endtime="20201030 18:32:14.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.908" endtime="20201030 18:32:14.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.908" endtime="20201030 18:32:14.297"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.306" endtime="20201030 18:32:14.327"></status>
</kw>
<msg timestamp="20201030 18:32:14.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.305" endtime="20201030 18:32:14.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.328" endtime="20201030 18:32:14.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.331" endtime="20201030 18:32:14.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.302" endtime="20201030 18:32:14.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.300" endtime="20201030 18:32:14.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.340" endtime="20201030 18:32:14.626"></status>
</kw>
<msg timestamp="20201030 18:32:14.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.339" endtime="20201030 18:32:14.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.631" endtime="20201030 18:32:14.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.639" endtime="20201030 18:32:14.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.336" endtime="20201030 18:32:14.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.334" endtime="20201030 18:32:14.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.646" level="INFO">${RESULT} = [{'diff': 8.654200000000195e-05}, {'diff': 8.663799999999999e-05}, {'diff': 8.73059999999988e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.715299999999954e-05}, {'diff': 8.690299999999929e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:14.643" endtime="20201030 18:32:14.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.651" level="INFO">${ACCURACY} = {'diff': [8.654200000000195e-05, 8.663799999999999e-05, 8.73059999999988e-05, 8.66249999999999e-05, 8.715299999999954e-05, 8.690299999999929e-05, 8.71799999999992e-05, 8.663899999999947e-05, 8.6666999...</msg>
<status status="PASS" starttime="20201030 18:32:14.647" endtime="20201030 18:32:14.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.656" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.655" endtime="20201030 18:32:14.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.659" level="INFO">VALUE: [8.654200000000195e-05, 8.663799999999999e-05, 8.73059999999988e-05, 8.66249999999999e-05, 8.715299999999954e-05, 8.690299999999929e-05, 8.71799999999992e-05, 8.663899999999947e-05, 8.66669999999986e-05, 8.71250000000004e-05, 8.745900000000154e-05, 8.725000000000052e-05, 8.71799999999992e-05, 8.670900000000079e-05, 8.719500000000172e-05, 8.726300000000062e-05, 8.663799999999999e-05, 8.726400000000009e-05, 8.727799999999966e-05, 8.727799999999966e-05, 8.692999999999895e-05, 8.66669999999986e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.719499999999825e-05, 8.752799999999991e-05, 8.715299999999954e-05, 8.669500000000122e-05, 8.713899999999997e-05, 8.68189999999984e-05, 8.659700000000076e-05, 8.670799999999784e-05, 8.655499999999858e-05, 8.702799999999941e-05, 8.751400000000034e-05, 8.740299999999979e-05, 8.661100000000033e-05, 8.700000000000027e-05, 8.66249999999999e-05, 8.682000000000134e-05, 8.655600000000152e-05, 8.737499999999718e-05, 8.697200000000113e-05, 8.744400000000249e-05, 8.701399999999984e-05, 8.669400000000174e-05, 8.681900000000187e-05, 8.713899999999997e-05, 8.694399999999852e-05, 8.679199999999873e-05]</msg>
<status status="PASS" starttime="20201030 18:32:14.657" endtime="20201030 18:32:14.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.652" endtime="20201030 18:32:14.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.665" endtime="20201030 18:32:14.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.663" endtime="20201030 18:32:14.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.662" endtime="20201030 18:32:14.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.298" endtime="20201030 18:32:14.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.298" endtime="20201030 18:32:14.686"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.695" endtime="20201030 18:32:14.714"></status>
</kw>
<msg timestamp="20201030 18:32:14.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.693" endtime="20201030 18:32:14.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.716" endtime="20201030 18:32:14.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.719" endtime="20201030 18:32:14.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.690" endtime="20201030 18:32:14.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.688" endtime="20201030 18:32:14.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.728" endtime="20201030 18:32:15.016"></status>
</kw>
<msg timestamp="20201030 18:32:15.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.726" endtime="20201030 18:32:15.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.020" endtime="20201030 18:32:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.028" endtime="20201030 18:32:15.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.724" endtime="20201030 18:32:15.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.722" endtime="20201030 18:32:15.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.035" level="INFO">${RESULT} = [{'diff': 8.79860000000017e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.802800000000041e-05}, {'diff': 8.783400000000191e-05}, {'diff': 8.770800000000231e-05}, {'diff': 8.851400000000134e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:15.032" endtime="20201030 18:32:15.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.040" level="INFO">${ACCURACY} = {'diff': [8.79860000000017e-05, 8.819399999999977e-05, 8.802800000000041e-05, 8.783400000000191e-05, 8.770800000000231e-05, 8.851400000000134e-05, 8.798599999999823e-05, 8.807000000000259e-05, 8.80979...</msg>
<status status="PASS" starttime="20201030 18:32:15.036" endtime="20201030 18:32:15.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.044" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.043" endtime="20201030 18:32:15.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.047" level="INFO">VALUE: [8.79860000000017e-05, 8.819399999999977e-05, 8.802800000000041e-05, 8.783400000000191e-05, 8.770800000000231e-05, 8.851400000000134e-05, 8.798599999999823e-05, 8.807000000000259e-05, 8.809799999999826e-05, 8.777800000000016e-05, 8.852700000000144e-05, 8.769399999999927e-05, 8.822200000000238e-05, 8.756899999999915e-05, 8.834699999999904e-05, 8.81670000000001e-05, 8.834699999999904e-05, 8.806999999999912e-05, 8.769499999999875e-05, 8.807000000000259e-05, 8.788900000000072e-05, 8.850000000000177e-05, 8.840200000000131e-05, 8.852699999999797e-05, 8.775000000000102e-05, 8.833299999999947e-05, 8.806899999999965e-05, 8.851399999999787e-05, 8.773600000000145e-05, 8.787499999999768e-05, 8.854200000000048e-05, 8.781999999999887e-05, 8.783400000000191e-05, 8.815300000000054e-05, 8.83059999999998e-05, 8.770900000000179e-05, 8.832000000000284e-05, 8.763800000000099e-05, 8.756899999999915e-05, 8.83189999999999e-05, 8.84860000000022e-05, 8.777800000000016e-05, 8.791699999999986e-05, 8.837499999999818e-05, 8.772199999999841e-05, 8.795899999999857e-05, 8.801400000000084e-05, 8.843099999999993e-05, 8.763900000000047e-05, 8.83059999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.045" endtime="20201030 18:32:15.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.040" endtime="20201030 18:32:15.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.052" endtime="20201030 18:32:15.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.050" endtime="20201030 18:32:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.049" endtime="20201030 18:32:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.687" endtime="20201030 18:32:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.686" endtime="20201030 18:32:15.073"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.082" endtime="20201030 18:32:15.102"></status>
</kw>
<msg timestamp="20201030 18:32:15.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.080" endtime="20201030 18:32:15.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.104" endtime="20201030 18:32:15.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.106" endtime="20201030 18:32:15.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.077" endtime="20201030 18:32:15.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.075" endtime="20201030 18:32:15.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.116" endtime="20201030 18:32:15.402"></status>
</kw>
<msg timestamp="20201030 18:32:15.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0209175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:15.114" endtime="20201030 18:32:15.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0209175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:15.407" endtime="20201030 18:32:15.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.415" endtime="20201030 18:32:15.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.112" endtime="20201030 18:32:15.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.110" endtime="20201030 18:32:15.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.422" level="INFO">${RESULT} = [{'diff': 8.954199999999801e-05}, {'diff': 8.936099999999961e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.902800000000141e-05}, {'diff': 8.917999999999773e-05}, {'diff': 8.855600000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:15.419" endtime="20201030 18:32:15.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.426" level="INFO">${ACCURACY} = {'diff': [8.954199999999801e-05, 8.936099999999961e-05, 8.923599999999948e-05, 8.902800000000141e-05, 8.917999999999773e-05, 8.855600000000005e-05, 8.862499999999843e-05, 8.911099999999936e-05, 8.9235...</msg>
<status status="PASS" starttime="20201030 18:32:15.423" endtime="20201030 18:32:15.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.431" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.430" endtime="20201030 18:32:15.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.434" level="INFO">VALUE: [8.954199999999801e-05, 8.936099999999961e-05, 8.923599999999948e-05, 8.902800000000141e-05, 8.917999999999773e-05, 8.855600000000005e-05, 8.862499999999843e-05, 8.911099999999936e-05, 8.923599999999948e-05, 8.86800000000007e-05, 8.84860000000022e-05, 8.856900000000015e-05, 8.920800000000034e-05, 8.924999999999905e-05, 8.904200000000098e-05, 8.920800000000034e-05, 8.94999999999993e-05, 8.915299999999807e-05, 8.919500000000025e-05, 8.926400000000209e-05, 8.915300000000154e-05, 8.877699999999822e-05, 8.94999999999993e-05, 8.880500000000083e-05, 8.944400000000102e-05, 8.944400000000102e-05, 8.927800000000166e-05, 8.906900000000065e-05, 8.874999999999855e-05, 8.8945e-05, 8.933399999999994e-05, 8.884799999999901e-05, 8.925000000000252e-05, 8.855600000000005e-05, 8.955500000000158e-05, 8.931899999999743e-05, 8.892999999999748e-05, 8.927700000000219e-05, 8.93190000000009e-05, 8.931899999999743e-05, 8.933300000000047e-05, 8.855500000000058e-05, 8.922199999999991e-05, 8.924999999999905e-05, 8.876400000000159e-05, 8.934800000000298e-05, 8.852800000000091e-05, 8.916699999999764e-05, 8.854200000000048e-05, 8.870799999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.432" endtime="20201030 18:32:15.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.427" endtime="20201030 18:32:15.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.440" endtime="20201030 18:32:15.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.438" endtime="20201030 18:32:15.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.437" endtime="20201030 18:32:15.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.074" endtime="20201030 18:32:15.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.073" endtime="20201030 18:32:15.461"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.469" endtime="20201030 18:32:15.490"></status>
</kw>
<msg timestamp="20201030 18:32:15.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.468" endtime="20201030 18:32:15.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.492" endtime="20201030 18:32:15.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.494" endtime="20201030 18:32:15.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.465" endtime="20201030 18:32:15.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.463" endtime="20201030 18:32:15.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.504" endtime="20201030 18:32:15.790"></status>
</kw>
<msg timestamp="20201030 18:32:15.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.502" endtime="20201030 18:32:15.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.794" endtime="20201030 18:32:15.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.802" endtime="20201030 18:32:15.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.499" endtime="20201030 18:32:15.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.497" endtime="20201030 18:32:15.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.809" level="INFO">${RESULT} = [{'diff': 8.973599999999998e-05}, {'diff': 9.038899999999975e-05}, {'diff': 9.048599999999726e-05}, {'diff': 9.005599999999808e-05}, {'diff': 9.029200000000223e-05}, {'diff': 9.032000000000137e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:15.806" endtime="20201030 18:32:15.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.814" level="INFO">${ACCURACY} = {'diff': [8.973599999999998e-05, 9.038899999999975e-05, 9.048599999999726e-05, 9.005599999999808e-05, 9.029200000000223e-05, 9.032000000000137e-05, 9.012499999999993e-05, 8.969500000000075e-05, 8.9888...</msg>
<status status="PASS" starttime="20201030 18:32:15.810" endtime="20201030 18:32:15.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.818" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.817" endtime="20201030 18:32:15.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.821" level="INFO">VALUE: [8.973599999999998e-05, 9.038899999999975e-05, 9.048599999999726e-05, 9.005599999999808e-05, 9.029200000000223e-05, 9.032000000000137e-05, 9.012499999999993e-05, 8.969500000000075e-05, 8.988899999999925e-05, 9.025000000000005e-05, 9.025000000000005e-05, 8.959700000000029e-05, 9.038899999999975e-05, 8.970800000000084e-05, 9.023599999999701e-05, 9.05000000000003e-05, 8.970900000000032e-05, 9.023600000000048e-05, 9.020900000000082e-05, 8.972200000000041e-05, 9.007000000000112e-05, 9.052699999999997e-05, 9.052699999999997e-05, 9.044399999999855e-05, 9.051400000000334e-05, 8.984700000000054e-05, 9.025000000000005e-05, 8.990299999999882e-05, 9.041699999999889e-05, 9.033300000000147e-05, 8.977800000000216e-05, 9.007000000000112e-05, 8.988899999999925e-05, 9.008400000000069e-05, 9.036099999999714e-05, 9.013800000000002e-05, 9.030499999999886e-05, 9.01519999999996e-05, 8.99999999999998e-05, 8.995800000000109e-05, 9.027800000000266e-05, 8.997199999999719e-05, 9.051399999999987e-05, 9.033400000000094e-05, 9.043099999999846e-05, 8.96250000000029e-05, 9.044499999999803e-05, 9.01519999999996e-05, 8.997300000000014e-05, 8.986100000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.819" endtime="20201030 18:32:15.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.815" endtime="20201030 18:32:15.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.826" endtime="20201030 18:32:15.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.824" endtime="20201030 18:32:15.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.823" endtime="20201030 18:32:15.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.461" endtime="20201030 18:32:15.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.461" endtime="20201030 18:32:15.846"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.855" endtime="20201030 18:32:15.875"></status>
</kw>
<msg timestamp="20201030 18:32:15.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.853" endtime="20201030 18:32:15.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.877" endtime="20201030 18:32:15.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.879" endtime="20201030 18:32:15.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.851" endtime="20201030 18:32:15.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.849" endtime="20201030 18:32:15.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.888" endtime="20201030 18:32:16.191"></status>
</kw>
<msg timestamp="20201030 18:32:16.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019395778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019486569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.887" endtime="20201030 18:32:16.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019395778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019486569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.195" endtime="20201030 18:32:16.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.203" endtime="20201030 18:32:16.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.884" endtime="20201030 18:32:16.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.882" endtime="20201030 18:32:16.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.210" level="INFO">${RESULT} = [{'diff': 9.079099999999979e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.056900000000215e-05}, {'diff': 9.088900000000025e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.118099999999921e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:16.206" endtime="20201030 18:32:16.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.214" level="INFO">${ACCURACY} = {'diff': [9.079099999999979e-05, 9.104199999999951e-05, 9.056900000000215e-05, 9.088900000000025e-05, 9.115300000000007e-05, 9.118099999999921e-05, 9.104199999999951e-05, 9.120899999999835e-05, 9.0693...</msg>
<status status="PASS" starttime="20201030 18:32:16.211" endtime="20201030 18:32:16.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.218" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.217" endtime="20201030 18:32:16.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.221" level="INFO">VALUE: [9.079099999999979e-05, 9.104199999999951e-05, 9.056900000000215e-05, 9.088900000000025e-05, 9.115300000000007e-05, 9.118099999999921e-05, 9.104199999999951e-05, 9.120899999999835e-05, 9.06939999999988e-05, 9.090299999999982e-05, 9.144499999999903e-05, 9.124999999999758e-05, 9.076300000000065e-05, 9.147200000000216e-05, 9.120799999999887e-05, 9.15000000000013e-05, 9.077799999999969e-05, 9.087499999999721e-05, 9.086099999999764e-05, 9.094499999999853e-05, 9.134799999999804e-05, 9.065299999999957e-05, 9.149999999999783e-05, 9.095900000000157e-05, 9.116600000000016e-05, 9.14870000000012e-05, 9.116600000000016e-05, 9.108300000000222e-05, 9.056899999999868e-05, 9.127800000000019e-05, 9.093000000000295e-05, 9.145799999999912e-05, 9.084700000000154e-05, 9.138900000000075e-05, 9.101400000000037e-05, 9.119499999999878e-05, 9.072199999999794e-05, 9.14589999999986e-05, 9.061200000000033e-05, 9.138900000000075e-05, 9.148599999999826e-05, 9.072199999999794e-05, 9.101400000000037e-05, 9.069400000000227e-05, 9.099999999999733e-05, 9.141699999999989e-05, 9.140300000000032e-05, 9.119400000000277e-05, 9.062500000000043e-05, 9.070900000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:32:16.219" endtime="20201030 18:32:16.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.215" endtime="20201030 18:32:16.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.226" endtime="20201030 18:32:16.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.224" endtime="20201030 18:32:16.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.223" endtime="20201030 18:32:16.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.847" endtime="20201030 18:32:16.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.847" endtime="20201030 18:32:16.246"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.255" endtime="20201030 18:32:16.277"></status>
</kw>
<msg timestamp="20201030 18:32:16.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.253" endtime="20201030 18:32:16.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.278" endtime="20201030 18:32:16.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.281" endtime="20201030 18:32:16.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.251" endtime="20201030 18:32:16.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.249" endtime="20201030 18:32:16.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.290" endtime="20201030 18:32:16.577"></status>
</kw>
<msg timestamp="20201030 18:32:16.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.288" endtime="20201030 18:32:16.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.581" endtime="20201030 18:32:16.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.589" endtime="20201030 18:32:16.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.286" endtime="20201030 18:32:16.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.284" endtime="20201030 18:32:16.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.596" level="INFO">${RESULT} = [{'diff': 9.170899999999885e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.156899999999968e-05}, {'diff': 9.181899999999993e-05}, {'diff': 9.188900000000125e-05}, {'diff': 9.159700000000229e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:16.592" endtime="20201030 18:32:16.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.600" level="INFO">${ACCURACY} = {'diff': [9.170899999999885e-05, 9.251400000000187e-05, 9.156899999999968e-05, 9.181899999999993e-05, 9.188900000000125e-05, 9.159700000000229e-05, 9.179200000000026e-05, 9.244400000000055e-05, 9.2485...</msg>
<status status="PASS" starttime="20201030 18:32:16.597" endtime="20201030 18:32:16.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.604" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.603" endtime="20201030 18:32:16.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.606" level="INFO">VALUE: [9.170899999999885e-05, 9.251400000000187e-05, 9.156899999999968e-05, 9.181899999999993e-05, 9.188900000000125e-05, 9.159700000000229e-05, 9.179200000000026e-05, 9.244400000000055e-05, 9.248599999999926e-05, 9.247299999999917e-05, 9.229199999999729e-05, 9.226400000000162e-05, 9.158399999999872e-05, 9.161199999999786e-05, 9.166700000000014e-05, 9.213899999999803e-05, 9.257000000000015e-05, 9.21520000000016e-05, 9.205500000000061e-05, 9.179200000000026e-05, 9.223600000000248e-05, 9.229200000000076e-05, 9.154200000000001e-05, 9.222200000000291e-05, 9.20000000000018e-05, 9.244500000000003e-05, 9.159799999999829e-05, 9.158400000000219e-05, 9.229100000000129e-05, 9.165199999999762e-05, 9.24719999999997e-05, 9.177800000000069e-05, 9.1639000000001e-05, 9.227799999999772e-05, 9.215300000000107e-05, 9.193000000000048e-05, 9.237499999999871e-05, 9.202800000000094e-05, 9.173600000000198e-05, 9.169499999999928e-05, 9.201400000000137e-05, 9.191600000000091e-05, 9.156999999999915e-05, 9.190199999999787e-05, 9.191600000000091e-05, 9.220799999999987e-05, 9.25000000000023e-05, 9.158299999999925e-05, 9.176400000000112e-05, 9.170799999999937e-05]</msg>
<status status="PASS" starttime="20201030 18:32:16.605" endtime="20201030 18:32:16.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.601" endtime="20201030 18:32:16.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.612" endtime="20201030 18:32:16.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.611" endtime="20201030 18:32:16.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.610" endtime="20201030 18:32:16.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.247" endtime="20201030 18:32:16.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.247" endtime="20201030 18:32:16.633"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.642" endtime="20201030 18:32:16.662"></status>
</kw>
<msg timestamp="20201030 18:32:16.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.640" endtime="20201030 18:32:16.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.664" endtime="20201030 18:32:16.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.666" endtime="20201030 18:32:16.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.637" endtime="20201030 18:32:16.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.635" endtime="20201030 18:32:16.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.675" endtime="20201030 18:32:16.961"></status>
</kw>
<msg timestamp="20201030 18:32:16.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.673" endtime="20201030 18:32:16.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.965" endtime="20201030 18:32:16.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.973" endtime="20201030 18:32:16.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.671" endtime="20201030 18:32:16.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.669" endtime="20201030 18:32:16.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.979" level="INFO">${RESULT} = [{'diff': 9.329200000000176e-05}, {'diff': 9.338900000000275e-05}, {'diff': 9.301400000000237e-05}, {'diff': 9.255600000000058e-05}, {'diff': 9.31529999999986e-05}, {'diff': 9.34590000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:16.976" endtime="20201030 18:32:16.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.987" level="INFO">${ACCURACY} = {'diff': [9.329200000000176e-05, 9.338900000000275e-05, 9.301400000000237e-05, 9.255600000000058e-05, 9.31529999999986e-05, 9.34590000000006e-05, 9.306899999999771e-05, 9.35139999999994e-05, 9.2570000...</msg>
<status status="PASS" starttime="20201030 18:32:16.980" endtime="20201030 18:32:16.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.991" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.990" endtime="20201030 18:32:16.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.994" level="INFO">VALUE: [9.329200000000176e-05, 9.338900000000275e-05, 9.301400000000237e-05, 9.255600000000058e-05, 9.31529999999986e-05, 9.34590000000006e-05, 9.306899999999771e-05, 9.35139999999994e-05, 9.257000000000015e-05, 9.287500000000268e-05, 9.295799999999715e-05, 9.258300000000025e-05, 9.261099999999939e-05, 9.283299999999703e-05, 9.322200000000044e-05, 9.270800000000037e-05, 9.35139999999994e-05, 9.279200000000126e-05, 9.308400000000022e-05, 9.283399999999997e-05, 9.3333000000001e-05, 9.272199999999994e-05, 9.273599999999951e-05, 9.35139999999994e-05, 9.258300000000025e-05, 9.352799999999897e-05, 9.31529999999986e-05, 9.317999999999826e-05, 9.280600000000083e-05, 9.26940000000008e-05, 9.313899999999903e-05, 9.263899999999853e-05, 9.326399999999915e-05, 9.294500000000053e-05, 9.326399999999915e-05, 9.308300000000075e-05, 9.299999999999933e-05, 9.265199999999862e-05, 9.284700000000007e-05, 9.263899999999853e-05, 9.343000000000198e-05, 9.345799999999765e-05, 9.354200000000201e-05, 9.34590000000006e-05, 9.290299999999835e-05, 9.270899999999985e-05, 9.31390000000025e-05, 9.34590000000006e-05, 9.345800000000112e-05, 9.268000000000123e-05]</msg>
<status status="PASS" starttime="20201030 18:32:16.992" endtime="20201030 18:32:16.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.988" endtime="20201030 18:32:16.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.999" endtime="20201030 18:32:17.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.997" endtime="20201030 18:32:17.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.996" endtime="20201030 18:32:17.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.634" endtime="20201030 18:32:17.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.633" endtime="20201030 18:32:17.019"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.028" endtime="20201030 18:32:17.049"></status>
</kw>
<msg timestamp="20201030 18:32:17.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.026" endtime="20201030 18:32:17.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.050" endtime="20201030 18:32:17.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.052" endtime="20201030 18:32:17.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.024" endtime="20201030 18:32:17.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.022" endtime="20201030 18:32:17.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.061" endtime="20201030 18:32:17.348"></status>
</kw>
<msg timestamp="20201030 18:32:17.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01960425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:17.060" endtime="20201030 18:32:17.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01960425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:17.352" endtime="20201030 18:32:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.360" endtime="20201030 18:32:17.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.057" endtime="20201030 18:32:17.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.056" endtime="20201030 18:32:17.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.367" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.394399999999858e-05}, {'diff': 9.424999999999711e-05}, {'diff': 9.366699999999867e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.456899999999921e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:17.364" endtime="20201030 18:32:17.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.371" level="INFO">${ACCURACY} = {'diff': [9.388899999999978e-05, 9.394399999999858e-05, 9.424999999999711e-05, 9.366699999999867e-05, 9.408400000000122e-05, 9.456899999999921e-05, 9.43469999999981e-05, 9.41940000000023e-05, 9.351299...</msg>
<status status="PASS" starttime="20201030 18:32:17.368" endtime="20201030 18:32:17.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.375" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.374" endtime="20201030 18:32:17.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.378" level="INFO">VALUE: [9.388899999999978e-05, 9.394399999999858e-05, 9.424999999999711e-05, 9.366699999999867e-05, 9.408400000000122e-05, 9.456899999999921e-05, 9.43469999999981e-05, 9.41940000000023e-05, 9.351299999999993e-05, 9.409699999999785e-05, 9.391699999999892e-05, 9.436100000000114e-05, 9.434700000000157e-05, 9.380599999999836e-05, 9.434700000000157e-05, 9.441699999999942e-05, 9.443099999999899e-05, 9.433299999999853e-05, 9.436100000000114e-05, 9.367999999999876e-05, 9.380500000000236e-05, 9.451399999999693e-05, 9.450000000000083e-05, 9.362499999999996e-05, 9.422200000000144e-05, 9.413900000000003e-05, 9.452799999999997e-05, 9.398600000000076e-05, 9.434700000000157e-05, 9.38200000000014e-05, 9.455499999999964e-05, 9.412500000000046e-05, 9.45270000000005e-05, 9.398600000000076e-05, 9.451300000000093e-05, 9.449999999999736e-05, 9.36940000000018e-05, 9.397199999999772e-05, 9.441699999999942e-05, 9.452799999999997e-05, 9.4333999999998e-05, 9.427700000000025e-05, 9.449999999999736e-05, 9.427799999999972e-05, 9.38880000000003e-05, 9.409700000000132e-05, 9.445799999999865e-05, 9.377800000000269e-05, 9.380500000000236e-05, 9.452799999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.376" endtime="20201030 18:32:17.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.372" endtime="20201030 18:32:17.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.383" endtime="20201030 18:32:17.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.381" endtime="20201030 18:32:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.380" endtime="20201030 18:32:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.020" endtime="20201030 18:32:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.020" endtime="20201030 18:32:17.403"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.412" endtime="20201030 18:32:17.433"></status>
</kw>
<msg timestamp="20201030 18:32:17.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.410" endtime="20201030 18:32:17.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.434" endtime="20201030 18:32:17.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.437" endtime="20201030 18:32:17.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.408" endtime="20201030 18:32:17.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.406" endtime="20201030 18:32:17.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.446" endtime="20201030 18:32:17.732"></status>
</kw>
<msg timestamp="20201030 18:32:17.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.444" endtime="20201030 18:32:17.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.736" endtime="20201030 18:32:17.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.744" endtime="20201030 18:32:17.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.442" endtime="20201030 18:32:17.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.440" endtime="20201030 18:32:17.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.751" level="INFO">${RESULT} = [{'diff': 9.494500000000253e-05}, {'diff': 9.513800000000155e-05}, {'diff': 9.463800000000105e-05}, {'diff': 9.484700000000207e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.463899999999706e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:17.748" endtime="20201030 18:32:17.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.755" level="INFO">${ACCURACY} = {'diff': [9.494500000000253e-05, 9.513800000000155e-05, 9.463800000000105e-05, 9.484700000000207e-05, 9.46530000000001e-05, 9.463899999999706e-05, 9.504200000000004e-05, 9.531899999999996e-05, 9.54030...</msg>
<status status="PASS" starttime="20201030 18:32:17.752" endtime="20201030 18:32:17.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.759" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.758" endtime="20201030 18:32:17.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.762" level="INFO">VALUE: [9.494500000000253e-05, 9.513800000000155e-05, 9.463800000000105e-05, 9.484700000000207e-05, 9.46530000000001e-05, 9.463899999999706e-05, 9.504200000000004e-05, 9.531899999999996e-05, 9.540300000000085e-05, 9.55140000000014e-05, 9.501399999999743e-05, 9.55140000000014e-05, 9.472299999999795e-05, 9.504200000000004e-05, 9.483400000000197e-05, 9.508399999999875e-05, 9.540200000000137e-05, 9.533299999999953e-05, 9.459700000000182e-05, 9.554200000000054e-05, 9.486100000000164e-05, 9.531899999999996e-05, 9.531999999999943e-05, 9.530500000000039e-05, 9.480600000000283e-05, 9.511099999999842e-05, 9.536200000000161e-05, 9.545899999999913e-05, 9.495799999999915e-05, 9.525000000000158e-05, 9.477800000000022e-05, 9.550000000000183e-05, 9.472199999999847e-05, 9.541699999999695e-05, 9.498600000000176e-05, 9.48200000000024e-05, 9.462500000000096e-05, 9.491699999999992e-05, 9.509799999999832e-05, 9.490200000000087e-05, 9.505599999999961e-05, 9.538900000000128e-05, 9.515200000000112e-05, 9.484700000000207e-05, 9.500000000000133e-05, 9.511100000000189e-05, 9.476400000000065e-05, 9.509700000000232e-05, 9.476400000000065e-05, 9.51530000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.761" endtime="20201030 18:32:17.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.756" endtime="20201030 18:32:17.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.768" endtime="20201030 18:32:17.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.766" endtime="20201030 18:32:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.765" endtime="20201030 18:32:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.404" endtime="20201030 18:32:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.404" endtime="20201030 18:32:17.788"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.797" endtime="20201030 18:32:17.818"></status>
</kw>
<msg timestamp="20201030 18:32:17.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.796" endtime="20201030 18:32:17.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.820" endtime="20201030 18:32:17.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.822" endtime="20201030 18:32:17.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.793" endtime="20201030 18:32:17.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.791" endtime="20201030 18:32:17.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.831" endtime="20201030 18:32:18.116"></status>
</kw>
<msg timestamp="20201030 18:32:18.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.829" endtime="20201030 18:32:18.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.121" endtime="20201030 18:32:18.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.129" endtime="20201030 18:32:18.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.827" endtime="20201030 18:32:18.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.825" endtime="20201030 18:32:18.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.135" level="INFO">${RESULT} = [{'diff': 9.626399999999868e-05}, {'diff': 9.640299999999838e-05}, {'diff': 9.583300000000003e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.640299999999838e-05}, {'diff': 9.597199999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:18.132" endtime="20201030 18:32:18.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.140" level="INFO">${ACCURACY} = {'diff': [9.626399999999868e-05, 9.640299999999838e-05, 9.583300000000003e-05, 9.57079999999999e-05, 9.640299999999838e-05, 9.597199999999972e-05, 9.576400000000165e-05, 9.58339999999995e-05, 9.607000...</msg>
<status status="PASS" starttime="20201030 18:32:18.136" endtime="20201030 18:32:18.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.145" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.144" endtime="20201030 18:32:18.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.147" level="INFO">VALUE: [9.626399999999868e-05, 9.640299999999838e-05, 9.583300000000003e-05, 9.57079999999999e-05, 9.640299999999838e-05, 9.597199999999972e-05, 9.576400000000165e-05, 9.58339999999995e-05, 9.607000000000018e-05, 9.566700000000067e-05, 9.579199999999732e-05, 9.633300000000053e-05, 9.629099999999835e-05, 9.576400000000165e-05, 9.587499999999874e-05, 9.558299999999978e-05, 9.590300000000135e-05, 9.559699999999935e-05, 9.569400000000033e-05, 9.640299999999838e-05, 9.577800000000122e-05, 9.651399999999893e-05, 9.580600000000036e-05, 9.618000000000126e-05, 9.623599999999954e-05, 9.593000000000101e-05, 9.631900000000096e-05, 9.651399999999893e-05, 9.607000000000018e-05, 9.645800000000065e-05, 9.638899999999881e-05, 9.556900000000021e-05, 9.6027999999998e-05, 9.562500000000196e-05, 9.581999999999993e-05, 9.62080000000004e-05, 9.590300000000135e-05, 9.573599999999904e-05, 9.595800000000015e-05, 9.57079999999999e-05, 9.606900000000071e-05, 9.613900000000203e-05, 9.619400000000083e-05, 9.595800000000015e-05, 9.615299999999813e-05, 9.593099999999702e-05, 9.598600000000276e-05, 9.651399999999893e-05, 9.626400000000215e-05, 9.577700000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.146" endtime="20201030 18:32:18.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.141" endtime="20201030 18:32:18.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.152" endtime="20201030 18:32:18.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.151" endtime="20201030 18:32:18.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.150" endtime="20201030 18:32:18.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.789" endtime="20201030 18:32:18.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.789" endtime="20201030 18:32:18.173"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.181" endtime="20201030 18:32:18.202"></status>
</kw>
<msg timestamp="20201030 18:32:18.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.180" endtime="20201030 18:32:18.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.204" endtime="20201030 18:32:18.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.206" endtime="20201030 18:32:18.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.177" endtime="20201030 18:32:18.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.175" endtime="20201030 18:32:18.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.215" endtime="20201030 18:32:18.501"></status>
</kw>
<msg timestamp="20201030 18:32:18.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.213" endtime="20201030 18:32:18.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.505" endtime="20201030 18:32:18.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.514" endtime="20201030 18:32:18.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.211" endtime="20201030 18:32:18.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.209" endtime="20201030 18:32:18.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.520" level="INFO">${RESULT} = [{'diff': 9.729099999999935e-05}, {'diff': 9.747200000000122e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.73470000000011e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:18.517" endtime="20201030 18:32:18.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.524" level="INFO">${ACCURACY} = {'diff': [9.729099999999935e-05, 9.747200000000122e-05, 9.7027999999999e-05, 9.737500000000024e-05, 9.726399999999968e-05, 9.73470000000011e-05, 9.684800000000007e-05, 9.7334000000001e-05, 9.740299999...</msg>
<status status="PASS" starttime="20201030 18:32:18.521" endtime="20201030 18:32:18.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.529" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.528" endtime="20201030 18:32:18.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.531" level="INFO">VALUE: [9.729099999999935e-05, 9.747200000000122e-05, 9.7027999999999e-05, 9.737500000000024e-05, 9.726399999999968e-05, 9.73470000000011e-05, 9.684800000000007e-05, 9.7334000000001e-05, 9.740299999999938e-05, 9.751399999999993e-05, 9.733399999999753e-05, 9.750000000000036e-05, 9.741599999999948e-05, 9.744500000000156e-05, 9.727800000000272e-05, 9.691700000000192e-05, 9.683300000000103e-05, 9.731999999999796e-05, 9.743100000000199e-05, 9.709800000000032e-05, 9.726400000000315e-05, 9.70409999999991e-05, 9.711100000000042e-05, 9.661099999999992e-05, 9.66530000000021e-05, 9.699999999999986e-05, 9.738899999999981e-05, 9.731900000000196e-05, 9.727799999999925e-05, 9.719399999999837e-05, 9.677699999999928e-05, 9.737500000000024e-05, 9.732000000000143e-05, 9.701399999999943e-05, 9.72080000000014e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.709700000000085e-05, 9.725000000000011e-05, 9.747200000000122e-05, 9.695800000000115e-05, 9.67080000000009e-05, 9.683300000000103e-05, 9.737500000000024e-05, 9.743099999999852e-05, 9.663899999999906e-05, 9.725000000000011e-05, 9.674999999999961e-05, 9.74860000000008e-05, 9.670799999999743e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.530" endtime="20201030 18:32:18.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.525" endtime="20201030 18:32:18.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.536" endtime="20201030 18:32:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.535" endtime="20201030 18:32:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.534" endtime="20201030 18:32:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.174" endtime="20201030 18:32:18.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.173" endtime="20201030 18:32:18.557"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.566" endtime="20201030 18:32:18.587"></status>
</kw>
<msg timestamp="20201030 18:32:18.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.564" endtime="20201030 18:32:18.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.589" endtime="20201030 18:32:18.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.591" endtime="20201030 18:32:18.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.562" endtime="20201030 18:32:18.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.559" endtime="20201030 18:32:18.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.600" endtime="20201030 18:32:18.887"></status>
</kw>
<msg timestamp="20201030 18:32:18.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.599" endtime="20201030 18:32:18.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.891" endtime="20201030 18:32:18.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.900" endtime="20201030 18:32:18.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.596" endtime="20201030 18:32:18.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.595" endtime="20201030 18:32:18.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.906" level="INFO">${RESULT} = [{'diff': 9.76799999999993e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.788900000000031e-05}, {'diff': 9.804199999999957e-05}, {'diff': 9.827800000000025e-05}, {'diff': 9.804199999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:18.903" endtime="20201030 18:32:18.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.910" level="INFO">${ACCURACY} = {'diff': [9.76799999999993e-05, 9.826400000000068e-05, 9.788900000000031e-05, 9.804199999999957e-05, 9.827800000000025e-05, 9.804199999999957e-05, 9.770899999999791e-05, 9.845899999999866e-05, 9.85279...</msg>
<status status="PASS" starttime="20201030 18:32:18.907" endtime="20201030 18:32:18.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.915" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.914" endtime="20201030 18:32:18.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.917" level="INFO">VALUE: [9.76799999999993e-05, 9.826400000000068e-05, 9.788900000000031e-05, 9.804199999999957e-05, 9.827800000000025e-05, 9.804199999999957e-05, 9.770899999999791e-05, 9.845899999999866e-05, 9.852799999999703e-05, 9.762500000000049e-05, 9.755500000000264e-05, 9.844399999999962e-05, 9.813900000000056e-05, 9.831899999999949e-05, 9.808299999999881e-05, 9.786100000000117e-05, 9.81799999999998e-05, 9.76669999999992e-05, 9.815300000000013e-05, 9.820900000000188e-05, 9.791699999999945e-05, 9.815300000000013e-05, 9.840199999999744e-05, 9.802700000000053e-05, 9.811099999999795e-05, 9.781900000000246e-05, 9.770799999999843e-05, 9.756899999999874e-05, 9.841699999999995e-05, 9.779199999999932e-05, 9.851400000000093e-05, 9.825000000000111e-05, 9.757000000000168e-05, 9.795899999999816e-05, 9.786100000000117e-05, 9.819499999999884e-05, 9.752700000000003e-05, 9.815300000000013e-05, 9.76799999999993e-05, 9.770799999999843e-05, 9.756899999999874e-05, 9.784699999999813e-05, 9.850000000000136e-05, 9.759799999999735e-05, 9.85280000000005e-05, 9.781999999999846e-05, 9.815300000000013e-05, 9.781899999999899e-05, 9.765200000000016e-05, 9.83609999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.916" endtime="20201030 18:32:18.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.911" endtime="20201030 18:32:18.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.923" endtime="20201030 18:32:18.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.921" endtime="20201030 18:32:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.920" endtime="20201030 18:32:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.558" endtime="20201030 18:32:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.557" endtime="20201030 18:32:18.943"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.952" endtime="20201030 18:32:18.972"></status>
</kw>
<msg timestamp="20201030 18:32:18.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.950" endtime="20201030 18:32:18.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.974" endtime="20201030 18:32:18.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.976" endtime="20201030 18:32:18.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.948" endtime="20201030 18:32:18.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.946" endtime="20201030 18:32:18.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.985" endtime="20201030 18:32:19.272"></status>
</kw>
<msg timestamp="20201030 18:32:19.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.984" endtime="20201030 18:32:19.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.276" endtime="20201030 18:32:19.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.284" endtime="20201030 18:32:19.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.981" endtime="20201030 18:32:19.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.980" endtime="20201030 18:32:19.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.291" level="INFO">${RESULT} = [{'diff': 9.856899999999974e-05}, {'diff': 9.905600000000014e-05}, {'diff': 9.920799999999994e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.926400000000168e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:19.288" endtime="20201030 18:32:19.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.296" level="INFO">${ACCURACY} = {'diff': [9.856899999999974e-05, 9.905600000000014e-05, 9.920799999999994e-05, 9.883299999999956e-05, 9.883299999999956e-05, 9.926400000000168e-05, 9.908399999999928e-05, 9.9334000000003e-05, 9.894499...</msg>
<status status="PASS" starttime="20201030 18:32:19.292" endtime="20201030 18:32:19.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.301" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.300" endtime="20201030 18:32:19.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.303" level="INFO">VALUE: [9.856899999999974e-05, 9.905600000000014e-05, 9.920799999999994e-05, 9.883299999999956e-05, 9.883299999999956e-05, 9.926400000000168e-05, 9.908399999999928e-05, 9.9334000000003e-05, 9.894499999999959e-05, 9.927699999999831e-05, 9.877700000000128e-05, 9.856899999999974e-05, 9.945800000000019e-05, 9.929200000000082e-05, 9.938899999999834e-05, 9.8721999999999e-05, 9.920799999999994e-05, 9.913900000000156e-05, 9.855599999999964e-05, 9.891700000000045e-05, 9.890299999999741e-05, 9.938799999999887e-05, 9.902700000000153e-05, 9.919400000000037e-05, 9.927799999999778e-05, 9.863900000000106e-05, 9.854099999999713e-05, 9.883299999999956e-05, 9.927799999999778e-05, 9.920799999999994e-05, 9.908400000000275e-05, 9.856999999999921e-05, 9.89730000000022e-05, 9.927700000000178e-05, 9.926299999999874e-05, 9.870799999999944e-05, 9.9028000000001e-05, 9.919400000000037e-05, 9.856899999999974e-05, 9.868099999999977e-05, 9.88609999999987e-05, 9.920799999999994e-05, 9.915200000000166e-05, 9.875000000000161e-05, 9.908399999999928e-05, 9.862499999999802e-05, 9.870799999999944e-05, 9.876299999999824e-05, 9.863800000000159e-05, 9.880500000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.302" endtime="20201030 18:32:19.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.297" endtime="20201030 18:32:19.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.308" endtime="20201030 18:32:19.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.306" endtime="20201030 18:32:19.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.305" endtime="20201030 18:32:19.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.944" endtime="20201030 18:32:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.944" endtime="20201030 18:32:19.329"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.337" endtime="20201030 18:32:19.358"></status>
</kw>
<msg timestamp="20201030 18:32:19.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.336" endtime="20201030 18:32:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.359" endtime="20201030 18:32:19.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.362" endtime="20201030 18:32:19.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.333" endtime="20201030 18:32:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.331" endtime="20201030 18:32:19.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.371" endtime="20201030 18:32:19.657"></status>
</kw>
<msg timestamp="20201030 18:32:19.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.369" endtime="20201030 18:32:19.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.661" endtime="20201030 18:32:19.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.669" endtime="20201030 18:32:19.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.367" endtime="20201030 18:32:19.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.365" endtime="20201030 18:32:19.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.675" level="INFO">${RESULT} = [{'diff': 0.00010029199999999835}, {'diff': 9.988899999999884e-05}, {'diff': 9.981900000000099e-05}, {'diff': 0.00010030500000000192}, {'diff': 0.00010030500000000192}, {'diff': 9.987500000000274e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:19.672" endtime="20201030 18:32:19.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.679" level="INFO">${ACCURACY} = {'diff': [0.00010029199999999835, 9.988899999999884e-05, 9.981900000000099e-05, 0.00010030500000000192, 0.00010030500000000192, 9.987500000000274e-05, 0.00010001399999999896, 9.969400000000087e-05, 0....</msg>
<status status="PASS" starttime="20201030 18:32:19.676" endtime="20201030 18:32:19.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.684" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.683" endtime="20201030 18:32:19.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.686" level="INFO">VALUE: [0.00010029199999999835, 9.988899999999884e-05, 9.981900000000099e-05, 0.00010030500000000192, 0.00010030500000000192, 9.987500000000274e-05, 0.00010001399999999896, 9.969400000000087e-05, 0.00010005600000000114, 9.970800000000044e-05, 0.00010027799999999878, 0.00010045900000000066, 0.00010001399999999896, 9.983299999999709e-05, 0.00010011099999999995, 9.997200000000026e-05, 0.00010006900000000124, 0.0001005280000000025, 9.995799999999722e-05, 0.00010037499999999977, 9.965300000000163e-05, 0.00010007000000000071, 0.00010024999999999964, 9.98060000000009e-05, 9.984700000000013e-05, 0.00010008299999999734, 9.969500000000034e-05, 0.00010037499999999977, 9.970800000000044e-05, 9.958300000000031e-05, 0.00010008300000000081, 9.995800000000069e-05, 9.990300000000188e-05, 0.00010008399999999681, 0.00010002799999999853, 9.987499999999927e-05, 0.00010033400000000053, 0.0001003610000000002, 0.00010026300000000321, 0.00010011099999999995, 0.0001003610000000002, 0.00010029099999999888, 0.00010057000000000121, 9.980500000000142e-05, 9.974999999999914e-05, 9.98609999999997e-05, 9.96670000000012e-05, 0.00010019400000000137, 9.979199999999785e-05, 9.983300000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.685" endtime="20201030 18:32:19.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.680" endtime="20201030 18:32:19.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.691" endtime="20201030 18:32:19.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.690" endtime="20201030 18:32:19.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.689" endtime="20201030 18:32:19.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.330" endtime="20201030 18:32:19.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.329" endtime="20201030 18:32:19.712"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.720" endtime="20201030 18:32:19.742"></status>
</kw>
<msg timestamp="20201030 18:32:19.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.719" endtime="20201030 18:32:19.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.744" endtime="20201030 18:32:19.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.746" endtime="20201030 18:32:19.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.716" endtime="20201030 18:32:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.714" endtime="20201030 18:32:19.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.755" endtime="20201030 18:32:20.041"></status>
</kw>
<msg timestamp="20201030 18:32:20.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.754" endtime="20201030 18:32:20.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.045" endtime="20201030 18:32:20.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.053" endtime="20201030 18:32:20.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.751" endtime="20201030 18:32:20.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.750" endtime="20201030 18:32:20.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.059" level="INFO">${RESULT} = [{'diff': 0.00010090300000000288}, {'diff': 0.00010087500000000027}, {'diff': 0.00010109700000000138}, {'diff': 0.00010056900000000174}, {'diff': 0.00010076399999999971}, {'diff': 0.000100680000000002...</msg>
<status status="PASS" starttime="20201030 18:32:20.056" endtime="20201030 18:32:20.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.063" level="INFO">${ACCURACY} = {'diff': [0.00010090300000000288, 0.00010087500000000027, 0.00010109700000000138, 0.00010056900000000174, 0.00010076399999999971, 0.0001006800000000023, 0.00010052799999999903, 0.00010134700000000163,...</msg>
<status status="PASS" starttime="20201030 18:32:20.060" endtime="20201030 18:32:20.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.068" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.067" endtime="20201030 18:32:20.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.070" level="INFO">VALUE: [0.00010090300000000288, 0.00010087500000000027, 0.00010109700000000138, 0.00010056900000000174, 0.00010076399999999971, 0.0001006800000000023, 0.00010052799999999903, 0.00010134700000000163, 0.00010061099999999698, 0.0001015419999999996, 0.00010147200000000176, 0.00010127799999999978, 0.00010093100000000202, 0.00010130599999999892, 0.00010104099999999963, 0.00010077699999999981, 0.00010080499999999895, 0.00010138900000000034, 0.00010073600000000058, 0.00010097200000000126, 0.00010108299999999834, 0.00010117999999999933, 0.00010132000000000196, 0.00010065299999999916, 0.0001012359999999976, 0.00010075000000000014, 0.00010120900000000141, 0.00010154100000000013, 0.00010091700000000245, 0.00010059700000000088, 0.0001006939999999984, 0.00010143099999999905, 0.00010062500000000002, 0.00010062500000000002, 0.00010063899999999959, 0.00010072300000000048, 0.00010097299999999726, 0.00010090199999999994, 0.00010120799999999847, 0.00010094399999999865, 0.00010081900000000199, 0.00010105500000000267, 0.00010066699999999873, 0.00010081899999999852, 0.00010106899999999877, 0.00010063899999999959, 0.00010063899999999959, 0.00010140299999999991, 0.00010083400000000103, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201030 18:32:20.069" endtime="20201030 18:32:20.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.064" endtime="20201030 18:32:20.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.076" endtime="20201030 18:32:20.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.074" endtime="20201030 18:32:20.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.073" endtime="20201030 18:32:20.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.713" endtime="20201030 18:32:20.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.712" endtime="20201030 18:32:20.097"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.105" endtime="20201030 18:32:20.126"></status>
</kw>
<msg timestamp="20201030 18:32:20.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.104" endtime="20201030 18:32:20.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.127" endtime="20201030 18:32:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.130" endtime="20201030 18:32:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.101" endtime="20201030 18:32:20.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.099" endtime="20201030 18:32:20.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.139" endtime="20201030 18:32:20.424"></status>
</kw>
<msg timestamp="20201030 18:32:20.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019407306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:20.137" endtime="20201030 18:32:20.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019407306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:20.428" endtime="20201030 18:32:20.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.436" endtime="20201030 18:32:20.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.135" endtime="20201030 18:32:20.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.133" endtime="20201030 18:32:20.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.443" level="INFO">${RESULT} = [{'diff': 0.0001021939999999999}, {'diff': 0.00010241700000000048}, {'diff': 0.00010220899999999894}, {'diff': 0.00010218000000000033}, {'diff': 0.00010154100000000013}, {'diff': 0.0001020559999999996...</msg>
<status status="PASS" starttime="20201030 18:32:20.440" endtime="20201030 18:32:20.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.450" level="INFO">${ACCURACY} = {'diff': [0.0001021939999999999, 0.00010241700000000048, 0.00010220899999999894, 0.00010218000000000033, 0.00010154100000000013, 0.00010205599999999967, 0.00010181899999999952, 0.00010176400000000071,...</msg>
<status status="PASS" starttime="20201030 18:32:20.444" endtime="20201030 18:32:20.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.455" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.454" endtime="20201030 18:32:20.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.457" level="INFO">VALUE: [0.0001021939999999999, 0.00010241700000000048, 0.00010220899999999894, 0.00010218000000000033, 0.00010154100000000013, 0.00010205599999999967, 0.00010181899999999952, 0.00010176400000000071, 0.0001020000000000014, 0.00010220799999999947, 0.00010162500000000102, 0.00010195800000000269, 0.00010243100000000005, 0.00010226400000000122, 0.00010191699999999998, 0.00010225000000000165, 0.00010218000000000033, 0.00010231900000000002, 0.00010216599999999729, 0.00010181899999999952, 0.0001021939999999999, 0.00010195799999999922, 0.00010238900000000134, 0.00010240300000000091, 0.00010194499999999912, 0.00010172300000000148, 0.00010195899999999869, 0.00010172300000000148, 0.00010208399999999881, 0.00010165200000000069, 0.00010195799999999922, 0.00010175000000000115, 0.00010215300000000066, 0.00010162499999999755, 0.00010165300000000016, 0.000102513999999998, 0.00010197200000000226, 0.00010184700000000213, 0.00010226400000000122, 0.00010224999999999818, 0.00010244499999999962, 0.00010208299999999934, 0.0001022359999999986, 0.00010231900000000002, 0.00010216599999999729, 0.00010248600000000233, 0.00010220799999999947, 0.00010230499999999698, 0.00010181899999999952, 0.00010190300000000041]</msg>
<status status="PASS" starttime="20201030 18:32:20.456" endtime="20201030 18:32:20.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.451" endtime="20201030 18:32:20.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.462" endtime="20201030 18:32:20.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.461" endtime="20201030 18:32:20.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.459" endtime="20201030 18:32:20.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.097" endtime="20201030 18:32:20.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.097" endtime="20201030 18:32:20.483"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.491" endtime="20201030 18:32:20.512"></status>
</kw>
<msg timestamp="20201030 18:32:20.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.490" endtime="20201030 18:32:20.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.514" endtime="20201030 18:32:20.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.516" endtime="20201030 18:32:20.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.487" endtime="20201030 18:32:20.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.485" endtime="20201030 18:32:20.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.525" endtime="20201030 18:32:20.812"></status>
</kw>
<msg timestamp="20201030 18:32:20.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.524" endtime="20201030 18:32:20.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.816" endtime="20201030 18:32:20.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.824" endtime="20201030 18:32:20.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.521" endtime="20201030 18:32:20.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.519" endtime="20201030 18:32:20.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.830" level="INFO">${RESULT} = [{'diff': 0.0001032359999999996}, {'diff': 0.00010270799999999997}, {'diff': 0.00010274999999999868}, {'diff': 0.00010324999999999918}, {'diff': 0.0001033749999999993}, {'diff': 0.00010320800000000047...</msg>
<status status="PASS" starttime="20201030 18:32:20.827" endtime="20201030 18:32:20.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.834" level="INFO">${ACCURACY} = {'diff': [0.0001032359999999996, 0.00010270799999999997, 0.00010274999999999868, 0.00010324999999999918, 0.0001033749999999993, 0.00010320800000000047, 0.00010279200000000085, 0.00010276400000000172, ...</msg>
<status status="PASS" starttime="20201030 18:32:20.831" endtime="20201030 18:32:20.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.839" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.838" endtime="20201030 18:32:20.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.841" level="INFO">VALUE: [0.0001032359999999996, 0.00010270799999999997, 0.00010274999999999868, 0.00010324999999999918, 0.0001033749999999993, 0.00010320800000000047, 0.00010279200000000085, 0.00010276400000000172, 0.00010308399999999981, 0.00010307000000000024, 0.00010288900000000184, 0.0001027359999999991, 0.00010354099999999866, 0.00010344400000000115, 0.000103513999999999, 0.00010274999999999868, 0.0001031940000000009, 0.00010276399999999825, 0.00010265299999999769, 0.00010270799999999997, 0.00010290299999999794, 0.00010333400000000006, 0.00010333400000000006, 0.00010354100000000213, 0.00010295800000000022, 0.00010340199999999897, 0.00010309699999999991, 0.00010324999999999918, 0.00010312499999999905, 0.000103513999999999, 0.00010282, 0.00010298600000000283, 0.00010340300000000191, 0.00010326400000000222, 0.00010345900000000019, 0.00010290200000000194, 0.00010290199999999847, 0.00010274999999999868, 0.00010329100000000188, 0.00010288899999999837, 0.00010281900000000052, 0.00010277799999999782, 0.0001025689999999968, 0.00010263900000000159, 0.0001025420000000006, 0.00010354199999999814, 0.0001030139999999985, 0.00010347200000000029, 0.00010306900000000077, 0.00010342999999999811]</msg>
<status status="PASS" starttime="20201030 18:32:20.840" endtime="20201030 18:32:20.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.835" endtime="20201030 18:32:20.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.846" endtime="20201030 18:32:20.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.845" endtime="20201030 18:32:20.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.843" endtime="20201030 18:32:20.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.484" endtime="20201030 18:32:20.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.483" endtime="20201030 18:32:20.867"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.875" endtime="20201030 18:32:20.895"></status>
</kw>
<msg timestamp="20201030 18:32:20.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.874" endtime="20201030 18:32:20.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.897" endtime="20201030 18:32:20.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.899" endtime="20201030 18:32:20.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.871" endtime="20201030 18:32:20.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.869" endtime="20201030 18:32:20.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.908" endtime="20201030 18:32:21.193"></status>
</kw>
<msg timestamp="20201030 18:32:21.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.907" endtime="20201030 18:32:21.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.197" endtime="20201030 18:32:21.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.205" endtime="20201030 18:32:21.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.904" endtime="20201030 18:32:21.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.903" endtime="20201030 18:32:21.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.211" level="INFO">${RESULT} = [{'diff': 0.00010397200000000079}, {'diff': 0.00010394400000000165}, {'diff': 0.00010372200000000054}, {'diff': 0.00010393099999999808}, {'diff': 0.00010413899999999962}, {'diff': 0.000104388999999999...</msg>
<status status="PASS" starttime="20201030 18:32:21.208" endtime="20201030 18:32:21.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:21.215" level="INFO">${ACCURACY} = {'diff': [0.00010397200000000079, 0.00010394400000000165, 0.00010372200000000054, 0.00010393099999999808, 0.00010413899999999962, 0.00010438899999999987, 0.00010420800000000147, 0.00010426399999999975...</msg>
<status status="PASS" starttime="20201030 18:32:21.212" endtime="20201030 18:32:21.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.220" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:32:21.219" endtime="20201030 18:32:21.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.222" level="INFO">VALUE: [0.00010397200000000079, 0.00010394400000000165, 0.00010372200000000054, 0.00010393099999999808, 0.00010413899999999962, 0.00010438899999999987, 0.00010420800000000147, 0.00010426399999999975, 0.00010408300000000134, 0.00010430599999999846, 0.00010384700000000066, 0.00010376399999999925, 0.0001036940000000014, 0.00010413900000000309, 0.00010370800000000097, 0.00010377799999999882, 0.00010369500000000087, 0.00010369399999999793, 0.00010438899999999987, 0.00010404199999999864, 0.00010422300000000051, 0.00010444400000000215, 0.00010448700000000033, 0.00010391599999999904, 0.00010426399999999975, 0.00010452799999999957, 0.00010454199999999914, 0.00010357000000000074, 0.00010376399999999925, 0.00010415299999999919, 0.0001043750000000003, 0.00010372200000000054, 0.00010383400000000056, 0.00010363899999999912, 0.00010433300000000159, 0.0001040550000000022, 0.00010366600000000226, 0.00010431899999999855, 0.0001038749999999998, 0.000103820000000001, 0.0001043750000000003, 0.000103820000000001, 0.00010440300000000291, 0.00010377800000000229, 0.00010408399999999735, 0.00010391699999999851, 0.00010368000000000183, 0.00010397200000000079, 0.00010376400000000272, 0.000104514]</msg>
<status status="PASS" starttime="20201030 18:32:21.221" endtime="20201030 18:32:21.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.216" endtime="20201030 18:32:21.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.228" endtime="20201030 18:32:21.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.226" endtime="20201030 18:32:21.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.225" endtime="20201030 18:32:21.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.868" endtime="20201030 18:32:21.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.867" endtime="20201030 18:32:21.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.401" endtime="20201030 18:32:21.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.253" endtime="20201030 18:32:21.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.251" endtime="20201030 18:32:21.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.250" endtime="20201030 18:32:21.273"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:42.329" endtime="20201030 18:32:21.273" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.280" endtime="20201030 18:32:21.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.278" endtime="20201030 18:32:21.300"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.312" endtime="20201030 18:32:21.330"></status>
</kw>
<msg timestamp="20201030 18:32:21.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.311" endtime="20201030 18:32:21.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.332" endtime="20201030 18:32:21.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:21.334" endtime="20201030 18:32:21.336"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.308" endtime="20201030 18:32:21.337"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.306" endtime="20201030 18:32:21.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.305" endtime="20201030 18:32:21.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:21.342" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:21.341" endtime="20201030 18:32:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.339" endtime="20201030 18:32:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.304" endtime="20201030 18:32:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.303" endtime="20201030 18:32:21.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.343" endtime="20201030 18:32:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.302" endtime="20201030 18:32:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.300" endtime="20201030 18:32:21.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.277" endtime="20201030 18:32:21.346"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.357" endtime="20201030 18:32:21.375"></status>
</kw>
<msg timestamp="20201030 18:32:21.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.355" endtime="20201030 18:32:21.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.376" endtime="20201030 18:32:21.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.379" endtime="20201030 18:32:21.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.353" endtime="20201030 18:32:21.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.349" endtime="20201030 18:32:21.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.388" endtime="20201030 18:32:21.673"></status>
</kw>
<msg timestamp="20201030 18:32:21.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067806361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067841222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.386" endtime="20201030 18:32:21.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067806361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067841222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.677" endtime="20201030 18:32:21.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.685" endtime="20201030 18:32:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.384" endtime="20201030 18:32:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.382" endtime="20201030 18:32:21.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.692" level="INFO">${RESULT} = [{'diff': 3.486100000001102e-05}, {'diff': 3.040199999999882e-05}, {'diff': 3.0416999999990924e-05}, {'diff': 3.04170000000048e-05}, {'diff': 3.0430000000011836e-05}, {'diff': 3.043100000001131e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:21.689" endtime="20201030 18:32:21.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:21.697" level="INFO">${ACCURACY} = {'diff': [3.486100000001102e-05, 3.040199999999882e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0430000000011836e-05, 3.043100000001131e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.04...</msg>
<status status="PASS" starttime="20201030 18:32:21.693" endtime="20201030 18:32:21.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.701" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:32:21.700" endtime="20201030 18:32:21.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.704" level="INFO">VALUE: [3.486100000001102e-05, 3.040199999999882e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0430000000011836e-05, 3.043100000001131e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.044399999999059e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0416000000005328e-05, 3.047300000000308e-05, 3.0430000000011836e-05, 3.0458999999996572e-05, 3.0402999999998293e-05, 3.04170000000048e-05, 3.043100000001131e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.0360999999992644e-05, 3.042999999999796e-05, 3.0444999999990063e-05, 3.047300000000308e-05, 3.0430000000011836e-05, 3.04170000000048e-05, 3.0430999999997432e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0430999999997432e-05, 3.0416000000005328e-05, 3.0444000000004467e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.044500000000394e-05, 3.0416000000005328e-05, 3.0402999999998293e-05, 3.0416999999990924e-05, 3.0402999999998293e-05, 3.041599999999145e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0472000000003607e-05]</msg>
<status status="PASS" starttime="20201030 18:32:21.702" endtime="20201030 18:32:21.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.698" endtime="20201030 18:32:21.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.708" endtime="20201030 18:32:21.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.707" endtime="20201030 18:32:21.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.706" endtime="20201030 18:32:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.348" endtime="20201030 18:32:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.347" endtime="20201030 18:32:21.729"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.738" endtime="20201030 18:32:21.756"></status>
</kw>
<msg timestamp="20201030 18:32:21.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.736" endtime="20201030 18:32:21.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.758" endtime="20201030 18:32:21.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.760" endtime="20201030 18:32:21.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.734" endtime="20201030 18:32:21.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.731" endtime="20201030 18:32:21.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.770" endtime="20201030 18:32:22.056"></status>
</kw>
<msg timestamp="20201030 18:32:22.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.769" endtime="20201030 18:32:22.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.061" endtime="20201030 18:32:22.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.069" endtime="20201030 18:32:22.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.766" endtime="20201030 18:32:22.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.764" endtime="20201030 18:32:22.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.075" level="INFO">${RESULT} = [{'diff': 3.0472000000000138e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0430999999997432e-...</msg>
<status status="PASS" starttime="20201030 18:32:22.072" endtime="20201030 18:32:22.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.080" level="INFO">${ACCURACY} = {'diff': [3.0472000000000138e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05...</msg>
<status status="PASS" starttime="20201030 18:32:22.076" endtime="20201030 18:32:22.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.085" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.084" endtime="20201030 18:32:22.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.087" level="INFO">VALUE: [3.0472000000000138e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.0458000000000568e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.040199999999882e-05, 3.0444999999997002e-05, 3.0431000000000902e-05, 3.0458000000000568e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0444000000000998e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0374999999999153e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0472000000000138e-05, 3.0430000000001428e-05, 3.0499999999999278e-05, 3.0403000000001762e-05, 3.0375000000002622e-05]</msg>
<status status="PASS" starttime="20201030 18:32:22.086" endtime="20201030 18:32:22.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.081" endtime="20201030 18:32:22.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.092" endtime="20201030 18:32:22.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.090" endtime="20201030 18:32:22.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.089" endtime="20201030 18:32:22.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.730" endtime="20201030 18:32:22.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.729" endtime="20201030 18:32:22.113"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.121" endtime="20201030 18:32:22.139"></status>
</kw>
<msg timestamp="20201030 18:32:22.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.120" endtime="20201030 18:32:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.140" endtime="20201030 18:32:22.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.143" endtime="20201030 18:32:22.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.117" endtime="20201030 18:32:22.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.115" endtime="20201030 18:32:22.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.152" endtime="20201030 18:32:22.440"></status>
</kw>
<msg timestamp="20201030 18:32:22.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.150" endtime="20201030 18:32:22.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.444" endtime="20201030 18:32:22.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.453" endtime="20201030 18:32:22.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.148" endtime="20201030 18:32:22.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.146" endtime="20201030 18:32:22.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.459" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0416000000001858e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0416000000001858e-05}, {'diff': 3.0388999999998723e-...</msg>
<status status="PASS" starttime="20201030 18:32:22.456" endtime="20201030 18:32:22.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.463" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0416000000001858e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0416000000001858e-05, 3.0388999999998723e-05, 3.0430000000001428e-05, 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201030 18:32:22.460" endtime="20201030 18:32:22.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.468" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.467" endtime="20201030 18:32:22.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.470" level="INFO">VALUE: [3.0513999999998848e-05, 3.0416000000001858e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0416000000001858e-05, 3.0388999999998723e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0499999999999278e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0500000000002747e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.0430000000001428e-05, 3.0499999999999278e-05, 3.0444000000000998e-05, 3.0499999999999278e-05, 3.0472000000000138e-05, 3.041599999999839e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.044399999999753e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.0458000000000568e-05, 3.044399999999753e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0374999999999153e-05, 3.042999999999796e-05, 3.044399999999753e-05]</msg>
<status status="PASS" starttime="20201030 18:32:22.469" endtime="20201030 18:32:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.464" endtime="20201030 18:32:22.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.475" endtime="20201030 18:32:22.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.474" endtime="20201030 18:32:22.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.472" endtime="20201030 18:32:22.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.114" endtime="20201030 18:32:22.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.113" endtime="20201030 18:32:22.496"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.505" endtime="20201030 18:32:22.523"></status>
</kw>
<msg timestamp="20201030 18:32:22.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.504" endtime="20201030 18:32:22.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.524" endtime="20201030 18:32:22.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.527" endtime="20201030 18:32:22.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.500" endtime="20201030 18:32:22.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.498" endtime="20201030 18:32:22.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.536" endtime="20201030 18:32:22.822"></status>
</kw>
<msg timestamp="20201030 18:32:22.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.534" endtime="20201030 18:32:22.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.826" endtime="20201030 18:32:22.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.834" endtime="20201030 18:32:22.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.532" endtime="20201030 18:32:22.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.530" endtime="20201030 18:32:22.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.841" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0347000000000013e-05}, {'diff': 3.0374999999999153e-0...</msg>
<status status="PASS" starttime="20201030 18:32:22.838" endtime="20201030 18:32:22.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.845" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.0402999999998293e-05, 3.0347000000000013e-05, 3.0374999999999153e-05, 3.0374999999999153e-05, 3.045900000000004e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:22.842" endtime="20201030 18:32:22.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.850" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.848" endtime="20201030 18:32:22.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.853" level="INFO">VALUE: [3.0513999999998848e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.0402999999998293e-05, 3.0347000000000013e-05, 3.0374999999999153e-05, 3.0374999999999153e-05, 3.045900000000004e-05, 3.0499999999999278e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.038799999999925e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0402999999998293e-05, 3.045900000000004e-05, 3.042999999999796e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0403000000001762e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0444999999997002e-05, 3.0485999999999708e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.038799999999925e-05, 3.0431000000000902e-05, 3.0375000000002622e-05, 3.0458000000000568e-05, 3.0430999999997432e-05]</msg>
<status status="PASS" starttime="20201030 18:32:22.852" endtime="20201030 18:32:22.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.846" endtime="20201030 18:32:22.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.858" endtime="20201030 18:32:22.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.856" endtime="20201030 18:32:22.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.855" endtime="20201030 18:32:22.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.497" endtime="20201030 18:32:22.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.496" endtime="20201030 18:32:22.879"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.887" endtime="20201030 18:32:22.904"></status>
</kw>
<msg timestamp="20201030 18:32:22.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.886" endtime="20201030 18:32:22.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.906" endtime="20201030 18:32:22.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.908" endtime="20201030 18:32:22.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.883" endtime="20201030 18:32:22.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.881" endtime="20201030 18:32:22.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.917" endtime="20201030 18:32:23.204"></status>
</kw>
<msg timestamp="20201030 18:32:23.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.916" endtime="20201030 18:32:23.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.208" endtime="20201030 18:32:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.216" endtime="20201030 18:32:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.913" endtime="20201030 18:32:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.912" endtime="20201030 18:32:23.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.222" level="INFO">${RESULT} = [{'diff': 3.0526999999998944e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0416999999997862e-05...</msg>
<status status="PASS" starttime="20201030 18:32:23.219" endtime="20201030 18:32:23.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.227" level="INFO">${ACCURACY} = {'diff': [3.0526999999998944e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:23.223" endtime="20201030 18:32:23.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.232" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.231" endtime="20201030 18:32:23.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.234" level="INFO">VALUE: [3.0526999999998944e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0499999999999278e-05, 3.042999999999796e-05, 3.0472000000000138e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.0417000000001332e-05, 3.0332999999996973e-05, 3.044500000000047e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0472000000000138e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0416999999997862e-05]</msg>
<status status="PASS" starttime="20201030 18:32:23.233" endtime="20201030 18:32:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.228" endtime="20201030 18:32:23.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.239" endtime="20201030 18:32:23.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.238" endtime="20201030 18:32:23.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.237" endtime="20201030 18:32:23.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.879" endtime="20201030 18:32:23.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.879" endtime="20201030 18:32:23.260"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.269" endtime="20201030 18:32:23.286"></status>
</kw>
<msg timestamp="20201030 18:32:23.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.267" endtime="20201030 18:32:23.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.287" endtime="20201030 18:32:23.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.290" endtime="20201030 18:32:23.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.264" endtime="20201030 18:32:23.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.262" endtime="20201030 18:32:23.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.299" endtime="20201030 18:32:23.585"></status>
</kw>
<msg timestamp="20201030 18:32:23.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019510764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.297" endtime="20201030 18:32:23.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019510764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.590" endtime="20201030 18:32:23.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.598" endtime="20201030 18:32:23.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.295" endtime="20201030 18:32:23.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.293" endtime="20201030 18:32:23.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.604" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0388999999998723e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.044500000000047e-05...</msg>
<status status="PASS" starttime="20201030 18:32:23.601" endtime="20201030 18:32:23.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.609" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.045900000000004e-05, 3.0430999999997432e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:23.605" endtime="20201030 18:32:23.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.613" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.612" endtime="20201030 18:32:23.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.615" level="INFO">VALUE: [3.052799999999842e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.045900000000004e-05, 3.0430999999997432e-05, 3.044399999999753e-05, 3.0431000000000902e-05, 3.0444999999997002e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0486000000003177e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.047299999999961e-05, 3.0374999999999153e-05, 3.047299999999961e-05, 3.047300000000308e-05, 3.041599999999839e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0472000000000138e-05, 3.042999999999796e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.038799999999925e-05, 3.0472000000000138e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.04579999999971e-05, 3.0458000000000568e-05, 3.0430000000001428e-05, 3.0417000000001332e-05]</msg>
<status status="PASS" starttime="20201030 18:32:23.614" endtime="20201030 18:32:23.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.609" endtime="20201030 18:32:23.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.625" endtime="20201030 18:32:23.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.623" endtime="20201030 18:32:23.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.622" endtime="20201030 18:32:23.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.261" endtime="20201030 18:32:23.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.260" endtime="20201030 18:32:23.645"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.654" endtime="20201030 18:32:23.673"></status>
</kw>
<msg timestamp="20201030 18:32:23.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.653" endtime="20201030 18:32:23.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.674" endtime="20201030 18:32:23.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.677" endtime="20201030 18:32:23.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.650" endtime="20201030 18:32:23.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.648" endtime="20201030 18:32:23.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.686" endtime="20201030 18:32:23.979"></status>
</kw>
<msg timestamp="20201030 18:32:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.684" endtime="20201030 18:32:23.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.988" endtime="20201030 18:32:24.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.007" endtime="20201030 18:32:24.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.682" endtime="20201030 18:32:24.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.680" endtime="20201030 18:32:24.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.021" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0389000000002192e-05}, {'diff': 3.0431000000000902e-0...</msg>
<status status="PASS" starttime="20201030 18:32:24.014" endtime="20201030 18:32:24.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.030" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0416999999997862e-05,...</msg>
<status status="PASS" starttime="20201030 18:32:24.023" endtime="20201030 18:32:24.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.042" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.039" endtime="20201030 18:32:24.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.048" level="INFO">VALUE: [3.0513999999998848e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.044399999999753e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.04579999999971e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0389000000002192e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0347000000000013e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.044399999999753e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0472000000000138e-05]</msg>
<status status="PASS" starttime="20201030 18:32:24.045" endtime="20201030 18:32:24.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.032" endtime="20201030 18:32:24.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.057" endtime="20201030 18:32:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.054" endtime="20201030 18:32:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.052" endtime="20201030 18:32:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.646" endtime="20201030 18:32:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.646" endtime="20201030 18:32:24.079"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.092" endtime="20201030 18:32:24.109"></status>
</kw>
<msg timestamp="20201030 18:32:24.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.089" endtime="20201030 18:32:24.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.111" endtime="20201030 18:32:24.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.116" endtime="20201030 18:32:24.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.086" endtime="20201030 18:32:24.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.083" endtime="20201030 18:32:24.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.131" endtime="20201030 18:32:24.419"></status>
</kw>
<msg timestamp="20201030 18:32:24.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025468903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.129" endtime="20201030 18:32:24.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025468903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.423" endtime="20201030 18:32:24.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.431" endtime="20201030 18:32:24.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.125" endtime="20201030 18:32:24.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.122" endtime="20201030 18:32:24.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.438" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0416000000001858e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.044500000000047e-05...</msg>
<status status="PASS" starttime="20201030 18:32:24.434" endtime="20201030 18:32:24.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.443" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:24.439" endtime="20201030 18:32:24.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.447" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.446" endtime="20201030 18:32:24.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.450" level="INFO">VALUE: [3.052799999999842e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0375000000002622e-05, 3.0403000000001762e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0402000000002288e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0347999999999486e-05, 3.0375000000002622e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0472000000000138e-05, 3.042999999999796e-05, 3.0458000000000568e-05, 3.0444999999997002e-05, 3.0403000000001762e-05, 3.044399999999753e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0402999999998293e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.041599999999839e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0402999999998293e-05, 3.0472000000000138e-05, 3.0430999999997432e-05, 3.044500000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:32:24.448" endtime="20201030 18:32:24.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.444" endtime="20201030 18:32:24.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.455" endtime="20201030 18:32:24.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.453" endtime="20201030 18:32:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.452" endtime="20201030 18:32:24.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.080" endtime="20201030 18:32:24.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.080" endtime="20201030 18:32:24.476"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.488" endtime="20201030 18:32:24.506"></status>
</kw>
<msg timestamp="20201030 18:32:24.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.487" endtime="20201030 18:32:24.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.507" endtime="20201030 18:32:24.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.510" endtime="20201030 18:32:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.484" endtime="20201030 18:32:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.481" endtime="20201030 18:32:24.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.519" endtime="20201030 18:32:24.814"></status>
</kw>
<msg timestamp="20201030 18:32:24.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02388025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:24.517" endtime="20201030 18:32:24.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02388025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:24.819" endtime="20201030 18:32:24.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.827" endtime="20201030 18:32:24.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.515" endtime="20201030 18:32:24.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.513" endtime="20201030 18:32:24.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.834" level="INFO">${RESULT} = [{'diff': 3.054199999999799e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0430000000001428e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:24.830" endtime="20201030 18:32:24.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.838" level="INFO">${ACCURACY} = {'diff': [3.054199999999799e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:24.835" endtime="20201030 18:32:24.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.842" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.841" endtime="20201030 18:32:24.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.845" level="INFO">VALUE: [3.054199999999799e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0485999999999708e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0444999999997002e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0444000000000998e-05, 3.0514000000002317e-05, 3.0430999999997432e-05, 3.0499999999999278e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.0444999999997002e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0416999999997862e-05, 3.0361999999999056e-05, 3.042999999999796e-05, 3.0500000000002747e-05, 3.0444999999997002e-05, 3.038799999999925e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.045900000000004e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0347999999999486e-05]</msg>
<status status="PASS" starttime="20201030 18:32:24.843" endtime="20201030 18:32:24.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.839" endtime="20201030 18:32:24.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.850" endtime="20201030 18:32:24.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.848" endtime="20201030 18:32:24.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.847" endtime="20201030 18:32:24.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.477" endtime="20201030 18:32:24.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.476" endtime="20201030 18:32:24.870"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.879" endtime="20201030 18:32:24.897"></status>
</kw>
<msg timestamp="20201030 18:32:24.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.877" endtime="20201030 18:32:24.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.899" endtime="20201030 18:32:24.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.901" endtime="20201030 18:32:24.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.875" endtime="20201030 18:32:24.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.873" endtime="20201030 18:32:24.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.910" endtime="20201030 18:32:25.199"></status>
</kw>
<msg timestamp="20201030 18:32:25.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020502653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.909" endtime="20201030 18:32:25.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020502653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.204" endtime="20201030 18:32:25.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.212" endtime="20201030 18:32:25.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.906" endtime="20201030 18:32:25.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.904" endtime="20201030 18:32:25.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.219" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.0403000000001762e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0430999999997432e-05...</msg>
<status status="PASS" starttime="20201030 18:32:25.215" endtime="20201030 18:32:25.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.223" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.0403000000001762e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:25.220" endtime="20201030 18:32:25.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.227" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.226" endtime="20201030 18:32:25.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.230" level="INFO">VALUE: [3.052799999999842e-05, 3.0403000000001762e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.0389000000002192e-05, 3.0472000000000138e-05, 3.0403000000001762e-05, 3.044399999999753e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.0388999999998723e-05, 3.040199999999882e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.041599999999839e-05, 3.0402000000002288e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0430000000001428e-05]</msg>
<status status="PASS" starttime="20201030 18:32:25.228" endtime="20201030 18:32:25.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.224" endtime="20201030 18:32:25.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.236" endtime="20201030 18:32:25.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.234" endtime="20201030 18:32:25.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.233" endtime="20201030 18:32:25.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.871" endtime="20201030 18:32:25.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.871" endtime="20201030 18:32:25.256"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.265" endtime="20201030 18:32:25.282"></status>
</kw>
<msg timestamp="20201030 18:32:25.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.263" endtime="20201030 18:32:25.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.284" endtime="20201030 18:32:25.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.286" endtime="20201030 18:32:25.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.261" endtime="20201030 18:32:25.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.259" endtime="20201030 18:32:25.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.295" endtime="20201030 18:32:25.597"></status>
</kw>
<msg timestamp="20201030 18:32:25.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.294" endtime="20201030 18:32:25.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.602" endtime="20201030 18:32:25.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.610" endtime="20201030 18:32:25.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.291" endtime="20201030 18:32:25.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.290" endtime="20201030 18:32:25.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.616" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.044399999999753e-05}, {'diff': 3.0374999999999153e-05}, {'diff': 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201030 18:32:25.613" endtime="20201030 18:32:25.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.621" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.044399999999753e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0403000000001762e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:25.617" endtime="20201030 18:32:25.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.626" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.625" endtime="20201030 18:32:25.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.628" level="INFO">VALUE: [3.0513999999998848e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.044399999999753e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.044399999999753e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.048699999999918e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.040199999999882e-05, 3.0402999999998293e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.045900000000004e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0360999999999583e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.045900000000004e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0416999999997862e-05, 3.040199999999882e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0444000000000998e-05, 3.0388999999998723e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.044500000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:32:25.627" endtime="20201030 18:32:25.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.622" endtime="20201030 18:32:25.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.633" endtime="20201030 18:32:25.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.632" endtime="20201030 18:32:25.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.631" endtime="20201030 18:32:25.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.257" endtime="20201030 18:32:25.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.257" endtime="20201030 18:32:25.654"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.663" endtime="20201030 18:32:25.679"></status>
</kw>
<msg timestamp="20201030 18:32:25.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.661" endtime="20201030 18:32:25.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.681" endtime="20201030 18:32:25.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.683" endtime="20201030 18:32:25.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.658" endtime="20201030 18:32:25.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.656" endtime="20201030 18:32:25.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.692" endtime="20201030 18:32:25.981"></status>
</kw>
<msg timestamp="20201030 18:32:25.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.691" endtime="20201030 18:32:25.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.985" endtime="20201030 18:32:25.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.993" endtime="20201030 18:32:25.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.688" endtime="20201030 18:32:25.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.687" endtime="20201030 18:32:25.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.000" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0417000000001332e-...</msg>
<status status="PASS" starttime="20201030 18:32:25.997" endtime="20201030 18:32:26.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.004" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0430000000001428e-05...</msg>
<status status="PASS" starttime="20201030 18:32:26.001" endtime="20201030 18:32:26.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.009" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.008" endtime="20201030 18:32:26.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.011" level="INFO">VALUE: [3.0499999999999278e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0389000000002192e-05, 3.0402999999998293e-05, 3.0403000000001762e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.044500000000047e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0374999999999153e-05, 3.0431000000000902e-05, 3.0375000000002622e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0388999999998723e-05, 3.041599999999839e-05, 3.04579999999971e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0430999999997432e-05, 3.044500000000047e-05, 3.045900000000004e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.044500000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:32:26.010" endtime="20201030 18:32:26.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.005" endtime="20201030 18:32:26.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.016" endtime="20201030 18:32:26.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.015" endtime="20201030 18:32:26.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.013" endtime="20201030 18:32:26.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.655" endtime="20201030 18:32:26.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.654" endtime="20201030 18:32:26.037"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.045" endtime="20201030 18:32:26.062"></status>
</kw>
<msg timestamp="20201030 18:32:26.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.044" endtime="20201030 18:32:26.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.064" endtime="20201030 18:32:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.066" endtime="20201030 18:32:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.041" endtime="20201030 18:32:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.039" endtime="20201030 18:32:26.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.075" endtime="20201030 18:32:26.378"></status>
</kw>
<msg timestamp="20201030 18:32:26.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.074" endtime="20201030 18:32:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.382" endtime="20201030 18:32:26.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.390" endtime="20201030 18:32:26.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.071" endtime="20201030 18:32:26.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.070" endtime="20201030 18:32:26.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.396" level="INFO">${RESULT} = [{'diff': 3.056900000000112e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.144500000000147e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.045900000000004e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:26.393" endtime="20201030 18:32:26.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.400" level="INFO">${ACCURACY} = {'diff': [3.056900000000112e-05, 3.0472000000000138e-05, 3.144500000000147e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:32:26.397" endtime="20201030 18:32:26.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.405" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.404" endtime="20201030 18:32:26.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.407" level="INFO">VALUE: [3.056900000000112e-05, 3.0472000000000138e-05, 3.144500000000147e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0444000000000998e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3.141700000000233e-05, 3.0458000000000568e-05, 3.0430000000001428e-05, 3.04579999999971e-05, 3.045900000000004e-05, 3.0458000000000568e-05, 3.042999999999796e-05, 3.080600000000128e-05, 3.0472000000000138e-05, 3.0472000000000138e-05, 3.042999999999796e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.084700000000051e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.147200000000114e-05, 3.0818999999997904e-05, 3.0402000000002288e-05, 3.083300000000094e-05, 3.0472000000000138e-05, 3.084700000000051e-05, 3.0832999999997474e-05, 3.0458000000000568e-05, 3.0458000000000568e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.0458000000000568e-05, 3.0500000000002747e-05, 3.0512999999999374e-05, 3.0416999999997862e-05, 3.0513999999998848e-05, 3.044500000000047e-05, 3.147199999999767e-05]</msg>
<status status="PASS" starttime="20201030 18:32:26.406" endtime="20201030 18:32:26.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.401" endtime="20201030 18:32:26.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.413" endtime="20201030 18:32:26.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.412" endtime="20201030 18:32:26.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.410" endtime="20201030 18:32:26.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.038" endtime="20201030 18:32:26.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.037" endtime="20201030 18:32:26.434"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.442" endtime="20201030 18:32:26.460"></status>
</kw>
<msg timestamp="20201030 18:32:26.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.441" endtime="20201030 18:32:26.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.461" endtime="20201030 18:32:26.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.464" endtime="20201030 18:32:26.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.438" endtime="20201030 18:32:26.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.436" endtime="20201030 18:32:26.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.473" endtime="20201030 18:32:26.758"></status>
</kw>
<msg timestamp="20201030 18:32:26.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.471" endtime="20201030 18:32:26.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.762" endtime="20201030 18:32:26.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.770" endtime="20201030 18:32:26.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.469" endtime="20201030 18:32:26.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.467" endtime="20201030 18:32:26.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.777" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.366600000000164e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.357000000000013e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:26.773" endtime="20201030 18:32:26.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.782" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.366600000000164e-05, 3.3638999999998503e-05, 3.0472000000000138e-05, 3.361100000000283e-05, 3.357000000000013e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:32:26.778" endtime="20201030 18:32:26.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.786" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.785" endtime="20201030 18:32:26.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.788" level="INFO">VALUE: [3.0499999999999278e-05, 3.366600000000164e-05, 3.3638999999998503e-05, 3.0472000000000138e-05, 3.361100000000283e-05, 3.357000000000013e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.0388999999998723e-05, 3.352800000000142e-05, 3.3583000000000224e-05, 3.0486000000003177e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.0485999999999708e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.351399999999838e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3569000000000654e-05, 3.355600000000056e-05, 3.045900000000004e-05, 3.3638999999998503e-05, 3.3568999999997184e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.354200000000099e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.0444000000000998e-05, 3.365300000000154e-05, 3.3610999999999364e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.3582999999996754e-05, 3.359799999999927e-05, 3.0431000000000902e-05, 3.361100000000283e-05, 3.359700000000326e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3596999999999794e-05, 3.36250000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:32:26.787" endtime="20201030 18:32:26.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.782" endtime="20201030 18:32:26.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.793" endtime="20201030 18:32:26.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.792" endtime="20201030 18:32:26.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.791" endtime="20201030 18:32:26.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.435" endtime="20201030 18:32:26.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.434" endtime="20201030 18:32:26.814"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.823" endtime="20201030 18:32:26.840"></status>
</kw>
<msg timestamp="20201030 18:32:26.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.821" endtime="20201030 18:32:26.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.842" endtime="20201030 18:32:26.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.845" endtime="20201030 18:32:26.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.818" endtime="20201030 18:32:26.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.816" endtime="20201030 18:32:26.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.858" endtime="20201030 18:32:27.146"></status>
</kw>
<msg timestamp="20201030 18:32:27.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:26.856" endtime="20201030 18:32:27.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:27.151" endtime="20201030 18:32:27.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.159" endtime="20201030 18:32:27.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.852" endtime="20201030 18:32:27.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.850" endtime="20201030 18:32:27.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.165" level="INFO">${RESULT} = [{'diff': 3.373599999999949e-05}, {'diff': 3.354199999999752e-05}, {'diff': 3.3582999999996754e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.359700000000326e-05}, {'diff': 3.3624999999998934e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:27.162" endtime="20201030 18:32:27.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.170" level="INFO">${ACCURACY} = {'diff': [3.373599999999949e-05, 3.354199999999752e-05, 3.3582999999996754e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:27.166" endtime="20201030 18:32:27.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.174" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.173" endtime="20201030 18:32:27.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.176" level="INFO">VALUE: [3.373599999999949e-05, 3.354199999999752e-05, 3.3582999999996754e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.3540999999998045e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3583000000000224e-05, 3.355600000000056e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.36250000000024e-05, 3.3583000000000224e-05, 3.3554999999997615e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.3582999999996754e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3596999999999794e-05, 3.365299999999807e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.361199999999884e-05, 3.3596999999999794e-05, 3.3610999999999364e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.175" endtime="20201030 18:32:27.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.170" endtime="20201030 18:32:27.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.181" endtime="20201030 18:32:27.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.180" endtime="20201030 18:32:27.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.179" endtime="20201030 18:32:27.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.815" endtime="20201030 18:32:27.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.814" endtime="20201030 18:32:27.202"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.211" endtime="20201030 18:32:27.232"></status>
</kw>
<msg timestamp="20201030 18:32:27.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.209" endtime="20201030 18:32:27.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.233" endtime="20201030 18:32:27.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.236" endtime="20201030 18:32:27.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.206" endtime="20201030 18:32:27.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.204" endtime="20201030 18:32:27.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.245" endtime="20201030 18:32:27.529"></status>
</kw>
<msg timestamp="20201030 18:32:27.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.243" endtime="20201030 18:32:27.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.533" endtime="20201030 18:32:27.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.542" endtime="20201030 18:32:27.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.241" endtime="20201030 18:32:27.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.239" endtime="20201030 18:32:27.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.548" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3610999999999364e-0...</msg>
<status status="PASS" starttime="20201030 18:32:27.545" endtime="20201030 18:32:27.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.552" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3554999999997615e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:27.549" endtime="20201030 18:32:27.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.557" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.556" endtime="20201030 18:32:27.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.559" level="INFO">VALUE: [3.374999999999906e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3554999999997615e-05, 3.3583000000000224e-05, 3.355600000000056e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.3583000000000224e-05, 3.3624999999998934e-05, 3.35839999999997e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3582999999996754e-05, 3.3568999999997184e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.365300000000154e-05, 3.359700000000326e-05, 3.357000000000013e-05, 3.357000000000013e-05, 3.359800000000274e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359800000000274e-05, 3.3569000000000654e-05, 3.3583000000000224e-05, 3.358400000000317e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.558" endtime="20201030 18:32:27.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.553" endtime="20201030 18:32:27.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.565" endtime="20201030 18:32:27.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.563" endtime="20201030 18:32:27.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.562" endtime="20201030 18:32:27.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.203" endtime="20201030 18:32:27.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.202" endtime="20201030 18:32:27.586"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.594" endtime="20201030 18:32:27.610"></status>
</kw>
<msg timestamp="20201030 18:32:27.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.593" endtime="20201030 18:32:27.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.611" endtime="20201030 18:32:27.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.614" endtime="20201030 18:32:27.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.590" endtime="20201030 18:32:27.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.588" endtime="20201030 18:32:27.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.623" endtime="20201030 18:32:27.909"></status>
</kw>
<msg timestamp="20201030 18:32:27.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.621" endtime="20201030 18:32:27.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.913" endtime="20201030 18:32:27.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.921" endtime="20201030 18:32:27.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.619" endtime="20201030 18:32:27.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.617" endtime="20201030 18:32:27.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.928" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3610999999999364e-0...</msg>
<status status="PASS" starttime="20201030 18:32:27.924" endtime="20201030 18:32:27.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.933" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3583000000000224e-05,...</msg>
<status status="PASS" starttime="20201030 18:32:27.929" endtime="20201030 18:32:27.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.937" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.936" endtime="20201030 18:32:27.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.939" level="INFO">VALUE: [3.374999999999906e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.36250000000024e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.355599999999709e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3596999999999794e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.361199999999884e-05, 3.3568999999997184e-05, 3.359799999999927e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.366599999999817e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.35839999999997e-05, 3.354200000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.938" endtime="20201030 18:32:27.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.933" endtime="20201030 18:32:27.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.944" endtime="20201030 18:32:27.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.943" endtime="20201030 18:32:27.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.942" endtime="20201030 18:32:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.586" endtime="20201030 18:32:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.586" endtime="20201030 18:32:27.967"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.979" endtime="20201030 18:32:27.996"></status>
</kw>
<msg timestamp="20201030 18:32:27.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.977" endtime="20201030 18:32:27.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.997" endtime="20201030 18:32:27.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.000" endtime="20201030 18:32:28.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.974" endtime="20201030 18:32:28.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.970" endtime="20201030 18:32:28.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.009" endtime="20201030 18:32:28.296"></status>
</kw>
<msg timestamp="20201030 18:32:28.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025404208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025438667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.008" endtime="20201030 18:32:28.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025404208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025438667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.301" endtime="20201030 18:32:28.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.309" endtime="20201030 18:32:28.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.005" endtime="20201030 18:32:28.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.003" endtime="20201030 18:32:28.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.315" level="INFO">${RESULT} = [{'diff': 3.445900000000057e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.4347000000000544e-05}, {'diff': 3.405599999999759e-05}, {'diff': 3.4582999999997754e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:28.312" endtime="20201030 18:32:28.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.320" level="INFO">${ACCURACY} = {'diff': [3.445900000000057e-05, 3.419500000000075e-05, 3.526400000000013e-05, 3.4347000000000544e-05, 3.405599999999759e-05, 3.4582999999997754e-05, 3.399999999999931e-05, 3.517999999999924e-05, 3.40...</msg>
<status status="PASS" starttime="20201030 18:32:28.316" endtime="20201030 18:32:28.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.324" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.323" endtime="20201030 18:32:28.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.326" level="INFO">VALUE: [3.445900000000057e-05, 3.419500000000075e-05, 3.526400000000013e-05, 3.4347000000000544e-05, 3.405599999999759e-05, 3.4582999999997754e-05, 3.399999999999931e-05, 3.517999999999924e-05, 3.400000000000278e-05, 3.4041000000002014e-05, 3.419499999999728e-05, 3.3624999999998934e-05, 3.4110999999999864e-05, 3.4638999999999504e-05, 3.411199999999934e-05, 3.4624999999999934e-05, 3.482000000000138e-05, 3.420900000000032e-05, 3.4069000000001154e-05, 3.451399999999938e-05, 3.484800000000052e-05, 3.475000000000006e-05, 3.374999999999906e-05, 3.419400000000128e-05, 3.359799999999927e-05, 3.361200000000231e-05, 3.451400000000285e-05, 3.418100000000118e-05, 3.399999999999931e-05, 3.523600000000099e-05, 3.420800000000085e-05, 3.424999999999956e-05, 3.424999999999956e-05, 3.4333000000000974e-05, 3.359799999999927e-05, 3.416699999999814e-05, 3.366700000000111e-05, 3.420900000000032e-05, 3.4652999999999073e-05, 3.4124999999999434e-05, 3.431999999999741e-05, 3.434800000000002e-05, 3.448600000000024e-05, 3.419400000000128e-05, 3.419400000000128e-05, 3.393000000000146e-05, 3.525000000000056e-05, 3.454199999999852e-05, 3.3527000000001944e-05, 3.422200000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.325" endtime="20201030 18:32:28.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.320" endtime="20201030 18:32:28.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.331" endtime="20201030 18:32:28.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.330" endtime="20201030 18:32:28.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.329" endtime="20201030 18:32:28.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.968" endtime="20201030 18:32:28.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.967" endtime="20201030 18:32:28.352"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.361" endtime="20201030 18:32:28.379"></status>
</kw>
<msg timestamp="20201030 18:32:28.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.359" endtime="20201030 18:32:28.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.381" endtime="20201030 18:32:28.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.383" endtime="20201030 18:32:28.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.356" endtime="20201030 18:32:28.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.354" endtime="20201030 18:32:28.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.392" endtime="20201030 18:32:28.677"></status>
</kw>
<msg timestamp="20201030 18:32:28.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.391" endtime="20201030 18:32:28.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.681" endtime="20201030 18:32:28.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.689" endtime="20201030 18:32:28.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.388" endtime="20201030 18:32:28.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.386" endtime="20201030 18:32:28.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.696" level="INFO">${RESULT} = [{'diff': 3.509800000000077e-05}, {'diff': 3.604200000000002e-05}, {'diff': 3.502799999999945e-05}, {'diff': 3.5152999999999573e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.502800000000292e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:28.693" endtime="20201030 18:32:28.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.700" level="INFO">${ACCURACY} = {'diff': [3.509800000000077e-05, 3.604200000000002e-05, 3.502799999999945e-05, 3.5152999999999573e-05, 3.554199999999952e-05, 3.502800000000292e-05, 3.455600000000156e-05, 3.5832999999999005e-05, 3.51...</msg>
<status status="PASS" starttime="20201030 18:32:28.697" endtime="20201030 18:32:28.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.704" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.703" endtime="20201030 18:32:28.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.707" level="INFO">VALUE: [3.509800000000077e-05, 3.604200000000002e-05, 3.502799999999945e-05, 3.5152999999999573e-05, 3.554199999999952e-05, 3.502800000000292e-05, 3.455600000000156e-05, 3.5832999999999005e-05, 3.515300000000304e-05, 3.579199999999977e-05, 3.479200000000224e-05, 3.502799999999945e-05, 3.573700000000096e-05, 3.498600000000074e-05, 3.5625000000000934e-05, 3.5139000000000004e-05, 3.5554999999999615e-05, 3.5568999999999185e-05, 3.4847000000001044e-05, 3.498600000000074e-05, 3.549999999999734e-05, 3.473600000000049e-05, 3.4888999999999754e-05, 3.54719999999982e-05, 3.551400000000038e-05, 3.504200000000249e-05, 3.476399999999963e-05, 3.600000000000131e-05, 3.554199999999952e-05, 3.525000000000056e-05, 3.473600000000049e-05, 3.6096999999998824e-05, 3.658399999999923e-05, 3.519399999999881e-05, 3.5583000000002224e-05, 3.5152999999999573e-05, 3.5846999999998574e-05, 3.6541000000001045e-05, 3.592999999999999e-05, 3.505599999999859e-05, 3.6597000000002794e-05, 3.4804999999998865e-05, 3.604200000000002e-05, 3.5152999999999573e-05, 3.573599999999802e-05, 3.5139000000000004e-05, 3.581999999999891e-05, 3.475000000000006e-05, 3.6027000000000975e-05, 3.5152999999999573e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.705" endtime="20201030 18:32:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.701" endtime="20201030 18:32:28.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.717" endtime="20201030 18:32:28.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.715" endtime="20201030 18:32:28.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.714" endtime="20201030 18:32:28.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.353" endtime="20201030 18:32:28.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.352" endtime="20201030 18:32:28.738"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.746" endtime="20201030 18:32:28.762"></status>
</kw>
<msg timestamp="20201030 18:32:28.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.745" endtime="20201030 18:32:28.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.764" endtime="20201030 18:32:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.766" endtime="20201030 18:32:28.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.742" endtime="20201030 18:32:28.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.740" endtime="20201030 18:32:28.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.775" endtime="20201030 18:32:29.062"></status>
</kw>
<msg timestamp="20201030 18:32:29.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.774" endtime="20201030 18:32:29.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.066" endtime="20201030 18:32:29.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.074" endtime="20201030 18:32:29.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.771" endtime="20201030 18:32:29.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.769" endtime="20201030 18:32:29.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.081" level="INFO">${RESULT} = [{'diff': 3.699999999999884e-05}, {'diff': 3.6776999999998256e-05}, {'diff': 3.652800000000095e-05}, {'diff': 3.654200000000052e-05}, {'diff': 3.6624999999998464e-05}, {'diff': 3.6846999999999575e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:29.077" endtime="20201030 18:32:29.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.086" level="INFO">${ACCURACY} = {'diff': [3.699999999999884e-05, 3.6776999999998256e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.6624999999998464e-05, 3.6846999999999575e-05, 3.673600000000249e-05, 3.6903000000001324e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:32:29.082" endtime="20201030 18:32:29.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.090" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.089" endtime="20201030 18:32:29.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.092" level="INFO">VALUE: [3.699999999999884e-05, 3.6776999999998256e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.6624999999998464e-05, 3.6846999999999575e-05, 3.673600000000249e-05, 3.6903000000001324e-05, 3.6597000000002794e-05, 3.67780000000012e-05, 3.651399999999791e-05, 3.694400000000056e-05, 3.677799999999773e-05, 3.652800000000095e-05, 3.693000000000099e-05, 3.6846999999999575e-05, 3.6610999999998894e-05, 3.6541000000001045e-05, 3.670899999999935e-05, 3.651400000000138e-05, 3.652799999999748e-05, 3.6931000000000463e-05, 3.684799999999905e-05, 3.654200000000052e-05, 3.702800000000145e-05, 3.683400000000295e-05, 3.651400000000138e-05, 3.6888999999998284e-05, 3.6638999999998034e-05, 3.654200000000052e-05, 3.691599999999795e-05, 3.658399999999923e-05, 3.6540999999997575e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.652799999999748e-05, 3.6527000000001475e-05, 3.6541000000001045e-05, 3.700000000000231e-05, 3.691600000000142e-05, 3.6639000000001504e-05, 3.697299999999917e-05, 3.680600000000034e-05, 3.654200000000052e-05, 3.649999999999834e-05, 3.6596999999999325e-05, 3.6555000000000615e-05, 3.6667000000000644e-05, 3.6610999999998894e-05, 3.654200000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.091" endtime="20201030 18:32:29.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.086" endtime="20201030 18:32:29.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.097" endtime="20201030 18:32:29.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.096" endtime="20201030 18:32:29.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.095" endtime="20201030 18:32:29.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.738" endtime="20201030 18:32:29.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.738" endtime="20201030 18:32:29.118"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.127" endtime="20201030 18:32:29.144"></status>
</kw>
<msg timestamp="20201030 18:32:29.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.125" endtime="20201030 18:32:29.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.145" endtime="20201030 18:32:29.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.148" endtime="20201030 18:32:29.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.122" endtime="20201030 18:32:29.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.120" endtime="20201030 18:32:29.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.156" endtime="20201030 18:32:29.444"></status>
</kw>
<msg timestamp="20201030 18:32:29.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.155" endtime="20201030 18:32:29.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.448" endtime="20201030 18:32:29.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.456" endtime="20201030 18:32:29.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.152" endtime="20201030 18:32:29.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.151" endtime="20201030 18:32:29.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.463" level="INFO">${RESULT} = [{'diff': 3.733399999999998e-05}, {'diff': 3.708399999999973e-05}, {'diff': 3.733399999999998e-05}, {'diff': 3.752799999999848e-05}, {'diff': 3.70979999999993e-05}, {'diff': 3.7776999999999256e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:29.460" endtime="20201030 18:32:29.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.467" level="INFO">${ACCURACY} = {'diff': [3.733399999999998e-05, 3.708399999999973e-05, 3.733399999999998e-05, 3.752799999999848e-05, 3.70979999999993e-05, 3.7776999999999256e-05, 3.7526999999999006e-05, 3.720800000000038e-05, 3.745...</msg>
<status status="PASS" starttime="20201030 18:32:29.464" endtime="20201030 18:32:29.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.472" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.471" endtime="20201030 18:32:29.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.474" level="INFO">VALUE: [3.733399999999998e-05, 3.708399999999973e-05, 3.733399999999998e-05, 3.752799999999848e-05, 3.70979999999993e-05, 3.7776999999999256e-05, 3.7526999999999006e-05, 3.720800000000038e-05, 3.745800000000063e-05, 3.7889000000002754e-05, 3.769399999999784e-05, 3.7805000000001865e-05, 3.766600000000217e-05, 3.7902999999998854e-05, 3.776399999999916e-05, 3.749999999999934e-05, 3.7610999999999895e-05, 3.7403000000001824e-05, 3.770799999999741e-05, 3.720799999999691e-05, 3.794400000000156e-05, 3.754200000000152e-05, 3.805599999999812e-05, 3.7874999999999714e-05, 3.7403000000001824e-05, 3.744400000000106e-05, 3.7666999999998174e-05, 3.7318999999997465e-05, 3.752800000000195e-05, 3.70979999999993e-05, 3.708399999999973e-05, 3.757000000000066e-05, 3.757000000000066e-05, 3.7708999999996884e-05, 3.71659999999982e-05, 3.7653000000002074e-05, 3.801399999999941e-05, 3.748599999999977e-05, 3.7139000000002004e-05, 3.7527000000002475e-05, 3.7804999999998395e-05, 3.741599999999845e-05, 3.720800000000038e-05, 3.795799999999766e-05, 3.7583000000000755e-05, 3.7139000000002004e-05, 3.768000000000174e-05, 3.794399999999809e-05, 3.745800000000063e-05, 3.722199999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.473" endtime="20201030 18:32:29.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.468" endtime="20201030 18:32:29.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.479" endtime="20201030 18:32:29.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.477" endtime="20201030 18:32:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.476" endtime="20201030 18:32:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.119" endtime="20201030 18:32:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.118" endtime="20201030 18:32:29.500"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.508" endtime="20201030 18:32:29.526"></status>
</kw>
<msg timestamp="20201030 18:32:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.507" endtime="20201030 18:32:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.528" endtime="20201030 18:32:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.530" endtime="20201030 18:32:29.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.504" endtime="20201030 18:32:29.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.502" endtime="20201030 18:32:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.539" endtime="20201030 18:32:29.826"></status>
</kw>
<msg timestamp="20201030 18:32:29.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.538" endtime="20201030 18:32:29.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.830" endtime="20201030 18:32:29.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.838" endtime="20201030 18:32:29.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.535" endtime="20201030 18:32:29.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.534" endtime="20201030 18:32:29.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.845" level="INFO">${RESULT} = [{'diff': 3.8166999999998674e-05}, {'diff': 3.879200000000277e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.833400000000098e-05}, {'diff': 3.8459000000001103e-05}, {'diff': 3.827799999999923e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:29.841" endtime="20201030 18:32:29.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.849" level="INFO">${ACCURACY} = {'diff': [3.8166999999998674e-05, 3.879200000000277e-05, 3.8138999999999534e-05, 3.833400000000098e-05, 3.8459000000001103e-05, 3.827799999999923e-05, 3.834800000000055e-05, 3.856999999999819e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 18:32:29.845" endtime="20201030 18:32:29.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.853" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.852" endtime="20201030 18:32:29.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.855" level="INFO">VALUE: [3.8166999999998674e-05, 3.879200000000277e-05, 3.8138999999999534e-05, 3.833400000000098e-05, 3.8459000000001103e-05, 3.827799999999923e-05, 3.834800000000055e-05, 3.856999999999819e-05, 3.8361000000000645e-05, 3.8290999999999326e-05, 3.8888999999996815e-05, 3.877799999999973e-05, 3.858400000000123e-05, 3.89720000000017e-05, 3.8276999999999756e-05, 3.840199999999988e-05, 3.8416999999998924e-05, 3.8388999999999784e-05, 3.902799999999998e-05, 3.8347000000001075e-05, 3.8110999999996925e-05, 3.902799999999998e-05, 3.8083000000001255e-05, 3.8902999999999854e-05, 3.875000000000059e-05, 3.855599999999862e-05, 3.854199999999905e-05, 3.822200000000095e-05, 3.897199999999823e-05, 3.8902999999999854e-05, 3.8860999999997675e-05, 3.8388999999999784e-05, 3.8582999999998285e-05, 3.902799999999998e-05, 3.869399999999884e-05, 3.8361000000000645e-05, 3.8694999999998314e-05, 3.902799999999998e-05, 3.861200000000037e-05, 3.822300000000042e-05, 3.8416999999998924e-05, 3.81520000000031e-05, 3.8209000000000853e-05, 3.883399999999801e-05, 3.823600000000052e-05, 3.892999999999952e-05, 3.8847000000001575e-05, 3.8068999999998215e-05, 3.8305000000002365e-05, 3.8777000000000256e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.854" endtime="20201030 18:32:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.850" endtime="20201030 18:32:29.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.861" endtime="20201030 18:32:29.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.860" endtime="20201030 18:32:29.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.859" endtime="20201030 18:32:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.501" endtime="20201030 18:32:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.500" endtime="20201030 18:32:29.882"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.892" endtime="20201030 18:32:29.909"></status>
</kw>
<msg timestamp="20201030 18:32:29.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.890" endtime="20201030 18:32:29.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.911" endtime="20201030 18:32:29.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.913" endtime="20201030 18:32:29.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.887" endtime="20201030 18:32:29.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.885" endtime="20201030 18:32:29.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.922" endtime="20201030 18:32:30.207"></status>
</kw>
<msg timestamp="20201030 18:32:30.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.921" endtime="20201030 18:32:30.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.211" endtime="20201030 18:32:30.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.219" endtime="20201030 18:32:30.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.918" endtime="20201030 18:32:30.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.916" endtime="20201030 18:32:30.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.226" level="INFO">${RESULT} = [{'diff': 3.9624999999997995e-05}, {'diff': 3.944399999999959e-05}, {'diff': 3.9276999999997286e-05}, {'diff': 3.922200000000195e-05}, {'diff': 3.944399999999959e-05}, {'diff': 3.9832999999999535e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:30.223" endtime="20201030 18:32:30.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.231" level="INFO">${ACCURACY} = {'diff': [3.9624999999997995e-05, 3.944399999999959e-05, 3.9276999999997286e-05, 3.922200000000195e-05, 3.944399999999959e-05, 3.9832999999999535e-05, 3.976399999999769e-05, 3.9375000000001215e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:32:30.227" endtime="20201030 18:32:30.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.235" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.234" endtime="20201030 18:32:30.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.238" level="INFO">VALUE: [3.9624999999997995e-05, 3.944399999999959e-05, 3.9276999999997286e-05, 3.922200000000195e-05, 3.944399999999959e-05, 3.9832999999999535e-05, 3.976399999999769e-05, 3.9375000000001215e-05, 3.9625000000001465e-05, 3.950000000000134e-05, 3.926399999999719e-05, 4.002800000000098e-05, 3.9346999999998605e-05, 3.9194999999998814e-05, 3.9180999999999244e-05, 3.972199999999898e-05, 3.9832999999999535e-05, 4.001400000000141e-05, 3.9888999999997815e-05, 3.9972999999998704e-05, 3.901400000000041e-05, 3.934800000000155e-05, 3.927800000000023e-05, 3.9667000000000174e-05, 3.908399999999826e-05, 3.925000000000109e-05, 3.965200000000113e-05, 3.9917000000000424e-05, 3.981999999999944e-05, 3.9111000000001395e-05, 3.9068999999999215e-05, 3.9526999999997536e-05, 3.974999999999812e-05, 3.94859999999983e-05, 3.952800000000048e-05, 3.920800000000238e-05, 3.9832999999999535e-05, 3.9139000000000534e-05, 3.9625000000001465e-05, 3.922199999999848e-05, 3.9832999999999535e-05, 3.97920000000003e-05, 3.9332999999999035e-05, 3.9333000000002505e-05, 3.975000000000159e-05, 3.9695000000002784e-05, 3.9889000000001285e-05, 3.951400000000091e-05, 3.926400000000066e-05, 3.9680999999999744e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.236" endtime="20201030 18:32:30.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.232" endtime="20201030 18:32:30.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.242" endtime="20201030 18:32:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.241" endtime="20201030 18:32:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.240" endtime="20201030 18:32:30.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.883" endtime="20201030 18:32:30.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.882" endtime="20201030 18:32:30.263"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.272" endtime="20201030 18:32:30.287"></status>
</kw>
<msg timestamp="20201030 18:32:30.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.270" endtime="20201030 18:32:30.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.289" endtime="20201030 18:32:30.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.291" endtime="20201030 18:32:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.268" endtime="20201030 18:32:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.266" endtime="20201030 18:32:30.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.300" endtime="20201030 18:32:30.588"></status>
</kw>
<msg timestamp="20201030 18:32:30.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.299" endtime="20201030 18:32:30.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.592" endtime="20201030 18:32:30.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.600" endtime="20201030 18:32:30.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.296" endtime="20201030 18:32:30.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.294" endtime="20201030 18:32:30.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.606" level="INFO">${RESULT} = [{'diff': 4.0596999999999855e-05}, {'diff': 4.045800000000016e-05}, {'diff': 4.0082999999999785e-05}, {'diff': 4.074999999999912e-05}, {'diff': 4.02920000000008e-05}, {'diff': 4.045800000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:30.603" endtime="20201030 18:32:30.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.611" level="INFO">${ACCURACY} = {'diff': [4.0596999999999855e-05, 4.045800000000016e-05, 4.0082999999999785e-05, 4.074999999999912e-05, 4.02920000000008e-05, 4.045800000000016e-05, 4.0889000000002285e-05, 4.0903000000001855e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:32:30.607" endtime="20201030 18:32:30.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.615" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.614" endtime="20201030 18:32:30.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.618" level="INFO">VALUE: [4.0596999999999855e-05, 4.045800000000016e-05, 4.0082999999999785e-05, 4.074999999999912e-05, 4.02920000000008e-05, 4.045800000000016e-05, 4.0889000000002285e-05, 4.0903000000001855e-05, 4.020799999999991e-05, 4.0403000000001354e-05, 4.022199999999948e-05, 4.074999999999912e-05, 4.0653000000001605e-05, 4.077800000000173e-05, 4.020799999999991e-05, 4.074999999999912e-05, 4.0653000000001605e-05, 4.0153000000001104e-05, 4.101400000000241e-05, 4.0167000000000674e-05, 4.05980000000028e-05, 4.077799999999826e-05, 4.0222999999998954e-05, 4.0236999999998524e-05, 4.0917000000001424e-05, 4.07920000000013e-05, 4.0346999999999605e-05, 4.1026999999999036e-05, 4.038799999999884e-05, 4.0763000000002686e-05, 4.091600000000195e-05, 4.045800000000016e-05, 4.01660000000012e-05, 4.020799999999991e-05, 4.0319000000000466e-05, 4.069400000000084e-05, 4.027800000000123e-05, 4.0888999999998815e-05, 4.101399999999894e-05, 4.0082999999999785e-05, 4.079199999999783e-05, 4.0347000000003075e-05, 4.0569000000000716e-05, 4.022199999999948e-05, 4.0667000000001174e-05, 4.077799999999826e-05, 4.022199999999948e-05, 4.072199999999998e-05, 4.0153000000001104e-05, 4.0403000000001354e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.616" endtime="20201030 18:32:30.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.611" endtime="20201030 18:32:30.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.623" endtime="20201030 18:32:30.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.621" endtime="20201030 18:32:30.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.620" endtime="20201030 18:32:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.264" endtime="20201030 18:32:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.263" endtime="20201030 18:32:30.643"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.652" endtime="20201030 18:32:30.675"></status>
</kw>
<msg timestamp="20201030 18:32:30.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.650" endtime="20201030 18:32:30.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.677" endtime="20201030 18:32:30.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.679" endtime="20201030 18:32:30.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.648" endtime="20201030 18:32:30.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.646" endtime="20201030 18:32:30.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.688" endtime="20201030 18:32:30.974"></status>
</kw>
<msg timestamp="20201030 18:32:30.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.686" endtime="20201030 18:32:30.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.978" endtime="20201030 18:32:30.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.986" endtime="20201030 18:32:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.684" endtime="20201030 18:32:30.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.682" endtime="20201030 18:32:30.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.993" level="INFO">${RESULT} = [{'diff': 4.154199999999858e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.1653000000002605e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.205600000000212e-05}, {'diff': 4.19860000000008e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:30.990" endtime="20201030 18:32:30.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.997" level="INFO">${ACCURACY} = {'diff': [4.154199999999858e-05, 4.202799999999951e-05, 4.1653000000002605e-05, 4.1138999999999065e-05, 4.205600000000212e-05, 4.19860000000008e-05, 4.1347000000000605e-05, 4.197200000000123e-05, 4.12...</msg>
<status status="PASS" starttime="20201030 18:32:30.994" endtime="20201030 18:32:30.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.001" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.000" endtime="20201030 18:32:31.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.004" level="INFO">VALUE: [4.154199999999858e-05, 4.202799999999951e-05, 4.1653000000002605e-05, 4.1138999999999065e-05, 4.205600000000212e-05, 4.19860000000008e-05, 4.1347000000000605e-05, 4.197200000000123e-05, 4.120800000000091e-05, 4.1875000000000245e-05, 4.19860000000008e-05, 4.1110999999999925e-05, 4.109799999999983e-05, 4.205599999999865e-05, 4.1124999999999495e-05, 4.1723000000000454e-05, 4.1874999999996776e-05, 4.1945000000001564e-05, 4.195799999999819e-05, 4.2027000000000037e-05, 4.141599999999898e-05, 4.166599999999923e-05, 4.1611000000000425e-05, 4.1069000000001216e-05, 4.1347000000000605e-05, 4.172200000000098e-05, 4.1805000000002396e-05, 4.119399999999787e-05, 4.19860000000008e-05, 4.154200000000205e-05, 4.197199999999776e-05, 4.16660000000027e-05, 4.1638999999999565e-05, 4.151399999999944e-05, 4.204199999999908e-05, 4.1388999999999315e-05, 4.1638999999999565e-05, 4.151399999999944e-05, 4.1124999999999495e-05, 4.197199999999776e-05, 4.158400000000076e-05, 4.1903000000002855e-05, 4.1973000000000704e-05, 4.158400000000076e-05, 4.1709000000000884e-05, 4.2040999999999606e-05, 4.1917000000002425e-05, 4.1473000000000204e-05, 4.1611000000000425e-05, 4.181999999999797e-05]</msg>
<status status="PASS" starttime="20201030 18:32:31.003" endtime="20201030 18:32:31.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.998" endtime="20201030 18:32:31.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.010" endtime="20201030 18:32:31.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.008" endtime="20201030 18:32:31.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.007" endtime="20201030 18:32:31.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.644" endtime="20201030 18:32:31.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.643" endtime="20201030 18:32:31.030"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.039" endtime="20201030 18:32:31.057"></status>
</kw>
<msg timestamp="20201030 18:32:31.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.037" endtime="20201030 18:32:31.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.058" endtime="20201030 18:32:31.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.061" endtime="20201030 18:32:31.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.035" endtime="20201030 18:32:31.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.033" endtime="20201030 18:32:31.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.070" endtime="20201030 18:32:31.354"></status>
</kw>
<msg timestamp="20201030 18:32:31.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.068" endtime="20201030 18:32:31.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.358" endtime="20201030 18:32:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.367" endtime="20201030 18:32:31.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.065" endtime="20201030 18:32:31.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.064" endtime="20201030 18:32:31.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.373" level="INFO">${RESULT} = [{'diff': 4.2430999999999025e-05}, {'diff': 4.227799999999976e-05}, {'diff': 4.230600000000237e-05}, {'diff': 4.22920000000028e-05}, {'diff': 4.247200000000173e-05}, {'diff': 4.2916999999999955e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:31.370" endtime="20201030 18:32:31.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.378" level="INFO">${ACCURACY} = {'diff': [4.2430999999999025e-05, 4.227799999999976e-05, 4.230600000000237e-05, 4.22920000000028e-05, 4.247200000000173e-05, 4.2916999999999955e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.27...</msg>
<status status="PASS" starttime="20201030 18:32:31.374" endtime="20201030 18:32:31.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.383" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.382" endtime="20201030 18:32:31.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.385" level="INFO">VALUE: [4.2430999999999025e-05, 4.227799999999976e-05, 4.230600000000237e-05, 4.22920000000028e-05, 4.247200000000173e-05, 4.2916999999999955e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.277800000000026e-05, 4.297200000000223e-05, 4.272199999999851e-05, 4.2832999999999066e-05, 4.2583000000002286e-05, 4.300000000000137e-05, 4.295799999999919e-05, 4.2375000000000745e-05, 4.295799999999919e-05, 4.2541000000000107e-05, 4.266600000000023e-05, 4.291600000000048e-05, 4.274999999999765e-05, 4.2889000000000815e-05, 4.2389000000000315e-05, 4.277800000000026e-05, 4.2180999999998775e-05, 4.2318999999998996e-05, 4.2596999999998386e-05, 4.247199999999826e-05, 4.2152999999999635e-05, 4.302800000000051e-05, 4.297200000000223e-05, 4.254199999999958e-05, 4.226400000000019e-05, 4.208400000000126e-05, 4.283400000000201e-05, 4.227799999999976e-05, 4.302800000000051e-05, 4.3012999999998e-05, 4.2389000000000315e-05, 4.2916999999999955e-05, 4.220799999999844e-05, 4.2290999999999856e-05, 4.242999999999955e-05, 4.216599999999973e-05, 4.270800000000241e-05, 4.247199999999826e-05, 4.244399999999912e-05, 4.220799999999844e-05, 4.301400000000094e-05, 4.247199999999826e-05]</msg>
<status status="PASS" starttime="20201030 18:32:31.384" endtime="20201030 18:32:31.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.379" endtime="20201030 18:32:31.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.390" endtime="20201030 18:32:31.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.389" endtime="20201030 18:32:31.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.387" endtime="20201030 18:32:31.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.031" endtime="20201030 18:32:31.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.031" endtime="20201030 18:32:31.411"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.420" endtime="20201030 18:32:31.437"></status>
</kw>
<msg timestamp="20201030 18:32:31.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.418" endtime="20201030 18:32:31.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.438" endtime="20201030 18:32:31.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.441" endtime="20201030 18:32:31.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.415" endtime="20201030 18:32:31.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.413" endtime="20201030 18:32:31.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.450" endtime="20201030 18:32:31.736"></status>
</kw>
<msg timestamp="20201030 18:32:31.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.448" endtime="20201030 18:32:31.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.740" endtime="20201030 18:32:31.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.748" endtime="20201030 18:32:31.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.446" endtime="20201030 18:32:31.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.444" endtime="20201030 18:32:31.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.754" level="INFO">${RESULT} = [{'diff': 4.351399999999797e-05}, {'diff': 4.327799999999729e-05}, {'diff': 4.3431000000000025e-05}, {'diff': 4.332000000000294e-05}, {'diff': 4.333399999999904e-05}, {'diff': 4.377799999999779e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:31.751" endtime="20201030 18:32:31.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.758" level="INFO">${ACCURACY} = {'diff': [4.351399999999797e-05, 4.327799999999729e-05, 4.3431000000000025e-05, 4.332000000000294e-05, 4.333399999999904e-05, 4.377799999999779e-05, 4.352799999999754e-05, 4.308399999999879e-05, 4.350...</msg>
<status status="PASS" starttime="20201030 18:32:31.755" endtime="20201030 18:32:31.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.763" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.762" endtime="20201030 18:32:31.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.765" level="INFO">VALUE: [4.351399999999797e-05, 4.327799999999729e-05, 4.3431000000000025e-05, 4.332000000000294e-05, 4.333399999999904e-05, 4.377799999999779e-05, 4.352799999999754e-05, 4.308399999999879e-05, 4.350000000000187e-05, 4.3138999999997596e-05, 4.361199999999843e-05, 4.308399999999879e-05, 4.3416999999996986e-05, 4.320799999999944e-05, 4.3138999999997596e-05, 4.3152999999997166e-05, 4.3055000000000176e-05, 4.363799999999862e-05, 4.3096999999998886e-05, 4.3361000000002176e-05, 4.347200000000273e-05, 4.329099999999739e-05, 4.3416999999996986e-05, 4.3403000000000885e-05, 4.3138999999997596e-05, 4.3666999999997236e-05, 4.322200000000248e-05, 4.397200000000323e-05, 4.3347000000002606e-05, 4.3625000000001996e-05, 4.395800000000019e-05, 4.344400000000012e-05, 4.3861000000002676e-05, 4.326399999999772e-05, 4.3596999999999386e-05, 4.308400000000226e-05, 4.4083000000000316e-05, 4.334799999999861e-05, 4.394400000000062e-05, 4.383399999999954e-05, 4.384799999999911e-05, 4.3458999999999165e-05, 4.340200000000141e-05, 4.3596999999999386e-05, 4.374999999999865e-05, 4.313800000000159e-05, 4.3375000000001745e-05, 4.315200000000116e-05, 4.3361000000002176e-05, 4.344400000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:32:31.764" endtime="20201030 18:32:31.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.759" endtime="20201030 18:32:31.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.770" endtime="20201030 18:32:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.769" endtime="20201030 18:32:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.768" endtime="20201030 18:32:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.412" endtime="20201030 18:32:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.411" endtime="20201030 18:32:31.791"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.800" endtime="20201030 18:32:31.818"></status>
</kw>
<msg timestamp="20201030 18:32:31.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.798" endtime="20201030 18:32:31.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.820" endtime="20201030 18:32:31.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.822" endtime="20201030 18:32:31.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.795" endtime="20201030 18:32:31.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.793" endtime="20201030 18:32:31.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.831" endtime="20201030 18:32:32.117"></status>
</kw>
<msg timestamp="20201030 18:32:32.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.830" endtime="20201030 18:32:32.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.122" endtime="20201030 18:32:32.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.130" endtime="20201030 18:32:32.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.827" endtime="20201030 18:32:32.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.826" endtime="20201030 18:32:32.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.137" level="INFO">${RESULT} = [{'diff': 4.477799999999879e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.472200000000051e-05}, {'diff': 4.429100000000186e-05}, {'diff': 4.447200000000026e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:32.133" endtime="20201030 18:32:32.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.141" level="INFO">${ACCURACY} = {'diff': [4.477799999999879e-05, 4.4666999999998236e-05, 4.4638999999999096e-05, 4.472200000000051e-05, 4.429100000000186e-05, 4.447200000000026e-05, 4.4555000000001677e-05, 4.476399999999922e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:32:32.138" endtime="20201030 18:32:32.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.145" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.144" endtime="20201030 18:32:32.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.147" level="INFO">VALUE: [4.477799999999879e-05, 4.4666999999998236e-05, 4.4638999999999096e-05, 4.472200000000051e-05, 4.429100000000186e-05, 4.447200000000026e-05, 4.4555000000001677e-05, 4.476399999999922e-05, 4.416599999999826e-05, 4.4861000000000206e-05, 4.4930999999998056e-05, 4.457000000000072e-05, 4.4153000000001635e-05, 4.4888999999999346e-05, 4.4902999999998916e-05, 4.4403000000001885e-05, 4.4167000000001205e-05, 4.448599999999983e-05, 4.4875000000003246e-05, 4.451399999999897e-05, 4.502800000000251e-05, 4.4347000000000136e-05, 4.4472999999999735e-05, 4.4888999999999346e-05, 4.434799999999961e-05, 4.4473000000003204e-05, 4.4124999999999026e-05, 4.433400000000004e-05, 4.498600000000033e-05, 4.473600000000008e-05, 4.4181000000000775e-05, 4.466599999999876e-05, 4.44999999999994e-05, 4.466599999999876e-05, 4.420800000000044e-05, 4.492999999999858e-05, 4.416600000000173e-05, 4.4319000000000996e-05, 4.477800000000226e-05, 4.4833000000001066e-05, 4.495800000000119e-05, 4.420800000000044e-05, 4.445800000000069e-05, 4.495799999999772e-05, 4.4402999999998416e-05, 4.454200000000158e-05, 4.4083000000000316e-05, 4.4653000000002135e-05, 4.4888999999999346e-05, 4.4583000000000816e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.146" endtime="20201030 18:32:32.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.142" endtime="20201030 18:32:32.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.153" endtime="20201030 18:32:32.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.152" endtime="20201030 18:32:32.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.151" endtime="20201030 18:32:32.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.792" endtime="20201030 18:32:32.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.791" endtime="20201030 18:32:32.174"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.183" endtime="20201030 18:32:32.200"></status>
</kw>
<msg timestamp="20201030 18:32:32.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.181" endtime="20201030 18:32:32.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.201" endtime="20201030 18:32:32.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.204" endtime="20201030 18:32:32.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.178" endtime="20201030 18:32:32.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.176" endtime="20201030 18:32:32.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.213" endtime="20201030 18:32:32.498"></status>
</kw>
<msg timestamp="20201030 18:32:32.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.211" endtime="20201030 18:32:32.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.502" endtime="20201030 18:32:32.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.510" endtime="20201030 18:32:32.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.209" endtime="20201030 18:32:32.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.207" endtime="20201030 18:32:32.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.517" level="INFO">${RESULT} = [{'diff': 4.519400000000187e-05}, {'diff': 4.532000000000147e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.5681000000002275e-05}, {'diff': 4.545800000000169e-05}, {'diff': 4.508299999999785e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:32.513" endtime="20201030 18:32:32.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.522" level="INFO">${ACCURACY} = {'diff': [4.519400000000187e-05, 4.532000000000147e-05, 4.5152999999999166e-05, 4.5681000000002275e-05, 4.545800000000169e-05, 4.508299999999785e-05, 4.545800000000169e-05, 4.554199999999911e-05, 4.59...</msg>
<status status="PASS" starttime="20201030 18:32:32.518" endtime="20201030 18:32:32.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.526" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.525" endtime="20201030 18:32:32.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.529" level="INFO">VALUE: [4.519400000000187e-05, 4.532000000000147e-05, 4.5152999999999166e-05, 4.5681000000002275e-05, 4.545800000000169e-05, 4.508299999999785e-05, 4.545800000000169e-05, 4.554199999999911e-05, 4.597200000000176e-05, 4.5431000000002025e-05, 4.5695000000001845e-05, 4.5223000000000485e-05, 4.580599999999893e-05, 4.561099999999749e-05, 4.558400000000129e-05, 4.5459000000001165e-05, 4.527699999999982e-05, 4.554099999999964e-05, 4.576300000000075e-05, 4.570799999999847e-05, 4.594399999999915e-05, 4.520800000000144e-05, 4.566599999999976e-05, 4.552700000000007e-05, 4.522200000000101e-05, 4.545799999999822e-05, 4.567999999999933e-05, 4.5402999999999416e-05, 4.5208999999997446e-05, 4.552799999999954e-05, 4.522200000000101e-05, 4.577799999999979e-05, 4.594399999999915e-05, 4.555599999999868e-05, 4.545799999999822e-05, 4.579099999999989e-05, 4.55000000000004e-05, 4.5652999999999666e-05, 4.522200000000101e-05, 4.579200000000283e-05, 4.60000000000009e-05, 4.5152999999999166e-05, 4.533400000000104e-05, 4.529199999999886e-05, 4.552799999999954e-05, 4.507000000000122e-05, 4.5111000000000456e-05, 4.5611000000000956e-05, 4.552700000000007e-05, 4.573599999999761e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.527" endtime="20201030 18:32:32.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.523" endtime="20201030 18:32:32.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.534" endtime="20201030 18:32:32.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.532" endtime="20201030 18:32:32.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.531" endtime="20201030 18:32:32.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.175" endtime="20201030 18:32:32.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.174" endtime="20201030 18:32:32.554"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.563" endtime="20201030 18:32:32.583"></status>
</kw>
<msg timestamp="20201030 18:32:32.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.561" endtime="20201030 18:32:32.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.584" endtime="20201030 18:32:32.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.587" endtime="20201030 18:32:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.559" endtime="20201030 18:32:32.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.557" endtime="20201030 18:32:32.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.595" endtime="20201030 18:32:32.882"></status>
</kw>
<msg timestamp="20201030 18:32:32.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.594" endtime="20201030 18:32:32.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.886" endtime="20201030 18:32:32.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.894" endtime="20201030 18:32:32.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.591" endtime="20201030 18:32:32.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.590" endtime="20201030 18:32:32.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.901" level="INFO">${RESULT} = [{'diff': 4.623600000000158e-05}, {'diff': 4.6166999999999736e-05}, {'diff': 4.630499999999996e-05}, {'diff': 4.608399999999832e-05}, {'diff': 4.6472999999998266e-05}, {'diff': 4.630599999999943e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:32.898" endtime="20201030 18:32:32.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.905" level="INFO">${ACCURACY} = {'diff': [4.623600000000158e-05, 4.6166999999999736e-05, 4.630499999999996e-05, 4.608399999999832e-05, 4.6472999999998266e-05, 4.630599999999943e-05, 4.61529999999967e-05, 4.686200000000168e-05, 4.634...</msg>
<status status="PASS" starttime="20201030 18:32:32.902" endtime="20201030 18:32:32.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.909" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.908" endtime="20201030 18:32:32.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.912" level="INFO">VALUE: [4.623600000000158e-05, 4.6166999999999736e-05, 4.630499999999996e-05, 4.608399999999832e-05, 4.6472999999998266e-05, 4.630599999999943e-05, 4.61529999999967e-05, 4.686200000000168e-05, 4.6347000000002136e-05, 4.630499999999996e-05, 4.684699999999917e-05, 4.615199999999722e-05, 4.679100000000089e-05, 4.629100000000039e-05, 4.6139000000000596e-05, 4.691699999999702e-05, 4.6847000000002637e-05, 4.6889000000001346e-05, 4.673599999999861e-05, 4.6139000000000596e-05, 4.620799999999897e-05, 4.6194999999998876e-05, 4.6889000000001346e-05, 4.670799999999947e-05, 4.676400000000122e-05, 4.622200000000201e-05, 4.654200000000011e-05, 4.6181000000002775e-05, 4.668000000000033e-05, 4.6944999999999626e-05, 4.6416999999999986e-05, 4.6208999999998446e-05, 4.630499999999996e-05, 4.6222999999998016e-05, 4.6361000000001706e-05, 4.65130000000015e-05, 4.677700000000132e-05, 4.672199999999904e-05, 4.63329999999991e-05, 4.654200000000011e-05, 4.627800000000029e-05, 4.620800000000244e-05, 4.672200000000251e-05, 4.61939999999994e-05, 4.648599999999836e-05, 4.627800000000029e-05, 4.6639000000001096e-05, 4.640299999999695e-05, 4.622200000000201e-05, 4.666599999999729e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.911" endtime="20201030 18:32:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.906" endtime="20201030 18:32:32.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.917" endtime="20201030 18:32:32.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.915" endtime="20201030 18:32:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.914" endtime="20201030 18:32:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.555" endtime="20201030 18:32:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.555" endtime="20201030 18:32:32.938"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.946" endtime="20201030 18:32:32.966"></status>
</kw>
<msg timestamp="20201030 18:32:32.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.945" endtime="20201030 18:32:32.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.967" endtime="20201030 18:32:32.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.970" endtime="20201030 18:32:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.942" endtime="20201030 18:32:32.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.940" endtime="20201030 18:32:32.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.979" endtime="20201030 18:32:33.264"></status>
</kw>
<msg timestamp="20201030 18:32:33.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.977" endtime="20201030 18:32:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.268" endtime="20201030 18:32:33.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.276" endtime="20201030 18:32:33.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.975" endtime="20201030 18:32:33.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.973" endtime="20201030 18:32:33.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.283" level="INFO">${RESULT} = [{'diff': 4.8013999999999e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.752800000000154e-05}, {'diff': 4.75000000000024e-05}, {'diff': 4.740299999999795e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:33.280" endtime="20201030 18:32:33.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.287" level="INFO">${ACCURACY} = {'diff': [4.8013999999999e-05, 4.727800000000129e-05, 4.745800000000022e-05, 4.752800000000154e-05, 4.75000000000024e-05, 4.740299999999795e-05, 4.7959000000000196e-05, 4.784799999999964e-05, 4.733399...</msg>
<status status="PASS" starttime="20201030 18:32:33.284" endtime="20201030 18:32:33.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.291" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.290" endtime="20201030 18:32:33.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.294" level="INFO">VALUE: [4.8013999999999e-05, 4.727800000000129e-05, 4.745800000000022e-05, 4.752800000000154e-05, 4.75000000000024e-05, 4.740299999999795e-05, 4.7959000000000196e-05, 4.784799999999964e-05, 4.733399999999957e-05, 4.7667000000001236e-05, 4.7208999999999446e-05, 4.790299999999845e-05, 4.773599999999961e-05, 4.761199999999896e-05, 4.711099999999899e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.715200000000169e-05, 4.802800000000204e-05, 4.722199999999954e-05, 4.754100000000164e-05, 4.763899999999863e-05, 4.758300000000035e-05, 4.805600000000118e-05, 4.7667000000001236e-05, 4.713899999999813e-05, 4.7167000000000736e-05, 4.772200000000004e-05, 4.759699999999992e-05, 4.712499999999856e-05, 4.762499999999906e-05, 4.7403000000001416e-05, 4.7222999999999016e-05, 4.738899999999838e-05, 4.7194999999999876e-05, 4.776400000000222e-05, 4.7458999999999696e-05, 4.731900000000053e-05, 4.741599999999804e-05, 4.730500000000096e-05, 4.788899999999888e-05, 4.790200000000244e-05, 4.733299999999663e-05, 4.754200000000111e-05, 4.7486999999998836e-05, 4.76940000000009e-05, 4.777800000000179e-05, 4.795800000000072e-05, 4.725000000000215e-05, 4.783299999999713e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.293" endtime="20201030 18:32:33.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.288" endtime="20201030 18:32:33.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.300" endtime="20201030 18:32:33.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.298" endtime="20201030 18:32:33.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.297" endtime="20201030 18:32:33.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.939" endtime="20201030 18:32:33.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.938" endtime="20201030 18:32:33.320"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.329" endtime="20201030 18:32:33.347"></status>
</kw>
<msg timestamp="20201030 18:32:33.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.327" endtime="20201030 18:32:33.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.349" endtime="20201030 18:32:33.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.351" endtime="20201030 18:32:33.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.325" endtime="20201030 18:32:33.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.323" endtime="20201030 18:32:33.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.360" endtime="20201030 18:32:33.645"></status>
</kw>
<msg timestamp="20201030 18:32:33.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.358" endtime="20201030 18:32:33.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.649" endtime="20201030 18:32:33.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.657" endtime="20201030 18:32:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.356" endtime="20201030 18:32:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.354" endtime="20201030 18:32:33.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.664" level="INFO">${RESULT} = [{'diff': 4.879199999999889e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.854199999999864e-05}, {'diff': 4.8709000000000946e-05}, {'diff': 4.883299999999813e-05}, {'diff': 4.809700000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:33.660" endtime="20201030 18:32:33.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.669" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 4.86529999999992e-05, 4.854199999999864e-05, 4.8709000000000946e-05, 4.883299999999813e-05, 4.809700000000042e-05, 4.854199999999864e-05, 4.8708999999997477e-05, 4.822...</msg>
<status status="PASS" starttime="20201030 18:32:33.664" endtime="20201030 18:32:33.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.673" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.672" endtime="20201030 18:32:33.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.676" level="INFO">VALUE: [4.879199999999889e-05, 4.86529999999992e-05, 4.854199999999864e-05, 4.8709000000000946e-05, 4.883299999999813e-05, 4.809700000000042e-05, 4.854199999999864e-05, 4.8708999999997477e-05, 4.8223000000000016e-05, 4.902799999999957e-05, 4.822200000000054e-05, 4.877799999999932e-05, 4.83879999999999e-05, 4.827699999999935e-05, 4.890199999999997e-05, 4.831899999999806e-05, 4.875000000000018e-05, 4.877799999999932e-05, 4.834700000000067e-05, 4.822200000000054e-05, 4.8653000000002666e-05, 4.879199999999889e-05, 4.876399999999975e-05, 4.83330000000011e-05, 4.859700000000092e-05, 4.812499999999956e-05, 4.829200000000186e-05, 4.8707999999998e-05, 4.879199999999889e-05, 4.875000000000018e-05, 4.869499999999791e-05, 4.8973000000000766e-05, 4.816699999999827e-05, 4.90270000000001e-05, 4.8695000000001376e-05, 4.809799999999989e-05, 4.883400000000107e-05, 4.877799999999932e-05, 4.895800000000172e-05, 4.847200000000079e-05, 4.808300000000085e-05, 4.848600000000036e-05, 4.886099999999727e-05, 4.9014e-05, 4.890299999999945e-05, 4.838899999999938e-05, 4.844399999999818e-05, 4.827799999999882e-05, 4.827799999999882e-05, 4.8167000000001736e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.674" endtime="20201030 18:32:33.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.669" endtime="20201030 18:32:33.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.681" endtime="20201030 18:32:33.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.679" endtime="20201030 18:32:33.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.678" endtime="20201030 18:32:33.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.321" endtime="20201030 18:32:33.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.321" endtime="20201030 18:32:33.701"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.710" endtime="20201030 18:32:33.729"></status>
</kw>
<msg timestamp="20201030 18:32:33.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.708" endtime="20201030 18:32:33.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.731" endtime="20201030 18:32:33.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.733" endtime="20201030 18:32:33.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.706" endtime="20201030 18:32:33.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.704" endtime="20201030 18:32:33.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.742" endtime="20201030 18:32:34.032"></status>
</kw>
<msg timestamp="20201030 18:32:34.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.741" endtime="20201030 18:32:34.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.036" endtime="20201030 18:32:34.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.045" endtime="20201030 18:32:34.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.738" endtime="20201030 18:32:34.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.736" endtime="20201030 18:32:34.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.053" level="INFO">${RESULT} = [{'diff': 4.9959000000002196e-05}, {'diff': 4.990300000000045e-05}, {'diff': 4.9209000000001446e-05}, {'diff': 4.997200000000229e-05}, {'diff': 4.940200000000047e-05}, {'diff': 4.965200000000072e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:34.049" endtime="20201030 18:32:34.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.057" level="INFO">${ACCURACY} = {'diff': [4.9959000000002196e-05, 4.990300000000045e-05, 4.9209000000001446e-05, 4.997200000000229e-05, 4.940200000000047e-05, 4.965200000000072e-05, 4.936100000000124e-05, 4.995799999999925e-05, 4.97...</msg>
<status status="PASS" starttime="20201030 18:32:34.054" endtime="20201030 18:32:34.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.062" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.061" endtime="20201030 18:32:34.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.065" level="INFO">VALUE: [4.9959000000002196e-05, 4.990300000000045e-05, 4.9209000000001446e-05, 4.997200000000229e-05, 4.940200000000047e-05, 4.965200000000072e-05, 4.936100000000124e-05, 4.995799999999925e-05, 4.977699999999738e-05, 5.0014000000001e-05, 4.966600000000029e-05, 4.927799999999982e-05, 4.986099999999827e-05, 4.911100000000099e-05, 4.923599999999764e-05, 4.945799999999875e-05, 4.984700000000217e-05, 4.990300000000045e-05, 4.981899999999956e-05, 4.925000000000068e-05, 4.909699999999795e-05, 4.998599999999839e-05, 4.995899999999873e-05, 4.977799999999685e-05, 4.9709000000001946e-05, 4.938900000000038e-05, 4.959800000000139e-05, 4.927799999999982e-05, 4.9901999999997504e-05, 4.923600000000111e-05, 4.976300000000128e-05, 4.913800000000065e-05, 4.9901999999997504e-05, 4.986100000000174e-05, 4.9707999999999e-05, 4.981899999999956e-05, 4.950000000000093e-05, 4.997200000000229e-05, 4.979199999999989e-05, 4.977800000000032e-05, 4.952800000000007e-05, 4.999999999999796e-05, 4.976400000000075e-05, 4.995799999999925e-05, 4.9709000000001946e-05, 4.9209000000001446e-05, 4.922200000000154e-05, 4.952800000000007e-05, 4.909800000000089e-05, 4.986100000000174e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.063" endtime="20201030 18:32:34.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.058" endtime="20201030 18:32:34.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.070" endtime="20201030 18:32:34.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.068" endtime="20201030 18:32:34.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.067" endtime="20201030 18:32:34.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.702" endtime="20201030 18:32:34.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.702" endtime="20201030 18:32:34.090"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.099" endtime="20201030 18:32:34.120"></status>
</kw>
<msg timestamp="20201030 18:32:34.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.097" endtime="20201030 18:32:34.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.122" endtime="20201030 18:32:34.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.124" endtime="20201030 18:32:34.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.095" endtime="20201030 18:32:34.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.093" endtime="20201030 18:32:34.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.133" endtime="20201030 18:32:34.419"></status>
</kw>
<msg timestamp="20201030 18:32:34.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.132" endtime="20201030 18:32:34.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.423" endtime="20201030 18:32:34.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.432" endtime="20201030 18:32:34.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.129" endtime="20201030 18:32:34.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.127" endtime="20201030 18:32:34.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.438" level="INFO">${RESULT} = [{'diff': 5.093100000000059e-05}, {'diff': 5.10279999999981e-05}, {'diff': 5.090300000000145e-05}, {'diff': 5.022200000000254e-05}, {'diff': 5.022200000000254e-05}, {'diff': 5.041700000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:34.435" endtime="20201030 18:32:34.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.442" level="INFO">${ACCURACY} = {'diff': [5.093100000000059e-05, 5.10279999999981e-05, 5.090300000000145e-05, 5.022200000000254e-05, 5.022200000000254e-05, 5.041700000000052e-05, 5.077800000000132e-05, 5.08339999999996e-05, 5.062499...</msg>
<status status="PASS" starttime="20201030 18:32:34.439" endtime="20201030 18:32:34.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.446" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.446" endtime="20201030 18:32:34.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.449" level="INFO">VALUE: [5.093100000000059e-05, 5.10279999999981e-05, 5.090300000000145e-05, 5.022200000000254e-05, 5.022200000000254e-05, 5.041700000000052e-05, 5.077800000000132e-05, 5.08339999999996e-05, 5.062499999999859e-05, 5.077799999999785e-05, 5.015299999999723e-05, 5.08339999999996e-05, 5.009699999999895e-05, 5.094500000000016e-05, 5.009699999999895e-05, 5.009699999999895e-05, 5.0943999999997214e-05, 5.031900000000006e-05, 5.02079999999995e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.03469999999992e-05, 5.033299999999963e-05, 5.098599999999939e-05, 5.062499999999859e-05, 5.052800000000107e-05, 5.008299999999938e-05, 5.038899999999791e-05, 5.009699999999895e-05, 5.1014000000002e-05, 5.059799999999892e-05, 5.054200000000064e-05, 5.075000000000218e-05, 5.098599999999939e-05, 5.0737000000002086e-05, 5.082000000000003e-05, 5.0708e-05, 5.005500000000024e-05, 5.05140000000015e-05, 5.08469999999997e-05, 5.038899999999791e-05, 5.098599999999939e-05, 5.072199999999957e-05, 5.0915999999998074e-05, 5.08469999999997e-05, 5.033299999999963e-05, 5.016700000000027e-05, 5.0708e-05, 5.077799999999785e-05, 5.059699999999945e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.448" endtime="20201030 18:32:34.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.443" endtime="20201030 18:32:34.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.455" endtime="20201030 18:32:34.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.453" endtime="20201030 18:32:34.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.452" endtime="20201030 18:32:34.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.091" endtime="20201030 18:32:34.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.091" endtime="20201030 18:32:34.475"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.484" endtime="20201030 18:32:34.501"></status>
</kw>
<msg timestamp="20201030 18:32:34.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.482" endtime="20201030 18:32:34.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.503" endtime="20201030 18:32:34.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.505" endtime="20201030 18:32:34.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.480" endtime="20201030 18:32:34.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.478" endtime="20201030 18:32:34.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.514" endtime="20201030 18:32:34.800"></status>
</kw>
<msg timestamp="20201030 18:32:34.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.513" endtime="20201030 18:32:34.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.804" endtime="20201030 18:32:34.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.812" endtime="20201030 18:32:34.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.510" endtime="20201030 18:32:34.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.509" endtime="20201030 18:32:34.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.819" level="INFO">${RESULT} = [{'diff': 5.16530000000022e-05}, {'diff': 5.127700000000235e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.204100000000267e-05}, {'diff': 5.144500000000066e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:34.816" endtime="20201030 18:32:34.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.824" level="INFO">${ACCURACY} = {'diff': [5.16530000000022e-05, 5.127700000000235e-05, 5.18470000000007e-05, 5.145800000000075e-05, 5.204100000000267e-05, 5.144500000000066e-05, 5.197200000000082e-05, 5.108300000000038e-05, 5.141700...</msg>
<status status="PASS" starttime="20201030 18:32:34.820" endtime="20201030 18:32:34.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.828" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.827" endtime="20201030 18:32:34.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.831" level="INFO">VALUE: [5.16530000000022e-05, 5.127700000000235e-05, 5.18470000000007e-05, 5.145800000000075e-05, 5.204100000000267e-05, 5.144500000000066e-05, 5.197200000000082e-05, 5.108300000000038e-05, 5.141700000000152e-05, 5.201399999999953e-05, 5.16530000000022e-05, 5.191699999999855e-05, 5.179199999999842e-05, 5.170900000000048e-05, 5.126399999999878e-05, 5.1637999999999684e-05, 5.1415999999998574e-05, 5.199999999999996e-05, 5.19730000000003e-05, 5.126399999999878e-05, 5.118100000000084e-05, 5.18340000000006e-05, 5.134799999999967e-05, 5.1929999999998644e-05, 5.183300000000113e-05, 5.122200000000007e-05, 5.138899999999891e-05, 5.161100000000002e-05, 5.113899999999866e-05, 5.169400000000143e-05, 5.18340000000006e-05, 5.1457999999997284e-05, 5.180600000000146e-05, 5.199999999999996e-05, 5.174999999999971e-05, 5.140300000000195e-05, 5.1957999999997784e-05, 5.126399999999878e-05, 5.152800000000207e-05, 5.169499999999744e-05, 5.159799999999992e-05, 5.199999999999996e-05, 5.177800000000232e-05, 5.159800000000339e-05, 5.163899999999916e-05, 5.129100000000192e-05, 5.159700000000045e-05, 5.201399999999953e-05, 5.159700000000045e-05, 5.131900000000106e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.829" endtime="20201030 18:32:34.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.825" endtime="20201030 18:32:34.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.836" endtime="20201030 18:32:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.834" endtime="20201030 18:32:34.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.833" endtime="20201030 18:32:34.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.476" endtime="20201030 18:32:34.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.476" endtime="20201030 18:32:34.856"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.865" endtime="20201030 18:32:34.883"></status>
</kw>
<msg timestamp="20201030 18:32:34.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.863" endtime="20201030 18:32:34.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.885" endtime="20201030 18:32:34.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.887" endtime="20201030 18:32:34.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.861" endtime="20201030 18:32:34.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.859" endtime="20201030 18:32:34.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.896" endtime="20201030 18:32:35.182"></status>
</kw>
<msg timestamp="20201030 18:32:35.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.894" endtime="20201030 18:32:35.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.186" endtime="20201030 18:32:35.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.195" endtime="20201030 18:32:35.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.892" endtime="20201030 18:32:35.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.890" endtime="20201030 18:32:35.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.201" level="INFO">${RESULT} = [{'diff': 5.300000000000096e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.2638000000000684e-05}, {'diff': 5.2916000000000074e-05}, {'diff': 5.208300000000138e-05}, {'diff': 5.265299999999973e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:35.198" endtime="20201030 18:32:35.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.205" level="INFO">${ACCURACY} = {'diff': [5.300000000000096e-05, 5.240299999999948e-05, 5.2638000000000684e-05, 5.2916000000000074e-05, 5.208300000000138e-05, 5.265299999999973e-05, 5.208299999999791e-05, 5.247200000000132e-05, 5.21...</msg>
<status status="PASS" starttime="20201030 18:32:35.202" endtime="20201030 18:32:35.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.210" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.209" endtime="20201030 18:32:35.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.212" level="INFO">VALUE: [5.300000000000096e-05, 5.240299999999948e-05, 5.2638000000000684e-05, 5.2916000000000074e-05, 5.208300000000138e-05, 5.265299999999973e-05, 5.208299999999791e-05, 5.247200000000132e-05, 5.215299999999923e-05, 5.230500000000249e-05, 5.21669999999988e-05, 5.259700000000145e-05, 5.259700000000145e-05, 5.277799999999985e-05, 5.30280000000001e-05, 5.236100000000077e-05, 5.209699999999748e-05, 5.269499999999844e-05, 5.218099999999837e-05, 5.220900000000098e-05, 5.2679999999999394e-05, 5.305499999999977e-05, 5.219500000000141e-05, 5.259700000000145e-05, 5.236100000000077e-05, 5.275000000000071e-05, 5.209700000000095e-05, 5.276300000000081e-05, 5.2416000000003043e-05, 5.2165999999999324e-05, 5.22080000000015e-05, 5.284699999999823e-05, 5.254199999999917e-05, 5.255600000000221e-05, 5.2679999999999394e-05, 5.2708000000002e-05, 5.250000000000046e-05, 5.223600000000064e-05, 5.277799999999985e-05, 5.254199999999917e-05, 5.275000000000071e-05, 5.21669999999988e-05, 5.227800000000282e-05, 5.2943999999999214e-05, 5.234800000000067e-05, 5.2151999999999754e-05, 5.220899999999751e-05, 5.29730000000013e-05, 5.277800000000332e-05, 5.2902000000000504e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.211" endtime="20201030 18:32:35.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.206" endtime="20201030 18:32:35.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.217" endtime="20201030 18:32:35.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.215" endtime="20201030 18:32:35.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.214" endtime="20201030 18:32:35.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.857" endtime="20201030 18:32:35.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.857" endtime="20201030 18:32:35.237"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.246" endtime="20201030 18:32:35.267"></status>
</kw>
<msg timestamp="20201030 18:32:35.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.244" endtime="20201030 18:32:35.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.269" endtime="20201030 18:32:35.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.271" endtime="20201030 18:32:35.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.242" endtime="20201030 18:32:35.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.240" endtime="20201030 18:32:35.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.280" endtime="20201030 18:32:35.566"></status>
</kw>
<msg timestamp="20201030 18:32:35.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.279" endtime="20201030 18:32:35.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.570" endtime="20201030 18:32:35.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.578" endtime="20201030 18:32:35.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.276" endtime="20201030 18:32:35.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.274" endtime="20201030 18:32:35.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.585" level="INFO">${RESULT} = [{'diff': 5.405600000000024e-05}, {'diff': 5.390300000000098e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.309699999999848e-05}, {'diff': 5.404099999999773e-05}, {'diff': 5.322200000000207e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:35.582" endtime="20201030 18:32:35.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.589" level="INFO">${ACCURACY} = {'diff': [5.405600000000024e-05, 5.390300000000098e-05, 5.3985999999998924e-05, 5.309699999999848e-05, 5.404099999999773e-05, 5.322200000000207e-05, 5.3138000000001184e-05, 5.329100000000045e-05, 5.36...</msg>
<status status="PASS" starttime="20201030 18:32:35.586" endtime="20201030 18:32:35.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.593" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.592" endtime="20201030 18:32:35.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.596" level="INFO">VALUE: [5.405600000000024e-05, 5.390300000000098e-05, 5.3985999999998924e-05, 5.309699999999848e-05, 5.404099999999773e-05, 5.322200000000207e-05, 5.3138000000001184e-05, 5.329100000000045e-05, 5.362500000000159e-05, 5.355599999999974e-05, 5.40280000000011e-05, 5.380599999999999e-05, 5.3471999999998854e-05, 5.3735999999998674e-05, 5.319400000000293e-05, 5.350000000000146e-05, 5.347200000000232e-05, 5.388899999999794e-05, 5.372300000000205e-05, 5.359799999999845e-05, 5.359799999999845e-05, 5.359800000000192e-05, 5.393100000000012e-05, 5.377800000000085e-05, 5.33340000000021e-05, 5.369499999999944e-05, 5.394499999999969e-05, 5.33470000000022e-05, 5.3985999999998924e-05, 5.3721999999999104e-05, 5.402699999999816e-05, 5.4027999999997633e-05, 5.312500000000109e-05, 5.350000000000146e-05, 5.377800000000085e-05, 5.3693999999999964e-05, 5.333299999999916e-05, 5.313900000000066e-05, 5.386100000000227e-05, 5.4013999999998064e-05, 5.32080000000025e-05, 5.308299999999891e-05, 5.309699999999848e-05, 5.341700000000005e-05, 5.40280000000011e-05, 5.359799999999845e-05, 5.390300000000098e-05, 5.38479999999987e-05, 5.35410000000007e-05, 5.377800000000085e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.594" endtime="20201030 18:32:35.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.590" endtime="20201030 18:32:35.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.601" endtime="20201030 18:32:35.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.600" endtime="20201030 18:32:35.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.599" endtime="20201030 18:32:35.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.238" endtime="20201030 18:32:35.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.238" endtime="20201030 18:32:35.622"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.631" endtime="20201030 18:32:35.650"></status>
</kw>
<msg timestamp="20201030 18:32:35.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.629" endtime="20201030 18:32:35.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.652" endtime="20201030 18:32:35.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.654" endtime="20201030 18:32:35.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.627" endtime="20201030 18:32:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.624" endtime="20201030 18:32:35.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.663" endtime="20201030 18:32:35.949"></status>
</kw>
<msg timestamp="20201030 18:32:35.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.661" endtime="20201030 18:32:35.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.953" endtime="20201030 18:32:35.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.961" endtime="20201030 18:32:35.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.659" endtime="20201030 18:32:35.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.657" endtime="20201030 18:32:35.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.968" level="INFO">${RESULT} = [{'diff': 5.5013999999999064e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.481899999999762e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.430599999999702e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:35.965" endtime="20201030 18:32:35.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.974" level="INFO">${ACCURACY} = {'diff': [5.5013999999999064e-05, 5.490299999999851e-05, 5.481899999999762e-05, 5.4735999999999674e-05, 5.4777999999998384e-05, 5.430599999999702e-05, 5.4735999999999674e-05, 5.415300000000123e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:35.969" endtime="20201030 18:32:35.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.978" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.977" endtime="20201030 18:32:35.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.981" level="INFO">VALUE: [5.5013999999999064e-05, 5.490299999999851e-05, 5.481899999999762e-05, 5.4735999999999674e-05, 5.4777999999998384e-05, 5.430599999999702e-05, 5.4735999999999674e-05, 5.415300000000123e-05, 5.495900000000026e-05, 5.497299999999983e-05, 5.429200000000092e-05, 5.450000000000246e-05, 5.462500000000259e-05, 5.459699999999998e-05, 5.409700000000295e-05, 5.4180000000000894e-05, 5.427699999999841e-05, 5.408299999999991e-05, 5.508300000000091e-05, 5.434699999999973e-05, 5.4194000000000464e-05, 5.461100000000302e-05, 5.465299999999826e-05, 5.43479999999992e-05, 5.4499999999998994e-05, 5.444500000000019e-05, 5.433300000000016e-05, 5.440300000000148e-05, 5.45280000000016e-05, 5.488900000000241e-05, 5.4777999999998384e-05, 5.497299999999983e-05, 5.4179999999997425e-05, 5.487500000000284e-05, 5.4735999999999674e-05, 5.427699999999841e-05, 5.4763999999998814e-05, 5.455500000000127e-05, 5.4722000000000104e-05, 5.479100000000195e-05, 5.4666000000001824e-05, 5.4249999999998744e-05, 5.409699999999948e-05, 5.491699999999808e-05, 5.4471999999999854e-05, 5.477800000000185e-05, 5.427800000000135e-05, 5.490300000000198e-05, 5.418100000000037e-05, 5.454099999999823e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.980" endtime="20201030 18:32:35.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.975" endtime="20201030 18:32:35.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.986" endtime="20201030 18:32:36.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.984" endtime="20201030 18:32:36.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.983" endtime="20201030 18:32:36.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.623" endtime="20201030 18:32:36.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.622" endtime="20201030 18:32:36.007"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.015" endtime="20201030 18:32:36.034"></status>
</kw>
<msg timestamp="20201030 18:32:36.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.014" endtime="20201030 18:32:36.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.035" endtime="20201030 18:32:36.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.038" endtime="20201030 18:32:36.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.011" endtime="20201030 18:32:36.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.009" endtime="20201030 18:32:36.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.047" endtime="20201030 18:32:36.333"></status>
</kw>
<msg timestamp="20201030 18:32:36.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.046" endtime="20201030 18:32:36.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.338" endtime="20201030 18:32:36.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.346" endtime="20201030 18:32:36.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.043" endtime="20201030 18:32:36.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.041" endtime="20201030 18:32:36.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.352" level="INFO">${RESULT} = [{'diff': 5.609800000000095e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.580499999999905e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.5457999999997815e-05}, {'diff': 5.584700000000123e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:36.349" endtime="20201030 18:32:36.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.356" level="INFO">${ACCURACY} = {'diff': [5.609800000000095e-05, 5.552699999999966e-05, 5.580499999999905e-05, 5.5708000000001534e-05, 5.5457999999997815e-05, 5.584700000000123e-05, 5.534700000000073e-05, 5.590299999999951e-05, 5.56...</msg>
<status status="PASS" starttime="20201030 18:32:36.353" endtime="20201030 18:32:36.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.361" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.360" endtime="20201030 18:32:36.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.363" level="INFO">VALUE: [5.609800000000095e-05, 5.552699999999966e-05, 5.580499999999905e-05, 5.5708000000001534e-05, 5.5457999999997815e-05, 5.584700000000123e-05, 5.534700000000073e-05, 5.590299999999951e-05, 5.565300000000273e-05, 5.5527999999999134e-05, 5.5707999999998065e-05, 5.5513999999999564e-05, 5.530600000000149e-05, 5.56670000000023e-05, 5.597300000000083e-05, 5.5791999999998954e-05, 5.5805999999998523e-05, 5.595899999999779e-05, 5.515299999999876e-05, 5.5499999999999994e-05, 5.532000000000106e-05, 5.533299999999769e-05, 5.583300000000166e-05, 5.554099999999923e-05, 5.534699999999726e-05, 5.55549999999988e-05, 5.515299999999876e-05, 5.5971999999997885e-05, 5.593099999999865e-05, 5.533299999999769e-05, 5.5971999999997885e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.540299999999901e-05, 5.5555999999998273e-05, 5.544500000000119e-05, 5.522300000000008e-05, 5.580499999999905e-05, 5.508400000000038e-05, 5.581899999999862e-05, 5.537499999999987e-05, 5.540299999999901e-05, 5.558300000000141e-05, 5.583299999999819e-05, 5.551300000000009e-05, 5.601299999999712e-05, 5.580499999999905e-05, 5.534700000000073e-05, 5.5957999999998315e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.362" endtime="20201030 18:32:36.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.357" endtime="20201030 18:32:36.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.368" endtime="20201030 18:32:36.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.367" endtime="20201030 18:32:36.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.366" endtime="20201030 18:32:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.008" endtime="20201030 18:32:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.007" endtime="20201030 18:32:36.389"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.397" endtime="20201030 18:32:36.417"></status>
</kw>
<msg timestamp="20201030 18:32:36.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.396" endtime="20201030 18:32:36.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.418" endtime="20201030 18:32:36.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.421" endtime="20201030 18:32:36.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.393" endtime="20201030 18:32:36.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.391" endtime="20201030 18:32:36.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.430" endtime="20201030 18:32:36.715"></status>
</kw>
<msg timestamp="20201030 18:32:36.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:36.428" endtime="20201030 18:32:36.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:36.719" endtime="20201030 18:32:36.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.727" endtime="20201030 18:32:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.426" endtime="20201030 18:32:36.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.424" endtime="20201030 18:32:36.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.734" level="INFO">${RESULT} = [{'diff': 5.6277999999999884e-05}, {'diff': 5.63619999999973e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.611200000000052e-05}, {'diff': 5.609799999999748e-05}, {'diff': 5.6930000000000175e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:36.731" endtime="20201030 18:32:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.738" level="INFO">${ACCURACY} = {'diff': [5.6277999999999884e-05, 5.63619999999973e-05, 5.641699999999958e-05, 5.611200000000052e-05, 5.609799999999748e-05, 5.6930000000000175e-05, 5.6707999999999065e-05, 5.6250000000000744e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:32:36.735" endtime="20201030 18:32:36.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.743" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.742" endtime="20201030 18:32:36.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.745" level="INFO">VALUE: [5.6277999999999884e-05, 5.63619999999973e-05, 5.641699999999958e-05, 5.611200000000052e-05, 5.609799999999748e-05, 5.6930000000000175e-05, 5.6707999999999065e-05, 5.6250000000000744e-05, 5.6652000000000785e-05, 5.684699999999876e-05, 5.656899999999937e-05, 5.7014000000001064e-05, 5.6305999999999023e-05, 5.659699999999851e-05, 5.615300000000323e-05, 5.615299999999976e-05, 5.6693999999999495e-05, 5.6971999999998885e-05, 5.6930000000000175e-05, 5.638899999999697e-05, 5.663900000000069e-05, 5.640300000000001e-05, 5.6458000000002284e-05, 5.6957999999999315e-05, 5.6778000000000384e-05, 5.6528000000000134e-05, 5.620900000000151e-05, 5.645899999999829e-05, 5.679100000000048e-05, 5.6735999999998205e-05, 5.677700000000091e-05, 5.6999999999998024e-05, 5.631900000000259e-05, 5.6236000000001174e-05, 5.6735999999998205e-05, 5.613900000000019e-05, 5.6693999999999495e-05, 5.658299999999894e-05, 5.63610000000013e-05, 5.6764000000000814e-05, 5.6805999999999524e-05, 5.61809999999989e-05, 5.608299999999844e-05, 5.666699999999983e-05, 5.7042000000000204e-05, 5.63610000000013e-05, 5.6764000000000814e-05, 5.622299999999761e-05, 5.691700000000008e-05, 5.6666000000000355e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.744" endtime="20201030 18:32:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.739" endtime="20201030 18:32:36.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.751" endtime="20201030 18:32:36.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.749" endtime="20201030 18:32:36.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.748" endtime="20201030 18:32:36.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.390" endtime="20201030 18:32:36.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.389" endtime="20201030 18:32:36.772"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.780" endtime="20201030 18:32:36.798"></status>
</kw>
<msg timestamp="20201030 18:32:36.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.779" endtime="20201030 18:32:36.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.800" endtime="20201030 18:32:36.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.802" endtime="20201030 18:32:36.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.776" endtime="20201030 18:32:36.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.774" endtime="20201030 18:32:36.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.811" endtime="20201030 18:32:37.096"></status>
</kw>
<msg timestamp="20201030 18:32:37.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.810" endtime="20201030 18:32:37.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.101" endtime="20201030 18:32:37.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.109" endtime="20201030 18:32:37.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.807" endtime="20201030 18:32:37.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.805" endtime="20201030 18:32:37.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.115" level="INFO">${RESULT} = [{'diff': 5.797299999999936e-05}, {'diff': 5.738900000000144e-05}, {'diff': 5.7499999999998525e-05}, {'diff': 5.711200000000152e-05}, {'diff': 5.7764000000001814e-05}, {'diff': 5.7958000000000315e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:37.112" endtime="20201030 18:32:37.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.120" level="INFO">${ACCURACY} = {'diff': [5.797299999999936e-05, 5.738900000000144e-05, 5.7499999999998525e-05, 5.711200000000152e-05, 5.7764000000001814e-05, 5.7958000000000315e-05, 5.7069999999999343e-05, 5.762499999999865e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:37.116" endtime="20201030 18:32:37.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.125" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.123" endtime="20201030 18:32:37.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.127" level="INFO">VALUE: [5.797299999999936e-05, 5.738900000000144e-05, 5.7499999999998525e-05, 5.711200000000152e-05, 5.7764000000001814e-05, 5.7958000000000315e-05, 5.7069999999999343e-05, 5.762499999999865e-05, 5.7999999999999025e-05, 5.7471999999999385e-05, 5.743100000000015e-05, 5.784699999999976e-05, 5.7457999999999815e-05, 5.7528000000001134e-05, 5.763899999999822e-05, 5.7971999999999885e-05, 5.758300000000341e-05, 5.794500000000022e-05, 5.738900000000144e-05, 5.7820000000000094e-05, 5.790300000000151e-05, 5.8028000000001634e-05, 5.716700000000033e-05, 5.709800000000195e-05, 5.7833999999999663e-05, 5.711200000000152e-05, 5.7764000000001814e-05, 5.7221999999999135e-05, 5.733299999999969e-05, 5.726300000000184e-05, 5.7652000000001785e-05, 5.740300000000101e-05, 5.7471999999999385e-05, 5.7208000000003034e-05, 5.791700000000108e-05, 5.715299999999729e-05, 5.716700000000033e-05, 5.790300000000151e-05, 5.8042000000001204e-05, 5.713900000000119e-05, 5.784699999999976e-05, 5.8041999999997734e-05, 5.7777999999997914e-05, 5.7806000000000524e-05, 5.7735999999999205e-05, 5.76810000000004e-05, 5.795899999999979e-05, 5.738900000000144e-05, 5.713899999999772e-05, 5.741700000000058e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.126" endtime="20201030 18:32:37.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.121" endtime="20201030 18:32:37.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.132" endtime="20201030 18:32:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.130" endtime="20201030 18:32:37.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.129" endtime="20201030 18:32:37.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.772" endtime="20201030 18:32:37.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.772" endtime="20201030 18:32:37.153"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.161" endtime="20201030 18:32:37.180"></status>
</kw>
<msg timestamp="20201030 18:32:37.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.160" endtime="20201030 18:32:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.181" endtime="20201030 18:32:37.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.184" endtime="20201030 18:32:37.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.157" endtime="20201030 18:32:37.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.155" endtime="20201030 18:32:37.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.193" endtime="20201030 18:32:37.481"></status>
</kw>
<msg timestamp="20201030 18:32:37.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.191" endtime="20201030 18:32:37.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.485" endtime="20201030 18:32:37.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.494" endtime="20201030 18:32:37.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.189" endtime="20201030 18:32:37.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.187" endtime="20201030 18:32:37.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.500" level="INFO">${RESULT} = [{'diff': 5.834700000000026e-05}, {'diff': 5.891700000000208e-05}, {'diff': 5.811099999999958e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.840299999999854e-05}, {'diff': 5.870900000000054e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:37.497" endtime="20201030 18:32:37.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.504" level="INFO">${ACCURACY} = {'diff': [5.834700000000026e-05, 5.891700000000208e-05, 5.811099999999958e-05, 5.838899999999897e-05, 5.840299999999854e-05, 5.870900000000054e-05, 5.826299999999937e-05, 5.854099999999876e-05, 5.8500...</msg>
<status status="PASS" starttime="20201030 18:32:37.501" endtime="20201030 18:32:37.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.509" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.508" endtime="20201030 18:32:37.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.511" level="INFO">VALUE: [5.834700000000026e-05, 5.891700000000208e-05, 5.811099999999958e-05, 5.838899999999897e-05, 5.840299999999854e-05, 5.870900000000054e-05, 5.826299999999937e-05, 5.854099999999876e-05, 5.8500000000002994e-05, 5.8985999999996985e-05, 5.8444000000001245e-05, 5.8222000000000135e-05, 5.894499999999775e-05, 5.8278000000001884e-05, 5.8708000000001065e-05, 5.8249999999999275e-05, 5.8555999999997804e-05, 5.8944000000001745e-05, 5.8263999999998844e-05, 5.861100000000008e-05, 5.840299999999854e-05, 5.8833999999997194e-05, 5.841699999999811e-05, 5.8791999999998484e-05, 5.8277999999998414e-05, 5.819500000000047e-05, 5.837500000000287e-05, 5.895899999999732e-05, 5.8901999999999566e-05, 5.833300000000069e-05, 5.902699999999969e-05, 5.8680000000001925e-05, 5.805499999999783e-05, 5.8791999999998484e-05, 5.816699999999786e-05, 5.866699999999836e-05, 5.833300000000069e-05, 5.8472000000000385e-05, 5.891700000000208e-05, 5.8541999999998234e-05, 5.809700000000001e-05, 5.8971999999997415e-05, 5.838900000000244e-05, 5.8791999999998484e-05, 5.865299999999879e-05, 5.819500000000047e-05, 5.895899999999732e-05, 5.8792000000001954e-05, 5.829099999999851e-05, 5.8722000000000635e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.510" endtime="20201030 18:32:37.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.505" endtime="20201030 18:32:37.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.516" endtime="20201030 18:32:37.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.515" endtime="20201030 18:32:37.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.514" endtime="20201030 18:32:37.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.153" endtime="20201030 18:32:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.153" endtime="20201030 18:32:37.537"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.546" endtime="20201030 18:32:37.568"></status>
</kw>
<msg timestamp="20201030 18:32:37.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.544" endtime="20201030 18:32:37.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.569" endtime="20201030 18:32:37.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.572" endtime="20201030 18:32:37.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.542" endtime="20201030 18:32:37.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.539" endtime="20201030 18:32:37.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.581" endtime="20201030 18:32:37.877"></status>
</kw>
<msg timestamp="20201030 18:32:37.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.579" endtime="20201030 18:32:37.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.882" endtime="20201030 18:32:37.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.890" endtime="20201030 18:32:37.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.577" endtime="20201030 18:32:37.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.575" endtime="20201030 18:32:37.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.896" level="INFO">${RESULT} = [{'diff': 5.9764000000000345e-05}, {'diff': 5.98750000000009e-05}, {'diff': 5.9527999999999665e-05}, {'diff': 5.9820000000002094e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.963900000000022e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:37.893" endtime="20201030 18:32:37.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.901" level="INFO">${ACCURACY} = {'diff': [5.9764000000000345e-05, 5.98750000000009e-05, 5.9527999999999665e-05, 5.9820000000002094e-05, 5.909700000000101e-05, 5.963900000000022e-05, 5.9902000000000566e-05, 6.0041999999999734e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:37.897" endtime="20201030 18:32:37.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.905" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.904" endtime="20201030 18:32:37.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.908" level="INFO">VALUE: [5.9764000000000345e-05, 5.98750000000009e-05, 5.9527999999999665e-05, 5.9820000000002094e-05, 5.909700000000101e-05, 5.963900000000022e-05, 5.9902000000000566e-05, 6.0041999999999734e-05, 5.915299999999929e-05, 5.933299999999822e-05, 5.988900000000047e-05, 5.972299999999764e-05, 5.9791999999999484e-05, 5.9556000000002274e-05, 5.913899999999972e-05, 5.9612000000000553e-05, 5.959699999999804e-05, 5.952700000000019e-05, 5.977700000000044e-05, 5.9207999999998095e-05, 5.9415999999999636e-05, 5.9222000000001135e-05, 5.9277999999999414e-05, 5.909700000000101e-05, 5.9263999999999845e-05, 5.9472000000001385e-05, 5.9541999999999234e-05, 5.9902000000000566e-05, 5.966699999999936e-05, 5.9792000000002954e-05, 5.9277999999999414e-05, 5.9471999999997915e-05, 5.947300000000086e-05, 5.9083999999997444e-05, 5.913899999999972e-05, 5.9848000000001234e-05, 5.963900000000022e-05, 6.004100000000026e-05, 5.963900000000022e-05, 5.951300000000062e-05, 5.938899999999997e-05, 5.9458000000001815e-05, 5.9888999999997e-05, 5.9665999999999886e-05, 5.9485999999997485e-05, 5.9500000000000525e-05, 6.0042000000003204e-05, 5.984700000000176e-05, 5.936099999999736e-05, 5.9541999999999234e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.906" endtime="20201030 18:32:37.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.902" endtime="20201030 18:32:37.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.914" endtime="20201030 18:32:37.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.912" endtime="20201030 18:32:37.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.911" endtime="20201030 18:32:37.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.538" endtime="20201030 18:32:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.537" endtime="20201030 18:32:37.938"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.956" endtime="20201030 18:32:37.975"></status>
</kw>
<msg timestamp="20201030 18:32:37.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.951" endtime="20201030 18:32:37.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.977" endtime="20201030 18:32:37.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.980" endtime="20201030 18:32:37.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.947" endtime="20201030 18:32:37.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.942" endtime="20201030 18:32:37.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.989" endtime="20201030 18:32:38.275"></status>
</kw>
<msg timestamp="20201030 18:32:38.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033524431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033585472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.987" endtime="20201030 18:32:38.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033524431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033585472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.279" endtime="20201030 18:32:38.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.288" endtime="20201030 18:32:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.985" endtime="20201030 18:32:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.983" endtime="20201030 18:32:38.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.295" level="INFO">${RESULT} = [{'diff': 6.104099999999779e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.1027999999997695e-05}, {'diff': 6.03750000000014e-05}, {'diff': 6.0457999999999346e-05}, {'diff': 6.0221999999998665e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:38.292" endtime="20201030 18:32:38.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:38.300" level="INFO">${ACCURACY} = {'diff': [6.104099999999779e-05, 6.0707999999999596e-05, 6.1027999999997695e-05, 6.03750000000014e-05, 6.0457999999999346e-05, 6.0221999999998665e-05, 6.0721999999999166e-05, 6.0834000000002664e-05, 6...</msg>
<status status="PASS" starttime="20201030 18:32:38.296" endtime="20201030 18:32:38.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.305" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:32:38.304" endtime="20201030 18:32:38.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.307" level="INFO">VALUE: [6.104099999999779e-05, 6.0707999999999596e-05, 6.1027999999997695e-05, 6.03750000000014e-05, 6.0457999999999346e-05, 6.0221999999998665e-05, 6.0721999999999166e-05, 6.0834000000002664e-05, 6.086099999999539e-05, 6.0749999999998305e-05, 6.0736000000005674e-05, 6.095899999999932e-05, 6.0792000000003954e-05, 6.095899999999932e-05, 6.0707999999999596e-05, 6.009699999999507e-05, 6.027700000000441e-05, 6.054100000000423e-05, 6.0721999999999166e-05, 6.0971999999999416e-05, 6.054099999999729e-05, 6.059700000000251e-05, 6.0944000000000276e-05, 6.0570000000002844e-05, 6.0513999999997625e-05, 6.018099999999943e-05, 6.0707999999999596e-05, 6.1028000000004634e-05, 6.0235999999998235e-05, 6.0485999999998485e-05, 6.0263999999997375e-05, 6.08750000000019e-05, 6.0083999999994975e-05, 6.022299999999814e-05, 6.031899999999618e-05, 6.029099999999704e-05, 6.0764000000004814e-05, 6.10420000000042e-05, 6.0985999999998985e-05, 6.0764000000004814e-05, 6.1013999999998125e-05, 6.0444000000006715e-05, 6.0166000000000386e-05, 6.058300000000294e-05, 6.083299999999625e-05, 6.0556000000003274e-05, 6.086099999999539e-05, 6.1027999999997695e-05, 6.044499999999925e-05, 6.0305999999996085e-05]</msg>
<status status="PASS" starttime="20201030 18:32:38.306" endtime="20201030 18:32:38.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.301" endtime="20201030 18:32:38.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.313" endtime="20201030 18:32:38.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.311" endtime="20201030 18:32:38.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.310" endtime="20201030 18:32:38.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.939" endtime="20201030 18:32:38.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.939" endtime="20201030 18:32:38.333"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.342" endtime="20201030 18:32:38.361"></status>
</kw>
<msg timestamp="20201030 18:32:38.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.341" endtime="20201030 18:32:38.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.362" endtime="20201030 18:32:38.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.365" endtime="20201030 18:32:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.338" endtime="20201030 18:32:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.336" endtime="20201030 18:32:38.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.374" endtime="20201030 18:32:38.683"></status>
</kw>
<msg timestamp="20201030 18:32:38.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.373" endtime="20201030 18:32:38.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.688" endtime="20201030 18:32:38.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.696" endtime="20201030 18:32:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.370" endtime="20201030 18:32:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.368" endtime="20201030 18:32:38.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.703" level="INFO">${RESULT} = [{'diff': 6.163899999999875e-05}, {'diff': 6.177799999999845e-05}, {'diff': 6.165300000000179e-05}, {'diff': 6.190300000000204e-05}, {'diff': 6.180499999999811e-05}, {'diff': 6.134699999999979e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:38.700" endtime="20201030 18:32:38.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:38.707" level="INFO">${ACCURACY} = {'diff': [6.163899999999875e-05, 6.177799999999845e-05, 6.165300000000179e-05, 6.190300000000204e-05, 6.180499999999811e-05, 6.134699999999979e-05, 6.109699999999954e-05, 6.201399999999913e-05, 6.1333...</msg>
<status status="PASS" starttime="20201030 18:32:38.704" endtime="20201030 18:32:38.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.712" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:32:38.711" endtime="20201030 18:32:38.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.714" level="INFO">VALUE: [6.163899999999875e-05, 6.177799999999845e-05, 6.165300000000179e-05, 6.190300000000204e-05, 6.180499999999811e-05, 6.134699999999979e-05, 6.109699999999954e-05, 6.201399999999913e-05, 6.133300000000022e-05, 6.15279999999982e-05, 6.140300000000154e-05, 6.190299999999857e-05, 6.18750000000029e-05, 6.190299999999857e-05, 6.133300000000022e-05, 6.163900000000222e-05, 6.144400000000078e-05, 6.191700000000161e-05, 6.17360000000032e-05, 6.108399999999944e-05, 6.172299999999964e-05, 6.195900000000032e-05, 6.20279999999987e-05, 6.109799999999901e-05, 6.204099999999879e-05, 6.148600000000295e-05, 6.119400000000053e-05, 6.187499999999943e-05, 6.12629999999989e-05, 6.131900000000065e-05, 6.152700000000219e-05, 6.129200000000098e-05, 6.108299999999997e-05, 6.17080000000006e-05, 6.111100000000258e-05, 6.168099999999746e-05, 6.12080000000001e-05, 6.177799999999845e-05, 6.112499999999868e-05, 6.161099999999961e-05, 6.143100000000068e-05, 6.122300000000261e-05, 6.15279999999982e-05, 6.172299999999964e-05, 6.190300000000204e-05, 6.198599999999999e-05, 6.12080000000001e-05, 6.180499999999811e-05, 6.113899999999825e-05, 6.199999999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:32:38.713" endtime="20201030 18:32:38.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.708" endtime="20201030 18:32:38.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.720" endtime="20201030 18:32:38.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.718" endtime="20201030 18:32:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.717" endtime="20201030 18:32:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.334" endtime="20201030 18:32:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.334" endtime="20201030 18:32:38.740"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.750" endtime="20201030 18:32:38.770"></status>
</kw>
<msg timestamp="20201030 18:32:38.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.748" endtime="20201030 18:32:38.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.771" endtime="20201030 18:32:38.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.774" endtime="20201030 18:32:38.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.745" endtime="20201030 18:32:38.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.743" endtime="20201030 18:32:38.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.783" endtime="20201030 18:32:39.070"></status>
</kw>
<msg timestamp="20201030 18:32:39.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021196528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.782" endtime="20201030 18:32:39.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021196528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.074" endtime="20201030 18:32:39.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.083" endtime="20201030 18:32:39.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.779" endtime="20201030 18:32:39.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.777" endtime="20201030 18:32:39.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.090" level="INFO">${RESULT} = [{'diff': 6.250000000000006e-05}, {'diff': 6.232000000000112e-05}, {'diff': 6.265300000000279e-05}, {'diff': 6.279099999999954e-05}, {'diff': 6.292999999999924e-05}, {'diff': 6.240200000000307e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.086" endtime="20201030 18:32:39.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.094" level="INFO">${ACCURACY} = {'diff': [6.250000000000006e-05, 6.232000000000112e-05, 6.265300000000279e-05, 6.279099999999954e-05, 6.292999999999924e-05, 6.240200000000307e-05, 6.24019999999996e-05, 6.291600000000314e-05, 6.25000...</msg>
<status status="PASS" starttime="20201030 18:32:39.091" endtime="20201030 18:32:39.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.099" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.097" endtime="20201030 18:32:39.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.101" level="INFO">VALUE: [6.250000000000006e-05, 6.232000000000112e-05, 6.265300000000279e-05, 6.279099999999954e-05, 6.292999999999924e-05, 6.240200000000307e-05, 6.24019999999996e-05, 6.291600000000314e-05, 6.250000000000006e-05, 6.231900000000165e-05, 6.272200000000117e-05, 6.284699999999782e-05, 6.25690000000019e-05, 6.233300000000122e-05, 6.290299999999957e-05, 6.223600000000024e-05, 6.268099999999846e-05, 6.30279999999997e-05, 6.268099999999846e-05, 6.273599999999727e-05, 6.290299999999957e-05, 6.298699999999699e-05, 6.258400000000094e-05, 6.298599999999752e-05, 6.298700000000046e-05, 6.247199999999745e-05, 6.245799999999788e-05, 6.215199999999935e-05, 6.247200000000092e-05, 6.240300000000254e-05, 6.298599999999752e-05, 6.241699999999864e-05, 6.248600000000049e-05, 6.295799999999838e-05, 6.283300000000172e-05, 6.304199999999927e-05, 6.282000000000162e-05, 6.23889999999995e-05, 6.265299999999932e-05, 6.284700000000129e-05, 6.2195000000001e-05, 6.222300000000014e-05, 6.244500000000125e-05, 6.297300000000089e-05, 6.273600000000074e-05, 6.29020000000001e-05, 6.219399999999806e-05, 6.245799999999788e-05, 6.284699999999782e-05, 6.277799999999945e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.100" endtime="20201030 18:32:39.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.095" endtime="20201030 18:32:39.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.107" endtime="20201030 18:32:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.106" endtime="20201030 18:32:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.105" endtime="20201030 18:32:39.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.741" endtime="20201030 18:32:39.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.741" endtime="20201030 18:32:39.128"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.137" endtime="20201030 18:32:39.156"></status>
</kw>
<msg timestamp="20201030 18:32:39.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.136" endtime="20201030 18:32:39.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.158" endtime="20201030 18:32:39.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.160" endtime="20201030 18:32:39.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.133" endtime="20201030 18:32:39.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.131" endtime="20201030 18:32:39.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.170" endtime="20201030 18:32:39.455"></status>
</kw>
<msg timestamp="20201030 18:32:39.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.168" endtime="20201030 18:32:39.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.460" endtime="20201030 18:32:39.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.468" endtime="20201030 18:32:39.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.165" endtime="20201030 18:32:39.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.164" endtime="20201030 18:32:39.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.475" level="INFO">${RESULT} = [{'diff': 6.359800000000151e-05}, {'diff': 6.312500000000068e-05}, {'diff': 6.372200000000217e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.309699999999807e-05}, {'diff': 6.322200000000167e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.471" endtime="20201030 18:32:39.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.480" level="INFO">${ACCURACY} = {'diff': [6.359800000000151e-05, 6.312500000000068e-05, 6.372200000000217e-05, 6.326400000000038e-05, 6.309699999999807e-05, 6.322200000000167e-05, 6.401300000000165e-05, 6.398599999999852e-05, 6.3263...</msg>
<status status="PASS" starttime="20201030 18:32:39.476" endtime="20201030 18:32:39.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.485" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.484" endtime="20201030 18:32:39.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.487" level="INFO">VALUE: [6.359800000000151e-05, 6.312500000000068e-05, 6.372200000000217e-05, 6.326400000000038e-05, 6.309699999999807e-05, 6.322200000000167e-05, 6.401300000000165e-05, 6.398599999999852e-05, 6.32639999999969e-05, 6.384699999999882e-05, 6.323600000000124e-05, 6.336099999999789e-05, 6.333299999999875e-05, 6.362500000000118e-05, 6.312500000000068e-05, 6.315299999999982e-05, 6.341699999999964e-05, 6.390300000000057e-05, 6.381999999999916e-05, 6.341700000000311e-05, 6.327799999999995e-05, 6.309800000000101e-05, 6.333399999999823e-05, 6.383299999999925e-05, 6.313900000000025e-05, 6.315200000000035e-05, 6.367999999999999e-05, 6.37219999999987e-05, 6.372200000000217e-05, 6.32219999999982e-05, 6.340300000000007e-05, 6.341699999999964e-05, 6.37219999999987e-05, 6.377800000000045e-05, 6.340300000000007e-05, 6.3582999999999e-05, 6.32500000000008e-05, 6.405599999999984e-05, 6.329199999999952e-05, 6.362500000000118e-05, 6.395899999999885e-05, 6.35699999999989e-05, 6.308400000000144e-05, 6.336099999999789e-05, 6.347200000000192e-05, 6.39020000000011e-05, 6.369399999999956e-05, 6.397199999999895e-05, 6.369399999999956e-05, 6.381900000000315e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.486" endtime="20201030 18:32:39.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.481" endtime="20201030 18:32:39.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.492" endtime="20201030 18:32:39.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.491" endtime="20201030 18:32:39.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.490" endtime="20201030 18:32:39.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.129" endtime="20201030 18:32:39.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.129" endtime="20201030 18:32:39.513"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.522" endtime="20201030 18:32:39.541"></status>
</kw>
<msg timestamp="20201030 18:32:39.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.521" endtime="20201030 18:32:39.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.543" endtime="20201030 18:32:39.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.545" endtime="20201030 18:32:39.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.518" endtime="20201030 18:32:39.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.516" endtime="20201030 18:32:39.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.555" endtime="20201030 18:32:39.842"></status>
</kw>
<msg timestamp="20201030 18:32:39.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.553" endtime="20201030 18:32:39.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.847" endtime="20201030 18:32:39.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.855" endtime="20201030 18:32:39.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.551" endtime="20201030 18:32:39.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.549" endtime="20201030 18:32:39.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.862" level="INFO">${RESULT} = [{'diff': 6.470900000000307e-05}, {'diff': 6.416699999999692e-05}, {'diff': 6.429100000000104e-05}, {'diff': 6.433399999999923e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.465199999999838e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.859" endtime="20201030 18:32:39.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.866" level="INFO">${ACCURACY} = {'diff': [6.470900000000307e-05, 6.416699999999692e-05, 6.429100000000104e-05, 6.433399999999923e-05, 6.484699999999982e-05, 6.465199999999838e-05, 6.415200000000135e-05, 6.419499999999953e-05, 6.4278...</msg>
<status status="PASS" starttime="20201030 18:32:39.863" endtime="20201030 18:32:39.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.871" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.870" endtime="20201030 18:32:39.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.873" level="INFO">VALUE: [6.470900000000307e-05, 6.416699999999692e-05, 6.429100000000104e-05, 6.433399999999923e-05, 6.484699999999982e-05, 6.465199999999838e-05, 6.415200000000135e-05, 6.419499999999953e-05, 6.427800000000095e-05, 6.488899999999853e-05, 6.430600000000009e-05, 6.422200000000267e-05, 6.422299999999867e-05, 6.477800000000145e-05, 6.480600000000059e-05, 6.436099999999889e-05, 6.45280000000012e-05, 6.441700000000064e-05, 6.451399999999816e-05, 6.495800000000038e-05, 6.422300000000214e-05, 6.48479999999993e-05, 6.500000000000256e-05, 6.411100000000211e-05, 6.498600000000299e-05, 6.450000000000206e-05, 6.427800000000095e-05, 6.42219999999992e-05, 6.495800000000038e-05, 6.42219999999992e-05, 6.447200000000292e-05, 6.42219999999992e-05, 6.505600000000084e-05, 6.459699999999957e-05, 6.480500000000111e-05, 6.498599999999952e-05, 6.463899999999828e-05, 6.454200000000077e-05, 6.45699999999999e-05, 6.455500000000086e-05, 6.431999999999966e-05, 6.497299999999942e-05, 6.483399999999973e-05, 6.465200000000185e-05, 6.459699999999957e-05, 6.441600000000117e-05, 6.434699999999932e-05, 6.483300000000025e-05, 6.469400000000056e-05, 6.416700000000039e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.872" endtime="20201030 18:32:39.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.867" endtime="20201030 18:32:39.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.879" endtime="20201030 18:32:39.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.877" endtime="20201030 18:32:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.876" endtime="20201030 18:32:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.514" endtime="20201030 18:32:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.513" endtime="20201030 18:32:39.899"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.908" endtime="20201030 18:32:39.928"></status>
</kw>
<msg timestamp="20201030 18:32:39.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.907" endtime="20201030 18:32:39.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.929" endtime="20201030 18:32:39.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.932" endtime="20201030 18:32:39.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.904" endtime="20201030 18:32:39.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.902" endtime="20201030 18:32:39.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.941" endtime="20201030 18:32:40.229"></status>
</kw>
<msg timestamp="20201030 18:32:40.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.940" endtime="20201030 18:32:40.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.233" endtime="20201030 18:32:40.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.242" endtime="20201030 18:32:40.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.937" endtime="20201030 18:32:40.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.935" endtime="20201030 18:32:40.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.249" level="INFO">${RESULT} = [{'diff': 6.52090000000001e-05}, {'diff': 6.527799999999848e-05}, {'diff': 6.566700000000189e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.54029999999986e-05}, {'diff': 6.587499999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:40.245" endtime="20201030 18:32:40.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.253" level="INFO">${ACCURACY} = {'diff': [6.52090000000001e-05, 6.527799999999848e-05, 6.566700000000189e-05, 6.552799999999873e-05, 6.54029999999986e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.597200000000095e-05, 6.577699...</msg>
<status status="PASS" starttime="20201030 18:32:40.250" endtime="20201030 18:32:40.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.258" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.257" endtime="20201030 18:32:40.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.260" level="INFO">VALUE: [6.52090000000001e-05, 6.527799999999848e-05, 6.566700000000189e-05, 6.552799999999873e-05, 6.54029999999986e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.597200000000095e-05, 6.57769999999995e-05, 6.577700000000297e-05, 6.54029999999986e-05, 6.577799999999898e-05, 6.576400000000288e-05, 6.541700000000164e-05, 6.545800000000088e-05, 6.598600000000052e-05, 6.50830000000005e-05, 6.552799999999873e-05, 6.548600000000002e-05, 6.540300000000207e-05, 6.601399999999966e-05, 6.523600000000324e-05, 6.545900000000035e-05, 6.54029999999986e-05, 6.512499999999921e-05, 6.554099999999882e-05, 6.552799999999873e-05, 6.524999999999934e-05, 6.57769999999995e-05, 6.565199999999938e-05, 6.561100000000014e-05, 6.547200000000045e-05, 6.549999999999959e-05, 6.591699999999867e-05, 6.583300000000125e-05, 6.55419999999983e-05, 6.532000000000066e-05, 6.594500000000128e-05, 6.54029999999986e-05, 6.545900000000035e-05, 6.529199999999805e-05, 6.565299999999885e-05, 6.533400000000023e-05, 6.529200000000152e-05, 6.57220000000007e-05, 6.583399999999726e-05, 6.584700000000082e-05, 6.602699999999975e-05, 6.586100000000039e-05, 6.516700000000139e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.259" endtime="20201030 18:32:40.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.254" endtime="20201030 18:32:40.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.266" endtime="20201030 18:32:40.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.265" endtime="20201030 18:32:40.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.264" endtime="20201030 18:32:40.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.900" endtime="20201030 18:32:40.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.900" endtime="20201030 18:32:40.287"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.296" endtime="20201030 18:32:40.316"></status>
</kw>
<msg timestamp="20201030 18:32:40.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.295" endtime="20201030 18:32:40.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.317" endtime="20201030 18:32:40.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.320" endtime="20201030 18:32:40.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.292" endtime="20201030 18:32:40.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.290" endtime="20201030 18:32:40.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.329" endtime="20201030 18:32:40.616"></status>
</kw>
<msg timestamp="20201030 18:32:40.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.328" endtime="20201030 18:32:40.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.620" endtime="20201030 18:32:40.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.628" endtime="20201030 18:32:40.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.325" endtime="20201030 18:32:40.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.323" endtime="20201030 18:32:40.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.635" level="INFO">${RESULT} = [{'diff': 6.687500000000096e-05}, {'diff': 6.691699999999967e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.654099999999982e-05}, {'diff': 6.702700000000075e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:40.632" endtime="20201030 18:32:40.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.640" level="INFO">${ACCURACY} = {'diff': [6.687500000000096e-05, 6.691699999999967e-05, 6.636100000000089e-05, 6.665299999999985e-05, 6.654099999999982e-05, 6.702700000000075e-05, 6.694400000000281e-05, 6.65969999999981e-05, 6.69720...</msg>
<status status="PASS" starttime="20201030 18:32:40.636" endtime="20201030 18:32:40.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.645" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.644" endtime="20201030 18:32:40.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.648" level="INFO">VALUE: [6.687500000000096e-05, 6.691699999999967e-05, 6.636100000000089e-05, 6.665299999999985e-05, 6.654099999999982e-05, 6.702700000000075e-05, 6.694400000000281e-05, 6.65969999999981e-05, 6.697200000000195e-05, 6.60969999999976e-05, 6.684700000000182e-05, 6.644399999999884e-05, 6.633400000000123e-05, 6.668099999999899e-05, 6.641699999999917e-05, 6.698599999999805e-05, 6.615300000000282e-05, 6.69030000000001e-05, 6.686100000000139e-05, 6.70419999999998e-05, 6.65419999999993e-05, 6.638900000000003e-05, 6.647300000000092e-05, 6.640200000000013e-05, 6.627799999999948e-05, 6.65969999999981e-05, 6.701299999999771e-05, 6.684700000000182e-05, 6.698599999999805e-05, 6.695799999999891e-05, 6.667999999999952e-05, 6.672199999999823e-05, 6.629199999999905e-05, 6.647199999999798e-05, 6.683299999999878e-05, 6.679199999999955e-05, 6.697199999999848e-05, 6.666699999999942e-05, 6.677799999999998e-05, 6.63480000000008e-05, 6.655600000000234e-05, 6.691699999999967e-05, 6.62090000000011e-05, 6.69160000000002e-05, 6.675000000000084e-05, 6.651399999999669e-05, 6.633299999999828e-05, 6.694399999999934e-05, 6.691699999999967e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.646" endtime="20201030 18:32:40.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.641" endtime="20201030 18:32:40.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.653" endtime="20201030 18:32:40.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.651" endtime="20201030 18:32:40.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.650" endtime="20201030 18:32:40.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.288" endtime="20201030 18:32:40.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.287" endtime="20201030 18:32:40.674"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.683" endtime="20201030 18:32:40.702"></status>
</kw>
<msg timestamp="20201030 18:32:40.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.681" endtime="20201030 18:32:40.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.704" endtime="20201030 18:32:40.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.706" endtime="20201030 18:32:40.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.678" endtime="20201030 18:32:40.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.676" endtime="20201030 18:32:40.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.716" endtime="20201030 18:32:41.003"></status>
</kw>
<msg timestamp="20201030 18:32:41.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020206722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.714" endtime="20201030 18:32:41.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020206722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.007" endtime="20201030 18:32:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.016" endtime="20201030 18:32:41.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.711" endtime="20201030 18:32:41.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.710" endtime="20201030 18:32:41.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.023" level="INFO">${RESULT} = [{'diff': 6.734699999999885e-05}, {'diff': 6.72359999999983e-05}, {'diff': 6.80839999999995e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.784699999999935e-05}, {'diff': 6.797200000000295e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:41.020" endtime="20201030 18:32:41.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.027" level="INFO">${ACCURACY} = {'diff': [6.734699999999885e-05, 6.72359999999983e-05, 6.80839999999995e-05, 6.715300000000035e-05, 6.784699999999935e-05, 6.797200000000295e-05, 6.745899999999888e-05, 6.786099999999892e-05, 6.754200...</msg>
<status status="PASS" starttime="20201030 18:32:41.024" endtime="20201030 18:32:41.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.032" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.031" endtime="20201030 18:32:41.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.034" level="INFO">VALUE: [6.734699999999885e-05, 6.72359999999983e-05, 6.80839999999995e-05, 6.715300000000035e-05, 6.784699999999935e-05, 6.797200000000295e-05, 6.745899999999888e-05, 6.786099999999892e-05, 6.75420000000003e-05, 6.734699999999885e-05, 6.770899999999913e-05, 6.70839999999985e-05, 6.741700000000017e-05, 6.713900000000078e-05, 6.787500000000196e-05, 6.713900000000078e-05, 6.79160000000012e-05, 6.730500000000014e-05, 6.781900000000021e-05, 6.738900000000103e-05, 6.787500000000196e-05, 6.791700000000067e-05, 6.720800000000263e-05, 6.720799999999916e-05, 6.779199999999708e-05, 6.741700000000017e-05, 6.783299999999978e-05, 6.750000000000159e-05, 6.77220000000027e-05, 6.802800000000123e-05, 6.722199999999873e-05, 6.808300000000003e-05, 6.74030000000006e-05, 6.727800000000048e-05, 6.811099999999917e-05, 6.77770000000015e-05, 6.737499999999799e-05, 6.747199999999898e-05, 6.799999999999862e-05, 6.733299999999928e-05, 6.713900000000078e-05, 6.741700000000017e-05, 6.733300000000275e-05, 6.726399999999744e-05, 6.770799999999966e-05, 6.75969999999991e-05, 6.745799999999941e-05, 6.797199999999948e-05, 6.70700000000024e-05, 6.727800000000048e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.033" endtime="20201030 18:32:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.028" endtime="20201030 18:32:41.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.040" endtime="20201030 18:32:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.038" endtime="20201030 18:32:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.037" endtime="20201030 18:32:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.675" endtime="20201030 18:32:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.674" endtime="20201030 18:32:41.061"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.070" endtime="20201030 18:32:41.092"></status>
</kw>
<msg timestamp="20201030 18:32:41.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.069" endtime="20201030 18:32:41.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.094" endtime="20201030 18:32:41.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.097" endtime="20201030 18:32:41.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.066" endtime="20201030 18:32:41.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.064" endtime="20201030 18:32:41.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.106" endtime="20201030 18:32:41.394"></status>
</kw>
<msg timestamp="20201030 18:32:41.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023741597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.104" endtime="20201030 18:32:41.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023741597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.399" endtime="20201030 18:32:41.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.407" endtime="20201030 18:32:41.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.102" endtime="20201030 18:32:41.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.100" endtime="20201030 18:32:41.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.414" level="INFO">${RESULT} = [{'diff': 6.882000000000069e-05}, {'diff': 6.85420000000013e-05}, {'diff': 6.818100000000049e-05}, {'diff': 6.811100000000264e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.82909999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:41.410" endtime="20201030 18:32:41.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.418" level="INFO">${ACCURACY} = {'diff': [6.882000000000069e-05, 6.85420000000013e-05, 6.818100000000049e-05, 6.811100000000264e-05, 6.808300000000003e-05, 6.82909999999981e-05, 6.827699999999853e-05, 6.851399999999869e-05, 6.868100...</msg>
<status status="PASS" starttime="20201030 18:32:41.414" endtime="20201030 18:32:41.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.426" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.424" endtime="20201030 18:32:41.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.431" level="INFO">VALUE: [6.882000000000069e-05, 6.85420000000013e-05, 6.818100000000049e-05, 6.811100000000264e-05, 6.808300000000003e-05, 6.82909999999981e-05, 6.827699999999853e-05, 6.851399999999869e-05, 6.868100000000099e-05, 6.833300000000028e-05, 6.84030000000016e-05, 6.897200000000048e-05, 6.825000000000234e-05, 6.884700000000035e-05, 6.861100000000314e-05, 6.902799999999876e-05, 6.840299999999813e-05, 6.811199999999865e-05, 6.895900000000038e-05, 6.872200000000023e-05, 6.823700000000224e-05, 6.845899999999988e-05, 6.8584e-05, 6.816600000000145e-05, 6.886099999999992e-05, 6.824999999999887e-05, 6.813899999999831e-05, 6.849999999999912e-05, 6.901399999999919e-05, 6.884700000000035e-05, 6.876399999999894e-05, 6.87359999999998e-05, 6.80969999999996e-05, 6.884700000000035e-05, 6.876399999999894e-05, 6.879200000000155e-05, 6.895900000000038e-05, 6.883399999999679e-05, 6.897299999999995e-05, 6.893000000000177e-05, 6.884699999999688e-05, 6.822199999999973e-05, 6.87359999999998e-05, 6.838899999999856e-05, 6.855600000000087e-05, 6.834699999999985e-05, 6.82359999999993e-05, 6.877800000000198e-05, 6.863900000000228e-05, 6.845800000000041e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.428" endtime="20201030 18:32:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.419" endtime="20201030 18:32:41.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.443" endtime="20201030 18:32:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.440" endtime="20201030 18:32:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.437" endtime="20201030 18:32:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.062" endtime="20201030 18:32:41.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.062" endtime="20201030 18:32:41.467"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.486" endtime="20201030 18:32:41.510"></status>
</kw>
<msg timestamp="20201030 18:32:41.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.482" endtime="20201030 18:32:41.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.514" endtime="20201030 18:32:41.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.519" endtime="20201030 18:32:41.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.477" endtime="20201030 18:32:41.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.473" endtime="20201030 18:32:41.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.529" endtime="20201030 18:32:41.815"></status>
</kw>
<msg timestamp="20201030 18:32:41.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033861167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03393125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:41.527" endtime="20201030 18:32:41.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033861167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03393125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:41.819" endtime="20201030 18:32:41.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.827" endtime="20201030 18:32:41.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.525" endtime="20201030 18:32:41.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.523" endtime="20201030 18:32:41.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.834" level="INFO">${RESULT} = [{'diff': 7.00830000000055e-05}, {'diff': 6.970800000000166e-05}, {'diff': 6.941700000000217e-05}, {'diff': 6.963899999999634e-05}, {'diff': 6.913900000000278e-05}, {'diff': 6.948600000000055e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:41.831" endtime="20201030 18:32:41.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.839" level="INFO">${ACCURACY} = {'diff': [7.00830000000055e-05, 6.970800000000166e-05, 6.941700000000217e-05, 6.963899999999634e-05, 6.913900000000278e-05, 6.948600000000055e-05, 6.927799999999901e-05, 6.933400000000423e-05, 6.91530...</msg>
<status status="PASS" starttime="20201030 18:32:41.835" endtime="20201030 18:32:41.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.843" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.842" endtime="20201030 18:32:41.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.846" level="INFO">VALUE: [7.00830000000055e-05, 6.970800000000166e-05, 6.941700000000217e-05, 6.963899999999634e-05, 6.913900000000278e-05, 6.948600000000055e-05, 6.927799999999901e-05, 6.933400000000423e-05, 6.915300000000235e-05, 6.968000000000252e-05, 6.91109999999967e-05, 6.974999999999343e-05, 6.933300000000475e-05, 6.912499999999627e-05, 6.990199999999669e-05, 6.962500000000371e-05, 6.977799999999951e-05, 6.987500000000396e-05, 6.934700000000432e-05, 6.966699999999548e-05, 6.940299999999566e-05, 6.979199999999908e-05, 7.001400000000019e-05, 6.913900000000278e-05, 6.920799999999422e-05, 6.986100000000439e-05, 6.92230000000002e-05, 6.945900000000088e-05, 7.005499999999942e-05, 6.940299999999566e-05, 6.915300000000235e-05, 6.972200000000123e-05, 6.990199999999669e-05, 6.969399999999515e-05, 6.966600000000295e-05, 6.987499999999702e-05, 6.966699999999548e-05, 6.983400000000473e-05, 6.943100000000174e-05, 6.954199999999883e-05, 6.937499999999652e-05, 6.993100000000224e-05, 6.90700000000044e-05, 6.941699999999523e-05, 6.963899999999634e-05, 7.004199999999933e-05, 6.908400000000398e-05, 6.96109999999972e-05, 6.963900000000328e-05, 6.94160000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.844" endtime="20201030 18:32:41.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.840" endtime="20201030 18:32:41.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.851" endtime="20201030 18:32:41.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.849" endtime="20201030 18:32:41.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.848" endtime="20201030 18:32:41.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.469" endtime="20201030 18:32:41.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.468" endtime="20201030 18:32:41.872"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.880" endtime="20201030 18:32:41.899"></status>
</kw>
<msg timestamp="20201030 18:32:41.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.879" endtime="20201030 18:32:41.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.901" endtime="20201030 18:32:41.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.903" endtime="20201030 18:32:41.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.876" endtime="20201030 18:32:41.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.874" endtime="20201030 18:32:41.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.912" endtime="20201030 18:32:42.200"></status>
</kw>
<msg timestamp="20201030 18:32:42.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.911" endtime="20201030 18:32:42.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.204" endtime="20201030 18:32:42.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.212" endtime="20201030 18:32:42.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.908" endtime="20201030 18:32:42.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.906" endtime="20201030 18:32:42.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.219" level="INFO">${RESULT} = [{'diff': 7.040300000000013e-05}, {'diff': 7.018099999999902e-05}, {'diff': 7.079200000000008e-05}, {'diff': 7.034700000000185e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.047199999999851e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.215" endtime="20201030 18:32:42.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.223" level="INFO">${ACCURACY} = {'diff': [7.040300000000013e-05, 7.018099999999902e-05, 7.079200000000008e-05, 7.034700000000185e-05, 7.086099999999845e-05, 7.047199999999851e-05, 7.072200000000223e-05, 7.015299999999988e-05, 7.0459...</msg>
<status status="PASS" starttime="20201030 18:32:42.220" endtime="20201030 18:32:42.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.227" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.226" endtime="20201030 18:32:42.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.230" level="INFO">VALUE: [7.040300000000013e-05, 7.018099999999902e-05, 7.079200000000008e-05, 7.034700000000185e-05, 7.086099999999845e-05, 7.047199999999851e-05, 7.072200000000223e-05, 7.015299999999988e-05, 7.045900000000188e-05, 7.033400000000176e-05, 7.034800000000133e-05, 7.051399999999722e-05, 7.040300000000013e-05, 7.097199999999901e-05, 7.065200000000091e-05, 7.05970000000021e-05, 7.033299999999881e-05, 7.087499999999802e-05, 7.016699999999945e-05, 7.027800000000001e-05, 7.040300000000013e-05, 7.102800000000076e-05, 7.004199999999933e-05, 7.027800000000001e-05, 7.066699999999995e-05, 7.09170000000002e-05, 7.054100000000035e-05, 7.075000000000137e-05, 7.080500000000017e-05, 7.070900000000213e-05, 7.097199999999901e-05, 7.022199999999826e-05, 7.054100000000035e-05, 7.095799999999944e-05, 7.07910000000006e-05, 7.093099999999977e-05, 7.058299999999906e-05, 7.097199999999901e-05, 7.083299999999931e-05, 7.059699999999863e-05, 7.033299999999881e-05, 7.017999999999955e-05, 7.057000000000244e-05, 7.066699999999995e-05, 7.00979999999976e-05, 7.061200000000115e-05, 7.081999999999922e-05, 7.098599999999858e-05, 7.013900000000031e-05, 7.04169999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.228" endtime="20201030 18:32:42.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.224" endtime="20201030 18:32:42.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.235" endtime="20201030 18:32:42.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.233" endtime="20201030 18:32:42.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.232" endtime="20201030 18:32:42.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.872" endtime="20201030 18:32:42.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.872" endtime="20201030 18:32:42.255"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.264" endtime="20201030 18:32:42.284"></status>
</kw>
<msg timestamp="20201030 18:32:42.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.263" endtime="20201030 18:32:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.286" endtime="20201030 18:32:42.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.288" endtime="20201030 18:32:42.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.260" endtime="20201030 18:32:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.258" endtime="20201030 18:32:42.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.297" endtime="20201030 18:32:42.584"></status>
</kw>
<msg timestamp="20201030 18:32:42.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.296" endtime="20201030 18:32:42.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.588" endtime="20201030 18:32:42.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.597" endtime="20201030 18:32:42.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.293" endtime="20201030 18:32:42.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.292" endtime="20201030 18:32:42.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.603" level="INFO">${RESULT} = [{'diff': 7.158300000000006e-05}, {'diff': 7.127799999999754e-05}, {'diff': 7.177799999999804e-05}, {'diff': 7.145899999999941e-05}, {'diff': 7.129199999999711e-05}, {'diff': 7.198599999999958e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.600" endtime="20201030 18:32:42.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.608" level="INFO">${ACCURACY} = {'diff': [7.158300000000006e-05, 7.127799999999754e-05, 7.177799999999804e-05, 7.145899999999941e-05, 7.129199999999711e-05, 7.198599999999958e-05, 7.201399999999872e-05, 7.198599999999958e-05, 7.1583...</msg>
<status status="PASS" starttime="20201030 18:32:42.604" endtime="20201030 18:32:42.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.612" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.611" endtime="20201030 18:32:42.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.614" level="INFO">VALUE: [7.158300000000006e-05, 7.127799999999754e-05, 7.177799999999804e-05, 7.145899999999941e-05, 7.129199999999711e-05, 7.198599999999958e-05, 7.201399999999872e-05, 7.198599999999958e-05, 7.158300000000006e-05, 7.163800000000234e-05, 7.155500000000092e-05, 7.141600000000123e-05, 7.154200000000083e-05, 7.147199999999951e-05, 7.156999999999997e-05, 7.187499999999902e-05, 7.154100000000135e-05, 7.187499999999902e-05, 7.136099999999895e-05, 7.120899999999916e-05, 7.120899999999916e-05, 7.138899999999809e-05, 7.199999999999915e-05, 7.131999999999972e-05, 7.120799999999969e-05, 7.108399999999904e-05, 7.126399999999797e-05, 7.129199999999711e-05, 7.115200000000141e-05, 7.119400000000012e-05, 7.193100000000077e-05, 7.162499999999877e-05, 7.129200000000058e-05, 7.143100000000027e-05, 7.14170000000007e-05, 7.127800000000101e-05, 7.198599999999958e-05, 7.126400000000144e-05, 7.14300000000008e-05, 7.138900000000156e-05, 7.199999999999915e-05, 7.159800000000258e-05, 7.163900000000181e-05, 7.145799999999994e-05, 7.145799999999994e-05, 7.186099999999945e-05, 7.159699999999963e-05, 7.151399999999822e-05, 7.11109999999987e-05, 7.170800000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.613" endtime="20201030 18:32:42.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.608" endtime="20201030 18:32:42.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.620" endtime="20201030 18:32:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.619" endtime="20201030 18:32:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.618" endtime="20201030 18:32:42.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.256" endtime="20201030 18:32:42.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.256" endtime="20201030 18:32:42.641"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.650" endtime="20201030 18:32:42.670"></status>
</kw>
<msg timestamp="20201030 18:32:42.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.648" endtime="20201030 18:32:42.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.671" endtime="20201030 18:32:42.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.674" endtime="20201030 18:32:42.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.645" endtime="20201030 18:32:42.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.643" endtime="20201030 18:32:42.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.683" endtime="20201030 18:32:42.968"></status>
</kw>
<msg timestamp="20201030 18:32:42.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.681" endtime="20201030 18:32:42.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.972" endtime="20201030 18:32:42.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.980" endtime="20201030 18:32:42.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.679" endtime="20201030 18:32:42.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.677" endtime="20201030 18:32:42.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.987" level="INFO">${RESULT} = [{'diff': 7.219500000000059e-05}, {'diff': 7.3069000000002e-05}, {'diff': 7.298700000000005e-05}, {'diff': 7.304199999999886e-05}, {'diff': 7.252800000000226e-05}, {'diff': 7.266699999999848e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:42.983" endtime="20201030 18:32:42.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.992" level="INFO">${ACCURACY} = {'diff': [7.219500000000059e-05, 7.3069000000002e-05, 7.298700000000005e-05, 7.304199999999886e-05, 7.252800000000226e-05, 7.266699999999848e-05, 7.216599999999851e-05, 7.288800000000012e-05, 7.259700...</msg>
<status status="PASS" starttime="20201030 18:32:42.988" endtime="20201030 18:32:42.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.996" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.995" endtime="20201030 18:32:42.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.999" level="INFO">VALUE: [7.219500000000059e-05, 7.3069000000002e-05, 7.298700000000005e-05, 7.304199999999886e-05, 7.252800000000226e-05, 7.266699999999848e-05, 7.216599999999851e-05, 7.288800000000012e-05, 7.259700000000063e-05, 7.247199999999704e-05, 7.292999999999883e-05, 7.284700000000088e-05, 7.215300000000188e-05, 7.27499999999999e-05, 7.209700000000013e-05, 7.234700000000038e-05, 7.204200000000133e-05, 7.263899999999934e-05, 7.227800000000201e-05, 7.259800000000011e-05, 7.259800000000011e-05, 7.263899999999934e-05, 7.213899999999884e-05, 7.287500000000002e-05, 7.252699999999931e-05, 7.216600000000198e-05, 7.21109999999997e-05, 7.215299999999841e-05, 7.247200000000051e-05, 7.209700000000013e-05, 7.29439999999984e-05, 7.251399999999922e-05, 7.22360000000033e-05, 7.252799999999879e-05, 7.254100000000235e-05, 7.277799999999904e-05, 7.279200000000208e-05, 7.252699999999931e-05, 7.30560000000019e-05, 7.284800000000036e-05, 7.222299999999973e-05, 7.302799999999929e-05, 7.2763e-05, 7.227700000000253e-05, 7.216599999999851e-05, 7.215299999999841e-05, 7.227799999999854e-05, 7.208300000000056e-05, 7.247199999999704e-05, 7.231900000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.997" endtime="20201030 18:32:43.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.993" endtime="20201030 18:32:43.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:43.004" endtime="20201030 18:32:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.002" endtime="20201030 18:32:43.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.001" endtime="20201030 18:32:43.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.642" endtime="20201030 18:32:43.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.641" endtime="20201030 18:32:43.024"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.033" endtime="20201030 18:32:43.052"></status>
</kw>
<msg timestamp="20201030 18:32:43.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.032" endtime="20201030 18:32:43.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.054" endtime="20201030 18:32:43.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.056" endtime="20201030 18:32:43.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.029" endtime="20201030 18:32:43.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.027" endtime="20201030 18:32:43.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.066" endtime="20201030 18:32:43.354"></status>
</kw>
<msg timestamp="20201030 18:32:43.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.064" endtime="20201030 18:32:43.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.358" endtime="20201030 18:32:43.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.366" endtime="20201030 18:32:43.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.061" endtime="20201030 18:32:43.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.060" endtime="20201030 18:32:43.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.373" level="INFO">${RESULT} = [{'diff': 7.397300000000148e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.348600000000108e-05}, {'diff': 7.345899999999794e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.327700000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:43.370" endtime="20201030 18:32:43.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.377" level="INFO">${ACCURACY} = {'diff': [7.397300000000148e-05, 7.313899999999984e-05, 7.348600000000108e-05, 7.345899999999794e-05, 7.390300000000016e-05, 7.327700000000006e-05, 7.386100000000145e-05, 7.37500000000009e-05, 7.34300...</msg>
<status status="PASS" starttime="20201030 18:32:43.374" endtime="20201030 18:32:43.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.382" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:43.381" endtime="20201030 18:32:43.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.384" level="INFO">VALUE: [7.397300000000148e-05, 7.313899999999984e-05, 7.348600000000108e-05, 7.345899999999794e-05, 7.390300000000016e-05, 7.327700000000006e-05, 7.386100000000145e-05, 7.37500000000009e-05, 7.34300000000028e-05, 7.392999999999983e-05, 7.313899999999984e-05, 7.402800000000029e-05, 7.366699999999948e-05, 7.31110000000007e-05, 7.324999999999693e-05, 7.312500000000027e-05, 7.394499999999887e-05, 7.3069999999998e-05, 7.383400000000179e-05, 7.404199999999986e-05, 7.387500000000102e-05, 7.366600000000001e-05, 7.350000000000065e-05, 7.319400000000212e-05, 7.386100000000145e-05, 7.356899999999902e-05, 7.309700000000113e-05, 7.327799999999954e-05, 7.36110000000012e-05, 7.384699999999841e-05, 7.401399999999725e-05, 7.386099999999798e-05, 7.351400000000022e-05, 7.372300000000123e-05, 7.352799999999979e-05, 7.347300000000098e-05, 7.359800000000111e-05, 7.404100000000038e-05, 7.384699999999841e-05, 7.347199999999804e-05, 7.31249999999968e-05, 7.402700000000081e-05, 7.366600000000001e-05, 7.34309999999988e-05, 7.397199999999854e-05, 7.337500000000052e-05, 7.397199999999854e-05, 7.352799999999979e-05, 7.309699999999766e-05, 7.372200000000176e-05]</msg>
<status status="PASS" starttime="20201030 18:32:43.383" endtime="20201030 18:32:43.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.378" endtime="20201030 18:32:43.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:43.389" endtime="20201030 18:32:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.388" endtime="20201030 18:32:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.386" endtime="20201030 18:32:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.025" endtime="20201030 18:32:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.025" endtime="20201030 18:32:43.410"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.419" endtime="20201030 18:32:43.439"></status>
</kw>
<msg timestamp="20201030 18:32:43.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.417" endtime="20201030 18:32:43.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.440" endtime="20201030 18:32:43.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.443" endtime="20201030 18:32:43.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.414" endtime="20201030 18:32:43.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.412" endtime="20201030 18:32:43.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.452" endtime="20201030 18:32:43.738"></status>
</kw>
<msg timestamp="20201030 18:32:43.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.451" endtime="20201030 18:32:43.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.742" endtime="20201030 18:32:43.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.750" endtime="20201030 18:32:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.448" endtime="20201030 18:32:43.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.446" endtime="20201030 18:32:43.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.757" level="INFO">${RESULT} = [{'diff': 7.440300000000066e-05}, {'diff': 7.469499999999962e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.434800000000186e-05}, {'diff': 7.494499999999987e-05}, {'diff': 7.441600000000076e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:43.754" endtime="20201030 18:32:43.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.761" level="INFO">${ACCURACY} = {'diff': [7.440300000000066e-05, 7.469499999999962e-05, 7.479200000000061e-05, 7.434800000000186e-05, 7.494499999999987e-05, 7.441600000000076e-05, 7.447199999999904e-05, 7.469400000000015e-05, 7.4596...</msg>
<status status="PASS" starttime="20201030 18:32:43.758" endtime="20201030 18:32:43.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.766" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:43.765" endtime="20201030 18:32:43.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.768" level="INFO">VALUE: [7.440300000000066e-05, 7.469499999999962e-05, 7.479200000000061e-05, 7.434800000000186e-05, 7.494499999999987e-05, 7.441600000000076e-05, 7.447199999999904e-05, 7.469400000000015e-05, 7.459699999999916e-05, 7.418000000000008e-05, 7.430600000000315e-05, 7.409699999999866e-05, 7.406899999999952e-05, 7.468100000000005e-05, 7.509699999999966e-05, 7.451300000000174e-05, 7.476400000000147e-05, 7.420900000000216e-05, 7.504200000000086e-05, 7.483399999999932e-05, 7.44029999999972e-05, 7.49310000000003e-05, 7.445899999999894e-05, 7.408300000000256e-05, 7.409700000000213e-05, 7.491699999999726e-05, 7.447200000000251e-05, 7.438899999999762e-05, 7.484699999999941e-05, 7.484699999999941e-05, 7.501399999999825e-05, 7.465299999999744e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.416699999999998e-05, 7.476400000000147e-05, 7.440300000000066e-05, 7.407000000000247e-05, 7.447299999999851e-05, 7.426400000000097e-05, 7.502700000000181e-05, 7.445799999999947e-05, 7.447199999999904e-05, 7.484699999999941e-05, 7.484699999999941e-05, 7.479200000000061e-05, 7.409700000000213e-05, 7.491700000000073e-05, 7.472199999999929e-05, 7.449999999999818e-05]</msg>
<status status="PASS" starttime="20201030 18:32:43.767" endtime="20201030 18:32:43.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.762" endtime="20201030 18:32:43.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:43.774" endtime="20201030 18:32:43.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.773" endtime="20201030 18:32:43.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.771" endtime="20201030 18:32:43.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.411" endtime="20201030 18:32:43.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.410" endtime="20201030 18:32:43.795"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.804" endtime="20201030 18:32:43.823"></status>
</kw>
<msg timestamp="20201030 18:32:43.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.802" endtime="20201030 18:32:43.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.824" endtime="20201030 18:32:43.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.827" endtime="20201030 18:32:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.799" endtime="20201030 18:32:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.797" endtime="20201030 18:32:43.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.836" endtime="20201030 18:32:44.122"></status>
</kw>
<msg timestamp="20201030 18:32:44.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:43.834" endtime="20201030 18:32:44.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:44.126" endtime="20201030 18:32:44.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.134" endtime="20201030 18:32:44.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.832" endtime="20201030 18:32:44.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.830" endtime="20201030 18:32:44.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.141" level="INFO">${RESULT} = [{'diff': 7.583300000000084e-05}, {'diff': 7.584700000000041e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.565300000000191e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:44.138" endtime="20201030 18:32:44.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:44.146" level="INFO">${ACCURACY} = {'diff': [7.583300000000084e-05, 7.584700000000041e-05, 7.577799999999857e-05, 7.529199999999764e-05, 7.55830000000006e-05, 7.565300000000191e-05, 7.572200000000029e-05, 7.523599999999936e-05, 7.59029...</msg>
<status status="PASS" starttime="20201030 18:32:44.142" endtime="20201030 18:32:44.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.150" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.149" endtime="20201030 18:32:44.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.153" level="INFO">VALUE: [7.583300000000084e-05, 7.584700000000041e-05, 7.577799999999857e-05, 7.529199999999764e-05, 7.55830000000006e-05, 7.565300000000191e-05, 7.572200000000029e-05, 7.523599999999936e-05, 7.59029999999987e-05, 7.50830000000001e-05, 7.507e-05, 7.595900000000044e-05, 7.536099999999948e-05, 7.508399999999957e-05, 7.561099999999973e-05, 7.57769999999991e-05, 7.601299999999978e-05, 7.508299999999662e-05, 7.520800000000022e-05, 7.551399999999875e-05, 7.544500000000037e-05, 7.570800000000072e-05, 7.59029999999987e-05, 7.590300000000216e-05, 7.579200000000161e-05, 7.509699999999966e-05, 7.569500000000062e-05, 7.511099999999923e-05, 7.565299999999844e-05, 7.568100000000105e-05, 7.595900000000044e-05, 7.534699999999991e-05, 7.57769999999991e-05, 7.519400000000065e-05, 7.559700000000016e-05, 7.559700000000016e-05, 7.54029999999982e-05, 7.50830000000001e-05, 7.509699999999966e-05, 7.59029999999987e-05, 7.574999999999943e-05, 7.568100000000105e-05, 7.511099999999923e-05, 7.572200000000029e-05, 7.508399999999957e-05, 7.595900000000044e-05, 7.540300000000166e-05, 7.513899999999837e-05, 7.581900000000127e-05, 7.602700000000281e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.151" endtime="20201030 18:32:44.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.147" endtime="20201030 18:32:44.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.164" endtime="20201030 18:32:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.163" endtime="20201030 18:32:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.162" endtime="20201030 18:32:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.796" endtime="20201030 18:32:44.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.795" endtime="20201030 18:32:44.185"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.194" endtime="20201030 18:32:44.213"></status>
</kw>
<msg timestamp="20201030 18:32:44.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.192" endtime="20201030 18:32:44.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.215" endtime="20201030 18:32:44.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.217" endtime="20201030 18:32:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.190" endtime="20201030 18:32:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.187" endtime="20201030 18:32:44.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.226" endtime="20201030 18:32:44.512"></status>
</kw>
<msg timestamp="20201030 18:32:44.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.225" endtime="20201030 18:32:44.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.517" endtime="20201030 18:32:44.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.525" endtime="20201030 18:32:44.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.222" endtime="20201030 18:32:44.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.220" endtime="20201030 18:32:44.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.531" level="INFO">${RESULT} = [{'diff': 7.624999999999993e-05}, {'diff': 7.615299999999894e-05}, {'diff': 7.647300000000051e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.702700000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:44.528" endtime="20201030 18:32:44.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:44.536" level="INFO">${ACCURACY} = {'diff': [7.624999999999993e-05, 7.615299999999894e-05, 7.647300000000051e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.702700000000035e-05, 7.684699999999794e-05, 7.616599999999904e-05, 7.62360...</msg>
<status status="PASS" starttime="20201030 18:32:44.532" endtime="20201030 18:32:44.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.540" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.539" endtime="20201030 18:32:44.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.543" level="INFO">VALUE: [7.624999999999993e-05, 7.615299999999894e-05, 7.647300000000051e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.702700000000035e-05, 7.684699999999794e-05, 7.616599999999904e-05, 7.623600000000036e-05, 7.634700000000091e-05, 7.62639999999995e-05, 7.609700000000066e-05, 7.656899999999855e-05, 7.633299999999787e-05, 7.701400000000025e-05, 7.640199999999972e-05, 7.624999999999993e-05, 7.688900000000012e-05, 7.687500000000055e-05, 7.622300000000026e-05, 7.692999999999936e-05, 7.690200000000022e-05, 7.647200000000104e-05, 7.615199999999947e-05, 7.702799999999982e-05, 7.640199999999972e-05, 7.655599999999846e-05, 7.627799999999907e-05, 7.643099999999833e-05, 7.679199999999914e-05, 7.618099999999808e-05, 7.677799999999957e-05, 7.634700000000091e-05, 7.679099999999967e-05, 7.638899999999962e-05, 7.647300000000051e-05, 7.64029999999992e-05, 7.61249999999998e-05, 7.626300000000003e-05, 7.683299999999837e-05, 7.69440000000024e-05, 7.622200000000079e-05, 7.620800000000122e-05, 7.686100000000098e-05, 7.633299999999787e-05, 7.627799999999907e-05, 7.65830000000016e-05, 7.641699999999876e-05, 7.680600000000218e-05, 7.655599999999846e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.541" endtime="20201030 18:32:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.536" endtime="20201030 18:32:44.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.548" endtime="20201030 18:32:44.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.546" endtime="20201030 18:32:44.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.545" endtime="20201030 18:32:44.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.186" endtime="20201030 18:32:44.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.185" endtime="20201030 18:32:44.568"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.577" endtime="20201030 18:32:44.600"></status>
</kw>
<msg timestamp="20201030 18:32:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.575" endtime="20201030 18:32:44.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.601" endtime="20201030 18:32:44.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.604" endtime="20201030 18:32:44.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.573" endtime="20201030 18:32:44.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.571" endtime="20201030 18:32:44.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.613" endtime="20201030 18:32:44.898"></status>
</kw>
<msg timestamp="20201030 18:32:44.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.611" endtime="20201030 18:32:44.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.902" endtime="20201030 18:32:44.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.910" endtime="20201030 18:32:44.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.609" endtime="20201030 18:32:44.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.607" endtime="20201030 18:32:44.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.917" level="INFO">${RESULT} = [{'diff': 7.762499999999783e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.786099999999851e-05}, {'diff': 7.783299999999937e-05}, {'diff': 7.754100000000042e-05}, {'diff': 7.80129999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:44.914" endtime="20201030 18:32:44.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:44.921" level="INFO">${ACCURACY} = {'diff': [7.762499999999783e-05, 7.702799999999982e-05, 7.786099999999851e-05, 7.783299999999937e-05, 7.754100000000042e-05, 7.80129999999983e-05, 7.737500000000105e-05, 7.759700000000216e-05, 7.75419...</msg>
<status status="PASS" starttime="20201030 18:32:44.918" endtime="20201030 18:32:44.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.926" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.925" endtime="20201030 18:32:44.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.928" level="INFO">VALUE: [7.762499999999783e-05, 7.702799999999982e-05, 7.786099999999851e-05, 7.783299999999937e-05, 7.754100000000042e-05, 7.80129999999983e-05, 7.737500000000105e-05, 7.759700000000216e-05, 7.754199999999989e-05, 7.776399999999753e-05, 7.801399999999778e-05, 7.723600000000136e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.715299999999994e-05, 7.786100000000198e-05, 7.72640000000005e-05, 7.75969999999987e-05, 7.781999999999928e-05, 7.745800000000247e-05, 7.71380000000009e-05, 7.77770000000011e-05, 7.719400000000265e-05, 7.715200000000047e-05, 7.79030000000007e-05, 7.718099999999908e-05, 7.761099999999826e-05, 7.765299999999697e-05, 7.779200000000014e-05, 7.7457999999999e-05, 7.734700000000191e-05, 7.759800000000164e-05, 7.71250000000008e-05, 7.752799999999685e-05, 7.777800000000057e-05, 7.70839999999981e-05, 7.744399999999943e-05, 7.713799999999743e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.747200000000204e-05, 7.74030000000002e-05, 7.797199999999907e-05, 7.793099999999983e-05, 7.729199999999964e-05, 7.784699999999894e-05, 7.723600000000136e-05, 7.738900000000062e-05, 7.734800000000139e-05, 7.706999999999853e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.927" endtime="20201030 18:32:44.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.922" endtime="20201030 18:32:44.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.934" endtime="20201030 18:32:44.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.932" endtime="20201030 18:32:44.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.931" endtime="20201030 18:32:44.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.569" endtime="20201030 18:32:44.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.569" endtime="20201030 18:32:44.955"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.963" endtime="20201030 18:32:44.982"></status>
</kw>
<msg timestamp="20201030 18:32:44.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.962" endtime="20201030 18:32:44.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.984" endtime="20201030 18:32:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.986" endtime="20201030 18:32:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.959" endtime="20201030 18:32:44.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.957" endtime="20201030 18:32:44.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.995" endtime="20201030 18:32:45.280"></status>
</kw>
<msg timestamp="20201030 18:32:45.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:44.994" endtime="20201030 18:32:45.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:45.284" endtime="20201030 18:32:45.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.292" endtime="20201030 18:32:45.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.991" endtime="20201030 18:32:45.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.990" endtime="20201030 18:32:45.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.299" level="INFO">${RESULT} = [{'diff': 7.847199999999957e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.897200000000007e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.850000000000218e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:45.296" endtime="20201030 18:32:45.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.308" level="INFO">${ACCURACY} = {'diff': [7.847199999999957e-05, 7.8764000000002e-05, 7.897200000000007e-05, 7.856900000000056e-05, 7.830600000000021e-05, 7.850000000000218e-05, 7.808299999999962e-05, 7.820899999999922e-05, 7.870899...</msg>
<status status="PASS" starttime="20201030 18:32:45.301" endtime="20201030 18:32:45.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.316" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.315" endtime="20201030 18:32:45.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.323" level="INFO">VALUE: [7.847199999999957e-05, 7.8764000000002e-05, 7.897200000000007e-05, 7.856900000000056e-05, 7.830600000000021e-05, 7.850000000000218e-05, 7.808299999999962e-05, 7.820899999999922e-05, 7.870899999999972e-05, 7.820799999999975e-05, 7.897200000000007e-05, 7.859799999999917e-05, 7.902799999999835e-05, 7.897200000000007e-05, 7.901300000000278e-05, 7.833299999999987e-05, 7.833299999999987e-05, 7.851399999999828e-05, 7.854100000000142e-05, 7.827800000000107e-05, 7.890299999999822e-05, 7.80969999999992e-05, 7.843100000000033e-05, 7.836099999999901e-05, 7.858300000000012e-05, 7.816699999999704e-05, 7.898699999999911e-05, 7.838900000000162e-05, 7.833399999999935e-05, 7.849999999999871e-05, 7.86389999999984e-05, 7.880600000000071e-05, 7.867999999999764e-05, 7.887499999999908e-05, 7.82909999999977e-05, 7.847199999999957e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.847299999999904e-05, 7.829200000000064e-05, 7.893100000000083e-05, 7.837500000000205e-05, 7.866700000000101e-05, 7.900000000000268e-05, 7.861199999999874e-05, 7.884799999999942e-05, 7.829100000000117e-05, 7.847200000000304e-05, 7.866600000000154e-05, 7.829100000000117e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.318" endtime="20201030 18:32:45.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.309" endtime="20201030 18:32:45.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.330" endtime="20201030 18:32:45.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.327" endtime="20201030 18:32:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.325" endtime="20201030 18:32:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.956" endtime="20201030 18:32:45.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.955" endtime="20201030 18:32:45.352"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.361" endtime="20201030 18:32:45.380"></status>
</kw>
<msg timestamp="20201030 18:32:45.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.359" endtime="20201030 18:32:45.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.382" endtime="20201030 18:32:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.384" endtime="20201030 18:32:45.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.357" endtime="20201030 18:32:45.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.354" endtime="20201030 18:32:45.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.394" endtime="20201030 18:32:45.681"></status>
</kw>
<msg timestamp="20201030 18:32:45.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.392" endtime="20201030 18:32:45.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.686" endtime="20201030 18:32:45.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.694" endtime="20201030 18:32:45.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.389" endtime="20201030 18:32:45.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.388" endtime="20201030 18:32:45.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.701" level="INFO">${RESULT} = [{'diff': 7.983300000000138e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.94169999999983e-05}, {'diff': 7.988899999999965e-05}, {'diff': 7.986100000000051e-05}, {'diff': 7.961100000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:45.698" endtime="20201030 18:32:45.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.705" level="INFO">${ACCURACY} = {'diff': [7.983300000000138e-05, 7.933300000000088e-05, 7.94169999999983e-05, 7.988899999999965e-05, 7.986100000000051e-05, 7.961100000000026e-05, 7.99450000000014e-05, 7.99450000000014e-05, 7.9249999...</msg>
<status status="PASS" starttime="20201030 18:32:45.702" endtime="20201030 18:32:45.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.710" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.709" endtime="20201030 18:32:45.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.712" level="INFO">VALUE: [7.983300000000138e-05, 7.933300000000088e-05, 7.94169999999983e-05, 7.988899999999965e-05, 7.986100000000051e-05, 7.961100000000026e-05, 7.99450000000014e-05, 7.99450000000014e-05, 7.924999999999946e-05, 7.934700000000044e-05, 8.000000000000021e-05, 7.980499999999877e-05, 7.916700000000151e-05, 7.973699999999986e-05, 7.983300000000138e-05, 7.923599999999989e-05, 7.929199999999817e-05, 7.99580000000015e-05, 7.91250000000028e-05, 8.004099999999945e-05, 7.997200000000107e-05, 7.922200000000032e-05, 7.938900000000262e-05, 7.92779999999986e-05, 7.911099999999976e-05, 7.94030000000022e-05, 7.94030000000022e-05, 7.933400000000035e-05, 7.942999999999839e-05, 7.952799999999885e-05, 7.965299999999897e-05, 7.966599999999907e-05, 7.95970000000007e-05, 7.9458000000001e-05, 7.927800000000207e-05, 7.941700000000176e-05, 7.915299999999847e-05, 7.970800000000125e-05, 8.004200000000239e-05, 7.906899999999759e-05, 7.90970000000002e-05, 7.938899999999915e-05, 7.95840000000006e-05, 7.982000000000128e-05, 7.911199999999924e-05, 7.959800000000017e-05, 7.90840000000001e-05, 7.991599999999932e-05, 7.984700000000094e-05, 8.002800000000282e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.711" endtime="20201030 18:32:45.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.706" endtime="20201030 18:32:45.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.718" endtime="20201030 18:32:45.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.716" endtime="20201030 18:32:45.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.715" endtime="20201030 18:32:45.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.353" endtime="20201030 18:32:45.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.352" endtime="20201030 18:32:45.738"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.747" endtime="20201030 18:32:45.772"></status>
</kw>
<msg timestamp="20201030 18:32:45.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.746" endtime="20201030 18:32:45.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.776" endtime="20201030 18:32:45.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.781" endtime="20201030 18:32:45.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.743" endtime="20201030 18:32:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.741" endtime="20201030 18:32:45.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.801" endtime="20201030 18:32:46.096"></status>
</kw>
<msg timestamp="20201030 18:32:46.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021232181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.798" endtime="20201030 18:32:46.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021232181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.100" endtime="20201030 18:32:46.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.109" endtime="20201030 18:32:46.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.792" endtime="20201030 18:32:46.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.788" endtime="20201030 18:32:46.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.116" level="INFO">${RESULT} = [{'diff': 8.025000000000046e-05}, {'diff': 8.048600000000114e-05}, {'diff': 8.069500000000215e-05}, {'diff': 8.045900000000147e-05}, {'diff': 8.066600000000007e-05}, {'diff': 8.072199999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:46.113" endtime="20201030 18:32:46.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.121" level="INFO">${ACCURACY} = {'diff': [8.025000000000046e-05, 8.048600000000114e-05, 8.069500000000215e-05, 8.045900000000147e-05, 8.066600000000007e-05, 8.072199999999835e-05, 8.104100000000045e-05, 8.047200000000157e-05, 8.0846...</msg>
<status status="PASS" starttime="20201030 18:32:46.117" endtime="20201030 18:32:46.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.126" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.125" endtime="20201030 18:32:46.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.129" level="INFO">VALUE: [8.025000000000046e-05, 8.048600000000114e-05, 8.069500000000215e-05, 8.045900000000147e-05, 8.066600000000007e-05, 8.072199999999835e-05, 8.104100000000045e-05, 8.047200000000157e-05, 8.084699999999848e-05, 8.022200000000132e-05, 8.08329999999989e-05, 8.02779999999996e-05, 8.079199999999967e-05, 8.051299999999734e-05, 8.037500000000058e-05, 8.059699999999823e-05, 8.02230000000008e-05, 8.052799999999985e-05, 8.08190000000028e-05, 8.072199999999835e-05, 8.027700000000013e-05, 8.016700000000251e-05, 8.074999999999749e-05, 8.033300000000188e-05, 8.034699999999798e-05, 8.098600000000164e-05, 8.052799999999985e-05, 8.016699999999904e-05, 8.007000000000153e-05, 8.07780000000001e-05, 8.07230000000013e-05, 8.0458999999998e-05, 8.040299999999972e-05, 8.065299999999997e-05, 8.105500000000002e-05, 8.008299999999816e-05, 8.022200000000132e-05, 8.036100000000101e-05, 8.02779999999996e-05, 8.019399999999871e-05, 8.072199999999835e-05, 8.104199999999992e-05, 8.061100000000126e-05, 8.01389999999999e-05, 8.055599999999899e-05, 8.02779999999996e-05, 8.038900000000015e-05, 8.072299999999782e-05, 8.07780000000001e-05, 8.069399999999921e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.127" endtime="20201030 18:32:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.122" endtime="20201030 18:32:46.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.135" endtime="20201030 18:32:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.133" endtime="20201030 18:32:46.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.132" endtime="20201030 18:32:46.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.739" endtime="20201030 18:32:46.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.739" endtime="20201030 18:32:46.155"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.164" endtime="20201030 18:32:46.184"></status>
</kw>
<msg timestamp="20201030 18:32:46.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.163" endtime="20201030 18:32:46.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.186" endtime="20201030 18:32:46.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.189" endtime="20201030 18:32:46.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.160" endtime="20201030 18:32:46.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.158" endtime="20201030 18:32:46.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.198" endtime="20201030 18:32:46.483"></status>
</kw>
<msg timestamp="20201030 18:32:46.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.196" endtime="20201030 18:32:46.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.487" endtime="20201030 18:32:46.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.496" endtime="20201030 18:32:46.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.194" endtime="20201030 18:32:46.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.192" endtime="20201030 18:32:46.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.503" level="INFO">${RESULT} = [{'diff': 8.140299999999726e-05}, {'diff': 8.120899999999875e-05}, {'diff': 8.190199999999828e-05}, {'diff': 8.122200000000232e-05}, {'diff': 8.140200000000125e-05}, {'diff': 8.11390000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:46.499" endtime="20201030 18:32:46.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.508" level="INFO">${ACCURACY} = {'diff': [8.140299999999726e-05, 8.120899999999875e-05, 8.190199999999828e-05, 8.122200000000232e-05, 8.140200000000125e-05, 8.11390000000009e-05, 8.169400000000021e-05, 8.116700000000004e-05, 8.14580...</msg>
<status status="PASS" starttime="20201030 18:32:46.504" endtime="20201030 18:32:46.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.513" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.511" endtime="20201030 18:32:46.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.515" level="INFO">VALUE: [8.140299999999726e-05, 8.120899999999875e-05, 8.190199999999828e-05, 8.122200000000232e-05, 8.140200000000125e-05, 8.11390000000009e-05, 8.169400000000021e-05, 8.116700000000004e-05, 8.1458000000003e-05, 8.190300000000122e-05, 8.144399999999996e-05, 8.134699999999898e-05, 8.204200000000092e-05, 8.108300000000263e-05, 8.186099999999905e-05, 8.138900000000115e-05, 8.140199999999778e-05, 8.179099999999773e-05, 8.199999999999874e-05, 8.188899999999819e-05, 8.113800000000143e-05, 8.168000000000064e-05, 8.19719999999996e-05, 8.129200000000017e-05, 8.19719999999996e-05, 8.123599999999842e-05, 8.179200000000067e-05, 8.134699999999898e-05, 8.172199999999935e-05, 8.17780000000011e-05, 8.12780000000006e-05, 8.169400000000021e-05, 8.190299999999776e-05, 8.136099999999855e-05, 8.150000000000171e-05, 8.170799999999978e-05, 8.142999999999692e-05, 8.126400000000103e-05, 8.140300000000072e-05, 8.108299999999916e-05, 8.136099999999855e-05, 8.13329999999994e-05, 8.173600000000239e-05, 8.134699999999898e-05, 8.120900000000222e-05, 8.147299999999857e-05, 8.14170000000003e-05, 8.127799999999713e-05, 8.152800000000085e-05, 8.1458999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.514" endtime="20201030 18:32:46.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.509" endtime="20201030 18:32:46.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.520" endtime="20201030 18:32:46.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.519" endtime="20201030 18:32:46.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.517" endtime="20201030 18:32:46.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.156" endtime="20201030 18:32:46.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.156" endtime="20201030 18:32:46.541"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.550" endtime="20201030 18:32:46.570"></status>
</kw>
<msg timestamp="20201030 18:32:46.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.548" endtime="20201030 18:32:46.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.571" endtime="20201030 18:32:46.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.574" endtime="20201030 18:32:46.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.546" endtime="20201030 18:32:46.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.544" endtime="20201030 18:32:46.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.583" endtime="20201030 18:32:46.871"></status>
</kw>
<msg timestamp="20201030 18:32:46.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.582" endtime="20201030 18:32:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.876" endtime="20201030 18:32:46.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.884" endtime="20201030 18:32:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.579" endtime="20201030 18:32:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.577" endtime="20201030 18:32:46.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.891" level="INFO">${RESULT} = [{'diff': 8.251399999999881e-05}, {'diff': 8.219399999999724e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.268099999999765e-05}, {'diff': 8.251399999999881e-05}, {'diff': 8.213899999999844e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:46.888" endtime="20201030 18:32:46.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.895" level="INFO">${ACCURACY} = {'diff': [8.251399999999881e-05, 8.219399999999724e-05, 8.236099999999955e-05, 8.268099999999765e-05, 8.251399999999881e-05, 8.213899999999844e-05, 8.304200000000192e-05, 8.231899999999737e-05, 8.2957...</msg>
<status status="PASS" starttime="20201030 18:32:46.892" endtime="20201030 18:32:46.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.900" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.899" endtime="20201030 18:32:46.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.902" level="INFO">VALUE: [8.251399999999881e-05, 8.219399999999724e-05, 8.236099999999955e-05, 8.268099999999765e-05, 8.251399999999881e-05, 8.213899999999844e-05, 8.304200000000192e-05, 8.231899999999737e-05, 8.295799999999756e-05, 8.273599999999992e-05, 8.218100000000061e-05, 8.286199999999952e-05, 8.222299999999932e-05, 8.240300000000172e-05, 8.26659999999986e-05, 8.219400000000071e-05, 8.22910000000017e-05, 8.223599999999942e-05, 8.265199999999903e-05, 8.29590000000005e-05, 8.219400000000071e-05, 8.216700000000104e-05, 8.295800000000103e-05, 8.22919999999977e-05, 8.215300000000147e-05, 8.226400000000203e-05, 8.284799999999995e-05, 8.22919999999977e-05, 8.251399999999881e-05, 8.274999999999949e-05, 8.283299999999744e-05, 8.274999999999949e-05, 8.254099999999848e-05, 8.272200000000035e-05, 8.223599999999942e-05, 8.297199999999713e-05, 8.295800000000103e-05, 8.216700000000104e-05, 8.277799999999863e-05, 8.29720000000006e-05, 8.304199999999845e-05, 8.208399999999963e-05, 8.224999999999899e-05, 8.240300000000172e-05, 8.257000000000056e-05, 8.208399999999963e-05, 8.216600000000157e-05, 8.294400000000146e-05, 8.222199999999985e-05, 8.288899999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.901" endtime="20201030 18:32:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.896" endtime="20201030 18:32:46.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.908" endtime="20201030 18:32:46.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.906" endtime="20201030 18:32:46.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.905" endtime="20201030 18:32:46.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.542" endtime="20201030 18:32:46.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.541" endtime="20201030 18:32:46.928"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.937" endtime="20201030 18:32:46.959"></status>
</kw>
<msg timestamp="20201030 18:32:46.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.936" endtime="20201030 18:32:46.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.960" endtime="20201030 18:32:46.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.963" endtime="20201030 18:32:46.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.933" endtime="20201030 18:32:46.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.931" endtime="20201030 18:32:46.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.972" endtime="20201030 18:32:47.259"></status>
</kw>
<msg timestamp="20201030 18:32:47.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.971" endtime="20201030 18:32:47.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.263" endtime="20201030 18:32:47.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.272" endtime="20201030 18:32:47.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.968" endtime="20201030 18:32:47.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.966" endtime="20201030 18:32:47.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.278" level="INFO">${RESULT} = [{'diff': 8.39590000000015e-05}, {'diff': 8.334800000000045e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.39720000000016e-05}, {'diff': 8.354200000000242e-05}, {'diff': 8.37919999999992e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:32:47.275" endtime="20201030 18:32:47.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.283" level="INFO">${ACCURACY} = {'diff': [8.39590000000015e-05, 8.334800000000045e-05, 8.31110000000003e-05, 8.39720000000016e-05, 8.354200000000242e-05, 8.37919999999992e-05, 8.352799999999938e-05, 8.38330000000019e-05, 8.311100000...</msg>
<status status="PASS" starttime="20201030 18:32:47.279" endtime="20201030 18:32:47.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.287" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.286" endtime="20201030 18:32:47.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.290" level="INFO">VALUE: [8.39590000000015e-05, 8.334800000000045e-05, 8.31110000000003e-05, 8.39720000000016e-05, 8.354200000000242e-05, 8.37919999999992e-05, 8.352799999999938e-05, 8.38330000000019e-05, 8.31110000000003e-05, 8.379200000000267e-05, 8.375000000000049e-05, 8.373600000000092e-05, 8.322299999999686e-05, 8.30980000000002e-05, 8.312499999999987e-05, 8.327799999999913e-05, 8.359699999999776e-05, 8.313799999999996e-05, 8.329099999999923e-05, 8.36659999999996e-05, 8.402799999999988e-05, 8.345800000000153e-05, 8.404199999999945e-05, 8.322199999999738e-05, 8.37919999999992e-05, 8.340300000000272e-05, 8.322199999999738e-05, 8.324999999999999e-05, 8.323599999999695e-05, 8.372199999999788e-05, 8.398700000000064e-05, 8.343100000000186e-05, 8.405499999999955e-05, 8.383299999999844e-05, 8.309700000000073e-05, 8.309699999999726e-05, 8.350000000000024e-05, 8.388900000000019e-05, 8.308299999999769e-05, 8.408399999999816e-05, 8.39590000000015e-05, 8.312499999999987e-05, 8.333400000000088e-05, 8.368099999999865e-05, 8.37919999999992e-05, 8.323600000000042e-05, 8.309799999999673e-05, 8.379099999999973e-05, 8.334700000000098e-05, 8.368000000000264e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.288" endtime="20201030 18:32:47.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.284" endtime="20201030 18:32:47.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.296" endtime="20201030 18:32:47.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.294" endtime="20201030 18:32:47.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.293" endtime="20201030 18:32:47.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.929" endtime="20201030 18:32:47.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.929" endtime="20201030 18:32:47.317"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.326" endtime="20201030 18:32:47.345"></status>
</kw>
<msg timestamp="20201030 18:32:47.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.324" endtime="20201030 18:32:47.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.347" endtime="20201030 18:32:47.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.349" endtime="20201030 18:32:47.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.321" endtime="20201030 18:32:47.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.319" endtime="20201030 18:32:47.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.359" endtime="20201030 18:32:47.645"></status>
</kw>
<msg timestamp="20201030 18:32:47.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.357" endtime="20201030 18:32:47.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.649" endtime="20201030 18:32:47.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.658" endtime="20201030 18:32:47.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.355" endtime="20201030 18:32:47.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.353" endtime="20201030 18:32:47.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.665" level="INFO">${RESULT} = [{'diff': 8.490199999999781e-05}, {'diff': 8.502699999999794e-05}, {'diff': 8.472199999999888e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.4846999999999e-05}, {'diff': 8.504200000000045e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:47.661" endtime="20201030 18:32:47.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.670" level="INFO">${ACCURACY} = {'diff': [8.490199999999781e-05, 8.502699999999794e-05, 8.472199999999888e-05, 8.433299999999894e-05, 8.4846999999999e-05, 8.504200000000045e-05, 8.469500000000268e-05, 8.458300000000266e-05, 8.502800...</msg>
<status status="PASS" starttime="20201030 18:32:47.666" endtime="20201030 18:32:47.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.675" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.674" endtime="20201030 18:32:47.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.677" level="INFO">VALUE: [8.490199999999781e-05, 8.502699999999794e-05, 8.472199999999888e-05, 8.433299999999894e-05, 8.4846999999999e-05, 8.504200000000045e-05, 8.469500000000268e-05, 8.458300000000266e-05, 8.502800000000088e-05, 8.506999999999959e-05, 8.437499999999765e-05, 8.484800000000195e-05, 8.40980000000012e-05, 8.438900000000069e-05, 8.423600000000142e-05, 8.4846999999999e-05, 8.411099999999783e-05, 8.455500000000005e-05, 8.41110000000013e-05, 8.43469999999985e-05, 8.458299999999919e-05, 8.44309999999994e-05, 8.476400000000106e-05, 8.469500000000268e-05, 8.416699999999958e-05, 8.438900000000069e-05, 8.486099999999858e-05, 8.502799999999741e-05, 8.46530000000005e-05, 8.463799999999799e-05, 8.427700000000066e-05, 8.409699999999826e-05, 8.479100000000073e-05, 8.477700000000116e-05, 8.481899999999987e-05, 8.416699999999958e-05, 8.458299999999919e-05, 8.426399999999709e-05, 8.427800000000013e-05, 8.441699999999983e-05, 8.434700000000198e-05, 8.470899999999879e-05, 8.480599999999977e-05, 8.459799999999823e-05, 8.434800000000145e-05, 8.451399999999734e-05, 8.433299999999894e-05, 8.49720000000026e-05, 8.425000000000099e-05, 8.433299999999894e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.676" endtime="20201030 18:32:47.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.671" endtime="20201030 18:32:47.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.682" endtime="20201030 18:32:47.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.681" endtime="20201030 18:32:47.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.680" endtime="20201030 18:32:47.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.318" endtime="20201030 18:32:47.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.317" endtime="20201030 18:32:47.703"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.712" endtime="20201030 18:32:47.732"></status>
</kw>
<msg timestamp="20201030 18:32:47.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.711" endtime="20201030 18:32:47.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.733" endtime="20201030 18:32:47.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.736" endtime="20201030 18:32:47.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.708" endtime="20201030 18:32:47.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.706" endtime="20201030 18:32:47.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.745" endtime="20201030 18:32:48.033"></status>
</kw>
<msg timestamp="20201030 18:32:48.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.744" endtime="20201030 18:32:48.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.037" endtime="20201030 18:32:48.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.045" endtime="20201030 18:32:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.741" endtime="20201030 18:32:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.739" endtime="20201030 18:32:48.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.052" level="INFO">${RESULT} = [{'diff': 8.522299999999886e-05}, {'diff': 8.543000000000092e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.579099999999826e-05}, {'diff': 8.595800000000056e-05}, {'diff': 8.583300000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:48.049" endtime="20201030 18:32:48.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.056" level="INFO">${ACCURACY} = {'diff': [8.522299999999886e-05, 8.543000000000092e-05, 8.53469999999995e-05, 8.579099999999826e-05, 8.595800000000056e-05, 8.583300000000044e-05, 8.605600000000102e-05, 8.547199999999963e-05, 8.54859...</msg>
<status status="PASS" starttime="20201030 18:32:48.053" endtime="20201030 18:32:48.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.061" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.060" endtime="20201030 18:32:48.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.064" level="INFO">VALUE: [8.522299999999886e-05, 8.543000000000092e-05, 8.53469999999995e-05, 8.579099999999826e-05, 8.595800000000056e-05, 8.583300000000044e-05, 8.605600000000102e-05, 8.547199999999963e-05, 8.54859999999992e-05, 8.559699999999976e-05, 8.597200000000013e-05, 8.54310000000004e-05, 8.572199999999988e-05, 8.592999999999795e-05, 8.552800000000138e-05, 8.558300000000019e-05, 8.572299999999936e-05, 8.522300000000232e-05, 8.522300000000232e-05, 8.512500000000187e-05, 8.551400000000181e-05, 8.552699999999844e-05, 8.541599999999788e-05, 8.508299999999969e-05, 8.54859999999992e-05, 8.526400000000156e-05, 8.552800000000138e-05, 8.597200000000013e-05, 8.516700000000058e-05, 8.566700000000108e-05, 8.582000000000034e-05, 8.562500000000237e-05, 8.558399999999966e-05, 8.550000000000224e-05, 8.588900000000219e-05, 8.51660000000011e-05, 8.606900000000112e-05, 8.520799999999981e-05, 8.54310000000004e-05, 8.552799999999791e-05, 8.529199999999723e-05, 8.590299999999829e-05, 8.508299999999969e-05, 8.591700000000133e-05, 8.5847e-05, 8.540299999999779e-05, 8.529100000000123e-05, 8.554199999999748e-05, 8.595800000000056e-05, 8.508299999999969e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.062" endtime="20201030 18:32:48.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.057" endtime="20201030 18:32:48.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.069" endtime="20201030 18:32:48.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.067" endtime="20201030 18:32:48.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.066" endtime="20201030 18:32:48.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.704" endtime="20201030 18:32:48.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.704" endtime="20201030 18:32:48.090"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.099" endtime="20201030 18:32:48.122"></status>
</kw>
<msg timestamp="20201030 18:32:48.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.097" endtime="20201030 18:32:48.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.124" endtime="20201030 18:32:48.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.126" endtime="20201030 18:32:48.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.094" endtime="20201030 18:32:48.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.092" endtime="20201030 18:32:48.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.136" endtime="20201030 18:32:48.422"></status>
</kw>
<msg timestamp="20201030 18:32:48.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.134" endtime="20201030 18:32:48.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.426" endtime="20201030 18:32:48.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.435" endtime="20201030 18:32:48.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.131" endtime="20201030 18:32:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.130" endtime="20201030 18:32:48.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.442" level="INFO">${RESULT} = [{'diff': 8.629099999999876e-05}, {'diff': 8.704200000000245e-05}, {'diff': 8.668099999999818e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.680600000000177e-05}, {'diff': 8.701399999999984e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:48.438" endtime="20201030 18:32:48.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.446" level="INFO">${ACCURACY} = {'diff': [8.629099999999876e-05, 8.704200000000245e-05, 8.668099999999818e-05, 8.645800000000106e-05, 8.680600000000177e-05, 8.701399999999984e-05, 8.697199999999766e-05, 8.656899999999815e-05, 8.6193...</msg>
<status status="PASS" starttime="20201030 18:32:48.443" endtime="20201030 18:32:48.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.450" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.449" endtime="20201030 18:32:48.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.453" level="INFO">VALUE: [8.629099999999876e-05, 8.704200000000245e-05, 8.668099999999818e-05, 8.645800000000106e-05, 8.680600000000177e-05, 8.701399999999984e-05, 8.697199999999766e-05, 8.656899999999815e-05, 8.619399999999777e-05, 8.665199999999956e-05, 8.632000000000084e-05, 8.692999999999895e-05, 8.609700000000026e-05, 8.665299999999904e-05, 8.63470000000005e-05, 8.683300000000144e-05, 8.648599999999673e-05, 8.669400000000174e-05, 8.609700000000026e-05, 8.616700000000158e-05, 8.684800000000048e-05, 8.637499999999965e-05, 8.694399999999852e-05, 8.613899999999897e-05, 8.620899999999682e-05, 8.686100000000058e-05, 8.677699999999969e-05, 8.636100000000008e-05, 8.649999999999977e-05, 8.701399999999984e-05, 8.697199999999766e-05, 8.609700000000026e-05, 8.622200000000038e-05, 8.620800000000081e-05, 8.6847000000001e-05, 8.670899999999732e-05, 8.633299999999747e-05, 8.690299999999929e-05, 8.651399999999934e-05, 8.702799999999941e-05, 8.643000000000192e-05, 8.666599999999913e-05, 8.647200000000063e-05, 8.636100000000008e-05, 8.633299999999747e-05, 8.651400000000281e-05, 8.691700000000233e-05, 8.656899999999815e-05, 8.658300000000119e-05, 8.616700000000158e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.452" endtime="20201030 18:32:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.447" endtime="20201030 18:32:48.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.504" endtime="20201030 18:32:48.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.502" endtime="20201030 18:32:48.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.501" endtime="20201030 18:32:48.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.091" endtime="20201030 18:32:48.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.090" endtime="20201030 18:32:48.524"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.533" endtime="20201030 18:32:48.554"></status>
</kw>
<msg timestamp="20201030 18:32:48.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.532" endtime="20201030 18:32:48.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.555" endtime="20201030 18:32:48.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.558" endtime="20201030 18:32:48.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.529" endtime="20201030 18:32:48.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.527" endtime="20201030 18:32:48.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.567" endtime="20201030 18:32:48.852"></status>
</kw>
<msg timestamp="20201030 18:32:48.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020189944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.565" endtime="20201030 18:32:48.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020189944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.857" endtime="20201030 18:32:48.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.865" endtime="20201030 18:32:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.563" endtime="20201030 18:32:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.561" endtime="20201030 18:32:48.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.872" level="INFO">${RESULT} = [{'diff': 8.776399999999712e-05}, {'diff': 8.74860000000012e-05}, {'diff': 8.741599999999988e-05}, {'diff': 8.798599999999823e-05}, {'diff': 8.784699999999854e-05}, {'diff': 8.802799999999694e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:48.869" endtime="20201030 18:32:48.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.877" level="INFO">${ACCURACY} = {'diff': [8.776399999999712e-05, 8.74860000000012e-05, 8.741599999999988e-05, 8.798599999999823e-05, 8.784699999999854e-05, 8.802799999999694e-05, 8.74310000000024e-05, 8.800000000000127e-05, 8.741599...</msg>
<status status="PASS" starttime="20201030 18:32:48.873" endtime="20201030 18:32:48.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.881" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.880" endtime="20201030 18:32:48.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.884" level="INFO">VALUE: [8.776399999999712e-05, 8.74860000000012e-05, 8.741599999999988e-05, 8.798599999999823e-05, 8.784699999999854e-05, 8.802799999999694e-05, 8.74310000000024e-05, 8.800000000000127e-05, 8.741599999999988e-05, 8.770900000000179e-05, 8.774999999999755e-05, 8.805500000000008e-05, 8.74860000000012e-05, 8.706999999999812e-05, 8.786100000000158e-05, 8.751400000000034e-05, 8.763900000000047e-05, 8.722199999999791e-05, 8.715299999999954e-05, 8.711099999999736e-05, 8.777800000000016e-05, 8.76669999999996e-05, 8.773600000000145e-05, 8.733399999999794e-05, 8.720900000000129e-05, 8.783399999999844e-05, 8.772300000000136e-05, 8.797199999999866e-05, 8.762499999999743e-05, 8.795800000000256e-05, 8.720800000000181e-05, 8.748599999999773e-05, 8.73470000000015e-05, 8.755599999999905e-05, 8.708300000000169e-05, 8.765300000000004e-05, 8.777800000000016e-05, 8.786099999999811e-05, 8.71250000000004e-05, 8.793099999999943e-05, 8.758400000000166e-05, 8.76799999999997e-05, 8.766600000000013e-05, 8.720800000000181e-05, 8.780499999999983e-05, 8.78189999999994e-05, 8.722200000000138e-05, 8.74860000000012e-05, 8.740299999999979e-05, 8.709699999999779e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.883" endtime="20201030 18:32:48.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.878" endtime="20201030 18:32:48.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.889" endtime="20201030 18:32:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.887" endtime="20201030 18:32:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.886" endtime="20201030 18:32:48.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.525" endtime="20201030 18:32:48.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.525" endtime="20201030 18:32:48.910"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.920" endtime="20201030 18:32:48.940"></status>
</kw>
<msg timestamp="20201030 18:32:48.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.917" endtime="20201030 18:32:48.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.942" endtime="20201030 18:32:48.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.944" endtime="20201030 18:32:48.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.915" endtime="20201030 18:32:48.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.912" endtime="20201030 18:32:48.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.954" endtime="20201030 18:32:49.241"></status>
</kw>
<msg timestamp="20201030 18:32:49.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021029181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.952" endtime="20201030 18:32:49.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021029181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.246" endtime="20201030 18:32:49.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.254" endtime="20201030 18:32:49.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.949" endtime="20201030 18:32:49.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.948" endtime="20201030 18:32:49.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:49.261" level="INFO">${RESULT} = [{'diff': 8.831999999999937e-05}, {'diff': 8.900000000000227e-05}, {'diff': 8.856900000000015e-05}, {'diff': 8.834699999999904e-05}, {'diff': 8.859699999999929e-05}, {'diff': 8.902799999999794e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:49.258" endtime="20201030 18:32:49.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:49.265" level="INFO">${ACCURACY} = {'diff': [8.831999999999937e-05, 8.900000000000227e-05, 8.856900000000015e-05, 8.834699999999904e-05, 8.859699999999929e-05, 8.902799999999794e-05, 8.841700000000036e-05, 8.838899999999775e-05, 8.8208...</msg>
<status status="PASS" starttime="20201030 18:32:49.262" endtime="20201030 18:32:49.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.270" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:32:49.269" endtime="20201030 18:32:49.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.274" level="INFO">VALUE: [8.831999999999937e-05, 8.900000000000227e-05, 8.856900000000015e-05, 8.834699999999904e-05, 8.859699999999929e-05, 8.902799999999794e-05, 8.841700000000036e-05, 8.838899999999775e-05, 8.820899999999882e-05, 8.865299999999757e-05, 8.837500000000165e-05, 8.884700000000301e-05, 8.884700000000301e-05, 8.851400000000134e-05, 8.872199999999941e-05, 8.847199999999916e-05, 8.8638999999998e-05, 8.888899999999825e-05, 8.877799999999769e-05, 8.847199999999916e-05, 8.815300000000054e-05, 8.876399999999812e-05, 8.872299999999889e-05, 8.870899999999932e-05, 8.884799999999901e-05, 8.858399999999919e-05, 8.858299999999972e-05, 8.820799999999934e-05, 8.872199999999941e-05, 8.841700000000036e-05, 8.848599999999873e-05, 8.859800000000223e-05, 8.904200000000098e-05, 8.867999999999723e-05, 8.902800000000141e-05, 8.888899999999825e-05, 8.834799999999851e-05, 8.829100000000076e-05, 8.8638999999998e-05, 8.808299999999922e-05, 8.847199999999916e-05, 8.81389999999975e-05, 8.847199999999916e-05, 8.833400000000241e-05, 8.89999999999988e-05, 8.809699999999879e-05, 8.826400000000109e-05, 8.865200000000156e-05, 8.836100000000208e-05, 8.8638999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:32:49.271" endtime="20201030 18:32:49.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.266" endtime="20201030 18:32:49.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:49.279" endtime="20201030 18:32:49.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.277" endtime="20201030 18:32:49.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.276" endtime="20201030 18:32:49.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.911" endtime="20201030 18:32:49.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.910" endtime="20201030 18:32:49.300"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.309" endtime="20201030 18:32:49.329"></status>
</kw>
<msg timestamp="20201030 18:32:49.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.307" endtime="20201030 18:32:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.331" endtime="20201030 18:32:49.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.333" endtime="20201030 18:32:49.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.304" endtime="20201030 18:32:49.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.302" endtime="20201030 18:32:49.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.343" endtime="20201030 18:32:49.629"></status>
</kw>
<msg timestamp="20201030 18:32:49.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02022, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:32:49.341" endtime="20201030 18:32:49.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02022, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:32:49.633" endtime="20201030 18:32:49.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.641" endtime="20201030 18:32:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.338" endtime="20201030 18:32:49.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.336" endtime="20201030 18:32:49.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:49.648" level="INFO">${RESULT} = [{'diff': 8.955600000000105e-05}, {'diff': 8.991700000000186e-05}, {'diff': 8.970900000000032e-05}, {'diff': 8.983400000000044e-05}, {'diff': 8.997199999999719e-05}, {'diff': 8.96800000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:49.645" endtime="20201030 18:32:49.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:49.653" level="INFO">${ACCURACY} = {'diff': [8.955600000000105e-05, 8.991700000000186e-05, 8.970900000000032e-05, 8.983400000000044e-05, 8.997199999999719e-05, 8.96800000000017e-05, 8.927799999999819e-05, 9.004099999999904e-05, 8.90830...</msg>
<status status="PASS" starttime="20201030 18:32:49.649" endtime="20201030 18:32:49.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.658" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:32:49.657" endtime="20201030 18:32:49.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.661" level="INFO">VALUE: [8.955600000000105e-05, 8.991700000000186e-05, 8.970900000000032e-05, 8.983400000000044e-05, 8.997199999999719e-05, 8.96800000000017e-05, 8.927799999999819e-05, 9.004099999999904e-05, 8.908300000000022e-05, 8.954100000000201e-05, 9.002799999999894e-05, 8.923599999999948e-05, 8.991699999999839e-05, 8.920800000000034e-05, 8.991699999999839e-05, 8.969499999999728e-05, 8.934700000000004e-05, 8.997300000000014e-05, 9.004200000000198e-05, 8.922299999999939e-05, 8.96519999999991e-05, 8.966599999999866e-05, 8.945799999999712e-05, 8.916599999999816e-05, 8.972200000000041e-05, 8.990299999999882e-05, 8.973699999999946e-05, 8.959700000000029e-05, 8.972200000000041e-05, 8.929200000000123e-05, 8.952800000000191e-05, 8.966600000000213e-05, 8.96120000000028e-05, 8.998600000000023e-05, 8.919499999999678e-05, 8.922199999999991e-05, 8.984700000000054e-05, 8.990199999999934e-05, 8.954099999999854e-05, 8.954200000000148e-05, 8.972200000000041e-05, 8.986100000000011e-05, 8.924999999999905e-05, 8.995900000000057e-05, 8.974999999999955e-05, 8.988899999999925e-05, 8.924999999999905e-05, 8.943000000000145e-05, 8.913900000000197e-05, 8.932000000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:32:49.659" endtime="20201030 18:32:49.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.654" endtime="20201030 18:32:49.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:49.666" endtime="20201030 18:32:49.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.664" endtime="20201030 18:32:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.663" endtime="20201030 18:32:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.301" endtime="20201030 18:32:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.300" endtime="20201030 18:32:49.687"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.696" endtime="20201030 18:32:49.716"></status>
</kw>
<msg timestamp="20201030 18:32:49.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.694" endtime="20201030 18:32:49.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.717" endtime="20201030 18:32:49.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.720" endtime="20201030 18:32:49.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.691" endtime="20201030 18:32:49.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.689" endtime="20201030 18:32:49.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.729" endtime="20201030 18:32:50.018"></status>
</kw>
<msg timestamp="20201030 18:32:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.727" endtime="20201030 18:32:50.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.024" endtime="20201030 18:32:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.035" endtime="20201030 18:32:50.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.725" endtime="20201030 18:32:50.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.723" endtime="20201030 18:32:50.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.046" level="INFO">${RESULT} = [{'diff': 9.102799999999994e-05}, {'diff': 9.091699999999939e-05}, {'diff': 9.092999999999948e-05}, {'diff': 9.008300000000122e-05}, {'diff': 9.095800000000209e-05}, {'diff': 9.018099999999821e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:50.040" endtime="20201030 18:32:50.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.051" level="INFO">${ACCURACY} = {'diff': [9.102799999999994e-05, 9.091699999999939e-05, 9.092999999999948e-05, 9.008300000000122e-05, 9.095800000000209e-05, 9.018099999999821e-05, 9.084700000000154e-05, 9.012499999999993e-05, 9.0070...</msg>
<status status="PASS" starttime="20201030 18:32:50.047" endtime="20201030 18:32:50.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.055" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.054" endtime="20201030 18:32:50.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.058" level="INFO">VALUE: [9.102799999999994e-05, 9.091699999999939e-05, 9.092999999999948e-05, 9.008300000000122e-05, 9.095800000000209e-05, 9.018099999999821e-05, 9.084700000000154e-05, 9.012499999999993e-05, 9.007000000000112e-05, 9.104199999999951e-05, 9.095900000000157e-05, 9.056999999999815e-05, 9.011100000000036e-05, 9.076300000000065e-05, 9.009700000000079e-05, 9.091599999999991e-05, 9.086100000000111e-05, 9.029199999999876e-05, 9.070800000000184e-05, 9.059700000000129e-05, 9.102799999999994e-05, 9.055600000000205e-05, 9.004199999999851e-05, 9.030500000000233e-05, 9.025000000000005e-05, 9.022300000000039e-05, 9.040300000000279e-05, 9.022200000000091e-05, 9.10130000000009e-05, 9.080499999999936e-05, 9.070800000000184e-05, 9.027799999999919e-05, 9.038899999999975e-05, 9.066699999999914e-05, 9.047200000000116e-05, 9.047199999999769e-05, 9.102799999999994e-05, 9.065299999999957e-05, 9.061099999999739e-05, 9.095900000000157e-05, 9.104199999999951e-05, 9.097200000000166e-05, 9.073600000000098e-05, 9.084699999999807e-05, 9.073599999999751e-05, 9.036100000000061e-05, 9.062500000000043e-05, 9.040299999999932e-05, 9.022199999999744e-05, 9.044399999999855e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.056" endtime="20201030 18:32:50.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.052" endtime="20201030 18:32:50.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.063" endtime="20201030 18:32:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.062" endtime="20201030 18:32:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.060" endtime="20201030 18:32:50.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.687" endtime="20201030 18:32:50.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.687" endtime="20201030 18:32:50.084"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.093" endtime="20201030 18:32:50.115"></status>
</kw>
<msg timestamp="20201030 18:32:50.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.091" endtime="20201030 18:32:50.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.116" endtime="20201030 18:32:50.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.119" endtime="20201030 18:32:50.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.089" endtime="20201030 18:32:50.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.086" endtime="20201030 18:32:50.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.128" endtime="20201030 18:32:50.413"></status>
</kw>
<msg timestamp="20201030 18:32:50.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021146917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.126" endtime="20201030 18:32:50.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021146917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.418" endtime="20201030 18:32:50.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.426" endtime="20201030 18:32:50.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.124" endtime="20201030 18:32:50.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.122" endtime="20201030 18:32:50.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.433" level="INFO">${RESULT} = [{'diff': 9.134800000000151e-05}, {'diff': 9.145799999999912e-05}, {'diff': 9.176299999999818e-05}, {'diff': 9.16520000000011e-05}, {'diff': 9.11520000000006e-05}, {'diff': 9.180599999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:50.430" endtime="20201030 18:32:50.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.437" level="INFO">${ACCURACY} = {'diff': [9.134800000000151e-05, 9.145799999999912e-05, 9.176299999999818e-05, 9.16520000000011e-05, 9.11520000000006e-05, 9.180599999999983e-05, 9.11390000000005e-05, 9.115300000000007e-05, 9.1153000...</msg>
<status status="PASS" starttime="20201030 18:32:50.434" endtime="20201030 18:32:50.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.442" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.441" endtime="20201030 18:32:50.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.445" level="INFO">VALUE: [9.134800000000151e-05, 9.145799999999912e-05, 9.176299999999818e-05, 9.16520000000011e-05, 9.11520000000006e-05, 9.180599999999983e-05, 9.11390000000005e-05, 9.115300000000007e-05, 9.115300000000007e-05, 9.184699999999907e-05, 9.109699999999832e-05, 9.194499999999953e-05, 9.145799999999912e-05, 9.116699999999964e-05, 9.122299999999792e-05, 9.133300000000247e-05, 9.159700000000229e-05, 9.179100000000079e-05, 9.20000000000018e-05, 9.206900000000018e-05, 9.123600000000148e-05, 9.123599999999801e-05, 9.127800000000019e-05, 9.186099999999864e-05, 9.156899999999968e-05, 9.115300000000007e-05, 9.158399999999872e-05, 9.180599999999983e-05, 9.197299999999867e-05, 9.148599999999826e-05, 9.208299999999975e-05, 9.173599999999851e-05, 9.13190000000029e-05, 9.190200000000134e-05, 9.195900000000257e-05, 9.20000000000018e-05, 9.111100000000136e-05, 9.129199999999976e-05, 9.141699999999989e-05, 9.191700000000039e-05, 9.177799999999722e-05, 9.180599999999983e-05, 9.11390000000005e-05, 9.19870000000017e-05, 9.183400000000244e-05, 9.199999999999833e-05, 9.127700000000072e-05, 9.145800000000259e-05, 9.190300000000082e-05, 9.180599999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.443" endtime="20201030 18:32:50.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.438" endtime="20201030 18:32:50.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.451" endtime="20201030 18:32:50.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.449" endtime="20201030 18:32:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.448" endtime="20201030 18:32:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.085" endtime="20201030 18:32:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.084" endtime="20201030 18:32:50.471"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.480" endtime="20201030 18:32:50.501"></status>
</kw>
<msg timestamp="20201030 18:32:50.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.479" endtime="20201030 18:32:50.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.503" endtime="20201030 18:32:50.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.505" endtime="20201030 18:32:50.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.476" endtime="20201030 18:32:50.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.474" endtime="20201030 18:32:50.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.515" endtime="20201030 18:32:50.800"></status>
</kw>
<msg timestamp="20201030 18:32:50.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.513" endtime="20201030 18:32:50.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.804" endtime="20201030 18:32:50.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.813" endtime="20201030 18:32:50.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.510" endtime="20201030 18:32:50.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.508" endtime="20201030 18:32:50.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.819" level="INFO">${RESULT} = [{'diff': 9.259699999999982e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.26659999999982e-05}, {'diff': 9.222199999999944e-05}, {'diff': 9.276399999999865e-05}, {'diff': 9.284700000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:50.816" endtime="20201030 18:32:50.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.825" level="INFO">${ACCURACY} = {'diff': [9.259699999999982e-05, 9.295800000000062e-05, 9.26659999999982e-05, 9.222199999999944e-05, 9.276399999999865e-05, 9.284700000000007e-05, 9.277799999999822e-05, 9.234699999999957e-05, 9.24589...</msg>
<status status="PASS" starttime="20201030 18:32:50.820" endtime="20201030 18:32:50.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.829" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.828" endtime="20201030 18:32:50.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.832" level="INFO">VALUE: [9.259699999999982e-05, 9.295800000000062e-05, 9.26659999999982e-05, 9.222199999999944e-05, 9.276399999999865e-05, 9.284700000000007e-05, 9.277799999999822e-05, 9.234699999999957e-05, 9.24589999999996e-05, 9.24589999999996e-05, 9.233399999999947e-05, 9.277800000000169e-05, 9.213800000000202e-05, 9.229100000000129e-05, 9.21659999999977e-05, 9.209699999999932e-05, 9.302799999999847e-05, 9.304199999999804e-05, 9.286100000000311e-05, 9.268099999999724e-05, 9.216600000000116e-05, 9.218100000000021e-05, 9.220899999999935e-05, 9.301400000000237e-05, 9.234800000000251e-05, 9.234699999999957e-05, 9.277699999999875e-05, 9.25269999999985e-05, 9.265199999999862e-05, 9.254199999999754e-05, 9.241600000000141e-05, 9.252799999999797e-05, 9.29590000000001e-05, 9.258300000000025e-05, 9.222199999999944e-05, 9.256899999999721e-05, 9.229199999999729e-05, 9.211199999999836e-05, 9.261099999999939e-05, 9.244400000000055e-05, 9.209699999999932e-05, 9.301299999999943e-05, 9.244400000000055e-05, 9.273599999999951e-05, 9.304200000000151e-05, 9.24719999999997e-05, 9.28330000000005e-05, 9.290300000000182e-05, 9.277800000000169e-05, 9.227800000000119e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.830" endtime="20201030 18:32:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.825" endtime="20201030 18:32:50.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.837" endtime="20201030 18:32:50.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.835" endtime="20201030 18:32:50.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.834" endtime="20201030 18:32:50.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.472" endtime="20201030 18:32:50.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.472" endtime="20201030 18:32:50.858"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.867" endtime="20201030 18:32:50.887"></status>
</kw>
<msg timestamp="20201030 18:32:50.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.865" endtime="20201030 18:32:50.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.889" endtime="20201030 18:32:50.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.892" endtime="20201030 18:32:50.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.862" endtime="20201030 18:32:50.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.860" endtime="20201030 18:32:50.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.901" endtime="20201030 18:32:51.188"></status>
</kw>
<msg timestamp="20201030 18:32:51.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.900" endtime="20201030 18:32:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.193" endtime="20201030 18:32:51.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.202" endtime="20201030 18:32:51.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.897" endtime="20201030 18:32:51.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.895" endtime="20201030 18:32:51.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.208" level="INFO">${RESULT} = [{'diff': 9.32079999999974e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.394500000000153e-05}, {'diff': 9.372200000000094e-05}, {'diff': 9.40139999999999e-05}, {'diff': 9.334700000000057e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:51.205" endtime="20201030 18:32:51.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.213" level="INFO">${ACCURACY} = {'diff': [9.32079999999974e-05, 9.386100000000064e-05, 9.394500000000153e-05, 9.372200000000094e-05, 9.40139999999999e-05, 9.334700000000057e-05, 9.40139999999999e-05, 9.354199999999854e-05, 9.3722000...</msg>
<status status="PASS" starttime="20201030 18:32:51.209" endtime="20201030 18:32:51.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.217" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.216" endtime="20201030 18:32:51.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.220" level="INFO">VALUE: [9.32079999999974e-05, 9.386100000000064e-05, 9.394500000000153e-05, 9.372200000000094e-05, 9.40139999999999e-05, 9.334700000000057e-05, 9.40139999999999e-05, 9.354199999999854e-05, 9.372200000000094e-05, 9.368000000000223e-05, 9.404200000000251e-05, 9.38330000000015e-05, 9.359699999999735e-05, 9.36529999999991e-05, 9.356900000000168e-05, 9.384700000000107e-05, 9.324999999999958e-05, 9.388899999999978e-05, 9.302799999999847e-05, 9.405599999999861e-05, 9.361100000000039e-05, 9.340200000000284e-05, 9.345799999999765e-05, 9.398600000000076e-05, 9.400000000000033e-05, 9.320800000000087e-05, 9.390299999999935e-05, 9.40139999999999e-05, 9.39720000000012e-05, 9.393100000000196e-05, 9.334700000000057e-05, 9.322299999999992e-05, 9.380599999999836e-05, 9.381900000000193e-05, 9.326399999999915e-05, 9.400000000000033e-05, 9.365199999999962e-05, 9.320800000000087e-05, 9.402799999999947e-05, 9.355500000000211e-05, 9.34859999999968e-05, 9.354199999999854e-05, 9.402799999999947e-05, 9.372199999999747e-05, 9.338899999999928e-05, 9.322200000000044e-05, 9.31529999999986e-05, 9.322299999999992e-05, 9.391599999999944e-05, 9.333299999999753e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.218" endtime="20201030 18:32:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.213" endtime="20201030 18:32:51.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.225" endtime="20201030 18:32:51.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.223" endtime="20201030 18:32:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.222" endtime="20201030 18:32:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.859" endtime="20201030 18:32:51.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.858" endtime="20201030 18:32:51.246"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.255" endtime="20201030 18:32:51.277"></status>
</kw>
<msg timestamp="20201030 18:32:51.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.253" endtime="20201030 18:32:51.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.278" endtime="20201030 18:32:51.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.281" endtime="20201030 18:32:51.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.250" endtime="20201030 18:32:51.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.248" endtime="20201030 18:32:51.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.290" endtime="20201030 18:32:51.576"></status>
</kw>
<msg timestamp="20201030 18:32:51.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.289" endtime="20201030 18:32:51.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.580" endtime="20201030 18:32:51.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.589" endtime="20201030 18:32:51.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.286" endtime="20201030 18:32:51.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.284" endtime="20201030 18:32:51.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.596" level="INFO">${RESULT} = [{'diff': 9.501399999999743e-05}, {'diff': 9.416600000000316e-05}, {'diff': 9.415200000000012e-05}, {'diff': 9.416700000000264e-05}, {'diff': 9.436100000000114e-05}, {'diff': 9.44590000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:51.592" endtime="20201030 18:32:51.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.600" level="INFO">${ACCURACY} = {'diff': [9.501399999999743e-05, 9.416600000000316e-05, 9.415200000000012e-05, 9.416700000000264e-05, 9.436100000000114e-05, 9.44590000000016e-05, 9.505599999999961e-05, 9.436099999999767e-05, 9.40970...</msg>
<status status="PASS" starttime="20201030 18:32:51.597" endtime="20201030 18:32:51.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.604" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.603" endtime="20201030 18:32:51.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.608" level="INFO">VALUE: [9.501399999999743e-05, 9.416600000000316e-05, 9.415200000000012e-05, 9.416700000000264e-05, 9.436100000000114e-05, 9.44590000000016e-05, 9.505599999999961e-05, 9.436099999999767e-05, 9.409700000000132e-05, 9.452799999999997e-05, 9.423600000000101e-05, 9.473600000000151e-05, 9.483400000000197e-05, 9.475000000000108e-05, 9.458400000000172e-05, 9.479100000000032e-05, 9.437499999999724e-05, 9.480499999999989e-05, 9.491600000000044e-05, 9.491699999999992e-05, 9.468000000000323e-05, 9.479199999999979e-05, 9.458299999999878e-05, 9.459699999999835e-05, 9.459699999999835e-05, 9.502800000000047e-05, 9.429200000000276e-05, 9.430499999999939e-05, 9.483299999999903e-05, 9.433299999999853e-05, 9.484700000000207e-05, 9.49859999999983e-05, 9.494400000000305e-05, 9.438900000000028e-05, 9.454199999999954e-05, 9.429199999999929e-05, 9.47079999999989e-05, 9.431999999999843e-05, 9.472200000000194e-05, 9.491699999999992e-05, 9.49729999999982e-05, 9.447300000000117e-05, 9.473600000000151e-05, 9.491600000000044e-05, 9.406900000000218e-05, 9.495799999999915e-05, 9.472199999999847e-05, 9.494400000000305e-05, 9.427799999999972e-05, 9.473600000000151e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.606" endtime="20201030 18:32:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.601" endtime="20201030 18:32:51.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.613" endtime="20201030 18:32:51.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.612" endtime="20201030 18:32:51.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.610" endtime="20201030 18:32:51.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.247" endtime="20201030 18:32:51.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.246" endtime="20201030 18:32:51.634"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.643" endtime="20201030 18:32:51.663"></status>
</kw>
<msg timestamp="20201030 18:32:51.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.641" endtime="20201030 18:32:51.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.665" endtime="20201030 18:32:51.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.667" endtime="20201030 18:32:51.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.639" endtime="20201030 18:32:51.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.636" endtime="20201030 18:32:51.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.677" endtime="20201030 18:32:51.961"></status>
</kw>
<msg timestamp="20201030 18:32:51.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.675" endtime="20201030 18:32:51.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.966" endtime="20201030 18:32:51.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.974" endtime="20201030 18:32:51.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.673" endtime="20201030 18:32:51.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.671" endtime="20201030 18:32:51.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.981" level="INFO">${RESULT} = [{'diff': 9.552800000000097e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.559799999999882e-05}, {'diff': 9.559799999999882e-05}, {'diff': 9.51660000000007e-05}, {'diff': 9.53469999999991e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:51.978" endtime="20201030 18:32:51.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.988" level="INFO">${ACCURACY} = {'diff': [9.552800000000097e-05, 9.51530000000006e-05, 9.559799999999882e-05, 9.559799999999882e-05, 9.51660000000007e-05, 9.53469999999991e-05, 9.55140000000014e-05, 9.52079999999994e-05, 9.527800000...</msg>
<status status="PASS" starttime="20201030 18:32:51.982" endtime="20201030 18:32:51.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.993" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.992" endtime="20201030 18:32:51.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.995" level="INFO">VALUE: [9.552800000000097e-05, 9.51530000000006e-05, 9.559799999999882e-05, 9.559799999999882e-05, 9.51660000000007e-05, 9.53469999999991e-05, 9.55140000000014e-05, 9.52079999999994e-05, 9.527800000000072e-05, 9.536099999999867e-05, 9.511099999999842e-05, 9.559699999999935e-05, 9.513899999999756e-05, 9.508399999999875e-05, 9.526400000000115e-05, 9.508400000000222e-05, 9.568000000000076e-05, 9.577800000000122e-05, 9.577700000000175e-05, 9.554100000000107e-05, 9.587499999999874e-05, 9.577800000000122e-05, 9.543099999999999e-05, 9.513900000000103e-05, 9.579200000000079e-05, 9.559699999999935e-05, 9.538899999999781e-05, 9.508299999999928e-05, 9.606900000000071e-05, 9.555600000000011e-05, 9.559799999999882e-05, 9.6027999999998e-05, 9.55409999999976e-05, 9.554100000000107e-05, 9.513899999999756e-05, 9.509699999999885e-05, 9.590300000000135e-05, 9.583300000000003e-05, 9.519399999999983e-05, 9.601399999999843e-05, 9.566700000000067e-05, 9.568100000000024e-05, 9.54729999999987e-05, 9.604100000000157e-05, 9.538899999999781e-05, 9.595800000000015e-05, 9.541599999999748e-05, 9.574999999999861e-05, 9.547199999999922e-05, 9.511099999999842e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.994" endtime="20201030 18:32:51.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.989" endtime="20201030 18:32:51.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.001" endtime="20201030 18:32:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.999" endtime="20201030 18:32:52.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.998" endtime="20201030 18:32:52.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.635" endtime="20201030 18:32:52.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.634" endtime="20201030 18:32:52.022"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.031" endtime="20201030 18:32:52.051"></status>
</kw>
<msg timestamp="20201030 18:32:52.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.029" endtime="20201030 18:32:52.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.052" endtime="20201030 18:32:52.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.055" endtime="20201030 18:32:52.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.026" endtime="20201030 18:32:52.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.024" endtime="20201030 18:32:52.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.064" endtime="20201030 18:32:52.352"></status>
</kw>
<msg timestamp="20201030 18:32:52.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.063" endtime="20201030 18:32:52.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.356" endtime="20201030 18:32:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.364" endtime="20201030 18:32:52.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.060" endtime="20201030 18:32:52.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.058" endtime="20201030 18:32:52.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.371" level="INFO">${RESULT} = [{'diff': 9.627799999999825e-05}, {'diff': 9.609799999999932e-05}, {'diff': 9.693000000000201e-05}, {'diff': 9.61660000000017e-05}, {'diff': 9.619400000000083e-05}, {'diff': 9.659700000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:52.368" endtime="20201030 18:32:52.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.376" level="INFO">${ACCURACY} = {'diff': [9.627799999999825e-05, 9.609799999999932e-05, 9.693000000000201e-05, 9.61660000000017e-05, 9.619400000000083e-05, 9.659700000000035e-05, 9.647200000000022e-05, 9.61669999999977e-05, 9.613899...</msg>
<status status="PASS" starttime="20201030 18:32:52.372" endtime="20201030 18:32:52.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.380" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.379" endtime="20201030 18:32:52.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.383" level="INFO">VALUE: [9.627799999999825e-05, 9.609799999999932e-05, 9.693000000000201e-05, 9.61660000000017e-05, 9.619400000000083e-05, 9.659700000000035e-05, 9.647200000000022e-05, 9.61669999999977e-05, 9.613899999999856e-05, 9.608300000000028e-05, 9.649999999999936e-05, 9.609699999999985e-05, 9.643100000000099e-05, 9.647200000000022e-05, 9.640299999999838e-05, 9.64729999999997e-05, 9.618000000000126e-05, 9.633300000000053e-05, 9.697200000000072e-05, 9.647200000000022e-05, 9.7027999999999e-05, 9.695800000000115e-05, 9.663899999999906e-05, 9.627800000000172e-05, 9.691699999999845e-05, 9.682000000000093e-05, 9.68340000000005e-05, 9.695900000000063e-05, 9.702800000000247e-05, 9.63470000000001e-05, 9.655499999999817e-05, 9.619400000000083e-05, 9.702699999999953e-05, 9.647200000000022e-05, 9.619400000000083e-05, 9.686100000000017e-05, 9.694399999999812e-05, 9.673600000000004e-05, 9.68340000000005e-05, 9.612499999999899e-05, 9.627800000000172e-05, 9.65140000000024e-05, 9.673600000000004e-05, 9.658400000000025e-05, 9.615199999999866e-05, 9.686100000000017e-05, 9.619399999999736e-05, 9.669399999999786e-05, 9.630600000000086e-05, 9.615299999999813e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.381" endtime="20201030 18:32:52.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.376" endtime="20201030 18:32:52.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.388" endtime="20201030 18:32:52.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.386" endtime="20201030 18:32:52.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.385" endtime="20201030 18:32:52.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.022" endtime="20201030 18:32:52.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.022" endtime="20201030 18:32:52.409"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.418" endtime="20201030 18:32:52.440"></status>
</kw>
<msg timestamp="20201030 18:32:52.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.416" endtime="20201030 18:32:52.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.441" endtime="20201030 18:32:52.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.444" endtime="20201030 18:32:52.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.413" endtime="20201030 18:32:52.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.411" endtime="20201030 18:32:52.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.453" endtime="20201030 18:32:52.739"></status>
</kw>
<msg timestamp="20201030 18:32:52.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020924611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021021833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.452" endtime="20201030 18:32:52.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020924611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021021833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.743" endtime="20201030 18:32:52.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.752" endtime="20201030 18:32:52.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.449" endtime="20201030 18:32:52.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.447" endtime="20201030 18:32:52.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.758" level="INFO">${RESULT} = [{'diff': 9.722200000000097e-05}, {'diff': 9.73470000000011e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.720799999999793e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.75279999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:52.755" endtime="20201030 18:32:52.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.763" level="INFO">${ACCURACY} = {'diff': [9.722200000000097e-05, 9.73470000000011e-05, 9.754199999999907e-05, 9.720799999999793e-05, 9.737500000000024e-05, 9.75279999999995e-05, 9.777799999999975e-05, 9.740299999999938e-05, 9.722300...</msg>
<status status="PASS" starttime="20201030 18:32:52.759" endtime="20201030 18:32:52.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.767" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.766" endtime="20201030 18:32:52.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.770" level="INFO">VALUE: [9.722200000000097e-05, 9.73470000000011e-05, 9.754199999999907e-05, 9.720799999999793e-05, 9.737500000000024e-05, 9.75279999999995e-05, 9.777799999999975e-05, 9.740299999999938e-05, 9.722300000000045e-05, 9.741600000000294e-05, 9.797199999999825e-05, 9.758299999999831e-05, 9.805600000000261e-05, 9.773600000000104e-05, 9.718099999999827e-05, 9.73059999999984e-05, 9.79020000000004e-05, 9.743099999999852e-05, 9.73470000000011e-05, 9.713899999999956e-05, 9.766700000000267e-05, 9.8028e-05, 9.759800000000082e-05, 9.7721999999998e-05, 9.77080000000019e-05, 9.733299999999806e-05, 9.745800000000165e-05, 9.798599999999782e-05, 9.740299999999938e-05, 9.783299999999856e-05, 9.79999999999974e-05, 9.777799999999975e-05, 9.777700000000028e-05, 9.763900000000006e-05, 9.73479999999971e-05, 9.76799999999993e-05, 9.706999999999771e-05, 9.725000000000011e-05, 9.711100000000042e-05, 9.762500000000049e-05, 9.723600000000054e-05, 9.754199999999907e-05, 9.740299999999938e-05, 9.805600000000261e-05, 9.78470000000016e-05, 9.791699999999945e-05, 9.708399999999728e-05, 9.76669999999992e-05, 9.716599999999923e-05, 9.76799999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.768" endtime="20201030 18:32:52.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.763" endtime="20201030 18:32:52.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.776" endtime="20201030 18:32:52.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.774" endtime="20201030 18:32:52.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.773" endtime="20201030 18:32:52.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.410" endtime="20201030 18:32:52.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.409" endtime="20201030 18:32:52.796"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.805" endtime="20201030 18:32:52.826"></status>
</kw>
<msg timestamp="20201030 18:32:52.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.804" endtime="20201030 18:32:52.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.828" endtime="20201030 18:32:52.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.830" endtime="20201030 18:32:52.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.801" endtime="20201030 18:32:52.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.799" endtime="20201030 18:32:52.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.840" endtime="20201030 18:32:53.126"></status>
</kw>
<msg timestamp="20201030 18:32:53.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.838" endtime="20201030 18:32:53.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.130" endtime="20201030 18:32:53.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.138" endtime="20201030 18:32:53.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.836" endtime="20201030 18:32:53.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.834" endtime="20201030 18:32:53.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.145" level="INFO">${RESULT} = [{'diff': 9.841600000000048e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.82219999999985e-05}, {'diff': 9.847200000000222e-05}, {'diff': 9.847200000000222e-05}, {'diff': 9.900000000000186e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:53.142" endtime="20201030 18:32:53.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.150" level="INFO">${ACCURACY} = {'diff': [9.841600000000048e-05, 9.851400000000093e-05, 9.82219999999985e-05, 9.847200000000222e-05, 9.847200000000222e-05, 9.900000000000186e-05, 9.811100000000142e-05, 9.840300000000038e-05, 9.88059...</msg>
<status status="PASS" starttime="20201030 18:32:53.146" endtime="20201030 18:32:53.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.155" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.154" endtime="20201030 18:32:53.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.158" level="INFO">VALUE: [9.841600000000048e-05, 9.851400000000093e-05, 9.82219999999985e-05, 9.847200000000222e-05, 9.847200000000222e-05, 9.900000000000186e-05, 9.811100000000142e-05, 9.840300000000038e-05, 9.88059999999999e-05, 9.84999999999979e-05, 9.85280000000005e-05, 9.858399999999878e-05, 9.809800000000132e-05, 9.848599999999832e-05, 9.859699999999888e-05, 9.88470000000026e-05, 9.812499999999752e-05, 9.827800000000025e-05, 9.869400000000333e-05, 9.809700000000185e-05, 9.811099999999795e-05, 9.819499999999884e-05, 9.840300000000038e-05, 9.874999999999814e-05, 9.898599999999882e-05, 9.820899999999841e-05, 9.873600000000204e-05, 9.88470000000026e-05, 9.856899999999974e-05, 9.840300000000038e-05, 9.83609999999982e-05, 9.808300000000228e-05, 9.847199999999875e-05, 9.898599999999882e-05, 9.838900000000081e-05, 9.86670000000002e-05, 9.86800000000003e-05, 9.83479999999981e-05, 9.89999999999984e-05, 9.876399999999771e-05, 9.852699999999756e-05, 9.859699999999888e-05, 9.84860000000018e-05, 9.81669999999997e-05, 9.834699999999863e-05, 9.82219999999985e-05, 9.809699999999838e-05, 9.836100000000167e-05, 9.83479999999981e-05, 9.879200000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.156" endtime="20201030 18:32:53.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.151" endtime="20201030 18:32:53.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.163" endtime="20201030 18:32:53.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.161" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.160" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.797" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.797" endtime="20201030 18:32:53.183"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.192" endtime="20201030 18:32:53.213"></status>
</kw>
<msg timestamp="20201030 18:32:53.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.191" endtime="20201030 18:32:53.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.215" endtime="20201030 18:32:53.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.217" endtime="20201030 18:32:53.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.188" endtime="20201030 18:32:53.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.186" endtime="20201030 18:32:53.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.228" endtime="20201030 18:32:53.515"></status>
</kw>
<msg timestamp="20201030 18:32:53.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.226" endtime="20201030 18:32:53.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.519" endtime="20201030 18:32:53.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.528" endtime="20201030 18:32:53.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.223" endtime="20201030 18:32:53.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.221" endtime="20201030 18:32:53.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.534" level="INFO">${RESULT} = [{'diff': 9.930500000000092e-05}, {'diff': 0.00010001400000000243}, {'diff': 9.918100000000027e-05}, {'diff': 9.94860000000028e-05}, {'diff': 9.95419999999976e-05}, {'diff': 9.909699999999938e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:53.531" endtime="20201030 18:32:53.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.539" level="INFO">${ACCURACY} = {'diff': [9.930500000000092e-05, 0.00010001400000000243, 9.918100000000027e-05, 9.94860000000028e-05, 9.95419999999976e-05, 9.909699999999938e-05, 9.961099999999945e-05, 9.927799999999778e-05, 9.92499...</msg>
<status status="PASS" starttime="20201030 18:32:53.535" endtime="20201030 18:32:53.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.543" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.542" endtime="20201030 18:32:53.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.546" level="INFO">VALUE: [9.930500000000092e-05, 0.00010001400000000243, 9.918100000000027e-05, 9.94860000000028e-05, 9.95419999999976e-05, 9.909699999999938e-05, 9.961099999999945e-05, 9.927799999999778e-05, 9.924999999999864e-05, 9.922299999999898e-05, 0.00010002799999999853, 9.923599999999907e-05, 9.994399999999765e-05, 9.934699999999963e-05, 9.998599999999983e-05, 9.947199999999976e-05, 9.933300000000006e-05, 0.00010001400000000243, 9.945800000000019e-05, 0.00010005600000000114, 9.945800000000019e-05, 9.986100000000317e-05, 9.962500000000249e-05, 9.927799999999778e-05, 9.929099999999788e-05, 9.940199999999844e-05, 9.984700000000013e-05, 0.0001000419999999981, 9.920799999999994e-05, 9.957000000000021e-05, 9.990300000000188e-05, 9.962500000000249e-05, 9.98609999999997e-05, 9.977799999999828e-05, 9.963899999999859e-05, 9.955600000000064e-05, 9.966599999999826e-05, 9.961099999999945e-05, 9.920799999999994e-05, 9.908299999999981e-05, 0.00010001399999999896, 9.906900000000024e-05, 9.934699999999963e-05, 0.00010001399999999896, 9.909700000000285e-05, 9.969500000000034e-05, 9.920899999999941e-05, 9.99730000000032e-05, 9.961099999999945e-05, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.544" endtime="20201030 18:32:53.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.540" endtime="20201030 18:32:53.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.551" endtime="20201030 18:32:53.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.550" endtime="20201030 18:32:53.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.548" endtime="20201030 18:32:53.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.184" endtime="20201030 18:32:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.184" endtime="20201030 18:32:53.572"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.581" endtime="20201030 18:32:53.603"></status>
</kw>
<msg timestamp="20201030 18:32:53.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.579" endtime="20201030 18:32:53.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.605" endtime="20201030 18:32:53.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.607" endtime="20201030 18:32:53.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.577" endtime="20201030 18:32:53.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.574" endtime="20201030 18:32:53.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.617" endtime="20201030 18:32:53.903"></status>
</kw>
<msg timestamp="20201030 18:32:53.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021142028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.615" endtime="20201030 18:32:53.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021142028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.907" endtime="20201030 18:32:53.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.916" endtime="20201030 18:32:53.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.612" endtime="20201030 18:32:53.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.611" endtime="20201030 18:32:53.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.922" level="INFO">${RESULT} = [{'diff': 0.00010062500000000002}, {'diff': 0.00010011200000000289}, {'diff': 0.00010079199999999885}, {'diff': 0.00010008300000000081}, {'diff': 0.00010084700000000113}, {'diff': 0.000100290999999998...</msg>
<status status="PASS" starttime="20201030 18:32:53.919" endtime="20201030 18:32:53.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.926" level="INFO">${ACCURACY} = {'diff': [0.00010062500000000002, 0.00010011200000000289, 0.00010079199999999885, 0.00010008300000000081, 0.00010084700000000113, 0.00010029099999999888, 0.00010090299999999941, 0.00010020800000000094...</msg>
<status status="PASS" starttime="20201030 18:32:53.923" endtime="20201030 18:32:53.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.931" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.930" endtime="20201030 18:32:53.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.933" level="INFO">VALUE: [0.00010062500000000002, 0.00010011200000000289, 0.00010079199999999885, 0.00010008300000000081, 0.00010084700000000113, 0.00010029099999999888, 0.00010090299999999941, 0.00010020800000000094, 0.0001003610000000002, 0.00010076399999999971, 0.00010058300000000131, 0.00010084700000000113, 0.00010073600000000058, 0.0001004999999999999, 0.00010088899999999984, 0.0001005549999999987, 0.0001002220000000005, 0.00010051299999999999, 0.00010106900000000224, 0.00010019400000000137, 0.00010097200000000126, 0.00010073600000000058, 0.00010084700000000113, 0.00010052799999999903, 0.00010065299999999916, 0.00010077799999999928, 0.00010095900000000116, 0.00010058400000000078, 0.00010058400000000078, 0.0001006670000000022, 0.00010077699999999981, 0.00010084700000000113, 0.0001010549999999992, 0.00010082000000000146, 0.00010011099999999995, 0.0001010419999999991, 0.00010084699999999766, 0.00010098600000000083, 0.00010091699999999898, 0.0001010000000000004, 0.00010026400000000268, 0.00010090199999999994, 0.00010090199999999994, 0.00010084699999999766, 0.00010059700000000088, 0.00010019400000000137, 0.00010044399999999815, 0.00010033300000000106, 0.00010009700000000038, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201030 18:32:53.932" endtime="20201030 18:32:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.927" endtime="20201030 18:32:53.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.939" endtime="20201030 18:32:53.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.937" endtime="20201030 18:32:53.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.936" endtime="20201030 18:32:53.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.573" endtime="20201030 18:32:53.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.572" endtime="20201030 18:32:53.960"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.968" endtime="20201030 18:32:53.989"></status>
</kw>
<msg timestamp="20201030 18:32:53.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.967" endtime="20201030 18:32:53.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.991" endtime="20201030 18:32:53.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.993" endtime="20201030 18:32:53.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.964" endtime="20201030 18:32:53.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.962" endtime="20201030 18:32:53.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.003" endtime="20201030 18:32:54.289"></status>
</kw>
<msg timestamp="20201030 18:32:54.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.001" endtime="20201030 18:32:54.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.293" endtime="20201030 18:32:54.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.301" endtime="20201030 18:32:54.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.998" endtime="20201030 18:32:54.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.997" endtime="20201030 18:32:54.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.307" level="INFO">${RESULT} = [{'diff': 0.00010145799999999872}, {'diff': 0.000101416}, {'diff': 0.00010108299999999834}, {'diff': 0.00010205599999999967}, {'diff': 0.00010144399999999915}, {'diff': 0.00010109699999999791}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:32:54.304" endtime="20201030 18:32:54.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.312" level="INFO">${ACCURACY} = {'diff': [0.00010145799999999872, 0.000101416, 0.00010108299999999834, 0.00010205599999999967, 0.00010144399999999915, 0.00010109699999999791, 0.00010158300000000231, 0.00010201400000000097, 0.0001017...</msg>
<status status="PASS" starttime="20201030 18:32:54.308" endtime="20201030 18:32:54.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.317" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.316" endtime="20201030 18:32:54.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.320" level="INFO">VALUE: [0.00010145799999999872, 0.000101416, 0.00010108299999999834, 0.00010205599999999967, 0.00010144399999999915, 0.00010109699999999791, 0.00010158300000000231, 0.00010201400000000097, 0.00010172199999999854, 0.00010136200000000067, 0.0001018480000000016, 0.0001018610000000017, 0.00010204100000000063, 0.00010162500000000102, 0.00010130599999999892, 0.00010152800000000003, 0.00010108300000000181, 0.00010115299999999966, 0.00010108299999999834, 0.00010205599999999967, 0.00010179199999999985, 0.00010202800000000053, 0.00010130599999999892, 0.00010177699999999734, 0.00010198600000000183, 0.000101416, 0.00010122199999999804, 0.00010138900000000034, 0.00010125000000000065, 0.00010197199999999879, 0.00010113900000000009, 0.0001018610000000017, 0.00010147199999999829, 0.0001011809999999988, 0.00010172199999999854, 0.00010186099999999823, 0.00010202800000000053, 0.00010181899999999952, 0.00010134700000000163, 0.00010125000000000065, 0.00010137500000000077, 0.000101819999999999, 0.00010199999999999793, 0.0001016809999999993, 0.000101722000000002, 0.00010199999999999793, 0.00010198599999999836, 0.00010193000000000008, 0.00010190300000000041, 0.00010201299999999802]</msg>
<status status="PASS" starttime="20201030 18:32:54.319" endtime="20201030 18:32:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.313" endtime="20201030 18:32:54.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.331" endtime="20201030 18:32:54.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.329" endtime="20201030 18:32:54.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.328" endtime="20201030 18:32:54.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.961" endtime="20201030 18:32:54.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.960" endtime="20201030 18:32:54.355"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.373" endtime="20201030 18:32:54.399"></status>
</kw>
<msg timestamp="20201030 18:32:54.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.369" endtime="20201030 18:32:54.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.402" endtime="20201030 18:32:54.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.407" endtime="20201030 18:32:54.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.364" endtime="20201030 18:32:54.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.360" endtime="20201030 18:32:54.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.426" endtime="20201030 18:32:54.714"></status>
</kw>
<msg timestamp="20201030 18:32:54.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033193347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.423" endtime="20201030 18:32:54.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033193347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.718" endtime="20201030 18:32:54.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.726" endtime="20201030 18:32:54.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.417" endtime="20201030 18:32:54.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.413" endtime="20201030 18:32:54.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.733" level="INFO">${RESULT} = [{'diff': 0.0001027359999999991}, {'diff': 0.00010277799999999782}, {'diff': 0.00010219500000000631}, {'diff': 0.00010295800000000022}, {'diff': 0.00010291700000000098}, {'diff': 0.0001027079999999999...</msg>
<status status="PASS" starttime="20201030 18:32:54.730" endtime="20201030 18:32:54.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.737" level="INFO">${ACCURACY} = {'diff': [0.0001027359999999991, 0.00010277799999999782, 0.00010219500000000631, 0.00010295800000000022, 0.00010291700000000098, 0.00010270799999999997, 0.00010211100000000195, 0.00010247199999999929,...</msg>
<status status="PASS" starttime="20201030 18:32:54.734" endtime="20201030 18:32:54.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.741" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.740" endtime="20201030 18:32:54.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.744" level="INFO">VALUE: [0.0001027359999999991, 0.00010277799999999782, 0.00010219500000000631, 0.00010295800000000022, 0.00010291700000000098, 0.00010270799999999997, 0.00010211100000000195, 0.00010247199999999929, 0.00010265300000000116, 0.00010254199999999714, 0.00010263900000000159, 0.0001023889999999944, 0.00010297199999999979, 0.00010242999999999364, 0.00010272199999999954, 0.0001023889999999944, 0.00010209700000000238, 0.0001026810000000003, 0.00010226399999999775, 0.00010247199999999929, 0.00010243100000000005, 0.00010227800000000425, 0.00010297299999999926, 0.0001022359999999986, 0.000102416000000001, 0.00010297199999999979, 0.00010229099999999741, 0.00010295800000000022, 0.00010294400000000065, 0.00010241700000000048, 0.00010219499999999937, 0.0001021809999999998, 0.00010208399999999535, 0.0001030139999999985, 0.00010272199999999954, 0.00010291700000000098, 0.00010240200000000144, 0.00010280499999999748, 0.0001028610000000027, 0.00010284699999999619, 0.00010270799999999997, 0.00010283299999999662, 0.00010245799999999972, 0.00010295800000000022, 0.00010227799999999732, 0.0001025280000000045, 0.00010295800000000022, 0.0001028480000000026, 0.00010284699999999619, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201030 18:32:54.742" endtime="20201030 18:32:54.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.737" endtime="20201030 18:32:54.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.748" endtime="20201030 18:32:54.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.747" endtime="20201030 18:32:54.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.746" endtime="20201030 18:32:54.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.356" endtime="20201030 18:32:54.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.355" endtime="20201030 18:32:54.769"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.778" endtime="20201030 18:32:54.800"></status>
</kw>
<msg timestamp="20201030 18:32:54.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.776" endtime="20201030 18:32:54.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.802" endtime="20201030 18:32:54.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.804" endtime="20201030 18:32:54.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.774" endtime="20201030 18:32:54.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.772" endtime="20201030 18:32:54.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.813" endtime="20201030 18:32:55.099"></status>
</kw>
<msg timestamp="20201030 18:32:55.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.811" endtime="20201030 18:32:55.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.103" endtime="20201030 18:32:55.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.111" endtime="20201030 18:32:55.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.809" endtime="20201030 18:32:55.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.807" endtime="20201030 18:32:55.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.117" level="INFO">${RESULT} = [{'diff': 0.00010319500000000037}, {'diff': 0.00010322200000000004}, {'diff': 0.00010390199999999947}, {'diff': 0.0001033749999999993}, {'diff': 0.0001040139999999995}, {'diff': 0.00010309699999999991...</msg>
<status status="PASS" starttime="20201030 18:32:55.114" endtime="20201030 18:32:55.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.121" level="INFO">${ACCURACY} = {'diff': [0.00010319500000000037, 0.00010322200000000004, 0.00010390199999999947, 0.0001033749999999993, 0.0001040139999999995, 0.00010309699999999991, 0.00010306900000000077, 0.00010362499999999955, ...</msg>
<status status="PASS" starttime="20201030 18:32:55.118" endtime="20201030 18:32:55.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.126" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.124" endtime="20201030 18:32:55.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.129" level="INFO">VALUE: [0.00010319500000000037, 0.00010322200000000004, 0.00010390199999999947, 0.0001033749999999993, 0.0001040139999999995, 0.00010309699999999991, 0.00010306900000000077, 0.00010362499999999955, 0.00010377799999999882, 0.00010383300000000109, 0.00010324999999999918, 0.00010341700000000148, 0.00010391599999999904, 0.00010343000000000158, 0.00010323600000000308, 0.00010306900000000077, 0.00010384700000000066, 0.00010384700000000066, 0.00010372200000000054, 0.00010316700000000123, 0.00010379199999999839, 0.00010338899999999887, 0.00010359799999999988, 0.00010377800000000229, 0.00010308399999999981, 0.00010349999999999943, 0.00010383300000000109, 0.00010325000000000265, 0.00010408300000000134, 0.00010327799999999832, 0.00010341700000000148, 0.00010402799999999907, 0.00010384700000000066, 0.0001040139999999995, 0.00010365299999999869, 0.00010313899999999862, 0.00010380499999999848, 0.00010358300000000084, 0.00010327799999999832, 0.00010392999999999861, 0.00010347200000000029, 0.00010359700000000041, 0.00010341700000000148, 0.00010398600000000036, 0.00010334700000000016, 0.00010340300000000191, 0.00010358399999999685, 0.00010326399999999875, 0.00010316700000000123, 0.0001040420000000021]</msg>
<status status="PASS" starttime="20201030 18:32:55.127" endtime="20201030 18:32:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.122" endtime="20201030 18:32:55.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.134" endtime="20201030 18:32:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.132" endtime="20201030 18:32:55.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.131" endtime="20201030 18:32:55.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.770" endtime="20201030 18:32:55.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.769" endtime="20201030 18:32:55.154"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.163" endtime="20201030 18:32:55.184"></status>
</kw>
<msg timestamp="20201030 18:32:55.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.161" endtime="20201030 18:32:55.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.185" endtime="20201030 18:32:55.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.188" endtime="20201030 18:32:55.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.159" endtime="20201030 18:32:55.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.157" endtime="20201030 18:32:55.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.197" endtime="20201030 18:32:55.482"></status>
</kw>
<msg timestamp="20201030 18:32:55.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.195" endtime="20201030 18:32:55.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.486" endtime="20201030 18:32:55.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.494" endtime="20201030 18:32:55.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.193" endtime="20201030 18:32:55.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.191" endtime="20201030 18:32:55.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.501" level="INFO">${RESULT} = [{'diff': 0.00010445799999999825}, {'diff': 0.00010456999999999828}, {'diff': 0.0001048339999999981}, {'diff': 0.00010470900000000144}, {'diff': 0.00010415299999999919}, {'diff': 0.0001041799999999988...</msg>
<status status="PASS" starttime="20201030 18:32:55.498" endtime="20201030 18:32:55.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.508" level="INFO">${ACCURACY} = {'diff': [0.00010445799999999825, 0.00010456999999999828, 0.0001048339999999981, 0.00010470900000000144, 0.00010415299999999919, 0.00010417999999999886, 0.00010495800000000222, 0.00010484699999999819,...</msg>
<status status="PASS" starttime="20201030 18:32:55.502" endtime="20201030 18:32:55.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.513" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.512" endtime="20201030 18:32:55.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.515" level="INFO">VALUE: [0.00010445799999999825, 0.00010456999999999828, 0.0001048339999999981, 0.00010470900000000144, 0.00010415299999999919, 0.00010417999999999886, 0.00010495800000000222, 0.00010484699999999819, 0.00010452799999999957, 0.00010417999999999886, 0.00010497200000000179, 0.00010502800000000007, 0.00010441699999999901, 0.00010427799999999932, 0.00010459699999999794, 0.00010444399999999868, 0.0001048620000000007, 0.00010477799999999982, 0.00010484800000000113, 0.0001043750000000003, 0.00010458300000000184, 0.00010454199999999914, 0.00010456900000000227, 0.00010504199999999964, 0.00010448599999999739, 0.00010441700000000248, 0.00010416699999999876, 0.00010490299999999994, 0.00010473700000000058, 0.00010420899999999747, 0.0001043880000000004, 0.00010475000000000068, 0.00010475000000000068, 0.00010491600000000004, 0.00010504199999999964, 0.0001045559999999987, 0.00010416699999999876, 0.00010452799999999957, 0.00010431999999999803, 0.00010459700000000141, 0.00010459699999999794, 0.00010436100000000073, 0.00010433299999999812, 0.00010493099999999908, 0.00010476300000000077, 0.0001047360000000011, 0.00010483299999999862, 0.00010466699999999926, 0.00010433300000000159, 0.00010429200000000236]</msg>
<status status="PASS" starttime="20201030 18:32:55.514" endtime="20201030 18:32:55.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.509" endtime="20201030 18:32:55.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.520" endtime="20201030 18:32:55.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.519" endtime="20201030 18:32:55.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.517" endtime="20201030 18:32:55.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.155" endtime="20201030 18:32:55.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.155" endtime="20201030 18:32:55.541"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.549" endtime="20201030 18:32:55.571"></status>
</kw>
<msg timestamp="20201030 18:32:55.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.548" endtime="20201030 18:32:55.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.572" endtime="20201030 18:32:55.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.578" endtime="20201030 18:32:55.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.545" endtime="20201030 18:32:55.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.543" endtime="20201030 18:32:55.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.595" endtime="20201030 18:32:55.895"></status>
</kw>
<msg timestamp="20201030 18:32:55.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.591" endtime="20201030 18:32:55.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.904" endtime="20201030 18:32:55.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.922" endtime="20201030 18:32:55.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.588" endtime="20201030 18:32:55.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.586" endtime="20201030 18:32:55.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.935" level="INFO">${RESULT} = [{'diff': 0.0001053889999999974}, {'diff': 0.00010579100000000091}, {'diff': 0.00010526400000000075}, {'diff': 0.00010534699999999869}, {'diff': 0.00010516600000000029}, {'diff': 0.0001053049999999999...</msg>
<status status="PASS" starttime="20201030 18:32:55.929" endtime="20201030 18:32:55.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.944" level="INFO">${ACCURACY} = {'diff': [0.0001053889999999974, 0.00010579100000000091, 0.00010526400000000075, 0.00010534699999999869, 0.00010516600000000029, 0.00010530499999999998, 0.00010508300000000234, 0.00010559700000000241,...</msg>
<status status="PASS" starttime="20201030 18:32:55.937" endtime="20201030 18:32:55.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.953" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.951" endtime="20201030 18:32:55.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.958" level="INFO">VALUE: [0.0001053889999999974, 0.00010579100000000091, 0.00010526400000000075, 0.00010534699999999869, 0.00010516600000000029, 0.00010530499999999998, 0.00010508300000000234, 0.00010559700000000241, 0.00010602800000000107, 0.00010537499999999783, 0.00010549999999999796, 0.00010584800000000213, 0.00010561099999999851, 0.00010556999999999928, 0.00010543099999999958, 0.00010569399999999993, 0.00010594400000000018, 0.00010522200000000204, 0.00010509700000000191, 0.0001057499999999982, 0.00010562499999999808, 0.00010590300000000094, 0.00010561099999999851, 0.00010545899999999872, 0.00010516699999999976, 0.0001052499999999977, 0.00010601399999999803, 0.0001052360000000016, 0.00010559700000000241, 0.00010527800000000032, 0.00010591600000000104, 0.00010543099999999958, 0.00010557000000000274, 0.00010508400000000181, 0.0001058750000000018, 0.00010602800000000107, 0.00010572199999999907, 0.00010549999999999796, 0.00010586100000000223, 0.00010558300000000284, 0.00010563800000000165, 0.00010605500000000073, 0.00010609799999999892, 0.00010595799999999975, 0.00010536099999999826, 0.00010508299999999887, 0.00010533299999999912, 0.00010548599999999839, 0.00010522299999999804, 0.00010580500000000048]</msg>
<status status="PASS" starttime="20201030 18:32:55.956" endtime="20201030 18:32:55.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.946" endtime="20201030 18:32:55.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.964" endtime="20201030 18:32:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.962" endtime="20201030 18:32:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.961" endtime="20201030 18:32:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.542" endtime="20201030 18:32:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.541" endtime="20201030 18:32:55.984"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.993" endtime="20201030 18:32:56.015"></status>
</kw>
<msg timestamp="20201030 18:32:56.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.991" endtime="20201030 18:32:56.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.016" endtime="20201030 18:32:56.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.019" endtime="20201030 18:32:56.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.989" endtime="20201030 18:32:56.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.987" endtime="20201030 18:32:56.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.027" endtime="20201030 18:32:56.313"></status>
</kw>
<msg timestamp="20201030 18:32:56.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.026" endtime="20201030 18:32:56.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.317" endtime="20201030 18:32:56.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.325" endtime="20201030 18:32:56.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.023" endtime="20201030 18:32:56.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.022" endtime="20201030 18:32:56.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:56.332" level="INFO">${RESULT} = [{'diff': 0.00010633300000000012}, {'diff': 0.00010661099999999951}, {'diff': 0.00010612499999999858}, {'diff': 0.00010630600000000046}, {'diff': 0.00010690299999999847}, {'diff': 0.000106889000000002...</msg>
<status status="PASS" starttime="20201030 18:32:56.329" endtime="20201030 18:32:56.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:56.336" level="INFO">${ACCURACY} = {'diff': [0.00010633300000000012, 0.00010661099999999951, 0.00010612499999999858, 0.00010630600000000046, 0.00010690299999999847, 0.00010688900000000237, 0.00010620899999999947, 0.00010680500000000148...</msg>
<status status="PASS" starttime="20201030 18:32:56.333" endtime="20201030 18:32:56.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.340" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:32:56.339" endtime="20201030 18:32:56.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.343" level="INFO">VALUE: [0.00010633300000000012, 0.00010661099999999951, 0.00010612499999999858, 0.00010630600000000046, 0.00010690299999999847, 0.00010688900000000237, 0.00010620899999999947, 0.00010680500000000148, 0.00010626399999999828, 0.00010659699999999994, 0.00010704099999999869, 0.00010661099999999951, 0.00010659699999999994, 0.00010687499999999933, 0.00010677799999999835, 0.00010645800000000025, 0.00010677799999999835, 0.00010622199999999957, 0.00010636199999999874, 0.00010629100000000141, 0.00010608299999999987, 0.00010645800000000025, 0.00010695800000000075, 0.00010672200000000007, 0.00010702800000000207, 0.00010654199999999767, 0.000106208, 0.00010676400000000225, 0.00010676399999999878, 0.00010677799999999835, 0.00010608399999999935, 0.00010697299999999979, 0.00010694400000000118, 0.00010617999999999739, 0.00010609699999999944, 0.00010613899999999815, 0.00010650000000000243, 0.00010666700000000126, 0.00010683300000000062, 0.00010659699999999994, 0.00010680599999999749, 0.00010693100000000108, 0.00010609800000000238, 0.00010705499999999826, 0.00010654100000000166, 0.00010636100000000273, 0.00010709799999999992, 0.00010686099999999976, 0.00010647199999999982, 0.00010613900000000162]</msg>
<status status="PASS" starttime="20201030 18:32:56.341" endtime="20201030 18:32:56.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.337" endtime="20201030 18:32:56.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.348" endtime="20201030 18:32:56.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.347" endtime="20201030 18:32:56.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.346" endtime="20201030 18:32:56.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.985" endtime="20201030 18:32:56.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.985" endtime="20201030 18:32:56.369"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.378" endtime="20201030 18:32:56.399"></status>
</kw>
<msg timestamp="20201030 18:32:56.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.376" endtime="20201030 18:32:56.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.400" endtime="20201030 18:32:56.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.402" endtime="20201030 18:32:56.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.374" endtime="20201030 18:32:56.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.372" endtime="20201030 18:32:56.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.411" endtime="20201030 18:32:56.704"></status>
</kw>
<msg timestamp="20201030 18:32:56.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:56.410" endtime="20201030 18:32:56.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:56.713" endtime="20201030 18:32:56.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.730" endtime="20201030 18:32:56.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.407" endtime="20201030 18:32:56.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.406" endtime="20201030 18:32:56.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:56.744" level="INFO">${RESULT} = [{'diff': 0.00010798600000000089}, {'diff': 0.00010754200000000214}, {'diff': 0.00010734699999999722}, {'diff': 0.00010708300000000087}, {'diff': 0.00010715300000000219}, {'diff': 0.000107805999999998...</msg>
<status status="PASS" starttime="20201030 18:32:56.737" endtime="20201030 18:32:56.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:56.754" level="INFO">${ACCURACY} = {'diff': [0.00010798600000000089, 0.00010754200000000214, 0.00010734699999999722, 0.00010708300000000087, 0.00010715300000000219, 0.00010780599999999849, 0.00010765300000000269, 0.00010783299999999815...</msg>
<status status="PASS" starttime="20201030 18:32:56.746" endtime="20201030 18:32:56.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.763" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:32:56.761" endtime="20201030 18:32:56.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.768" level="INFO">VALUE: [0.00010798600000000089, 0.00010754200000000214, 0.00010734699999999722, 0.00010708300000000087, 0.00010715300000000219, 0.00010780599999999849, 0.00010765300000000269, 0.00010783299999999815, 0.00010745800000000125, 0.0001072499999999997, 0.00010766700000000226, 0.00010733300000000112, 0.00010729200000000189, 0.00010749999999999996, 0.0001072499999999997, 0.0001077219999999976, 0.00010768099999999836, 0.0001080279999999996, 0.00010729099999999894, 0.00010777699999999987, 0.00010754099999999919, 0.00010729199999999842, 0.00010770799999999803, 0.00010737499999999983, 0.00010727799999999885, 0.00010772200000000107, 0.00010730600000000146, 0.00010736099999999679, 0.00010741699999999854, 0.00010763899999999965, 0.00010720900000000047, 0.00010772200000000107, 0.00010745799999999778, 0.00010761100000000051, 0.00010772200000000107, 0.0001080279999999996, 0.00010736099999999679, 0.00010754200000000214, 0.00010791700000000251, 0.00010715299999999872, 0.0001078479999999972, 0.00010745900000000072, 0.00010729100000000241, 0.00010779099999999944, 0.00010759700000000094, 0.00010711100000000001, 0.00010784699999999772, 0.00010745900000000072, 0.00010761100000000051, 0.00010777799999999935]</msg>
<status status="PASS" starttime="20201030 18:32:56.765" endtime="20201030 18:32:56.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.756" endtime="20201030 18:32:56.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.773" endtime="20201030 18:32:56.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.772" endtime="20201030 18:32:56.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.771" endtime="20201030 18:32:56.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.370" endtime="20201030 18:32:56.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.370" endtime="20201030 18:32:56.794"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.803" endtime="20201030 18:32:56.824"></status>
</kw>
<msg timestamp="20201030 18:32:56.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.801" endtime="20201030 18:32:56.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.825" endtime="20201030 18:32:56.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.828" endtime="20201030 18:32:56.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.799" endtime="20201030 18:32:56.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.797" endtime="20201030 18:32:56.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.837" endtime="20201030 18:32:57.124"></status>
</kw>
<msg timestamp="20201030 18:32:57.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.835" endtime="20201030 18:32:57.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.128" endtime="20201030 18:32:57.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.136" endtime="20201030 18:32:57.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.833" endtime="20201030 18:32:57.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.831" endtime="20201030 18:32:57.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.142" level="INFO">${RESULT} = [{'diff': 0.00010884700000000219}, {'diff': 0.00010879199999999992}, {'diff': 0.00010855599999999924}, {'diff': 0.00010865300000000022}, {'diff': 0.00010809800000000092}, {'diff': 0.000108402000000000...</msg>
<status status="PASS" starttime="20201030 18:32:57.139" endtime="20201030 18:32:57.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.146" level="INFO">${ACCURACY} = {'diff': [0.00010884700000000219, 0.00010879199999999992, 0.00010855599999999924, 0.00010865300000000022, 0.00010809800000000092, 0.0001084020000000005, 0.00010866600000000032, 0.00010854100000000019,...</msg>
<status status="PASS" starttime="20201030 18:32:57.143" endtime="20201030 18:32:57.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.151" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.150" endtime="20201030 18:32:57.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.153" level="INFO">VALUE: [0.00010884700000000219, 0.00010879199999999992, 0.00010855599999999924, 0.00010865300000000022, 0.00010809800000000092, 0.0001084020000000005, 0.00010866600000000032, 0.00010854100000000019, 0.00010837500000000083, 0.00010870799999999903, 0.00010841699999999954, 0.00010840299999999997, 0.00010809700000000144, 0.00010827799999999985, 0.00010838800000000093, 0.00010851400000000053, 0.00010897299999999832, 0.00010816599999999982, 0.00010817999999999939, 0.00010847200000000182, 0.00010841600000000007, 0.00010844499999999868, 0.00010847199999999835, 0.00010827799999999985, 0.0001090280000000006, 0.00010904200000000017, 0.00010820900000000147, 0.00010816700000000276, 0.00010820900000000147, 0.00010897299999999832, 0.00010842999999999964, 0.00010879100000000044, 0.00010866600000000032, 0.00010884699999999872, 0.00010837500000000083, 0.00010815199999999678, 0.0001088890000000009, 0.00010816699999999929, 0.00010830600000000246, 0.00010807000000000178, 0.00010848600000000139, 0.00010827799999999985, 0.00010819400000000243, 0.0001084020000000005, 0.00010859699999999847, 0.00010840299999999997, 0.00010893099999999961, 0.00010816699999999929, 0.00010884699999999872, 0.0001082500000000007]</msg>
<status status="PASS" starttime="20201030 18:32:57.152" endtime="20201030 18:32:57.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.147" endtime="20201030 18:32:57.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.158" endtime="20201030 18:32:57.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.156" endtime="20201030 18:32:57.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.155" endtime="20201030 18:32:57.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.795" endtime="20201030 18:32:57.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.794" endtime="20201030 18:32:57.179"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.187" endtime="20201030 18:32:57.209"></status>
</kw>
<msg timestamp="20201030 18:32:57.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.186" endtime="20201030 18:32:57.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.211" endtime="20201030 18:32:57.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.213" endtime="20201030 18:32:57.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.183" endtime="20201030 18:32:57.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.181" endtime="20201030 18:32:57.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.222" endtime="20201030 18:32:57.514"></status>
</kw>
<msg timestamp="20201030 18:32:57.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.220" endtime="20201030 18:32:57.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.523" endtime="20201030 18:32:57.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.541" endtime="20201030 18:32:57.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.218" endtime="20201030 18:32:57.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.216" endtime="20201030 18:32:57.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.554" level="INFO">${RESULT} = [{'diff': 0.00010972299999999907}, {'diff': 0.00010911099999999854}, {'diff': 0.00010983300000000015}, {'diff': 0.00010934699999999922}, {'diff': 0.00010965300000000122}, {'diff': 0.000109610999999999...</msg>
<status status="PASS" starttime="20201030 18:32:57.548" endtime="20201030 18:32:57.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.563" level="INFO">${ACCURACY} = {'diff': [0.00010972299999999907, 0.00010911099999999854, 0.00010983300000000015, 0.00010934699999999922, 0.00010965300000000122, 0.00010961099999999904, 0.00010961099999999904, 0.00010981900000000058...</msg>
<status status="PASS" starttime="20201030 18:32:57.556" endtime="20201030 18:32:57.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.572" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.570" endtime="20201030 18:32:57.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.577" level="INFO">VALUE: [0.00010972299999999907, 0.00010911099999999854, 0.00010983300000000015, 0.00010934699999999922, 0.00010965300000000122, 0.00010961099999999904, 0.00010961099999999904, 0.00010981900000000058, 0.00010974999999999874, 0.00010930599999999999, 0.00010907000000000278, 0.00010991700000000104, 0.00010926399999999781, 0.00010934699999999922, 0.00010956900000000033, 0.00010979100000000144, 0.0001092219999999991, 0.00010990300000000147, 0.0001090829999999994, 0.00010952799999999763, 0.00010984699999999972, 0.0001095280000000011, 0.00010993100000000061, 0.00010954200000000067, 0.00010945899999999925, 0.00010911099999999854, 0.00010959699999999947, 0.00010956900000000033, 0.00010983300000000015, 0.0001098890000000019, 0.00010972299999999907, 0.00010918099999999986, 0.00010934699999999922, 0.00010909699999999897, 0.00010948599999999892, 0.00010945899999999925, 0.00010924999999999824, 0.00011002699999999865, 0.00010916599999999735, 0.00010931999999999956, 0.00010959700000000294, 0.0001090690000000033, 0.00010950000000000196, 0.00010916700000000029, 0.00011001399999999856, 0.00010933299999999965, 0.00010952699999999815, 0.0001095419999999972, 0.00010915300000000072, 0.0001095829999999999]</msg>
<status status="PASS" starttime="20201030 18:32:57.574" endtime="20201030 18:32:57.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.565" endtime="20201030 18:32:57.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.584" endtime="20201030 18:32:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.583" endtime="20201030 18:32:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.582" endtime="20201030 18:32:57.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.180" endtime="20201030 18:32:57.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.179" endtime="20201030 18:32:57.605"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.614" endtime="20201030 18:32:57.634"></status>
</kw>
<msg timestamp="20201030 18:32:57.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.612" endtime="20201030 18:32:57.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.636" endtime="20201030 18:32:57.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.638" endtime="20201030 18:32:57.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.610" endtime="20201030 18:32:57.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.607" endtime="20201030 18:32:57.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.647" endtime="20201030 18:32:57.932"></status>
</kw>
<msg timestamp="20201030 18:32:57.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.646" endtime="20201030 18:32:57.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.936" endtime="20201030 18:32:57.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.944" endtime="20201030 18:32:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.643" endtime="20201030 18:32:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.641" endtime="20201030 18:32:57.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.951" level="INFO">${RESULT} = [{'diff': 0.00011086100000000029}, {'diff': 0.00011083300000000115}, {'diff': 0.00011016700000000129}, {'diff': 0.00011041699999999807}, {'diff': 0.0001102220000000001}, {'diff': 0.0001104859999999999...</msg>
<status status="PASS" starttime="20201030 18:32:57.947" endtime="20201030 18:32:57.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.956" level="INFO">${ACCURACY} = {'diff': [0.00011086100000000029, 0.00011083300000000115, 0.00011016700000000129, 0.00011041699999999807, 0.0001102220000000001, 0.00011048599999999992, 0.00011098600000000042, 0.00011041600000000207,...</msg>
<status status="PASS" starttime="20201030 18:32:57.952" endtime="20201030 18:32:57.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.960" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.959" endtime="20201030 18:32:57.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.962" level="INFO">VALUE: [0.00011086100000000029, 0.00011083300000000115, 0.00011016700000000129, 0.00011041699999999807, 0.0001102220000000001, 0.00011048599999999992, 0.00011098600000000042, 0.00011041600000000207, 0.000110209, 0.00011023599999999967, 0.00011009799999999945, 0.00011066599999999885, 0.00011080500000000201, 0.00011016700000000129, 0.00011102799999999913, 0.00011019400000000096, 0.00011063899999999918, 0.00011055600000000124, 0.00011097200000000085, 0.00011009800000000292, 0.00011086100000000029, 0.00011009699999999997, 0.00011079100000000244, 0.0001107769999999994, 0.00011076399999999931, 0.00011073600000000017, 0.00011077799999999888, 0.00011061100000000004, 0.00011059700000000047, 0.00011074999999999974, 0.00011016700000000129, 0.00011083399999999716, 0.0001100700000000003, 0.00011052699999999915, 0.000110596999999997, 0.00011080499999999854, 0.00011065300000000222, 0.00011066700000000179, 0.00011054200000000167, 0.00011029199999999795, 0.00011023599999999967, 0.0001102220000000001, 0.00011084700000000072, 0.00011030599999999752, 0.00011036199999999927, 0.0001105700000000008, 0.00011040199999999903, 0.0001102769999999989, 0.0001110700000000013, 0.0001110280000000026]</msg>
<status status="PASS" starttime="20201030 18:32:57.961" endtime="20201030 18:32:57.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.956" endtime="20201030 18:32:57.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.967" endtime="20201030 18:32:57.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.966" endtime="20201030 18:32:57.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.965" endtime="20201030 18:32:57.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.606" endtime="20201030 18:32:57.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.605" endtime="20201030 18:32:57.988"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.996" endtime="20201030 18:32:58.017"></status>
</kw>
<msg timestamp="20201030 18:32:58.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.995" endtime="20201030 18:32:58.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.019" endtime="20201030 18:32:58.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.021" endtime="20201030 18:32:58.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.992" endtime="20201030 18:32:58.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.990" endtime="20201030 18:32:58.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.030" endtime="20201030 18:32:58.324"></status>
</kw>
<msg timestamp="20201030 18:32:58.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.029" endtime="20201030 18:32:58.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.333" endtime="20201030 18:32:58.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.351" endtime="20201030 18:32:58.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.026" endtime="20201030 18:32:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.024" endtime="20201030 18:32:58.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.364" level="INFO">${RESULT} = [{'diff': 0.00011163900000000018}, {'diff': 0.00011109800000000045}, {'diff': 0.00011148599999999745}, {'diff': 0.00011151400000000006}, {'diff': 0.00011159700000000147}, {'diff': 0.000111971999999998...</msg>
<status status="PASS" starttime="20201030 18:32:58.358" endtime="20201030 18:32:58.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.373" level="INFO">${ACCURACY} = {'diff': [0.00011163900000000018, 0.00011109800000000045, 0.00011148599999999745, 0.00011151400000000006, 0.00011159700000000147, 0.00011197199999999838, 0.00011193099999999914, 0.00011125000000000024...</msg>
<status status="PASS" starttime="20201030 18:32:58.366" endtime="20201030 18:32:58.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.382" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.380" endtime="20201030 18:32:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.387" level="INFO">VALUE: [0.00011163900000000018, 0.00011109800000000045, 0.00011148599999999745, 0.00011151400000000006, 0.00011159700000000147, 0.00011197199999999838, 0.00011193099999999914, 0.00011125000000000024, 0.0001114029999999995, 0.00011126399999999981, 0.00011177799999999988, 0.00011126399999999981, 0.0001120549999999998, 0.00011142999999999917, 0.00011147199999999788, 0.00011173600000000117, 0.00011197199999999838, 0.00011120800000000153, 0.00011126399999999981, 0.00011123600000000067, 0.00011145799999999831, 0.00011126399999999981, 0.00011116699999999882, 0.00011180600000000249, 0.00011123600000000067, 0.00011183399999999816, 0.00011166599999999985, 0.00011195800000000228, 0.00011145800000000178, 0.00011131899999999861, 0.00011106899999999836, 0.00011130600000000199, 0.000111903, 0.00011145799999999831, 0.00011127799999999938, 0.00011201400000000056, 0.00011163900000000018, 0.00011197199999999838, 0.00011151400000000006, 0.00011123600000000067, 0.00011202800000000013, 0.00011195799999999881, 0.000111903, 0.00011145799999999831, 0.000111903, 0.00011202700000000065, 0.00011177799999999988, 0.00011105599999999827, 0.00011142999999999917, 0.00011204100000000022]</msg>
<status status="PASS" starttime="20201030 18:32:58.384" endtime="20201030 18:32:58.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.375" endtime="20201030 18:32:58.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.392" endtime="20201030 18:32:58.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.391" endtime="20201030 18:32:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.389" endtime="20201030 18:32:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.989" endtime="20201030 18:32:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.988" endtime="20201030 18:32:58.413"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.421" endtime="20201030 18:32:58.443"></status>
</kw>
<msg timestamp="20201030 18:32:58.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.420" endtime="20201030 18:32:58.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.445" endtime="20201030 18:32:58.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.447" endtime="20201030 18:32:58.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.417" endtime="20201030 18:32:58.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.415" endtime="20201030 18:32:58.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.457" endtime="20201030 18:32:58.741"></status>
</kw>
<msg timestamp="20201030 18:32:58.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.455" endtime="20201030 18:32:58.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.746" endtime="20201030 18:32:58.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.754" endtime="20201030 18:32:58.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.453" endtime="20201030 18:32:58.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.451" endtime="20201030 18:32:58.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.760" level="INFO">${RESULT} = [{'diff': 0.00011276399999999784}, {'diff': 0.00011273700000000164}, {'diff': 0.00011259799999999848}, {'diff': 0.0001130550000000008}, {'diff': 0.00011226300000000133}, {'diff': 0.0001123609999999983...</msg>
<status status="PASS" starttime="20201030 18:32:58.757" endtime="20201030 18:32:58.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.764" level="INFO">${ACCURACY} = {'diff': [0.00011276399999999784, 0.00011273700000000164, 0.00011259799999999848, 0.0001130550000000008, 0.00011226300000000133, 0.00011236099999999832, 0.00011290199999999806, 0.00011284699999999925,...</msg>
<status status="PASS" starttime="20201030 18:32:58.761" endtime="20201030 18:32:58.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.769" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.767" endtime="20201030 18:32:58.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.772" level="INFO">VALUE: [0.00011276399999999784, 0.00011273700000000164, 0.00011259799999999848, 0.0001130550000000008, 0.00011226300000000133, 0.00011236099999999832, 0.00011290199999999806, 0.00011284699999999925, 0.00011277800000000088, 0.00011222199999999863, 0.00011277800000000088, 0.00011297199999999938, 0.00011250000000000149, 0.00011216699999999982, 0.00011216699999999982, 0.00011229199999999995, 0.00011304100000000122, 0.00011229100000000047, 0.00011216600000000035, 0.00011305600000000027, 0.00011280600000000002, 0.00011284699999999925, 0.00011286099999999882, 0.0001124030000000005, 0.00011222300000000157, 0.00011227800000000038, 0.0001130420000000007, 0.00011217999999999992, 0.00011234699999999875, 0.0001125550000000003, 0.00011243000000000017, 0.00011277800000000088, 0.00011231899999999961, 0.00011255599999999977, 0.00011295799999999981, 0.00011295899999999928, 0.00011255600000000324, 0.00011258400000000238, 0.00011277800000000088, 0.00011236100000000179, 0.00011304100000000122, 0.00011266700000000032, 0.00011215300000000025, 0.00011258399999999891, 0.00011218099999999939, 0.00011251400000000106, 0.0001122220000000021, 0.00011233399999999866, 0.00011261200000000152, 0.00011234799999999823]</msg>
<status status="PASS" starttime="20201030 18:32:58.770" endtime="20201030 18:32:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.765" endtime="20201030 18:32:58.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.777" endtime="20201030 18:32:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.775" endtime="20201030 18:32:58.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.774" endtime="20201030 18:32:58.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.414" endtime="20201030 18:32:58.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.413" endtime="20201030 18:32:58.797"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.806" endtime="20201030 18:32:58.827"></status>
</kw>
<msg timestamp="20201030 18:32:58.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.805" endtime="20201030 18:32:58.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.829" endtime="20201030 18:32:58.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.831" endtime="20201030 18:32:58.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.802" endtime="20201030 18:32:58.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.800" endtime="20201030 18:32:58.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.840" endtime="20201030 18:32:59.133"></status>
</kw>
<msg timestamp="20201030 18:32:59.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.839" endtime="20201030 18:32:59.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.142" endtime="20201030 18:32:59.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.160" endtime="20201030 18:32:59.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.836" endtime="20201030 18:32:59.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.835" endtime="20201030 18:32:59.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.173" level="INFO">${RESULT} = [{'diff': 0.00011344400000000074}, {'diff': 0.00011313800000000221}, {'diff': 0.00011336099999999932}, {'diff': 0.00011343000000000117}, {'diff': 0.00011381899999999764}, {'diff': 0.000113777999999998...</msg>
<status status="PASS" starttime="20201030 18:32:59.166" endtime="20201030 18:32:59.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.187" level="INFO">${ACCURACY} = {'diff': [0.00011344400000000074, 0.00011313800000000221, 0.00011336099999999932, 0.00011343000000000117, 0.00011381899999999764, 0.00011377799999999841, 0.00011393099999999767, 0.00011400000000000299...</msg>
<status status="PASS" starttime="20201030 18:32:59.175" endtime="20201030 18:32:59.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.196" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.194" endtime="20201030 18:32:59.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.201" level="INFO">VALUE: [0.00011344400000000074, 0.00011313800000000221, 0.00011336099999999932, 0.00011343000000000117, 0.00011381899999999764, 0.00011377799999999841, 0.00011393099999999767, 0.00011400000000000299, 0.00011402799999999866, 0.00011368100000000089, 0.00011395900000000028, 0.00011322199999999963, 0.00011336099999999932, 0.00011383300000000068, 0.00011347199999999988, 0.00011395800000000081, 0.00011345800000000031, 0.00011398599999999995, 0.00011379199999999798, 0.00011320899999999953, 0.00011345899999999978, 0.00011334799999999923, 0.00011391700000000157, 0.00011372200000000013, 0.00011311099999999907, 0.00011401399999999909, 0.0001133749999999989, 0.000113903000000002, 0.00011308299999999993, 0.00011318099999999692, 0.00011315299999999778, 0.00011311099999999907, 0.00011341700000000107, 0.00011348599999999945, 0.00011336099999999932, 0.00011315199999999831, 0.00011334699999999975, 0.0001140550000000018, 0.00011399999999999952, 0.00011377800000000188, 0.00011341700000000107, 0.000113597, 0.00011344500000000021, 0.00011374999999999927, 0.00011334799999999923, 0.00011318000000000092, 0.00011368000000000142, 0.00011398599999999995, 0.00011308299999999993, 0.00011352799999999816]</msg>
<status status="PASS" starttime="20201030 18:32:59.199" endtime="20201030 18:32:59.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.189" endtime="20201030 18:32:59.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.206" endtime="20201030 18:32:59.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.205" endtime="20201030 18:32:59.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.203" endtime="20201030 18:32:59.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.798" endtime="20201030 18:32:59.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.798" endtime="20201030 18:32:59.227"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.235" endtime="20201030 18:32:59.257"></status>
</kw>
<msg timestamp="20201030 18:32:59.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.234" endtime="20201030 18:32:59.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.258" endtime="20201030 18:32:59.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.260" endtime="20201030 18:32:59.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.231" endtime="20201030 18:32:59.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.229" endtime="20201030 18:32:59.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.269" endtime="20201030 18:32:59.556"></status>
</kw>
<msg timestamp="20201030 18:32:59.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.268" endtime="20201030 18:32:59.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.561" endtime="20201030 18:32:59.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.569" endtime="20201030 18:32:59.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.265" endtime="20201030 18:32:59.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.264" endtime="20201030 18:32:59.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.575" level="INFO">${RESULT} = [{'diff': 0.00011515299999999978}, {'diff': 0.00011484700000000125}, {'diff': 0.00011458399999999744}, {'diff': 0.00011409699999999703}, {'diff': 0.0001144169999999986}, {'diff': 0.0001144720000000008...</msg>
<status status="PASS" starttime="20201030 18:32:59.572" endtime="20201030 18:32:59.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.579" level="INFO">${ACCURACY} = {'diff': [0.00011515299999999978, 0.00011484700000000125, 0.00011458399999999744, 0.00011409699999999703, 0.0001144169999999986, 0.00011447200000000088, 0.00011484699999999778, 0.00011463800000000024,...</msg>
<status status="PASS" starttime="20201030 18:32:59.576" endtime="20201030 18:32:59.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.583" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.582" endtime="20201030 18:32:59.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.586" level="INFO">VALUE: [0.00011515299999999978, 0.00011484700000000125, 0.00011458399999999744, 0.00011409699999999703, 0.0001144169999999986, 0.00011447200000000088, 0.00011484699999999778, 0.00011463800000000024, 0.00011497199999999791, 0.00011458300000000143, 0.00011415199999999931, 0.00011465299999999928, 0.0001147360000000007, 0.00011416700000000182, 0.00011415300000000225, 0.00011486099999999735, 0.00011483299999999821, 0.00011502799999999966, 0.00011416700000000182, 0.00011465199999999981, 0.00011486100000000082, 0.0001145689999999984, 0.00011411100000000007, 0.00011477799999999941, 0.00011430599999999805, 0.00011433300000000118, 0.00011438899999999946, 0.00011454199999999873, 0.00011486100000000082, 0.00011462500000000014, 0.00011454199999999873, 0.00011458399999999744, 0.00011497199999999791, 0.00011469400000000199, 0.00011486099999999735, 0.00011498600000000095, 0.00011433299999999771, 0.0001147360000000007, 0.00011483400000000116, 0.00011452799999999916, 0.00011468100000000189, 0.0001144160000000026, 0.00011436100000000032, 0.00011420800000000106, 0.00011491599999999963, 0.00011484700000000125, 0.0001150559999999988, 0.00011480600000000202, 0.00011469499999999799, 0.0001150970000000015]</msg>
<status status="PASS" starttime="20201030 18:32:59.584" endtime="20201030 18:32:59.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.580" endtime="20201030 18:32:59.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.597" endtime="20201030 18:32:59.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.595" endtime="20201030 18:32:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.594" endtime="20201030 18:32:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.227" endtime="20201030 18:32:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.227" endtime="20201030 18:32:59.617"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.626" endtime="20201030 18:32:59.648"></status>
</kw>
<msg timestamp="20201030 18:32:59.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.624" endtime="20201030 18:32:59.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.650" endtime="20201030 18:32:59.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.652" endtime="20201030 18:32:59.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.622" endtime="20201030 18:32:59.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.620" endtime="20201030 18:32:59.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.661" endtime="20201030 18:32:59.955"></status>
</kw>
<msg timestamp="20201030 18:32:59.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.660" endtime="20201030 18:32:59.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.964" endtime="20201030 18:32:59.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.982" endtime="20201030 18:32:59.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.657" endtime="20201030 18:32:59.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.655" endtime="20201030 18:32:59.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.995" level="INFO">${RESULT} = [{'diff': 0.00011534800000000123}, {'diff': 0.00011602699999999772}, {'diff': 0.0001157910000000005}, {'diff': 0.00011586100000000182}, {'diff': 0.00011555499999999982}, {'diff': 0.0001160280000000006...</msg>
<status status="PASS" starttime="20201030 18:32:59.989" endtime="20201030 18:32:59.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.004" level="INFO">${ACCURACY} = {'diff': [0.00011534800000000123, 0.00011602699999999772, 0.0001157910000000005, 0.00011586100000000182, 0.00011555499999999982, 0.00011602800000000066, 0.00011601400000000109, 0.00011587499999999792,...</msg>
<status status="PASS" starttime="20201030 18:32:59.997" endtime="20201030 18:33:00.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.012" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.011" endtime="20201030 18:33:00.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.014" level="INFO">VALUE: [0.00011534800000000123, 0.00011602699999999772, 0.0001157910000000005, 0.00011586100000000182, 0.00011555499999999982, 0.00011602800000000066, 0.00011601400000000109, 0.00011587499999999792, 0.00011566699999999985, 0.00011569500000000246, 0.0001152230000000011, 0.00011508400000000141, 0.00011591599999999716, 0.00011516599999999988, 0.00011534699999999828, 0.00011515299999999978, 0.00011590300000000053, 0.00011604200000000023, 0.00011522200000000163, 0.00011604200000000023, 0.00011548599999999798, 0.00011576399999999737, 0.00011579099999999704, 0.00011545900000000178, 0.0001154299999999997, 0.00011561100000000157, 0.0001152360000000012, 0.00011604200000000023, 0.00011559699999999853, 0.00011533299999999871, 0.00011584700000000225, 0.00011572199999999866, 0.00011508400000000141, 0.0001160559999999998, 0.00011579099999999704, 0.00011576300000000136, 0.00011515200000000031, 0.00011568099999999942, 0.00011551400000000059, 0.00011588900000000096, 0.00011557000000000234, 0.00011583299999999921, 0.00011570800000000256, 0.00011572199999999866, 0.00011550000000000102, 0.00011559799999999801, 0.00011577800000000041, 0.00011522200000000163, 0.00011523599999999773, 0.00011583300000000268]</msg>
<status status="PASS" starttime="20201030 18:33:00.013" endtime="20201030 18:33:00.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.006" endtime="20201030 18:33:00.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.020" endtime="20201030 18:33:00.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.019" endtime="20201030 18:33:00.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.017" endtime="20201030 18:33:00.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.618" endtime="20201030 18:33:00.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.618" endtime="20201030 18:33:00.041"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.049" endtime="20201030 18:33:00.070"></status>
</kw>
<msg timestamp="20201030 18:33:00.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.048" endtime="20201030 18:33:00.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.071" endtime="20201030 18:33:00.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.074" endtime="20201030 18:33:00.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.045" endtime="20201030 18:33:00.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.043" endtime="20201030 18:33:00.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.082" endtime="20201030 18:33:00.368"></status>
</kw>
<msg timestamp="20201030 18:33:00.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.081" endtime="20201030 18:33:00.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.372" endtime="20201030 18:33:00.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.380" endtime="20201030 18:33:00.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.078" endtime="20201030 18:33:00.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.077" endtime="20201030 18:33:00.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:00.386" level="INFO">${RESULT} = [{'diff': 0.0001168049999999976}, {'diff': 0.0001165560000000003}, {'diff': 0.00011604200000000023}, {'diff': 0.00011676400000000184}, {'diff': 0.0001162499999999983}, {'diff': 0.00011677800000000141}...</msg>
<status status="PASS" starttime="20201030 18:33:00.383" endtime="20201030 18:33:00.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.391" level="INFO">${ACCURACY} = {'diff': [0.0001168049999999976, 0.0001165560000000003, 0.00011604200000000023, 0.00011676400000000184, 0.0001162499999999983, 0.00011677800000000141, 0.00011629200000000048, 0.00011616700000000035, 0...</msg>
<status status="PASS" starttime="20201030 18:33:00.387" endtime="20201030 18:33:00.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.396" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.395" endtime="20201030 18:33:00.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.398" level="INFO">VALUE: [0.0001168049999999976, 0.0001165560000000003, 0.00011604200000000023, 0.00011676400000000184, 0.0001162499999999983, 0.00011677800000000141, 0.00011629200000000048, 0.00011616700000000035, 0.00011609799999999851, 0.00011627800000000091, 0.00011608299999999946, 0.00011697199999999991, 0.00011618099999999992, 0.00011676399999999837, 0.00011699999999999905, 0.0001166109999999991, 0.00011658299999999996, 0.00011609699999999903, 0.00011661100000000257, 0.00011697299999999938, 0.00011702800000000166, 0.00011684699999999978, 0.00011616600000000088, 0.00011640299999999756, 0.00011605500000000032, 0.00011663899999999824, 0.00011641699999999713, 0.00011684699999999978, 0.00011702800000000166, 0.00011669499999999999, 0.00011659799999999901, 0.00011618000000000045, 0.00011690199999999859, 0.00011619400000000002, 0.0001168889999999985, 0.00011623599999999873, 0.00011693100000000067, 0.00011705599999999733, 0.00011615300000000078, 0.00011680600000000055, 0.00011647299999999888, 0.0001164170000000006, 0.00011629200000000048, 0.00011691599999999816, 0.0001161109999999986, 0.00011609699999999903, 0.00011608299999999946, 0.00011656999999999987, 0.00011693100000000067, 0.00011634699999999928]</msg>
<status status="PASS" starttime="20201030 18:33:00.397" endtime="20201030 18:33:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.392" endtime="20201030 18:33:00.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.403" endtime="20201030 18:33:00.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.402" endtime="20201030 18:33:00.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.400" endtime="20201030 18:33:00.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.042" endtime="20201030 18:33:00.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.041" endtime="20201030 18:33:00.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.346" endtime="20201030 18:33:00.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.428" endtime="20201030 18:33:00.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.426" endtime="20201030 18:33:00.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.425" endtime="20201030 18:33:00.448"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:21.274" endtime="20201030 18:33:00.448" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:39.899" endtime="20201030 18:33:00.452"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.506" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:33:00.514" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:33:01.604" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:33:00.504" endtime="20201030 18:33:01.605"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.611" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 18:33:01.608" endtime="20201030 18:33:02.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.503" endtime="20201030 18:33:02.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.619" endtime="20201030 18:33:02.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.616" endtime="20201030 18:33:02.848"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.860" endtime="20201030 18:33:02.882"></status>
</kw>
<msg timestamp="20201030 18:33:02.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.858" endtime="20201030 18:33:02.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.884" endtime="20201030 18:33:02.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.889" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:02.886" endtime="20201030 18:33:02.889"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:02.856" endtime="20201030 18:33:02.890"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:02.854" endtime="20201030 18:33:02.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.853" endtime="20201030 18:33:02.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:02.894" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:02.893" endtime="20201030 18:33:02.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.891" endtime="20201030 18:33:02.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.852" endtime="20201030 18:33:02.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.851" endtime="20201030 18:33:02.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.896" endtime="20201030 18:33:02.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.850" endtime="20201030 18:33:02.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.899" endtime="20201030 18:33:02.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.848" endtime="20201030 18:33:02.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.502" endtime="20201030 18:33:02.902"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.907" endtime="20201030 18:33:02.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.906" endtime="20201030 18:33:02.927"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.943" endtime="20201030 18:33:02.960"></status>
</kw>
<msg timestamp="20201030 18:33:02.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.941" endtime="20201030 18:33:02.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.962" endtime="20201030 18:33:02.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.968" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:02.966" endtime="20201030 18:33:02.969"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:02.937" endtime="20201030 18:33:02.971"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:02.934" endtime="20201030 18:33:02.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.933" endtime="20201030 18:33:02.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:02.976" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:02.975" endtime="20201030 18:33:02.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.973" endtime="20201030 18:33:02.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.931" endtime="20201030 18:33:02.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.931" endtime="20201030 18:33:02.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.978" endtime="20201030 18:33:02.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.929" endtime="20201030 18:33:02.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.928" endtime="20201030 18:33:02.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.904" endtime="20201030 18:33:02.981"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.989" endtime="20201030 18:33:09.114"></status>
</kw>
<msg timestamp="20201030 18:33:09.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.987" endtime="20201030 18:33:09.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.120" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.117" endtime="20201030 18:33:09.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.122" endtime="20201030 18:33:09.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.984" endtime="20201030 18:33:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.983" endtime="20201030 18:33:09.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.133" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:09.129" endtime="20201030 18:33:09.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.142" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:09.140" endtime="20201030 18:33:09.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.146" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:09.144" endtime="20201030 18:33:09.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.135" endtime="20201030 18:33:09.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.156" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:09.154" endtime="20201030 18:33:09.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.160" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:09.158" endtime="20201030 18:33:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.149" endtime="20201030 18:33:09.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.170" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:09.167" endtime="20201030 18:33:09.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.174" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:33:09.172" endtime="20201030 18:33:09.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.163" endtime="20201030 18:33:09.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.181" endtime="20201030 18:33:09.466"></status>
</kw>
<msg timestamp="20201030 18:33:09.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071237139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171264514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.179" endtime="20201030 18:33:09.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071237139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171264514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.469" endtime="20201030 18:33:09.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.475" endtime="20201030 18:33:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.177" endtime="20201030 18:33:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.175" endtime="20201030 18:33:09.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:09.481" level="INFO">${FILTERED} = [{'diff': 0.100027375}, {'diff': 0.10000768000000002}, {'diff': 0.10000868000000002}, {'diff': 0.100008708}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000920800000...</msg>
<status status="PASS" starttime="20201030 18:33:09.478" endtime="20201030 18:33:09.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.485" level="INFO">${RESULT} = {'diff': [0.100027375, 0.10000768000000002, 0.10000868000000002, 0.100008708, 5.410000000205528e-07, 5.419999999922709e-07, 0.10000920800000002, 0.10000868100000004, 0.100009236, 0.10000920899999999, ...</msg>
<status status="PASS" starttime="20201030 18:33:09.482" endtime="20201030 18:33:09.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.489" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:09.488" endtime="20201030 18:33:09.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.491" level="INFO">VALUE: [0.100027375, 0.10000768000000002, 0.10000868000000002, 0.100008708, 5.410000000205528e-07, 5.419999999922709e-07, 0.10000920800000002, 0.10000868100000004, 0.100009236, 0.10000920899999999, 0.10000919399999986, 0.1000087220000001, 0.100009236, 0.10000917999999981, 5.410000003536197e-07, 0.10000922199999973, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000092640000001, 5.419999999922709e-07, 0.1000091529999998, 0.10000873599999993, 0.1000092079999999, 0.10000923700000008, 0.1000092079999999, 0.10000919500000016, 0.10000920800000035, 0.10000920899999954, 0.10000868100000027, 5.419999995481817e-07, 0.10000920799999946, 0.10000922199999973]</msg>
<status status="PASS" starttime="20201030 18:33:09.490" endtime="20201030 18:33:09.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.485" endtime="20201030 18:33:09.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:09.496" endtime="20201030 18:33:09.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.494" endtime="20201030 18:33:09.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.493" endtime="20201030 18:33:09.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.981" endtime="20201030 18:33:09.516"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:02.902" endtime="20201030 18:33:09.517" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:09.523" endtime="20201030 18:33:09.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.522" endtime="20201030 18:33:09.543"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.557" endtime="20201030 18:33:09.573"></status>
</kw>
<msg timestamp="20201030 18:33:09.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.555" endtime="20201030 18:33:09.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.575" endtime="20201030 18:33:09.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.580" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:09.577" endtime="20201030 18:33:09.580"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:09.553" endtime="20201030 18:33:09.581"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:09.550" endtime="20201030 18:33:09.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.548" endtime="20201030 18:33:09.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:09.586" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:09.585" endtime="20201030 18:33:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.583" endtime="20201030 18:33:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.547" endtime="20201030 18:33:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.547" endtime="20201030 18:33:09.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.587" endtime="20201030 18:33:09.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.545" endtime="20201030 18:33:09.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.544" endtime="20201030 18:33:09.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.520" endtime="20201030 18:33:09.590"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.599" endtime="20201030 18:33:15.725"></status>
</kw>
<msg timestamp="20201030 18:33:15.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.597" endtime="20201030 18:33:15.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.728" endtime="20201030 18:33:15.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.733" endtime="20201030 18:33:15.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.595" endtime="20201030 18:33:15.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.593" endtime="20201030 18:33:15.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:15.745" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:15.741" endtime="20201030 18:33:15.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.754" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:15.752" endtime="20201030 18:33:15.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.758" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:15.756" endtime="20201030 18:33:15.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.747" endtime="20201030 18:33:15.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.769" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:15.766" endtime="20201030 18:33:15.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.773" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:15.771" endtime="20201030 18:33:15.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.762" endtime="20201030 18:33:15.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.783" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:15.781" endtime="20201030 18:33:15.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.789" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:33:15.787" endtime="20201030 18:33:15.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.776" endtime="20201030 18:33:15.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.805" endtime="20201030 18:33:16.094"></status>
</kw>
<msg timestamp="20201030 18:33:16.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065300042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165338111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.802" endtime="20201030 18:33:16.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065300042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165338111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.098" endtime="20201030 18:33:16.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.104" endtime="20201030 18:33:16.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.796" endtime="20201030 18:33:16.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.793" endtime="20201030 18:33:16.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:16.110" level="INFO">${FILTERED} = [{'diff': 0.10003806900000001}, {'diff': 0.09999875000000003}, {'diff': 0.10000822199999998}, {'diff': 5.409999999095305e-07}, {'diff': 0.100009181}, {'diff': 0.10000915300000002}, {'diff': 0.10000919...</msg>
<status status="PASS" starttime="20201030 18:33:16.107" endtime="20201030 18:33:16.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:16.113" level="INFO">${RESULT} = {'diff': [0.10003806900000001, 0.09999875000000003, 0.10000822199999998, 5.409999999095305e-07, 0.100009181, 0.10000915300000002, 0.10000919400000008, 0.10000870800000006, 0.10000920899999999, 0.10000...</msg>
<status status="PASS" starttime="20201030 18:33:16.111" endtime="20201030 18:33:16.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.117" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:16.116" endtime="20201030 18:33:16.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.120" level="INFO">VALUE: [0.10003806900000001, 0.09999875000000003, 0.10000822199999998, 5.409999999095305e-07, 0.100009181, 0.10000915300000002, 0.10000919400000008, 0.10000870800000006, 0.10000920899999999, 0.10000869500000009, 0.10000918000000003, 0.10000919400000008, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000924999999983, 0.10000916700000007, 0.10000869400000001, 0.10000866599999991, 5.410000003536197e-07, 5.419999999922709e-07, 0.1000092079999999, 5.409999999095305e-07, 0.1000092079999999, 0.10000868100000027, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 0.10000926299999957, 5.420000004363601e-07, 5.419999995481817e-07, 0.100009236, 5.420000004363601e-07, 0.10000920799999946, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 18:33:16.119" endtime="20201030 18:33:16.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.114" endtime="20201030 18:33:16.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.125" endtime="20201030 18:33:16.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.123" endtime="20201030 18:33:16.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.122" endtime="20201030 18:33:16.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.591" endtime="20201030 18:33:16.145"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:09.518" endtime="20201030 18:33:16.146" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.152" endtime="20201030 18:33:16.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.151" endtime="20201030 18:33:16.175"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.188" endtime="20201030 18:33:16.205"></status>
</kw>
<msg timestamp="20201030 18:33:16.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.186" endtime="20201030 18:33:16.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.208" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.207" endtime="20201030 18:33:16.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.211" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:16.209" endtime="20201030 18:33:16.212"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:16.184" endtime="20201030 18:33:16.212"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:16.181" endtime="20201030 18:33:16.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.180" endtime="20201030 18:33:16.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:16.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:16.216" endtime="20201030 18:33:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.214" endtime="20201030 18:33:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.179" endtime="20201030 18:33:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.179" endtime="20201030 18:33:16.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.218" endtime="20201030 18:33:16.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.177" endtime="20201030 18:33:16.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.176" endtime="20201030 18:33:16.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.149" endtime="20201030 18:33:16.221"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.229" endtime="20201030 18:33:22.355"></status>
</kw>
<msg timestamp="20201030 18:33:22.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.227" endtime="20201030 18:33:22.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.361" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.358" endtime="20201030 18:33:22.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.364" endtime="20201030 18:33:22.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.225" endtime="20201030 18:33:22.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.223" endtime="20201030 18:33:22.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.375" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:22.371" endtime="20201030 18:33:22.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.385" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:22.381" endtime="20201030 18:33:22.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.389" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:22.387" endtime="20201030 18:33:22.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.376" endtime="20201030 18:33:22.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.399" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:22.397" endtime="20201030 18:33:22.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.403" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:22.401" endtime="20201030 18:33:22.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.392" endtime="20201030 18:33:22.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.413" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:22.411" endtime="20201030 18:33:22.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.417" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:33:22.415" endtime="20201030 18:33:22.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.406" endtime="20201030 18:33:22.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.425" endtime="20201030 18:33:22.707"></status>
</kw>
<msg timestamp="20201030 18:33:22.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063623861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163733736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.424" endtime="20201030 18:33:22.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063623861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163733736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.710" endtime="20201030 18:33:22.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.716" endtime="20201030 18:33:22.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.421" endtime="20201030 18:33:22.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.419" endtime="20201030 18:33:22.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:22.723" level="INFO">${FILTERED} = [{'diff': 0.10010987499999999}, {'diff': 5.409999999650417e-07}, {'diff': 0.100009236}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000924999999994}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201030 18:33:22.720" endtime="20201030 18:33:22.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.726" level="INFO">${RESULT} = {'diff': [0.10010987499999999, 5.409999999650417e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000924999999994, 0.10000923599999989, 0.10000867999999996, 0.10000919500000016, 5.4...</msg>
<status status="PASS" starttime="20201030 18:33:22.723" endtime="20201030 18:33:22.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.731" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:22.729" endtime="20201030 18:33:22.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.733" level="INFO">VALUE: [0.10010987499999999, 5.409999999650417e-07, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000924999999994, 0.10000923599999989, 0.10000867999999996, 0.10000919500000016, 5.409999999095305e-07, 0.10000922199999995, 0.10000865299999995, 0.10000873599999993, 0.10000922199999995, 0.10000919499999972, 0.10000869499999965, 0.10000919400000008, 0.10000869400000001, 0.10000919399999963, 5.419999999922709e-07, 0.10000920899999999, 0.10000870899999992, 0.10000919399999963, 0.10000916700000007, 0.10000869400000001, 5.409999999095305e-07, 0.100009236, 5.419999995481817e-07, 5.419999995481817e-07, 0.100009236, 0.100008667, 0.10000870799999984, 0.10000923700000008, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:33:22.732" endtime="20201030 18:33:22.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.727" endtime="20201030 18:33:22.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.738" endtime="20201030 18:33:22.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.736" endtime="20201030 18:33:22.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.735" endtime="20201030 18:33:22.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.222" endtime="20201030 18:33:22.759"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:16.147" endtime="20201030 18:33:22.759" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.765" endtime="20201030 18:33:22.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.764" endtime="20201030 18:33:22.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.798" endtime="20201030 18:33:22.816"></status>
</kw>
<msg timestamp="20201030 18:33:22.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.796" endtime="20201030 18:33:22.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.817" endtime="20201030 18:33:22.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.822" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:22.820" endtime="20201030 18:33:22.822"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:22.794" endtime="20201030 18:33:22.823"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:22.792" endtime="20201030 18:33:22.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.790" endtime="20201030 18:33:22.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:22.827" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:22.827" endtime="20201030 18:33:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.824" endtime="20201030 18:33:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.790" endtime="20201030 18:33:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.789" endtime="20201030 18:33:22.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.829" endtime="20201030 18:33:22.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.788" endtime="20201030 18:33:22.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.786" endtime="20201030 18:33:22.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.763" endtime="20201030 18:33:22.832"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.841" endtime="20201030 18:33:28.966"></status>
</kw>
<msg timestamp="20201030 18:33:28.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.838" endtime="20201030 18:33:28.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.970" endtime="20201030 18:33:28.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.975" endtime="20201030 18:33:28.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.835" endtime="20201030 18:33:28.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.834" endtime="20201030 18:33:28.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:28.986" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:28.983" endtime="20201030 18:33:28.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.994" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:28.992" endtime="20201030 18:33:28.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.998" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:28.996" endtime="20201030 18:33:28.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.988" endtime="20201030 18:33:29.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.008" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:29.006" endtime="20201030 18:33:29.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.012" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:29.011" endtime="20201030 18:33:29.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.002" endtime="20201030 18:33:29.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.022" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:29.020" endtime="20201030 18:33:29.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.026" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:33:29.024" endtime="20201030 18:33:29.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.015" endtime="20201030 18:33:29.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.042" endtime="20201030 18:33:29.325"></status>
</kw>
<msg timestamp="20201030 18:33:29.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065008222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165169583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.039" endtime="20201030 18:33:29.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065008222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165169583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.328" endtime="20201030 18:33:29.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.334" endtime="20201030 18:33:29.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.033" endtime="20201030 18:33:29.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.029" endtime="20201030 18:33:29.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:29.340" level="INFO">${FILTERED} = [{'diff': 0.100161361}, {'diff': 0.099838278}, {'diff': 0.100009195}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999922709e-07}...</msg>
<status status="PASS" starttime="20201030 18:33:29.338" endtime="20201030 18:33:29.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:29.345" level="INFO">${RESULT} = {'diff': [0.100161361, 0.099838278, 0.100009195, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 0.10000915199999993, 0.10000922300000004, 0.100009165999999...</msg>
<status status="PASS" starttime="20201030 18:33:29.341" endtime="20201030 18:33:29.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.349" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:29.348" endtime="20201030 18:33:29.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.351" level="INFO">VALUE: [0.100161361, 0.099838278, 0.100009195, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 0.10000915199999993, 0.10000922300000004, 0.10000916599999998, 0.10000869500000009, 0.10000925000000005, 5.410000001315751e-07, 0.10000913900000041, 0.10000869400000001, 0.10000865299999973, 0.10000869500000009, 0.10000922200000018, 0.10000874999999976, 0.1000092079999999, 0.10000918099999989, 0.10000870799999984, 0.10000929199999975, 0.100009236, 0.10000920899999999, 0.10000868100000027, 5.420000004363601e-07, 0.10000925000000027, 0.10000922200000062, 0.10000870799999984, 0.10000919499999927, 0.10000919400000008, 0.10000870799999984]</msg>
<status status="PASS" starttime="20201030 18:33:29.350" endtime="20201030 18:33:29.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.345" endtime="20201030 18:33:29.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.356" endtime="20201030 18:33:29.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.354" endtime="20201030 18:33:29.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.353" endtime="20201030 18:33:29.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.832" endtime="20201030 18:33:29.376"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:22.761" endtime="20201030 18:33:29.377" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.383" endtime="20201030 18:33:29.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.382" endtime="20201030 18:33:29.403"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.416" endtime="20201030 18:33:29.434"></status>
</kw>
<msg timestamp="20201030 18:33:29.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.414" endtime="20201030 18:33:29.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.436" endtime="20201030 18:33:29.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.440" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:29.438" endtime="20201030 18:33:29.441"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:29.412" endtime="20201030 18:33:29.441"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:29.410" endtime="20201030 18:33:29.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.408" endtime="20201030 18:33:29.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:29.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:29.445" endtime="20201030 18:33:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.443" endtime="20201030 18:33:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.408" endtime="20201030 18:33:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.407" endtime="20201030 18:33:29.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.447" endtime="20201030 18:33:29.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.406" endtime="20201030 18:33:29.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.404" endtime="20201030 18:33:29.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.380" endtime="20201030 18:33:29.450"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.459" endtime="20201030 18:33:35.585"></status>
</kw>
<msg timestamp="20201030 18:33:35.586" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.458" endtime="20201030 18:33:35.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.591" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.588" endtime="20201030 18:33:35.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.594" endtime="20201030 18:33:35.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.455" endtime="20201030 18:33:35.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.452" endtime="20201030 18:33:35.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:35.605" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:35.601" endtime="20201030 18:33:35.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.613" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:35.611" endtime="20201030 18:33:35.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.617" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:35.615" endtime="20201030 18:33:35.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.606" endtime="20201030 18:33:35.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.627" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:35.625" endtime="20201030 18:33:35.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.631" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:35.629" endtime="20201030 18:33:35.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.620" endtime="20201030 18:33:35.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.641" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:35.639" endtime="20201030 18:33:35.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.645" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:33:35.643" endtime="20201030 18:33:35.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.634" endtime="20201030 18:33:35.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.660" endtime="20201030 18:33:35.948"></status>
</kw>
<msg timestamp="20201030 18:33:35.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065529139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165764583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.657" endtime="20201030 18:33:35.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065529139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165764583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.951" endtime="20201030 18:33:35.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.957" endtime="20201030 18:33:35.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.652" endtime="20201030 18:33:35.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.648" endtime="20201030 18:33:35.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:35.963" level="INFO">${FILTERED} = [{'diff': 0.10023544399999999}, {'diff': 0.10003813900000003}, {'diff': 0.10000922200000001}, {'diff': 0.10000866600000002}, {'diff': 0.10000867999999996}, {'diff': 0.1000092079999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:33:35.961" endtime="20201030 18:33:35.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:35.968" level="INFO">${RESULT} = {'diff': [0.10023544399999999, 0.10003813900000003, 0.10000922200000001, 0.10000866600000002, 0.10000867999999996, 0.1000092079999999, 0.10000870800000006, 0.10000920800000013, 5.419999999922709e-07, ...</msg>
<status status="PASS" starttime="20201030 18:33:35.964" endtime="20201030 18:33:35.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.972" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:35.971" endtime="20201030 18:33:35.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.974" level="INFO">VALUE: [0.10023544399999999, 0.10003813900000003, 0.10000922200000001, 0.10000866600000002, 0.10000867999999996, 0.1000092079999999, 0.10000870800000006, 0.10000920800000013, 5.419999999922709e-07, 0.10000916599999998, 5.410000001315751e-07, 0.10000920800000013, 0.10000870799999984, 5.410000003536197e-07, 0.10000922200000018, 0.10000919499999972, 0.10000870900000036, 0.10000915199999971, 0.10000869500000009, 0.1000092079999999, 0.10000919499999972, 0.10000868100000027, 0.10000920899999999, 0.10000868099999982, 0.10000869500000009, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000926399999965, 0.10000920800000035, 0.10000870800000072, 5.410000003536197e-07, 0.10000922199999973, 5.419999995481817e-07, 0.10000920800000035]</msg>
<status status="PASS" starttime="20201030 18:33:35.973" endtime="20201030 18:33:35.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.968" endtime="20201030 18:33:35.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:35.979" endtime="20201030 18:33:35.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.977" endtime="20201030 18:33:35.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.976" endtime="20201030 18:33:35.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.451" endtime="20201030 18:33:35.999"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:29.378" endtime="20201030 18:33:36.000" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:36.006" endtime="20201030 18:33:36.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.005" endtime="20201030 18:33:36.026"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.039" endtime="20201030 18:33:36.056"></status>
</kw>
<msg timestamp="20201030 18:33:36.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.037" endtime="20201030 18:33:36.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.057" endtime="20201030 18:33:36.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:36.060" endtime="20201030 18:33:36.062"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:36.035" endtime="20201030 18:33:36.063"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:36.033" endtime="20201030 18:33:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.031" endtime="20201030 18:33:36.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:36.067" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:36.067" endtime="20201030 18:33:36.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.064" endtime="20201030 18:33:36.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.031" endtime="20201030 18:33:36.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.030" endtime="20201030 18:33:36.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.069" endtime="20201030 18:33:36.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.029" endtime="20201030 18:33:36.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.027" endtime="20201030 18:33:36.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.004" endtime="20201030 18:33:36.072"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.080" endtime="20201030 18:33:42.205"></status>
</kw>
<msg timestamp="20201030 18:33:42.206" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.078" endtime="20201030 18:33:42.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.211" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.208" endtime="20201030 18:33:42.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.214" endtime="20201030 18:33:42.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.076" endtime="20201030 18:33:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.074" endtime="20201030 18:33:42.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.225" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:33:42.221" endtime="20201030 18:33:42.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.233" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:42.231" endtime="20201030 18:33:42.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.237" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:42.235" endtime="20201030 18:33:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.226" endtime="20201030 18:33:42.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.247" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:42.245" endtime="20201030 18:33:42.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.251" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:42.249" endtime="20201030 18:33:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.240" endtime="20201030 18:33:42.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.261" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:42.259" endtime="20201030 18:33:42.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.265" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:33:42.263" endtime="20201030 18:33:42.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.254" endtime="20201030 18:33:42.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.280" endtime="20201030 18:33:42.567"></status>
</kw>
<msg timestamp="20201030 18:33:42.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062912042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163256278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.277" endtime="20201030 18:33:42.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062912042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163256278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.570" endtime="20201030 18:33:42.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.576" endtime="20201030 18:33:42.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.271" endtime="20201030 18:33:42.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.268" endtime="20201030 18:33:42.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:42.582" level="INFO">${FILTERED} = [{'diff': 0.100344236}, {'diff': 0.100046945}, {'diff': 5.42000000047782e-07}, {'diff': 0.10048533299999995}, {'diff': 0.09953455500000008}, {'diff': 0.10000922300000004}, {'diff': 0.100008667}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:33:42.579" endtime="20201030 18:33:42.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.586" level="INFO">${RESULT} = {'diff': [0.100344236, 0.100046945, 5.42000000047782e-07, 0.10048533299999995, 0.09953455500000008, 0.10000922300000004, 0.100008667, 0.10000866599999991, 0.10000869400000001, 0.10000920899999999, 0.1...</msg>
<status status="PASS" starttime="20201030 18:33:42.583" endtime="20201030 18:33:42.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.590" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:42.589" endtime="20201030 18:33:42.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.592" level="INFO">VALUE: [0.100344236, 0.100046945, 5.42000000047782e-07, 0.10048533299999995, 0.09953455500000008, 0.10000922300000004, 0.100008667, 0.10000866599999991, 0.10000869400000001, 0.10000920899999999, 0.10000868099999982, 0.10000870800000006, 5.419999999922709e-07, 0.100009236, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000922200000018, 5.420000004363601e-07, 0.10000922199999973, 0.1000092079999999, 0.10000873599999993, 0.10000922200000018, 0.1000092079999999, 0.10000922199999973, 0.10000915200000016, 0.10000919400000008, 0.10000867999999974, 0.10000868100000027, 0.10000873599999949, 0.10000922200000062, 0.10000915299999935, 5.419999995481817e-07, 5.420000004363601e-07, 0.10000925000000027, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 18:33:42.591" endtime="20201030 18:33:42.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.586" endtime="20201030 18:33:42.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:42.602" endtime="20201030 18:33:42.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.600" endtime="20201030 18:33:42.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.599" endtime="20201030 18:33:42.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.072" endtime="20201030 18:33:42.622"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:36.002" endtime="20201030 18:33:42.623" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:33:00.461" endtime="20201030 18:33:42.629"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:30:53.089" endtime="20201030 18:33:42.662"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
