<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:34:05.017" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.577" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:05.585" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:06.660" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:05.576" endtime="20201029 09:34:06.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.668" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:34:06.664" endtime="20201029 09:34:07.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.574" endtime="20201029 09:34:07.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:07.674" endtime="20201029 09:34:07.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.671" endtime="20201029 09:34:07.888"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.900" endtime="20201029 09:34:07.922"></status>
</kw>
<msg timestamp="20201029 09:34:07.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.899" endtime="20201029 09:34:07.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.923" endtime="20201029 09:34:07.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.928" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:07.926" endtime="20201029 09:34:07.928"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:07.897" endtime="20201029 09:34:07.929"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:07.894" endtime="20201029 09:34:07.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.893" endtime="20201029 09:34:07.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:07.934" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:07.933" endtime="20201029 09:34:07.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.931" endtime="20201029 09:34:07.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.892" endtime="20201029 09:34:07.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.891" endtime="20201029 09:34:07.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.936" endtime="20201029 09:34:07.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.890" endtime="20201029 09:34:07.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.939" endtime="20201029 09:34:07.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.888" endtime="20201029 09:34:07.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.572" endtime="20201029 09:34:07.941"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:07.947" endtime="20201029 09:34:07.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.946" endtime="20201029 09:34:07.967"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.981" endtime="20201029 09:34:07.998"></status>
</kw>
<msg timestamp="20201029 09:34:07.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.979" endtime="20201029 09:34:07.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.000" endtime="20201029 09:34:08.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.005" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:08.003" endtime="20201029 09:34:08.005"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:07.977" endtime="20201029 09:34:08.006"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:07.974" endtime="20201029 09:34:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.972" endtime="20201029 09:34:08.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:08.010" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:08.009" endtime="20201029 09:34:08.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.007" endtime="20201029 09:34:08.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.972" endtime="20201029 09:34:08.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.971" endtime="20201029 09:34:08.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.012" endtime="20201029 09:34:08.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.970" endtime="20201029 09:34:08.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.968" endtime="20201029 09:34:08.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.945" endtime="20201029 09:34:08.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.022" endtime="20201029 09:34:08.034"></status>
</kw>
<msg timestamp="20201029 09:34:08.035" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.019" endtime="20201029 09:34:08.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.037" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.036" endtime="20201029 09:34:08.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.038" endtime="20201029 09:34:08.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.017" endtime="20201029 09:34:08.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.015" endtime="20201029 09:34:08.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.045" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:34:08.044" endtime="20201029 09:34:08.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.047" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:34:08.046" endtime="20201029 09:34:08.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.041" endtime="20201029 09:34:08.048"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:07.942" endtime="20201029 09:34:08.048" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:05.127" endtime="20201029 09:34:08.051"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.106" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:08.114" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:09.242" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:08.105" endtime="20201029 09:34:09.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.246" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:34:09.244" endtime="20201029 09:34:10.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.104" endtime="20201029 09:34:10.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:10.252" endtime="20201029 09:34:10.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.249" endtime="20201029 09:34:10.535"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.547" endtime="20201029 09:34:10.567"></status>
</kw>
<msg timestamp="20201029 09:34:10.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.545" endtime="20201029 09:34:10.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.568" endtime="20201029 09:34:10.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.573" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:10.571" endtime="20201029 09:34:10.573"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:10.543" endtime="20201029 09:34:10.574"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:10.541" endtime="20201029 09:34:10.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.540" endtime="20201029 09:34:10.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:10.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:10.578" endtime="20201029 09:34:10.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.575" endtime="20201029 09:34:10.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.539" endtime="20201029 09:34:10.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.538" endtime="20201029 09:34:10.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.580" endtime="20201029 09:34:10.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.537" endtime="20201029 09:34:10.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.583" endtime="20201029 09:34:10.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.535" endtime="20201029 09:34:10.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.102" endtime="20201029 09:34:10.585"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:10.591" endtime="20201029 09:34:10.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.589" endtime="20201029 09:34:10.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.624" endtime="20201029 09:34:10.640"></status>
</kw>
<msg timestamp="20201029 09:34:10.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.622" endtime="20201029 09:34:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.642" endtime="20201029 09:34:10.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.648" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:10.646" endtime="20201029 09:34:10.648"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:10.620" endtime="20201029 09:34:10.649"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:10.617" endtime="20201029 09:34:10.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.616" endtime="20201029 09:34:10.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:10.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:10.653" endtime="20201029 09:34:10.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.650" endtime="20201029 09:34:10.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.616" endtime="20201029 09:34:10.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.615" endtime="20201029 09:34:10.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.655" endtime="20201029 09:34:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.614" endtime="20201029 09:34:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.612" endtime="20201029 09:34:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.588" endtime="20201029 09:34:10.658"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.666" endtime="20201029 09:34:10.681"></status>
</kw>
<msg timestamp="20201029 09:34:10.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.665" endtime="20201029 09:34:10.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.684" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.683" endtime="20201029 09:34:10.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.685" endtime="20201029 09:34:10.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.662" endtime="20201029 09:34:10.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.660" endtime="20201029 09:34:10.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.694" endtime="20201029 09:34:10.964"></status>
</kw>
<msg timestamp="20201029 09:34:10.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0647085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064712931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:10.692" endtime="20201029 09:34:10.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0647085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064712931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:10.967" endtime="20201029 09:34:10.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.972" endtime="20201029 09:34:10.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.690" endtime="20201029 09:34:10.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.688" endtime="20201029 09:34:10.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.978" level="INFO">${RESULT} = [{'diff': 4.430999999999186e-06}, {'diff': 6.986000000000492e-06}, {'diff': 6.999999999993123e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 1.1083000000008947e-05}, {'diff': 9.52800000000864e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:10.976" endtime="20201029 09:34:10.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.982" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.430999999999186e-06, 6.986000000000492e-06, 6.999999999993123e-06, 1.0333000000001258e-05, 1.1083000000008947e-05, 9.52800000000864e-06, 9.138999999991348e-06, 7.583999999991042e-06, 8.096...</msg>
<status status="PASS" starttime="20201029 09:34:10.979" endtime="20201029 09:34:10.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.986" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:10.985" endtime="20201029 09:34:10.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.989" level="INFO">VALUE: [4.430999999999186e-06, 6.986000000000492e-06, 6.999999999993123e-06, 1.0333000000001258e-05, 1.1083000000008947e-05, 9.52800000000864e-06, 9.138999999991348e-06, 7.583999999991042e-06, 8.096999999998578e-06, 1.0722000000004672e-05, 7.777999999999952e-06, 1.0430000000005712e-05, 7.2779999999994516e-06, 1.0403000000006046e-05, 4.957999999999352e-06, 9.221999999989294e-06, 1.0527999999995763e-05, 8.318999999992749e-06, 7.471999999994483e-06, 1.0958000000005352e-05, 8.207999999995663e-06, 6.2500000000131894e-06, 1.0735999999997303e-05, 6.014000000012509e-06, 7.375000000003906e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.987" endtime="20201029 09:34:10.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.983" endtime="20201029 09:34:10.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.659" endtime="20201029 09:34:10.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.659" endtime="20201029 09:34:10.990"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.998" endtime="20201029 09:34:11.012"></status>
</kw>
<msg timestamp="20201029 09:34:11.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.996" endtime="20201029 09:34:11.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.013" endtime="20201029 09:34:11.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.016" endtime="20201029 09:34:11.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.993" endtime="20201029 09:34:11.019"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.992" endtime="20201029 09:34:11.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.025" endtime="20201029 09:34:11.316"></status>
</kw>
<msg timestamp="20201029 09:34:11.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0647085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064712931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:11.024" endtime="20201029 09:34:11.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0647085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064712931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:11.320" endtime="20201029 09:34:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.329" endtime="20201029 09:34:11.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.021" endtime="20201029 09:34:11.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.020" endtime="20201029 09:34:11.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.335" level="INFO">${RESULT} = [{'diff': 4.430999999999186e-06}, {'diff': 6.986000000000492e-06}, {'diff': 6.999999999993123e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 1.1083000000008947e-05}, {'diff': 9.52800000000864e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:11.332" endtime="20201029 09:34:11.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.339" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.430999999999186e-06, 6.986000000000492e-06, 6.999999999993123e-06, 1.0333000000001258e-05, 1.1083000000008947e-05, 9.52800000000864e-06, 9.138999999991348e-06, 7.583999999991042e-06, 8.096...</msg>
<status status="PASS" starttime="20201029 09:34:11.336" endtime="20201029 09:34:11.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.350" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:11.343" endtime="20201029 09:34:11.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.353" level="INFO">VALUE: [4.430999999999186e-06, 6.986000000000492e-06, 6.999999999993123e-06, 1.0333000000001258e-05, 1.1083000000008947e-05, 9.52800000000864e-06, 9.138999999991348e-06, 7.583999999991042e-06, 8.096999999998578e-06, 1.0722000000004672e-05, 7.777999999999952e-06, 1.0430000000005712e-05, 7.2779999999994516e-06, 1.0403000000006046e-05, 4.957999999999352e-06, 9.221999999989294e-06, 1.0527999999995763e-05, 8.318999999992749e-06, 7.471999999994483e-06, 1.0958000000005352e-05, 8.207999999995663e-06, 6.2500000000131894e-06, 1.0735999999997303e-05, 6.014000000012509e-06, 7.375000000003906e-06, 0.319271375, 8.347000000019644e-06, 7.2090000000080146e-06, 9.208999999954504e-06, 7.959000000001826e-06, 9.721999999989794e-06, 1.0278000000030207e-05, 9.124999999998717e-06, 9.944000000039477e-06, 7.514000000041765e-06, 8.082999999992069e-06, 9.555999999966147e-06, 8.167000000003366e-06, 6.959000000028581e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0944000000012721e-05, 1.0318999999980871e-05, 6.291999999963327e-06, 6.5969999999970774e-06, 4.81900000004476e-06, 9.625000000013095e-06, 9.597000000027833e-06, 7.917000000023933e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.352" endtime="20201029 09:34:11.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.340" endtime="20201029 09:34:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.991" endtime="20201029 09:34:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.990" endtime="20201029 09:34:11.355"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.363" endtime="20201029 09:34:11.378"></status>
</kw>
<msg timestamp="20201029 09:34:11.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.362" endtime="20201029 09:34:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.380" endtime="20201029 09:34:11.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.382" endtime="20201029 09:34:11.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.359" endtime="20201029 09:34:11.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.358" endtime="20201029 09:34:11.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.391" endtime="20201029 09:34:11.696"></status>
</kw>
<msg timestamp="20201029 09:34:11.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064896069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.064905875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:11.390" endtime="20201029 09:34:11.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064896069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.064905875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:11.701" endtime="20201029 09:34:11.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.711" endtime="20201029 09:34:11.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.387" endtime="20201029 09:34:11.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.386" endtime="20201029 09:34:11.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.718" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.2779999999994516e-06}, {'diff': 1.0403000000006046e-05}, {'diff': 4.957999999999352e-06}, {'diff': 9.221999999989294e-06}, {'diff': 1.0527999999995763e-05}, {'diff': 8.3189999...</msg>
<status status="PASS" starttime="20201029 09:34:11.715" endtime="20201029 09:34:11.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.724" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.2779999999994516e-06, 1.0403000000006046e-05, 4.957999999999352e-06, 9.221999999989294e-06, 1.0527999999995763e-05, 8.318999999992749e-06, 7.471999999994483e-06, 1.0958000000005352e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:11.719" endtime="20201029 09:34:11.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.728" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:11.727" endtime="20201029 09:34:11.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.731" level="INFO">VALUE: [0, 7.2779999999994516e-06, 1.0403000000006046e-05, 4.957999999999352e-06, 9.221999999989294e-06, 1.0527999999995763e-05, 8.318999999992749e-06, 7.471999999994483e-06, 1.0958000000005352e-05, 8.207999999995663e-06, 6.2500000000131894e-06, 1.0735999999997303e-05, 6.014000000012509e-06, 7.375000000003906e-06, 0.319271375, 8.347000000019644e-06, 7.2090000000080146e-06, 9.208999999954504e-06, 7.959000000001826e-06, 9.721999999989794e-06, 1.0278000000030207e-05, 9.124999999998717e-06, 9.944000000039477e-06, 7.514000000041765e-06, 8.082999999992069e-06, 9.555999999966147e-06, 8.167000000003366e-06, 6.959000000028581e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0944000000012721e-05, 1.0318999999980871e-05, 6.291999999963327e-06, 6.5969999999970774e-06, 4.81900000004476e-06, 9.625000000013095e-06, 9.597000000027833e-06, 7.917000000023933e-06, 0.356451445, 8.458000000044485e-06, 4.847000000030022e-06, 9.88899999998516e-06, 6.653000000023113e-06, 8.098000000011929e-06, 6.52800000000564e-06, 7.819999999991722e-06, 9.597000000027833e-06, 1.1333000000002258e-05, 5.000000000032756e-06, 8.750000000001812e-06, 6.443999999938832e-06, 5.707999999993163e-06, 7.152000000010261e-06, 8.596999999999078e-06, 9.597000000027833e-06, 1.0680999999901353e-05, 1.1110999999952575e-05, 6.292000000018838e-06, 7.152999999981979e-06, 8.833999999957598e-06, 9.916999999970422e-06, 5.3749999999741505e-06, 6.667000000071255e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.730" endtime="20201029 09:34:11.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.725" endtime="20201029 09:34:11.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.356" endtime="20201029 09:34:11.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.356" endtime="20201029 09:34:11.733"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.741" endtime="20201029 09:34:11.756"></status>
</kw>
<msg timestamp="20201029 09:34:11.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.740" endtime="20201029 09:34:11.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.757" endtime="20201029 09:34:11.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.760" endtime="20201029 09:34:11.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.737" endtime="20201029 09:34:11.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.735" endtime="20201029 09:34:11.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.769" endtime="20201029 09:34:12.103"></status>
</kw>
<msg timestamp="20201029 09:34:12.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.384573417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.384579444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:11.768" endtime="20201029 09:34:12.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.384573417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.384579444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.108" endtime="20201029 09:34:12.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.118" endtime="20201029 09:34:12.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.765" endtime="20201029 09:34:12.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.763" endtime="20201029 09:34:12.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.125" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.167000000003366e-06}, {'diff': 6.959000000028581e-06}, {'diff': 1.0889000000013915e-05}, {'diff': 7.028000000020018e-06}, {'diff': 6.971999999993983e-06}, {'diff': 1.094400000...</msg>
<status status="PASS" starttime="20201029 09:34:12.122" endtime="20201029 09:34:12.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.130" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.167000000003366e-06, 6.959000000028581e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0944000000012721e-05, 1.0318999999980871e-05, 6.291999999963327e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:12.126" endtime="20201029 09:34:12.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:12.133" endtime="20201029 09:34:12.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.137" level="INFO">VALUE: [0, 8.167000000003366e-06, 6.959000000028581e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0944000000012721e-05, 1.0318999999980871e-05, 6.291999999963327e-06, 6.5969999999970774e-06, 4.81900000004476e-06, 9.625000000013095e-06, 9.597000000027833e-06, 7.917000000023933e-06, 0.356451445, 8.458000000044485e-06, 4.847000000030022e-06, 9.88899999998516e-06, 6.653000000023113e-06, 8.098000000011929e-06, 6.52800000000564e-06, 7.819999999991722e-06, 9.597000000027833e-06, 1.1333000000002258e-05, 5.000000000032756e-06, 8.750000000001812e-06, 6.443999999938832e-06, 5.707999999993163e-06, 7.152000000010261e-06, 8.596999999999078e-06, 9.597000000027833e-06, 1.0680999999901353e-05, 1.1110999999952575e-05, 6.292000000018838e-06, 7.152999999981979e-06, 8.833999999957598e-06, 9.916999999970422e-06, 5.3749999999741505e-06, 6.667000000071255e-06, 0.36739900000000003, 8.070000000026667e-06, 9.028000000022018e-06, 5.05600000000328e-06, 6.7219999999590385e-06, 8.903000000115568e-06, 9.638999999950215e-06, 8.180999999884975e-06, 9.13900000010237e-06, 7.708000000050674e-06, 8.847000000145044e-06, 8.333000000027013e-06, 9.973000000051968e-06, 7.472000000063872e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.709000000051148e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.847000000062778e-06, 1.147199999995685e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.136" endtime="20201029 09:34:12.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.131" endtime="20201029 09:34:12.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.734" endtime="20201029 09:34:12.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.733" endtime="20201029 09:34:12.139"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.148" endtime="20201029 09:34:12.162"></status>
</kw>
<msg timestamp="20201029 09:34:12.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.146" endtime="20201029 09:34:12.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.164" endtime="20201029 09:34:12.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.167" endtime="20201029 09:34:12.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.143" endtime="20201029 09:34:12.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.141" endtime="20201029 09:34:12.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.176" endtime="20201029 09:34:12.487"></status>
</kw>
<msg timestamp="20201029 09:34:12.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741419403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741429514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.174" endtime="20201029 09:34:12.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741419403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741429514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.491" endtime="20201029 09:34:12.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.501" endtime="20201029 09:34:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.172" endtime="20201029 09:34:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.170" endtime="20201029 09:34:12.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.508" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.443999999938832e-06}, {'diff': 5.707999999993163e-06}, {'diff': 7.152000000010261e-06}, {'diff': 8.596999999999078e-06}, {'diff': 9.597000000027833e-06}, {'diff': 1.0680999999...</msg>
<status status="PASS" starttime="20201029 09:34:12.504" endtime="20201029 09:34:12.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.513" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.443999999938832e-06, 5.707999999993163e-06, 7.152000000010261e-06, 8.596999999999078e-06, 9.597000000027833e-06, 1.0680999999901353e-05, 1.1110999999952575e-05, 6.292000000018838e-06, 7...</msg>
<status status="PASS" starttime="20201029 09:34:12.509" endtime="20201029 09:34:12.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.518" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:12.517" endtime="20201029 09:34:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.520" level="INFO">VALUE: [0, 6.443999999938832e-06, 5.707999999993163e-06, 7.152000000010261e-06, 8.596999999999078e-06, 9.597000000027833e-06, 1.0680999999901353e-05, 1.1110999999952575e-05, 6.292000000018838e-06, 7.152999999981979e-06, 8.833999999957598e-06, 9.916999999970422e-06, 5.3749999999741505e-06, 6.667000000071255e-06, 0.36739900000000003, 8.070000000026667e-06, 9.028000000022018e-06, 5.05600000000328e-06, 6.7219999999590385e-06, 8.903000000115568e-06, 9.638999999950215e-06, 8.180999999884975e-06, 9.13900000010237e-06, 7.708000000050674e-06, 8.847000000145044e-06, 8.333000000027013e-06, 9.973000000051968e-06, 7.472000000063872e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.709000000051148e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.847000000062778e-06, 1.147199999995685e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06, 0.397280917, 7.971999999911716e-06, 1.1166999999812077e-05, 6.847000000087533e-06, 8.304999999930729e-06, 9.403000000185457e-06, 6.083000000156602e-06, 7.291999999825549e-06, 1.1291999999940572e-05, 4.971999999936472e-06, 5.236000000019558e-06, 6.0969999999827e-06, 8.708999999829103e-06, 6.264000000033576e-06, 7.23600000007707e-06, 1.0250000000100457e-05, 6.5970000000525886e-06, 6.5140000000685205e-06, 7.87500000010155e-06, 7.861000000053409e-06, 5.902000000057583e-06, 7.65200000008015e-06, 6.681000000119397e-06, 6.736000000007181e-06, 1.0832999999932369e-05]</msg>
<status status="PASS" starttime="20201029 09:34:12.519" endtime="20201029 09:34:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.514" endtime="20201029 09:34:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.140" endtime="20201029 09:34:12.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.139" endtime="20201029 09:34:12.522"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.529" endtime="20201029 09:34:12.544"></status>
</kw>
<msg timestamp="20201029 09:34:12.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.528" endtime="20201029 09:34:12.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.547" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.545" endtime="20201029 09:34:12.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.548" endtime="20201029 09:34:12.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.525" endtime="20201029 09:34:12.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.524" endtime="20201029 09:34:12.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.557" endtime="20201029 09:34:12.880"></status>
</kw>
<msg timestamp="20201029 09:34:12.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109207486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109213694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.555" endtime="20201029 09:34:12.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109207486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109213694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.885" endtime="20201029 09:34:12.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.895" endtime="20201029 09:34:12.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.553" endtime="20201029 09:34:12.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.551" endtime="20201029 09:34:12.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.902" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.973000000051968e-06}, {'diff': 7.472000000063872e-06}, {'diff': 5.776999999929089e-06}, {'diff': 8.721999999794505e-06}, {'diff': 8.709000000051148e-06}, {'diff': 5.7360000000...</msg>
<status status="PASS" starttime="20201029 09:34:12.898" endtime="20201029 09:34:12.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.909" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.973000000051968e-06, 7.472000000063872e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.709000000051148e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.847000000062778e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 09:34:12.903" endtime="20201029 09:34:12.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.913" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:12.912" endtime="20201029 09:34:12.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.916" level="INFO">VALUE: [0, 9.973000000051968e-06, 7.472000000063872e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.709000000051148e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.847000000062778e-06, 1.147199999995685e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06, 0.397280917, 7.971999999911716e-06, 1.1166999999812077e-05, 6.847000000087533e-06, 8.304999999930729e-06, 9.403000000185457e-06, 6.083000000156602e-06, 7.291999999825549e-06, 1.1291999999940572e-05, 4.971999999936472e-06, 5.236000000019558e-06, 6.0969999999827e-06, 8.708999999829103e-06, 6.264000000033576e-06, 7.23600000007707e-06, 1.0250000000100457e-05, 6.5970000000525886e-06, 6.5140000000685205e-06, 7.87500000010155e-06, 7.861000000053409e-06, 5.902000000057583e-06, 7.65200000008015e-06, 6.681000000119397e-06, 6.736000000007181e-06, 1.0832999999932369e-05, 0.371849042, 5.4579999999582185e-06, 1.102699999999679e-05, 8.000000000008e-06, 5.777999999789785e-06, 7.957999999863574e-06, 7.764000000021198e-06, 8.444000000107366e-06, 8.681000000176908e-06, 5.597000000134855e-06, 7.555999999908636e-06, 6.777999999929563e-06, 7.319000000061138e-06, 9.44500000010784e-06, 9.222999999947135e-06, 9.014000000195921e-06, 1.1610999999911442e-05, 6.22299999997189e-06, 8.374999999949395e-06, 7.45800000001573e-06, 7.764000000021198e-06, 5.694000000167065e-06, 7.596999999970322e-06, 7.583000000144224e-06, 9.195000000072895e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.914" endtime="20201029 09:34:12.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.910" endtime="20201029 09:34:12.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.522" endtime="20201029 09:34:12.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.522" endtime="20201029 09:34:12.917"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.925" endtime="20201029 09:34:12.939"></status>
</kw>
<msg timestamp="20201029 09:34:12.939" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.923" endtime="20201029 09:34:12.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.941" endtime="20201029 09:34:12.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.943" endtime="20201029 09:34:12.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.921" endtime="20201029 09:34:12.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.919" endtime="20201029 09:34:12.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.952" endtime="20201029 09:34:13.259"></status>
</kw>
<msg timestamp="20201029 09:34:13.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.506878458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.506885583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:12.950" endtime="20201029 09:34:13.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.506878458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.506885583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:13.267" endtime="20201029 09:34:13.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.282" endtime="20201029 09:34:13.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.948" endtime="20201029 09:34:13.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.946" endtime="20201029 09:34:13.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.291" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.708999999829103e-06}, {'diff': 6.264000000033576e-06}, {'diff': 7.23600000007707e-06}, {'diff': 1.0250000000100457e-05}, {'diff': 6.5970000000525886e-06}, {'diff': 6.514000000...</msg>
<status status="PASS" starttime="20201029 09:34:13.288" endtime="20201029 09:34:13.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.296" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.708999999829103e-06, 6.264000000033576e-06, 7.23600000007707e-06, 1.0250000000100457e-05, 6.5970000000525886e-06, 6.5140000000685205e-06, 7.87500000010155e-06, 7.861000000053409e-06, 5....</msg>
<status status="PASS" starttime="20201029 09:34:13.292" endtime="20201029 09:34:13.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:13.300" endtime="20201029 09:34:13.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.303" level="INFO">VALUE: [0, 8.708999999829103e-06, 6.264000000033576e-06, 7.23600000007707e-06, 1.0250000000100457e-05, 6.5970000000525886e-06, 6.5140000000685205e-06, 7.87500000010155e-06, 7.861000000053409e-06, 5.902000000057583e-06, 7.65200000008015e-06, 6.681000000119397e-06, 6.736000000007181e-06, 1.0832999999932369e-05, 0.371849042, 5.4579999999582185e-06, 1.102699999999679e-05, 8.000000000008e-06, 5.777999999789785e-06, 7.957999999863574e-06, 7.764000000021198e-06, 8.444000000107366e-06, 8.681000000176908e-06, 5.597000000134855e-06, 7.555999999908636e-06, 6.777999999929563e-06, 7.319000000061138e-06, 9.44500000010784e-06, 9.222999999947135e-06, 9.014000000195921e-06, 1.1610999999911442e-05, 6.22299999997189e-06, 8.374999999949395e-06, 7.45800000001573e-06, 7.764000000021198e-06, 5.694000000167065e-06, 7.596999999970322e-06, 7.583000000144224e-06, 9.195000000072895e-06, 0.38539455499999997, 6.722000000181083e-06, 5.027999999906996e-06, 1.0083999999910276e-05, 8.97299999991219e-06, 7.569000000096082e-06, 8.166999999836833e-06, 5.389000000022293e-06, 8.347000000075155e-06, 9.014000000195921e-06, 1.0666999999742188e-05, 7.402999999683857e-06, 1.0458000000213019e-05, 8.638999999810437e-06, 1.0526999999704856e-05, 8.221999999946661e-06, 8.653000000080624e-06, 8.514000000126032e-06, 6.1389999999050815e-06, 5.666000000292826e-06, 1.0277999999974696e-05, 9.957999999699041e-06, 9.583999999840387e-06, 1.1221999999921906e-05, 1.115299999998598e-05]</msg>
<status status="PASS" starttime="20201029 09:34:13.302" endtime="20201029 09:34:13.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.297" endtime="20201029 09:34:13.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.918" endtime="20201029 09:34:13.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.918" endtime="20201029 09:34:13.305"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.313" endtime="20201029 09:34:13.328"></status>
</kw>
<msg timestamp="20201029 09:34:13.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.312" endtime="20201029 09:34:13.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.330" endtime="20201029 09:34:13.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.332" endtime="20201029 09:34:13.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.308" endtime="20201029 09:34:13.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.307" endtime="20201029 09:34:13.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.341" endtime="20201029 09:34:13.664"></status>
</kw>
<msg timestamp="20201029 09:34:13.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.879105931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.879116389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:13.339" endtime="20201029 09:34:13.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.879105931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.879116389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:13.669" endtime="20201029 09:34:13.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.678" endtime="20201029 09:34:13.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.337" endtime="20201029 09:34:13.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.335" endtime="20201029 09:34:13.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.685" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.319000000061138e-06}, {'diff': 9.44500000010784e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.014000000195921e-06}, {'diff': 1.1610999999911442e-05}, {'diff': 6.2229999999...</msg>
<status status="PASS" starttime="20201029 09:34:13.682" endtime="20201029 09:34:13.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.691" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.319000000061138e-06, 9.44500000010784e-06, 9.222999999947135e-06, 9.014000000195921e-06, 1.1610999999911442e-05, 6.22299999997189e-06, 8.374999999949395e-06, 7.45800000001573e-06, 7.764...</msg>
<status status="PASS" starttime="20201029 09:34:13.686" endtime="20201029 09:34:13.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.695" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:13.694" endtime="20201029 09:34:13.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.698" level="INFO">VALUE: [0, 7.319000000061138e-06, 9.44500000010784e-06, 9.222999999947135e-06, 9.014000000195921e-06, 1.1610999999911442e-05, 6.22299999997189e-06, 8.374999999949395e-06, 7.45800000001573e-06, 7.764000000021198e-06, 5.694000000167065e-06, 7.596999999970322e-06, 7.583000000144224e-06, 9.195000000072895e-06, 0.38539455499999997, 6.722000000181083e-06, 5.027999999906996e-06, 1.0083999999910276e-05, 8.97299999991219e-06, 7.569000000096082e-06, 8.166999999836833e-06, 5.389000000022293e-06, 8.347000000075155e-06, 9.014000000195921e-06, 1.0666999999742188e-05, 7.402999999683857e-06, 1.0458000000213019e-05, 8.638999999810437e-06, 1.0526999999704856e-05, 8.221999999946661e-06, 8.653000000080624e-06, 8.514000000126032e-06, 6.1389999999050815e-06, 5.666000000292826e-06, 1.0277999999974696e-05, 9.957999999699041e-06, 9.583999999840387e-06, 1.1221999999921906e-05, 1.115299999998598e-05, 0.3777230549999997, 6.083999999795253e-06, 1.0014000000335699e-05, 8.790999999952476e-06, 7.833000000179169e-06, 1.0096999999653633e-05, 8.416000000011081e-06, 4.90300000022259e-06, 1.0277999999974696e-05, 5.4579999999582185e-06, 9.556000000188192e-06, 5.902999999918279e-06, 6.207999999841007e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.875000000241329e-06, 6.957999999723796e-06, 6.333999999608153e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.67999999995439e-06, 8.513000000043291e-06, 7.153000000315046e-06, 1.0125000000194007e-05]</msg>
<status status="PASS" starttime="20201029 09:34:13.696" endtime="20201029 09:34:13.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.692" endtime="20201029 09:34:13.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.305" endtime="20201029 09:34:13.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.305" endtime="20201029 09:34:13.699"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.707" endtime="20201029 09:34:13.722"></status>
</kw>
<msg timestamp="20201029 09:34:13.722" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.706" endtime="20201029 09:34:13.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.725" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.724" endtime="20201029 09:34:13.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.726" endtime="20201029 09:34:13.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.703" endtime="20201029 09:34:13.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.701" endtime="20201029 09:34:13.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.735" endtime="20201029 09:34:14.050"></status>
</kw>
<msg timestamp="20201029 09:34:14.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.264896972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.264904625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:13.733" endtime="20201029 09:34:14.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.264896972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.264904625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.055" endtime="20201029 09:34:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.065" endtime="20201029 09:34:14.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.731" endtime="20201029 09:34:14.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.729" endtime="20201029 09:34:14.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.072" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0458000000213019e-05}, {'diff': 8.638999999810437e-06}, {'diff': 1.0526999999704856e-05}, {'diff': 8.221999999946661e-06}, {'diff': 8.653000000080624e-06}, {'diff': 8.51400000...</msg>
<status status="PASS" starttime="20201029 09:34:14.068" endtime="20201029 09:34:14.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.078" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0458000000213019e-05, 8.638999999810437e-06, 1.0526999999704856e-05, 8.221999999946661e-06, 8.653000000080624e-06, 8.514000000126032e-06, 6.1389999999050815e-06, 5.666000000292826e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:14.073" endtime="20201029 09:34:14.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.082" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:14.081" endtime="20201029 09:34:14.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.085" level="INFO">VALUE: [0, 1.0458000000213019e-05, 8.638999999810437e-06, 1.0526999999704856e-05, 8.221999999946661e-06, 8.653000000080624e-06, 8.514000000126032e-06, 6.1389999999050815e-06, 5.666000000292826e-06, 1.0277999999974696e-05, 9.957999999699041e-06, 9.583999999840387e-06, 1.1221999999921906e-05, 1.115299999998598e-05, 0.3777230549999997, 6.083999999795253e-06, 1.0014000000335699e-05, 8.790999999952476e-06, 7.833000000179169e-06, 1.0096999999653633e-05, 8.416000000011081e-06, 4.90300000022259e-06, 1.0277999999974696e-05, 5.4579999999582185e-06, 9.556000000188192e-06, 5.902999999918279e-06, 6.207999999841007e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.875000000241329e-06, 6.957999999723796e-06, 6.333999999608153e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.67999999995439e-06, 8.513000000043291e-06, 7.153000000315046e-06, 1.0125000000194007e-05, 0.3844072780000003, 7.83400000026191e-06, 8.194999999933117e-06, 9.916000000220748e-06, 9.291000000022365e-06, 8.87499999979724e-06, 8.97300000035628e-06, 9.208999999898992e-06, 8.209000000203304e-06, 9.597000000027833e-06, 6.361000000065786e-06, 7.416999999954044e-06, 1.0639000000089993e-05, 7.58400000000492e-06, 9.652999999776313e-06, 8.333000000249058e-06, 7.0970000001224776e-06, 9.208000000260341e-06, 9.429999999976957e-06, 6.318999999699315e-06, 4.832999999759835e-06, 1.0222000000226217e-05, 9.708999999968881e-06, 5.653000000105379e-06, 4.416999999978799e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.083" endtime="20201029 09:34:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.079" endtime="20201029 09:34:14.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.700" endtime="20201029 09:34:14.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.700" endtime="20201029 09:34:14.086"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.094" endtime="20201029 09:34:14.108"></status>
</kw>
<msg timestamp="20201029 09:34:14.109" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.092" endtime="20201029 09:34:14.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.111" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.110" endtime="20201029 09:34:14.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.112" endtime="20201029 09:34:14.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.090" endtime="20201029 09:34:14.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.088" endtime="20201029 09:34:14.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.122" endtime="20201029 09:34:14.442"></status>
</kw>
<msg timestamp="20201029 09:34:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.643034306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.643043278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.121" endtime="20201029 09:34:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.643034306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.643043278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.447" endtime="20201029 09:34:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.457" endtime="20201029 09:34:14.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.117" endtime="20201029 09:34:14.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.116" endtime="20201029 09:34:14.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.464" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.207999999841007e-06}, {'diff': 6.361000000065786e-06}, {'diff': 8.388999999997537e-06}, {'diff': 8.875000000241329e-06}, {'diff': 6.957999999723796e-06}, {'diff': 6.3339999996...</msg>
<status status="PASS" starttime="20201029 09:34:14.460" endtime="20201029 09:34:14.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.469" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.207999999841007e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.875000000241329e-06, 6.957999999723796e-06, 6.333999999608153e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9...</msg>
<status status="PASS" starttime="20201029 09:34:14.465" endtime="20201029 09:34:14.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.473" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:14.472" endtime="20201029 09:34:14.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.477" level="INFO">VALUE: [0, 6.207999999841007e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.875000000241329e-06, 6.957999999723796e-06, 6.333999999608153e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.67999999995439e-06, 8.513000000043291e-06, 7.153000000315046e-06, 1.0125000000194007e-05, 0.3844072780000003, 7.83400000026191e-06, 8.194999999933117e-06, 9.916000000220748e-06, 9.291000000022365e-06, 8.87499999979724e-06, 8.97300000035628e-06, 9.208999999898992e-06, 8.209000000203304e-06, 9.597000000027833e-06, 6.361000000065786e-06, 7.416999999954044e-06, 1.0639000000089993e-05, 7.58400000000492e-06, 9.652999999776313e-06, 8.333000000249058e-06, 7.0970000001224776e-06, 9.208000000260341e-06, 9.429999999976957e-06, 6.318999999699315e-06, 4.832999999759835e-06, 1.0222000000226217e-05, 9.708999999968881e-06, 5.653000000105379e-06, 4.416999999978799e-06, 0.37558632000000003, 1.0152999999846202e-05, 7.222000000250972e-06, 6.806000000025847e-06, 7.028000000186552e-06, 1.1902000000230117e-05, 7.583000000366269e-06, 1.020799999995603e-05, 7.971999999689672e-06, 4.209000000088281e-06, 9.083000000131847e-06, 6.401999999905428e-06, 9.32000000020139e-06, 1.0070000000084178e-05, 8.666999999906722e-06, 4.902999999778501e-06, 8.972000000273539e-06, 5.708000000215208e-06, 8.02799999988224e-06, 7.847000000005266e-06, 7.902999999753746e-06, 6.943999999897699e-06, 6.707999999910896e-06, 8.02700000024359e-06, 7.375000000031662e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.474" endtime="20201029 09:34:14.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.470" endtime="20201029 09:34:14.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.087" endtime="20201029 09:34:14.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.087" endtime="20201029 09:34:14.478"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.486" endtime="20201029 09:34:14.500"></status>
</kw>
<msg timestamp="20201029 09:34:14.500" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.485" endtime="20201029 09:34:14.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.503" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.502" endtime="20201029 09:34:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.504" endtime="20201029 09:34:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.482" endtime="20201029 09:34:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.480" endtime="20201029 09:34:14.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.513" endtime="20201029 09:34:14.852"></status>
</kw>
<msg timestamp="20201029 09:34:14.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.027834264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.027840153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.511" endtime="20201029 09:34:14.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.027834264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.027840153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.863" endtime="20201029 09:34:14.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.886" endtime="20201029 09:34:14.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.509" endtime="20201029 09:34:14.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.507" endtime="20201029 09:34:14.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.907" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0639000000089993e-05}, {'diff': 7.58400000000492e-06}, {'diff': 9.652999999776313e-06}, {'diff': 8.333000000249058e-06}, {'diff': 7.0970000001224776e-06}, {'diff': 9.208000000...</msg>
<status status="PASS" starttime="20201029 09:34:14.899" endtime="20201029 09:34:14.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.927" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0639000000089993e-05, 7.58400000000492e-06, 9.652999999776313e-06, 8.333000000249058e-06, 7.0970000001224776e-06, 9.208000000260341e-06, 9.429999999976957e-06, 6.318999999699315e-06, 4....</msg>
<status status="PASS" starttime="20201029 09:34:14.910" endtime="20201029 09:34:14.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.936" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:14.934" endtime="20201029 09:34:14.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.939" level="INFO">VALUE: [0, 1.0639000000089993e-05, 7.58400000000492e-06, 9.652999999776313e-06, 8.333000000249058e-06, 7.0970000001224776e-06, 9.208000000260341e-06, 9.429999999976957e-06, 6.318999999699315e-06, 4.832999999759835e-06, 1.0222000000226217e-05, 9.708999999968881e-06, 5.653000000105379e-06, 4.416999999978799e-06, 0.37558632000000003, 1.0152999999846202e-05, 7.222000000250972e-06, 6.806000000025847e-06, 7.028000000186552e-06, 1.1902000000230117e-05, 7.583000000366269e-06, 1.020799999995603e-05, 7.971999999689672e-06, 4.209000000088281e-06, 9.083000000131847e-06, 6.401999999905428e-06, 9.32000000020139e-06, 1.0070000000084178e-05, 8.666999999906722e-06, 4.902999999778501e-06, 8.972000000273539e-06, 5.708000000215208e-06, 8.02799999988224e-06, 7.847000000005266e-06, 7.902999999753746e-06, 6.943999999897699e-06, 6.707999999910896e-06, 8.02700000024359e-06, 7.375000000031662e-06, 0.3810502920000003, 6.125000000078984e-06, 1.0402999999659102e-05, 8.750000000112834e-06, 6.4160000001756146e-06, 7.847000000005266e-06, 9.193999999990154e-06, 8.902999999893524e-06, 6.818999999769204e-06, 6.999999999646178e-06, 6.026999999964033e-06, 1.0041000000349243e-05, 7.23600000007707e-06, 7.472000000063872e-06, 9.76400000007871e-06, 8.0269999997995e-06, 7.903000000197835e-06, 7.472000000063872e-06, 6.180999999827463e-06, 8.902999999893524e-06, 8.318999999978871e-06, 7.5700000001788226e-06, 6.026999999964033e-06, 9.528000000091907e-06, 7.1390000000448595e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.937" endtime="20201029 09:34:14.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.930" endtime="20201029 09:34:14.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.479" endtime="20201029 09:34:14.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.478" endtime="20201029 09:34:14.941"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.950" endtime="20201029 09:34:14.964"></status>
</kw>
<msg timestamp="20201029 09:34:14.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.948" endtime="20201029 09:34:14.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.966" endtime="20201029 09:34:14.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.969" endtime="20201029 09:34:14.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.945" endtime="20201029 09:34:14.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.943" endtime="20201029 09:34:14.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.978" endtime="20201029 09:34:15.293"></status>
</kw>
<msg timestamp="20201029 09:34:15.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.403812458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.403820111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:14.976" endtime="20201029 09:34:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.403812458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.403820111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:15.298" endtime="20201029 09:34:15.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.309" endtime="20201029 09:34:15.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.974" endtime="20201029 09:34:15.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.972" endtime="20201029 09:34:15.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.317" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.32000000020139e-06}, {'diff': 1.0070000000084178e-05}, {'diff': 8.666999999906722e-06}, {'diff': 4.902999999778501e-06}, {'diff': 8.972000000273539e-06}, {'diff': 5.7080000002...</msg>
<status status="PASS" starttime="20201029 09:34:15.313" endtime="20201029 09:34:15.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.322" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.32000000020139e-06, 1.0070000000084178e-05, 8.666999999906722e-06, 4.902999999778501e-06, 8.972000000273539e-06, 5.708000000215208e-06, 8.02799999988224e-06, 7.847000000005266e-06, 7.90...</msg>
<status status="PASS" starttime="20201029 09:34:15.318" endtime="20201029 09:34:15.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:15.326" endtime="20201029 09:34:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.329" level="INFO">VALUE: [0, 9.32000000020139e-06, 1.0070000000084178e-05, 8.666999999906722e-06, 4.902999999778501e-06, 8.972000000273539e-06, 5.708000000215208e-06, 8.02799999988224e-06, 7.847000000005266e-06, 7.902999999753746e-06, 6.943999999897699e-06, 6.707999999910896e-06, 8.02700000024359e-06, 7.375000000031662e-06, 0.3810502920000003, 6.125000000078984e-06, 1.0402999999659102e-05, 8.750000000112834e-06, 6.4160000001756146e-06, 7.847000000005266e-06, 9.193999999990154e-06, 8.902999999893524e-06, 6.818999999769204e-06, 6.999999999646178e-06, 6.026999999964033e-06, 1.0041000000349243e-05, 7.23600000007707e-06, 7.472000000063872e-06, 9.76400000007871e-06, 8.0269999997995e-06, 7.903000000197835e-06, 7.472000000063872e-06, 6.180999999827463e-06, 8.902999999893524e-06, 8.318999999978871e-06, 7.5700000001788226e-06, 6.026999999964033e-06, 9.528000000091907e-06, 7.1390000000448595e-06, 0.45273176400000015, 6.041999999872871e-06, 1.040300000010319e-05, 6.180999999827463e-06, 7.847000000005266e-06, 5.847000000613889e-06, 8.096999999374077e-06, 7.528000000256441e-06, 8.790999999952476e-06, 6.88899999978787e-06, 9.888999999319026e-06, 9.138999999436237e-06, 7.722000000320861e-06, 4.181000000436086e-06, 7.2089999996194365e-06, 1.0375000000450996e-05, 8.221999999946661e-06, 8.707999999302274e-06, 1.040300000010319e-05, 8.167000000725011e-06, 6.513999999846476e-06, 9.277999999390829e-06, 7.83299999973508e-06, 1.0084000000354365e-05, 7.777999999625251e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.328" endtime="20201029 09:34:15.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.323" endtime="20201029 09:34:15.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.942" endtime="20201029 09:34:15.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.941" endtime="20201029 09:34:15.331"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.339" endtime="20201029 09:34:15.354"></status>
</kw>
<msg timestamp="20201029 09:34:15.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.337" endtime="20201029 09:34:15.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.357" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.356" endtime="20201029 09:34:15.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.358" endtime="20201029 09:34:15.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.334" endtime="20201029 09:34:15.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.333" endtime="20201029 09:34:15.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.367" endtime="20201029 09:34:15.694"></status>
</kw>
<msg timestamp="20201029 09:34:15.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.785247458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.785257778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:15.366" endtime="20201029 09:34:15.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.785247458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.785257778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:15.705" endtime="20201029 09:34:15.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.727" endtime="20201029 09:34:15.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.363" endtime="20201029 09:34:15.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.361" endtime="20201029 09:34:15.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.742" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.23600000007707e-06}, {'diff': 7.472000000063872e-06}, {'diff': 9.76400000007871e-06}, {'diff': 8.0269999997995e-06}, {'diff': 7.903000000197835e-06}, {'diff': 7.47200000006387...</msg>
<status status="PASS" starttime="20201029 09:34:15.734" endtime="20201029 09:34:15.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.750" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.23600000007707e-06, 7.472000000063872e-06, 9.76400000007871e-06, 8.0269999997995e-06, 7.903000000197835e-06, 7.472000000063872e-06, 6.180999999827463e-06, 8.902999999893524e-06, 8.31899...</msg>
<status status="PASS" starttime="20201029 09:34:15.744" endtime="20201029 09:34:15.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.754" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:15.753" endtime="20201029 09:34:15.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.757" level="INFO">VALUE: [0, 7.23600000007707e-06, 7.472000000063872e-06, 9.76400000007871e-06, 8.0269999997995e-06, 7.903000000197835e-06, 7.472000000063872e-06, 6.180999999827463e-06, 8.902999999893524e-06, 8.318999999978871e-06, 7.5700000001788226e-06, 6.026999999964033e-06, 9.528000000091907e-06, 7.1390000000448595e-06, 0.45273176400000015, 6.041999999872871e-06, 1.040300000010319e-05, 6.180999999827463e-06, 7.847000000005266e-06, 5.847000000613889e-06, 8.096999999374077e-06, 7.528000000256441e-06, 8.790999999952476e-06, 6.88899999978787e-06, 9.888999999319026e-06, 9.138999999436237e-06, 7.722000000320861e-06, 4.181000000436086e-06, 7.2089999996194365e-06, 1.0375000000450996e-05, 8.221999999946661e-06, 8.707999999302274e-06, 1.040300000010319e-05, 8.167000000725011e-06, 6.513999999846476e-06, 9.277999999390829e-06, 7.83299999973508e-06, 1.0084000000354365e-05, 7.777999999625251e-06, 0.3779251530000005, 1.0973000000191746e-05, 7.528000000256441e-06, 1.0652999999472001e-05, 8.457999999933463e-06, 9.945000000399773e-06, 8.417000000093822e-06, 8.514000000126032e-06, 4.582999999946935e-06, 1.0277000000336045e-05, 8.02799999988224e-06, 4.972000000158516e-06, 8.764000000383021e-06, 1.070899999966457e-05, 8.832999999874858e-06, 9.430000000421046e-06, 5.819999999268077e-06, 9.70900000041297e-06, 5.444000000132121e-06, 7.611999999213026e-06, 6.2080000002850966e-06, 8.887999999984686e-06, 9.084000000214587e-06, 8.847000000145044e-06, 1.0347999999993363e-05]</msg>
<status status="PASS" starttime="20201029 09:34:15.755" endtime="20201029 09:34:15.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.751" endtime="20201029 09:34:15.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.331" endtime="20201029 09:34:15.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.331" endtime="20201029 09:34:15.758"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.766" endtime="20201029 09:34:15.781"></status>
</kw>
<msg timestamp="20201029 09:34:15.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.765" endtime="20201029 09:34:15.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.784" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.782" endtime="20201029 09:34:15.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.785" endtime="20201029 09:34:15.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.762" endtime="20201029 09:34:15.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.760" endtime="20201029 09:34:15.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.794" endtime="20201029 09:34:16.110"></status>
</kw>
<msg timestamp="20201029 09:34:16.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.238365653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.238371667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:15.792" endtime="20201029 09:34:16.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.238365653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.238371667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.115" endtime="20201029 09:34:16.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.125" endtime="20201029 09:34:16.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.790" endtime="20201029 09:34:16.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.788" endtime="20201029 09:34:16.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.132" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.722000000320861e-06}, {'diff': 4.181000000436086e-06}, {'diff': 7.2089999996194365e-06}, {'diff': 1.0375000000450996e-05}, {'diff': 8.221999999946661e-06}, {'diff': 8.70799999...</msg>
<status status="PASS" starttime="20201029 09:34:16.128" endtime="20201029 09:34:16.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.138" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.722000000320861e-06, 4.181000000436086e-06, 7.2089999996194365e-06, 1.0375000000450996e-05, 8.221999999946661e-06, 8.707999999302274e-06, 1.040300000010319e-05, 8.167000000725011e-06, 6...</msg>
<status status="PASS" starttime="20201029 09:34:16.133" endtime="20201029 09:34:16.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.142" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:16.141" endtime="20201029 09:34:16.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.145" level="INFO">VALUE: [0, 7.722000000320861e-06, 4.181000000436086e-06, 7.2089999996194365e-06, 1.0375000000450996e-05, 8.221999999946661e-06, 8.707999999302274e-06, 1.040300000010319e-05, 8.167000000725011e-06, 6.513999999846476e-06, 9.277999999390829e-06, 7.83299999973508e-06, 1.0084000000354365e-05, 7.777999999625251e-06, 0.3779251530000005, 1.0973000000191746e-05, 7.528000000256441e-06, 1.0652999999472001e-05, 8.457999999933463e-06, 9.945000000399773e-06, 8.417000000093822e-06, 8.514000000126032e-06, 4.582999999946935e-06, 1.0277000000336045e-05, 8.02799999988224e-06, 4.972000000158516e-06, 8.764000000383021e-06, 1.070899999966457e-05, 8.832999999874858e-06, 9.430000000421046e-06, 5.819999999268077e-06, 9.70900000041297e-06, 5.444000000132121e-06, 7.611999999213026e-06, 6.2080000002850966e-06, 8.887999999984686e-06, 9.084000000214587e-06, 8.847000000145044e-06, 1.0347999999993363e-05, 0.41628016700000003, 6.903000000058057e-06, 5.403000000292479e-06, 8.541000000583665e-06, 9.16699999997661e-06, 4.916000000854126e-06, 8.72300000054338e-06, 1.0514000000405588e-05, 9.846999999396644e-06, 7.83299999973508e-06, 9.804999999474262e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.457999999653907e-06, 8.514000000126032e-06, 5.902999999918279e-06, 7.3890000003018486e-06, 8.277999999251051e-06, 8.485999999585658e-06, 8.305999999791425e-06, 9.943999999428854e-06, 9.777999999904807e-06, 8.262999999786302e-06, 8.97299999991219e-06, 1.0180000000303835e-05]</msg>
<status status="PASS" starttime="20201029 09:34:16.143" endtime="20201029 09:34:16.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.139" endtime="20201029 09:34:16.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.759" endtime="20201029 09:34:16.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.759" endtime="20201029 09:34:16.146"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.154" endtime="20201029 09:34:16.168"></status>
</kw>
<msg timestamp="20201029 09:34:16.169" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.153" endtime="20201029 09:34:16.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.171" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.170" endtime="20201029 09:34:16.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.172" endtime="20201029 09:34:16.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.150" endtime="20201029 09:34:16.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.148" endtime="20201029 09:34:16.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.181" endtime="20201029 09:34:16.496"></status>
</kw>
<msg timestamp="20201029 09:34:16.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.616695569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.616703347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.180" endtime="20201029 09:34:16.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.616695569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.616703347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.501" endtime="20201029 09:34:16.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.510" endtime="20201029 09:34:16.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.177" endtime="20201029 09:34:16.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.176" endtime="20201029 09:34:16.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.517" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.764000000383021e-06}, {'diff': 1.070899999966457e-05}, {'diff': 8.832999999874858e-06}, {'diff': 9.430000000421046e-06}, {'diff': 5.819999999268077e-06}, {'diff': 9.7090000004...</msg>
<status status="PASS" starttime="20201029 09:34:16.514" endtime="20201029 09:34:16.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.522" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.764000000383021e-06, 1.070899999966457e-05, 8.832999999874858e-06, 9.430000000421046e-06, 5.819999999268077e-06, 9.70900000041297e-06, 5.444000000132121e-06, 7.611999999213026e-06, 6.20...</msg>
<status status="PASS" starttime="20201029 09:34:16.518" endtime="20201029 09:34:16.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.534" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:16.533" endtime="20201029 09:34:16.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.537" level="INFO">VALUE: [0, 8.764000000383021e-06, 1.070899999966457e-05, 8.832999999874858e-06, 9.430000000421046e-06, 5.819999999268077e-06, 9.70900000041297e-06, 5.444000000132121e-06, 7.611999999213026e-06, 6.2080000002850966e-06, 8.887999999984686e-06, 9.084000000214587e-06, 8.847000000145044e-06, 1.0347999999993363e-05, 0.41628016700000003, 6.903000000058057e-06, 5.403000000292479e-06, 8.541000000583665e-06, 9.16699999997661e-06, 4.916000000854126e-06, 8.72300000054338e-06, 1.0514000000405588e-05, 9.846999999396644e-06, 7.83299999973508e-06, 9.804999999474262e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.457999999653907e-06, 8.514000000126032e-06, 5.902999999918279e-06, 7.3890000003018486e-06, 8.277999999251051e-06, 8.485999999585658e-06, 8.305999999791425e-06, 9.943999999428854e-06, 9.777999999904807e-06, 8.262999999786302e-06, 8.97299999991219e-06, 1.0180000000303835e-05, 0.3766325980000005, 6.972000000438072e-06, 8.084000000074809e-06, 6.861000000135675e-06, 8.792000000035216e-06, 9.444000000691233e-06, 7.708000000050674e-06, 6.235999999937292e-06, 9.403000000851591e-06, 1.0833000000154414e-05, 7.860999999387275e-06, 8.735999999842647e-06, 7.457999999793685e-06, 7.0279999997424625e-06, 1.0485999999865214e-05, 9.874999999937017e-06, 1.0318999999370249e-05, 5.625000000009095e-06, 6.153000000175268e-06, 6.166999999557277e-06, 9.652000000137662e-06, 9.915999999776659e-06, 6.264000000477665e-06, 9.388999999693226e-06, 6.833999999678042e-06]</msg>
<status status="PASS" starttime="20201029 09:34:16.535" endtime="20201029 09:34:16.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.530" endtime="20201029 09:34:16.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.147" endtime="20201029 09:34:16.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.147" endtime="20201029 09:34:16.538"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.547" endtime="20201029 09:34:16.561"></status>
</kw>
<msg timestamp="20201029 09:34:16.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.545" endtime="20201029 09:34:16.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.563" endtime="20201029 09:34:16.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.565" endtime="20201029 09:34:16.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.542" endtime="20201029 09:34:16.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.540" endtime="20201029 09:34:16.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.574" endtime="20201029 09:34:16.887"></status>
</kw>
<msg timestamp="20201029 09:34:16.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.033380375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.033386153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.572" endtime="20201029 09:34:16.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.033380375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.033386153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.892" endtime="20201029 09:34:16.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.901" endtime="20201029 09:34:16.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.570" endtime="20201029 09:34:16.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.568" endtime="20201029 09:34:16.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.908" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.83299999973508e-06}, {'diff': 6.457999999653907e-06}, {'diff': 8.514000000126032e-06}, {'diff': 5.902999999918279e-06}, {'diff': 7.3890000003018486e-06}, {'diff': 8.2779999992...</msg>
<status status="PASS" starttime="20201029 09:34:16.905" endtime="20201029 09:34:16.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.913" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.83299999973508e-06, 6.457999999653907e-06, 8.514000000126032e-06, 5.902999999918279e-06, 7.3890000003018486e-06, 8.277999999251051e-06, 8.485999999585658e-06, 8.305999999791425e-06, 9.9...</msg>
<status status="PASS" starttime="20201029 09:34:16.909" endtime="20201029 09:34:16.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.918" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:16.917" endtime="20201029 09:34:16.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.920" level="INFO">VALUE: [0, 7.83299999973508e-06, 6.457999999653907e-06, 8.514000000126032e-06, 5.902999999918279e-06, 7.3890000003018486e-06, 8.277999999251051e-06, 8.485999999585658e-06, 8.305999999791425e-06, 9.943999999428854e-06, 9.777999999904807e-06, 8.262999999786302e-06, 8.97299999991219e-06, 1.0180000000303835e-05, 0.3766325980000005, 6.972000000438072e-06, 8.084000000074809e-06, 6.861000000135675e-06, 8.792000000035216e-06, 9.444000000691233e-06, 7.708000000050674e-06, 6.235999999937292e-06, 9.403000000851591e-06, 1.0833000000154414e-05, 7.860999999387275e-06, 8.735999999842647e-06, 7.457999999793685e-06, 7.0279999997424625e-06, 1.0485999999865214e-05, 9.874999999937017e-06, 1.0318999999370249e-05, 5.625000000009095e-06, 6.153000000175268e-06, 6.166999999557277e-06, 9.652000000137662e-06, 9.915999999776659e-06, 6.264000000477665e-06, 9.388999999693226e-06, 6.833999999678042e-06, 0.3831252779999996, 9.485999999725436e-06, 9.473000000426168e-06, 9.902999999589213e-06, 8.082999999992069e-06, 6.471999999924094e-06, 6.277999999859674e-06, 8.778000000653208e-06, 8.708000000190452e-06, 1.0333000000528614e-05, 1.0069000000001438e-05, 6.0270000004081226e-06, 8.77799999976503e-06, 9.583000000645825e-06, 8.111999999727004e-06, 8.347000000519245e-06, 7.958000000307663e-06, 8.861000000415231e-06, 7.666000000128292e-06, 7.6120000001012045e-06, 7.0279999997424625e-06, 6.638999999530881e-06, 6.568999999956304e-06, 7.847000000005266e-06, 6.278000000747852e-06]</msg>
<status status="PASS" starttime="20201029 09:34:16.919" endtime="20201029 09:34:16.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.915" endtime="20201029 09:34:16.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.539" endtime="20201029 09:34:16.922"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.538" endtime="20201029 09:34:16.922"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.930" endtime="20201029 09:34:16.944"></status>
</kw>
<msg timestamp="20201029 09:34:16.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.928" endtime="20201029 09:34:16.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.945" endtime="20201029 09:34:16.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.948" endtime="20201029 09:34:16.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.926" endtime="20201029 09:34:16.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.924" endtime="20201029 09:34:16.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.957" endtime="20201029 09:34:17.282"></status>
</kw>
<msg timestamp="20201029 09:34:17.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.410406764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.410413653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:16.955" endtime="20201029 09:34:17.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.410406764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.410413653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:17.286" endtime="20201029 09:34:17.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.296" endtime="20201029 09:34:17.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.952" endtime="20201029 09:34:17.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.951" endtime="20201029 09:34:17.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.304" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.457999999793685e-06}, {'diff': 7.0279999997424625e-06}, {'diff': 1.0485999999865214e-05}, {'diff': 9.874999999937017e-06}, {'diff': 1.0318999999370249e-05}, {'diff': 5.6250000...</msg>
<status status="PASS" starttime="20201029 09:34:17.299" endtime="20201029 09:34:17.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.309" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.457999999793685e-06, 7.0279999997424625e-06, 1.0485999999865214e-05, 9.874999999937017e-06, 1.0318999999370249e-05, 5.625000000009095e-06, 6.153000000175268e-06, 6.166999999557277e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:17.305" endtime="20201029 09:34:17.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:17.312" endtime="20201029 09:34:17.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.316" level="INFO">VALUE: [0, 7.457999999793685e-06, 7.0279999997424625e-06, 1.0485999999865214e-05, 9.874999999937017e-06, 1.0318999999370249e-05, 5.625000000009095e-06, 6.153000000175268e-06, 6.166999999557277e-06, 9.652000000137662e-06, 9.915999999776659e-06, 6.264000000477665e-06, 9.388999999693226e-06, 6.833999999678042e-06, 0.3831252779999996, 9.485999999725436e-06, 9.473000000426168e-06, 9.902999999589213e-06, 8.082999999992069e-06, 6.471999999924094e-06, 6.277999999859674e-06, 8.778000000653208e-06, 8.708000000190452e-06, 1.0333000000528614e-05, 1.0069000000001438e-05, 6.0270000004081226e-06, 8.77799999976503e-06, 9.583000000645825e-06, 8.111999999727004e-06, 8.347000000519245e-06, 7.958000000307663e-06, 8.861000000415231e-06, 7.666000000128292e-06, 7.6120000001012045e-06, 7.0279999997424625e-06, 6.638999999530881e-06, 6.568999999956304e-06, 7.847000000005266e-06, 6.278000000747852e-06, 0.37344449999999973, 6.540999999415931e-06, 9.847999999479384e-06, 1.0028000000161796e-05, 6.583999999421053e-06, 6.88899999978787e-06, 9.763000000440059e-06, 8.999999999481645e-06, 7.805000000082885e-06, 9.028000000022018e-06, 9.041000000209465e-06, 6.651999999718328e-06, 8.193999999406287e-06, 5.083000000460913e-06, 7.777999999625251e-06, 5.402999999404301e-06, 7.402999999683857e-06, 6.625000000148873e-06, 6.708999999993637e-06, 7.5420000005266274e-06, 1.0542000000057783e-05, 8.27800000013923e-06, 8.207999999676474e-06, 6.471999999924094e-06, 6.820000000296034e-06]</msg>
<status status="PASS" starttime="20201029 09:34:17.314" endtime="20201029 09:34:17.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.310" endtime="20201029 09:34:17.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.923" endtime="20201029 09:34:17.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.922" endtime="20201029 09:34:17.317"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.325" endtime="20201029 09:34:17.339"></status>
</kw>
<msg timestamp="20201029 09:34:17.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.323" endtime="20201029 09:34:17.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.341" endtime="20201029 09:34:17.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.344" endtime="20201029 09:34:17.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.321" endtime="20201029 09:34:17.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.319" endtime="20201029 09:34:17.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.354" endtime="20201029 09:34:17.666"></status>
</kw>
<msg timestamp="20201029 09:34:17.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.793920194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.793929083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:17.353" endtime="20201029 09:34:17.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.793920194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.793929083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:17.671" endtime="20201029 09:34:17.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.681" endtime="20201029 09:34:17.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.349" endtime="20201029 09:34:17.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.347" endtime="20201029 09:34:17.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.688" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.77799999976503e-06}, {'diff': 9.583000000645825e-06}, {'diff': 8.111999999727004e-06}, {'diff': 8.347000000519245e-06}, {'diff': 7.958000000307663e-06}, {'diff': 8.86100000041...</msg>
<status status="PASS" starttime="20201029 09:34:17.684" endtime="20201029 09:34:17.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.692" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.77799999976503e-06, 9.583000000645825e-06, 8.111999999727004e-06, 8.347000000519245e-06, 7.958000000307663e-06, 8.861000000415231e-06, 7.666000000128292e-06, 7.6120000001012045e-06, 7.0...</msg>
<status status="PASS" starttime="20201029 09:34:17.689" endtime="20201029 09:34:17.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.697" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:17.696" endtime="20201029 09:34:17.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.700" level="INFO">VALUE: [0, 8.77799999976503e-06, 9.583000000645825e-06, 8.111999999727004e-06, 8.347000000519245e-06, 7.958000000307663e-06, 8.861000000415231e-06, 7.666000000128292e-06, 7.6120000001012045e-06, 7.0279999997424625e-06, 6.638999999530881e-06, 6.568999999956304e-06, 7.847000000005266e-06, 6.278000000747852e-06, 0.37344449999999973, 6.540999999415931e-06, 9.847999999479384e-06, 1.0028000000161796e-05, 6.583999999421053e-06, 6.88899999978787e-06, 9.763000000440059e-06, 8.999999999481645e-06, 7.805000000082885e-06, 9.028000000022018e-06, 9.041000000209465e-06, 6.651999999718328e-06, 8.193999999406287e-06, 5.083000000460913e-06, 7.777999999625251e-06, 5.402999999404301e-06, 7.402999999683857e-06, 6.625000000148873e-06, 6.708999999993637e-06, 7.5420000005266274e-06, 1.0542000000057783e-05, 8.27800000013923e-06, 8.207999999676474e-06, 6.471999999924094e-06, 6.820000000296034e-06, 0.3848087220000007, 9.499999999995623e-06, 9.569000000375638e-06, 7.971999999689672e-06, 6.819000000213293e-06, 6.028000000490863e-06, 8.263999999869043e-06, 9.278000000279008e-06, 1.1527999999927374e-05, 4.582999999946935e-06, 7.667000000211033e-06, 5.833000000343702e-06, 1.1014000000031388e-05, 8.166999999836833e-06, 9.472000000343428e-06, 5.15300000003549e-06, 5.290999999907342e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0417000000373378e-05, 6.152000000092528e-06, 8.097000000262256e-06, 9.889000000207204e-06, 8.959000000530182e-06, 9.22300000016918e-06]</msg>
<status status="PASS" starttime="20201029 09:34:17.699" endtime="20201029 09:34:17.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.693" endtime="20201029 09:34:17.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.318" endtime="20201029 09:34:17.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.317" endtime="20201029 09:34:17.701"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.709" endtime="20201029 09:34:17.723"></status>
</kw>
<msg timestamp="20201029 09:34:17.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.708" endtime="20201029 09:34:17.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.725" endtime="20201029 09:34:17.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.727" endtime="20201029 09:34:17.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.705" endtime="20201029 09:34:17.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.704" endtime="20201029 09:34:17.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.737" endtime="20201029 09:34:18.047"></status>
</kw>
<msg timestamp="20201029 09:34:18.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.167762444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.167771625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:17.736" endtime="20201029 09:34:18.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.167762444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.167771625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:18.052" endtime="20201029 09:34:18.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.061" endtime="20201029 09:34:18.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.732" endtime="20201029 09:34:18.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.730" endtime="20201029 09:34:18.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.068" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.193999999406287e-06}, {'diff': 5.083000000460913e-06}, {'diff': 7.777999999625251e-06}, {'diff': 5.402999999404301e-06}, {'diff': 7.402999999683857e-06}, {'diff': 6.6250000001...</msg>
<status status="PASS" starttime="20201029 09:34:18.065" endtime="20201029 09:34:18.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.193999999406287e-06, 5.083000000460913e-06, 7.777999999625251e-06, 5.402999999404301e-06, 7.402999999683857e-06, 6.625000000148873e-06, 6.708999999993637e-06, 7.5420000005266274e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:18.069" endtime="20201029 09:34:18.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.078" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:18.077" endtime="20201029 09:34:18.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.081" level="INFO">VALUE: [0, 8.193999999406287e-06, 5.083000000460913e-06, 7.777999999625251e-06, 5.402999999404301e-06, 7.402999999683857e-06, 6.625000000148873e-06, 6.708999999993637e-06, 7.5420000005266274e-06, 1.0542000000057783e-05, 8.27800000013923e-06, 8.207999999676474e-06, 6.471999999924094e-06, 6.820000000296034e-06, 0.3848087220000007, 9.499999999995623e-06, 9.569000000375638e-06, 7.971999999689672e-06, 6.819000000213293e-06, 6.028000000490863e-06, 8.263999999869043e-06, 9.278000000279008e-06, 1.1527999999927374e-05, 4.582999999946935e-06, 7.667000000211033e-06, 5.833000000343702e-06, 1.1014000000031388e-05, 8.166999999836833e-06, 9.472000000343428e-06, 5.15300000003549e-06, 5.290999999907342e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0417000000373378e-05, 6.152000000092528e-06, 8.097000000262256e-06, 9.889000000207204e-06, 8.959000000530182e-06, 9.22300000016918e-06, 0.3716423750000004, 7.48599999944588e-06, 7.971999999689672e-06, 8.638999999810437e-06, 8.72199999957246e-06, 7.73599999970287e-06, 8.87499999979724e-06, 6.874999999517684e-06, 8.152999999566646e-06, 8.041999999264249e-06, 9.597000000027833e-06, 7.33300000010928e-06, 7.667000000211033e-06, 8.068999999721882e-06, 1.025000000076659e-05, 8.596999999888055e-06, 8.153000000454824e-06, 1.1236000000636182e-05, 5.583000000086713e-06, 9.681000000760775e-06, 7.763999999355065e-06, 8.097000000262256e-06, 9.026999999939278e-06, 7.528000000256441e-06, 6.403000000432257e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.079" endtime="20201029 09:34:18.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.075" endtime="20201029 09:34:18.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.702" endtime="20201029 09:34:18.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.702" endtime="20201029 09:34:18.082"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.090" endtime="20201029 09:34:18.103"></status>
</kw>
<msg timestamp="20201029 09:34:18.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.088" endtime="20201029 09:34:18.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.106" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.105" endtime="20201029 09:34:18.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.107" endtime="20201029 09:34:18.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.086" endtime="20201029 09:34:18.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.084" endtime="20201029 09:34:18.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.120" endtime="20201029 09:34:18.436"></status>
</kw>
<msg timestamp="20201029 09:34:18.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.552967111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.552971972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:18.118" endtime="20201029 09:34:18.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.552967111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.552971972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:18.441" endtime="20201029 09:34:18.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.451" endtime="20201029 09:34:18.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.115" endtime="20201029 09:34:18.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.112" endtime="20201029 09:34:18.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.458" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1014000000031388e-05}, {'diff': 8.166999999836833e-06}, {'diff': 9.472000000343428e-06}, {'diff': 5.15300000003549e-06}, {'diff': 5.290999999907342e-06}, {'diff': 8.0969999993...</msg>
<status status="PASS" starttime="20201029 09:34:18.454" endtime="20201029 09:34:18.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.462" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1014000000031388e-05, 8.166999999836833e-06, 9.472000000343428e-06, 5.15300000003549e-06, 5.290999999907342e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0417000000373378e-05, 6.1...</msg>
<status status="PASS" starttime="20201029 09:34:18.459" endtime="20201029 09:34:18.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.467" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:18.466" endtime="20201029 09:34:18.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.469" level="INFO">VALUE: [0, 1.1014000000031388e-05, 8.166999999836833e-06, 9.472000000343428e-06, 5.15300000003549e-06, 5.290999999907342e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0417000000373378e-05, 6.152000000092528e-06, 8.097000000262256e-06, 9.889000000207204e-06, 8.959000000530182e-06, 9.22300000016918e-06, 0.3716423750000004, 7.48599999944588e-06, 7.971999999689672e-06, 8.638999999810437e-06, 8.72199999957246e-06, 7.73599999970287e-06, 8.87499999979724e-06, 6.874999999517684e-06, 8.152999999566646e-06, 8.041999999264249e-06, 9.597000000027833e-06, 7.33300000010928e-06, 7.667000000211033e-06, 8.068999999721882e-06, 1.025000000076659e-05, 8.596999999888055e-06, 8.153000000454824e-06, 1.1236000000636182e-05, 5.583000000086713e-06, 9.681000000760775e-06, 7.763999999355065e-06, 8.097000000262256e-06, 9.026999999939278e-06, 7.528000000256441e-06, 6.403000000432257e-06, 0.36980557000000047, 8.457999999933463e-06, 1.005600000070217e-05, 7.77800000051343e-06, 7.3890000003018486e-06, 9.151999999623683e-06, 1.0415999999402459e-05, 1.115299999998598e-05, 5.514000000594876e-06, 8.31900000086705e-06, 1.0151999999763461e-05, 8.263999999869043e-06, 4.402000000069961e-06, 7.457999999793685e-06, 9.61100000029802e-06, 6.610999999878686e-06, 8.457999999933463e-06, 8.72199999957246e-06, 8.5269999994253e-06, 8.514000000126032e-06, 5.568999999816526e-06, 8.764000000383021e-06, 5.917000000188466e-06, 5.625000000009095e-06, 7.902000000115095e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.468" endtime="20201029 09:34:18.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.463" endtime="20201029 09:34:18.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.083" endtime="20201029 09:34:18.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.082" endtime="20201029 09:34:18.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.658" endtime="20201029 09:34:18.471"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:10.585" endtime="20201029 09:34:18.472" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.478" endtime="20201029 09:34:18.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.477" endtime="20201029 09:34:18.498"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.512" endtime="20201029 09:34:18.530"></status>
</kw>
<msg timestamp="20201029 09:34:18.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.511" endtime="20201029 09:34:18.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.532" endtime="20201029 09:34:18.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.536" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:18.534" endtime="20201029 09:34:18.537"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.508" endtime="20201029 09:34:18.537"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.506" endtime="20201029 09:34:18.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.505" endtime="20201029 09:34:18.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:18.542" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:18.541" endtime="20201029 09:34:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.539" endtime="20201029 09:34:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.504" endtime="20201029 09:34:18.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.503" endtime="20201029 09:34:18.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.544" endtime="20201029 09:34:18.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.501" endtime="20201029 09:34:18.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.499" endtime="20201029 09:34:18.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.476" endtime="20201029 09:34:18.546"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.555" endtime="20201029 09:34:18.570"></status>
</kw>
<msg timestamp="20201029 09:34:18.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.554" endtime="20201029 09:34:18.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.572" endtime="20201029 09:34:18.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.574" endtime="20201029 09:34:18.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.551" endtime="20201029 09:34:18.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.549" endtime="20201029 09:34:18.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.585" endtime="20201029 09:34:18.873"></status>
</kw>
<msg timestamp="20201029 09:34:18.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066414319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066437319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.583" endtime="20201029 09:34:18.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066414319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066437319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.877" endtime="20201029 09:34:18.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.886" endtime="20201029 09:34:18.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.579" endtime="20201029 09:34:18.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.578" endtime="20201029 09:34:18.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.892" level="INFO">${RESULT} = [{'diff': 2.2999999999995246e-05}, {'diff': 1.1670000000102432e-06}, {'diff': 1.0700000000057885e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.151999999990383e-0...</msg>
<status status="PASS" starttime="20201029 09:34:18.889" endtime="20201029 09:34:18.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.896" level="INFO">${OVERHEAD} = {'diff': [2.2999999999995246e-05, 1.1670000000102432e-06, 1.0700000000057885e-06, 1.1109999999980857e-06, 1.1810000000028742e-06, 1.151999999990383e-06, 1.1389999999972256e-06, 1.1530000000037344e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:18.893" endtime="20201029 09:34:18.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.900" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:18.899" endtime="20201029 09:34:18.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.903" level="INFO">VALUE: [2.2999999999995246e-05, 1.1670000000102432e-06, 1.0700000000057885e-06, 1.1109999999980857e-06, 1.1810000000028742e-06, 1.151999999990383e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1389999999972256e-06, 1.1810000000028742e-06, 1.1659999999968917e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1390000000111034e-06, 1.1669999999963654e-06, 1.2219999999951714e-06, 1.1670000000102432e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1529999999898566e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.222999999994645e-06, 1.1660000000107695e-06, 1.1799999999895228e-06, 1.1250000000045945e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.2220000000090492e-06, 1.0830000000128237e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1669999999963654e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.902" endtime="20201029 09:34:18.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.897" endtime="20201029 09:34:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.548" endtime="20201029 09:34:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.548" endtime="20201029 09:34:18.904"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.913" endtime="20201029 09:34:18.928"></status>
</kw>
<msg timestamp="20201029 09:34:18.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.911" endtime="20201029 09:34:18.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.930" endtime="20201029 09:34:18.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.932" endtime="20201029 09:34:18.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.908" endtime="20201029 09:34:18.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.907" endtime="20201029 09:34:18.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.941" endtime="20201029 09:34:19.248"></status>
</kw>
<msg timestamp="20201029 09:34:19.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066621014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066622194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.940" endtime="20201029 09:34:19.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066621014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066622194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.253" endtime="20201029 09:34:19.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.263" endtime="20201029 09:34:19.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.937" endtime="20201029 09:34:19.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.936" endtime="20201029 09:34:19.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.269" level="INFO">${RESULT} = [{'diff': 1.1799999999895228e-06}, {'diff': 1.1250000000045945e-06}, {'diff': 1.1520000000042607e-06}, {'diff': 1.1529999999898566e-06}, {'diff': 1.1530000000037344e-06}, {'diff': 1.1659999999968917e-...</msg>
<status status="PASS" starttime="20201029 09:34:19.266" endtime="20201029 09:34:19.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:19.275" level="INFO">${OVERHEAD} = {'diff': [1.1799999999895228e-06, 1.1250000000045945e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.2220000000090492e-06, 1.0830000000128237e-06...</msg>
<status status="PASS" starttime="20201029 09:34:19.270" endtime="20201029 09:34:19.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.279" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:19.278" endtime="20201029 09:34:19.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.282" level="INFO">VALUE: [1.1799999999895228e-06, 1.1250000000045945e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.2220000000090492e-06, 1.0830000000128237e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.0830000000128237e-06, 1.1520000000042607e-06, 1.1389999999833478e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1809999999612408e-06, 1.1799999999895228e-06, 1.15300000003149e-06, 1.1529999999759788e-06, 1.1659999999968917e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.180000000045034e-06, 1.1389999999833478e-06, 1.2079999999747848e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1529999999759788e-06, 1.1520000000042607e-06, 1.1669999999686098e-06, 1.1809999999612408e-06, 1.1669999999686098e-06, 1.1799999999895228e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.208000000030296e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1109999999980857e-06, 1.1659999999968917e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1659999999968917e-06]</msg>
<status status="PASS" starttime="20201029 09:34:19.280" endtime="20201029 09:34:19.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.276" endtime="20201029 09:34:19.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.906" endtime="20201029 09:34:19.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.905" endtime="20201029 09:34:19.283"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.291" endtime="20201029 09:34:19.306"></status>
</kw>
<msg timestamp="20201029 09:34:19.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.290" endtime="20201029 09:34:19.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.307" endtime="20201029 09:34:19.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.310" endtime="20201029 09:34:19.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.287" endtime="20201029 09:34:19.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.286" endtime="20201029 09:34:19.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.319" endtime="20201029 09:34:19.622"></status>
</kw>
<msg timestamp="20201029 09:34:19.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.413898056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.413899222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.317" endtime="20201029 09:34:19.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.413898056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.413899222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.627" endtime="20201029 09:34:19.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.636" endtime="20201029 09:34:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.315" endtime="20201029 09:34:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.313" endtime="20201029 09:34:19.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.643" level="INFO">${RESULT} = [{'diff': 1.1659999999968917e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1389999999833478e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.180000000045034e-06...</msg>
<status status="PASS" starttime="20201029 09:34:19.640" endtime="20201029 09:34:19.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:19.651" level="INFO">${OVERHEAD} = {'diff': [1.1659999999968917e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:19.644" endtime="20201029 09:34:19.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.655" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:19.654" endtime="20201029 09:34:19.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.657" level="INFO">VALUE: [1.1659999999968917e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1659999999968917e-06, 1.1670000000796321e-06, 1.1670000000796321e-06, 1.1950000000648942e-06, 1.1389999999833478e-06, 1.181000000016752e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1949999999538718e-06, 1.1389999999833478e-06, 1.15300000003149e-06, 1.208000000030296e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.125000000046228e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.13900000009437e-06, 1.1670000000796321e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1659999999968917e-06, 1.1670000000796321e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1799999999340116e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.15300000003149e-06]</msg>
<status status="PASS" starttime="20201029 09:34:19.656" endtime="20201029 09:34:19.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.652" endtime="20201029 09:34:19.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.284" endtime="20201029 09:34:19.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.284" endtime="20201029 09:34:19.659"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.667" endtime="20201029 09:34:19.683"></status>
</kw>
<msg timestamp="20201029 09:34:19.683" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.666" endtime="20201029 09:34:19.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.684" endtime="20201029 09:34:19.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.687" endtime="20201029 09:34:19.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.663" endtime="20201029 09:34:19.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.661" endtime="20201029 09:34:19.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.696" endtime="20201029 09:34:20.008"></status>
</kw>
<msg timestamp="20201029 09:34:20.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.782589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.782590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.694" endtime="20201029 09:34:20.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.782589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.782590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.014" endtime="20201029 09:34:20.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.026" endtime="20201029 09:34:20.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.691" endtime="20201029 09:34:20.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.690" endtime="20201029 09:34:20.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.033" level="INFO">${RESULT} = [{'diff': 1.1669999999686098e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.15300000003149e-06}, {'diff': 1.1389999999833478e-06}, {'diff': 1.1669999999686098e-06...</msg>
<status status="PASS" starttime="20201029 09:34:20.029" endtime="20201029 09:34:20.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.038" level="INFO">${OVERHEAD} = {'diff': [1.1669999999686098e-06, 1.1659999999968917e-06, 1.1799999999340116e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:20.034" endtime="20201029 09:34:20.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.042" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:20.041" endtime="20201029 09:34:20.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.045" level="INFO">VALUE: [1.1669999999686098e-06, 1.1659999999968917e-06, 1.1799999999340116e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.15300000003149e-06, 1.2090000001130363e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1120000000808261e-06, 1.166000000107914e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.1659999998858694e-06, 1.1939999999821538e-06, 1.1670000001906544e-06, 1.1659999998858694e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1530000001425122e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1800000001560562e-06, 1.1530000001425122e-06, 1.1520000000597719e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1520000000597719e-06, 1.1809999997947074e-06, 1.1519999998377273e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1530000001425122e-06, 1.1389999998723255e-06, 1.181000000016752e-06, 1.1530000001425122e-06]</msg>
<status status="PASS" starttime="20201029 09:34:20.043" endtime="20201029 09:34:20.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.038" endtime="20201029 09:34:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.660" endtime="20201029 09:34:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.660" endtime="20201029 09:34:20.047"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.056" endtime="20201029 09:34:20.070"></status>
</kw>
<msg timestamp="20201029 09:34:20.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.054" endtime="20201029 09:34:20.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.072" endtime="20201029 09:34:20.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.075" endtime="20201029 09:34:20.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.050" endtime="20201029 09:34:20.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.049" endtime="20201029 09:34:20.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.084" endtime="20201029 09:34:20.409"></status>
</kw>
<msg timestamp="20201029 09:34:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.146704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.146705722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.082" endtime="20201029 09:34:20.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.146704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.146705722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.414" endtime="20201029 09:34:20.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.424" endtime="20201029 09:34:20.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.080" endtime="20201029 09:34:20.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.078" endtime="20201029 09:34:20.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.431" level="INFO">${RESULT} = [{'diff': 1.1530000001425122e-06}, {'diff': 1.1520000000597719e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1519999998377273e-06}, {'diff': 1.1520000000597719e-06}, {'diff': 1.1809999997947074e-0...</msg>
<status status="PASS" starttime="20201029 09:34:20.427" endtime="20201029 09:34:20.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.436" level="INFO">${OVERHEAD} = {'diff': [1.1530000001425122e-06, 1.1520000000597719e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1520000000597719e-06, 1.1809999997947074e-06, 1.1519999998377273e-06, 1.1530000001425122e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:20.432" endtime="20201029 09:34:20.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:20.439" endtime="20201029 09:34:20.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.443" level="INFO">VALUE: [1.1530000001425122e-06, 1.1520000000597719e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1520000000597719e-06, 1.1809999997947074e-06, 1.1519999998377273e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1530000001425122e-06, 1.1389999998723255e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1809999997947074e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.125000000046228e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1389999998723255e-06, 1.166000000107914e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.125000000046228e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.2089999998909917e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 09:34:20.441" endtime="20201029 09:34:20.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.437" endtime="20201029 09:34:20.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.047" endtime="20201029 09:34:20.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.047" endtime="20201029 09:34:20.444"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.452" endtime="20201029 09:34:20.467"></status>
</kw>
<msg timestamp="20201029 09:34:20.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.451" endtime="20201029 09:34:20.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.470" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.468" endtime="20201029 09:34:20.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.471" endtime="20201029 09:34:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.448" endtime="20201029 09:34:20.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.447" endtime="20201029 09:34:20.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.480" endtime="20201029 09:34:20.775"></status>
</kw>
<msg timestamp="20201029 09:34:20.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.523325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.523326167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.478" endtime="20201029 09:34:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.523325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.523326167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.779" endtime="20201029 09:34:20.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.789" endtime="20201029 09:34:20.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.476" endtime="20201029 09:34:20.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.474" endtime="20201029 09:34:20.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.796" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1520000000597719e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1659999998858694e-06}, {'diff': 1.1669999999686098e-...</msg>
<status status="PASS" starttime="20201029 09:34:20.793" endtime="20201029 09:34:20.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.802" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1520000000597719e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.1519999998377273e-06, 1.1529999999204676e-06...</msg>
<status status="PASS" starttime="20201029 09:34:20.797" endtime="20201029 09:34:20.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.806" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:20.805" endtime="20201029 09:34:20.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.809" level="INFO">VALUE: [1.1529999999204676e-06, 1.1520000000597719e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.2089999998909917e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1659999998858694e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1659999998858694e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.2220000000784381e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1519999998377273e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1389999998723255e-06, 1.1659999998858694e-06, 1.13900000009437e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.166000000107914e-06]</msg>
<status status="PASS" starttime="20201029 09:34:20.807" endtime="20201029 09:34:20.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.803" endtime="20201029 09:34:20.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.445" endtime="20201029 09:34:20.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.445" endtime="20201029 09:34:20.811"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.818" endtime="20201029 09:34:20.833"></status>
</kw>
<msg timestamp="20201029 09:34:20.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.817" endtime="20201029 09:34:20.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.835" endtime="20201029 09:34:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.837" endtime="20201029 09:34:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.814" endtime="20201029 09:34:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.813" endtime="20201029 09:34:20.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.847" endtime="20201029 09:34:21.150"></status>
</kw>
<msg timestamp="20201029 09:34:21.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.909813181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.909814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.845" endtime="20201029 09:34:21.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.909813181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.909814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.155" endtime="20201029 09:34:21.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.164" endtime="20201029 09:34:21.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.842" endtime="20201029 09:34:21.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.840" endtime="20201029 09:34:21.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.171" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1389999998723255e-06}, {'diff': 1.1659999998858694e-06}, {'diff': 1.13900000009437e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:21.168" endtime="20201029 09:34:21.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.176" level="INFO">${OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1389999998723255e-06, 1.1659999998858694e-06, 1.13900000009437e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:21.172" endtime="20201029 09:34:21.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:21.179" endtime="20201029 09:34:21.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.183" level="INFO">VALUE: [1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1389999998723255e-06, 1.1659999998858694e-06, 1.13900000009437e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1800000003781008e-06, 1.1670000001906544e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1800000003781008e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.181" endtime="20201029 09:34:21.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.177" endtime="20201029 09:34:21.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.811" endtime="20201029 09:34:21.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.811" endtime="20201029 09:34:21.185"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.197" endtime="20201029 09:34:21.214"></status>
</kw>
<msg timestamp="20201029 09:34:21.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.195" endtime="20201029 09:34:21.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.217" endtime="20201029 09:34:21.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.221" endtime="20201029 09:34:21.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.191" endtime="20201029 09:34:21.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.187" endtime="20201029 09:34:21.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.230" endtime="20201029 09:34:21.537"></status>
</kw>
<msg timestamp="20201029 09:34:21.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.266893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.266894264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.229" endtime="20201029 09:34:21.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.266893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.266894264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.542" endtime="20201029 09:34:21.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.552" endtime="20201029 09:34:21.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.226" endtime="20201029 09:34:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.224" endtime="20201029 09:34:21.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.559" level="INFO">${RESULT} = [{'diff': 1.208000000030296e-06}, {'diff': 1.1519999998377273e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999997465652e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:21.555" endtime="20201029 09:34:21.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.564" level="INFO">${OVERHEAD} = {'diff': [1.208000000030296e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:21.560" endtime="20201029 09:34:21.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.568" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:21.567" endtime="20201029 09:34:21.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.571" level="INFO">VALUE: [1.208000000030296e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1800000003781008e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.1250000002682725e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2090000001130363e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1949999998428495e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.569" endtime="20201029 09:34:21.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.565" endtime="20201029 09:34:21.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.185" endtime="20201029 09:34:21.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.185" endtime="20201029 09:34:21.579"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.586" endtime="20201029 09:34:21.601"></status>
</kw>
<msg timestamp="20201029 09:34:21.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.585" endtime="20201029 09:34:21.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.603" endtime="20201029 09:34:21.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.605" endtime="20201029 09:34:21.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.582" endtime="20201029 09:34:21.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.581" endtime="20201029 09:34:21.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.614" endtime="20201029 09:34:21.934"></status>
</kw>
<msg timestamp="20201029 09:34:21.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.636953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.636954764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.613" endtime="20201029 09:34:21.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.636953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.636954764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.938" endtime="20201029 09:34:21.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.948" endtime="20201029 09:34:21.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.610" endtime="20201029 09:34:21.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.608" endtime="20201029 09:34:21.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.956" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.166000000107914e-06...</msg>
<status status="PASS" starttime="20201029 09:34:21.952" endtime="20201029 09:34:21.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.961" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:21.957" endtime="20201029 09:34:21.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.965" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:21.964" endtime="20201029 09:34:21.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.967" level="INFO">VALUE: [1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1949999998428495e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.2220000003004827e-06, 1.1670000001906544e-06, 1.0970000001719882e-06, 1.1520000002818165e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.0829999999018014e-06, 1.1670000001906544e-06, 1.1520000002818165e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.966" endtime="20201029 09:34:21.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.962" endtime="20201029 09:34:21.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.579" endtime="20201029 09:34:21.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.579" endtime="20201029 09:34:21.969"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.977" endtime="20201029 09:34:21.992"></status>
</kw>
<msg timestamp="20201029 09:34:21.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.976" endtime="20201029 09:34:21.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.994" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.993" endtime="20201029 09:34:21.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.996" endtime="20201029 09:34:21.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.973" endtime="20201029 09:34:21.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.971" endtime="20201029 09:34:21.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.005" endtime="20201029 09:34:22.329"></status>
</kw>
<msg timestamp="20201029 09:34:22.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.016068333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0160695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:22.004" endtime="20201029 09:34:22.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.016068333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0160695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:22.335" endtime="20201029 09:34:22.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.345" endtime="20201029 09:34:22.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.000" endtime="20201029 09:34:22.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.999" endtime="20201029 09:34:22.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.352" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1519999998377273e-06}, {'diff': 1.1670000001906544e-06...</msg>
<status status="PASS" starttime="20201029 09:34:22.348" endtime="20201029 09:34:22.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:22.356" level="INFO">${OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:22.353" endtime="20201029 09:34:22.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.361" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:22.360" endtime="20201029 09:34:22.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.364" level="INFO">VALUE: [1.1669999997465652e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.0829999999018014e-06, 1.1670000001906544e-06, 1.1520000002818165e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1389999996502809e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.0979999998106393e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.166000000107914e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:34:22.362" endtime="20201029 09:34:22.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.357" endtime="20201029 09:34:22.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.970" endtime="20201029 09:34:22.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.970" endtime="20201029 09:34:22.366"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.373" endtime="20201029 09:34:22.388"></status>
</kw>
<msg timestamp="20201029 09:34:22.389" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.372" endtime="20201029 09:34:22.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.391" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.390" endtime="20201029 09:34:22.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.392" endtime="20201029 09:34:22.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.369" endtime="20201029 09:34:22.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.368" endtime="20201029 09:34:22.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.403" endtime="20201029 09:34:22.711"></status>
</kw>
<msg timestamp="20201029 09:34:22.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.396612667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.396613833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.401" endtime="20201029 09:34:22.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.396612667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.396613833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.716" endtime="20201029 09:34:22.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.726" endtime="20201029 09:34:22.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.397" endtime="20201029 09:34:22.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.395" endtime="20201029 09:34:22.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.733" level="INFO">${RESULT} = [{'diff': 1.166000000107914e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1529999999204676e-0...</msg>
<status status="PASS" starttime="20201029 09:34:22.729" endtime="20201029 09:34:22.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:22.739" level="INFO">${OVERHEAD} = {'diff': [1.166000000107914e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1529999999204676e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:22.734" endtime="20201029 09:34:22.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:22.742" endtime="20201029 09:34:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.745" level="INFO">VALUE: [1.166000000107914e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.0970000001719882e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1520000002818165e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1389999996502809e-06, 1.1529999999204676e-06, 1.1800000003781008e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1940000002041984e-06, 1.1670000001906544e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.208000000030296e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1250000002682725e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.2219999998563935e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 09:34:22.744" endtime="20201029 09:34:22.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.739" endtime="20201029 09:34:22.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.366" endtime="20201029 09:34:22.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.366" endtime="20201029 09:34:22.747"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.755" endtime="20201029 09:34:22.770"></status>
</kw>
<msg timestamp="20201029 09:34:22.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.753" endtime="20201029 09:34:22.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.771" endtime="20201029 09:34:22.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.774" endtime="20201029 09:34:22.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.751" endtime="20201029 09:34:22.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.749" endtime="20201029 09:34:22.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.782" endtime="20201029 09:34:23.101"></status>
</kw>
<msg timestamp="20201029 09:34:23.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.783117778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.783118917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.781" endtime="20201029 09:34:23.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.783117778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.783118917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.106" endtime="20201029 09:34:23.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.129" endtime="20201029 09:34:23.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.778" endtime="20201029 09:34:23.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.777" endtime="20201029 09:34:23.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.144" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.208000000030296e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1380000000116297e-06}, {'diff': 1.1250000002682725e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:23.136" endtime="20201029 09:34:23.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.154" level="INFO">${OVERHEAD} = {'diff': [1.13900000009437e-06, 1.208000000030296e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1250000002682725e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:23.146" endtime="20201029 09:34:23.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.162" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:23.160" endtime="20201029 09:34:23.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.168" level="INFO">VALUE: [1.13900000009437e-06, 1.208000000030296e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1250000002682725e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.2219999998563935e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.0970000001719882e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.0970000001719882e-06, 1.1660000005520033e-06, 1.222000000744572e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06]</msg>
<status status="PASS" starttime="20201029 09:34:23.165" endtime="20201029 09:34:23.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.156" endtime="20201029 09:34:23.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.748" endtime="20201029 09:34:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.748" endtime="20201029 09:34:23.172"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.202" endtime="20201029 09:34:23.220"></status>
</kw>
<msg timestamp="20201029 09:34:23.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.196" endtime="20201029 09:34:23.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.223" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.222" endtime="20201029 09:34:23.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.224" endtime="20201029 09:34:23.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.186" endtime="20201029 09:34:23.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.178" endtime="20201029 09:34:23.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.233" endtime="20201029 09:34:23.553"></status>
</kw>
<msg timestamp="20201029 09:34:23.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.155629708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.155630875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.231" endtime="20201029 09:34:23.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.155629708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.155630875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.558" endtime="20201029 09:34:23.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.568" endtime="20201029 09:34:23.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.229" endtime="20201029 09:34:23.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.227" endtime="20201029 09:34:23.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.574" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.2499999995085886e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1659999996638248e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:23.571" endtime="20201029 09:34:23.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.580" level="INFO">${OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.1659999996638248e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.151999999393638e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:23.575" endtime="20201029 09:34:23.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.584" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:23.583" endtime="20201029 09:34:23.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.587" level="INFO">VALUE: [1.1669999997465652e-06, 1.1659999996638248e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.1109999995539965e-06, 1.2229999999391339e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.2079999995862067e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.18000000082219e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 09:34:23.585" endtime="20201029 09:34:23.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.581" endtime="20201029 09:34:23.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.173" endtime="20201029 09:34:23.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.172" endtime="20201029 09:34:23.588"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.596" endtime="20201029 09:34:23.611"></status>
</kw>
<msg timestamp="20201029 09:34:23.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.595" endtime="20201029 09:34:23.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.613" endtime="20201029 09:34:23.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.615" endtime="20201029 09:34:23.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.592" endtime="20201029 09:34:23.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.591" endtime="20201029 09:34:23.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.624" endtime="20201029 09:34:23.943"></status>
</kw>
<msg timestamp="20201029 09:34:23.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.594777403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.594778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.623" endtime="20201029 09:34:23.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.594777403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.594778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.954" endtime="20201029 09:34:23.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.976" endtime="20201029 09:34:23.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.620" endtime="20201029 09:34:23.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.618" endtime="20201029 09:34:23.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.991" level="INFO">${RESULT} = [{'diff': 1.1529999994763784e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.151999999393638e-06}, {'diff': 1.13900000009437e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:23.983" endtime="20201029 09:34:23.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.003" level="INFO">${OVERHEAD} = {'diff': [1.1529999994763784e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 09:34:23.993" endtime="20201029 09:34:24.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.012" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:24.010" endtime="20201029 09:34:24.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.016" level="INFO">VALUE: [1.1529999994763784e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1950000002869388e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.181000000016752e-06, 1.151999999393638e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.2219999998563935e-06, 1.1660000005520033e-06, 1.2089999996689471e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.222000000744572e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1529999994763784e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.014" endtime="20201029 09:34:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.005" endtime="20201029 09:34:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.589" endtime="20201029 09:34:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.589" endtime="20201029 09:34:24.018"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.026" endtime="20201029 09:34:24.040"></status>
</kw>
<msg timestamp="20201029 09:34:24.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.024" endtime="20201029 09:34:24.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.042" endtime="20201029 09:34:24.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.044" endtime="20201029 09:34:24.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.021" endtime="20201029 09:34:24.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.020" endtime="20201029 09:34:24.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.053" endtime="20201029 09:34:24.366"></status>
</kw>
<msg timestamp="20201029 09:34:24.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.974183389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.974184542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.052" endtime="20201029 09:34:24.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.974183389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.974184542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.371" endtime="20201029 09:34:24.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.381" endtime="20201029 09:34:24.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.049" endtime="20201029 09:34:24.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.047" endtime="20201029 09:34:24.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.388" level="INFO">${RESULT} = [{'diff': 1.1529999994763784e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1530000003645569e-...</msg>
<status status="PASS" starttime="20201029 09:34:24.384" endtime="20201029 09:34:24.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.393" level="INFO">${OVERHEAD} = {'diff': [1.1529999994763784e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.2219999998563935e-06...</msg>
<status status="PASS" starttime="20201029 09:34:24.389" endtime="20201029 09:34:24.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.397" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:24.396" endtime="20201029 09:34:24.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.399" level="INFO">VALUE: [1.1529999994763784e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1529999994763784e-06, 1.222000000744572e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1249999998241833e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.398" endtime="20201029 09:34:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.393" endtime="20201029 09:34:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.019" endtime="20201029 09:34:24.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.018" endtime="20201029 09:34:24.401"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.410" endtime="20201029 09:34:24.424"></status>
</kw>
<msg timestamp="20201029 09:34:24.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.408" endtime="20201029 09:34:24.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.426" endtime="20201029 09:34:24.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.428" endtime="20201029 09:34:24.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.405" endtime="20201029 09:34:24.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.403" endtime="20201029 09:34:24.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.437" endtime="20201029 09:34:24.759"></status>
</kw>
<msg timestamp="20201029 09:34:24.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.393542347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.3935435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:24.436" endtime="20201029 09:34:24.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.393542347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.3935435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:24.770" endtime="20201029 09:34:24.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.792" endtime="20201029 09:34:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.433" endtime="20201029 09:34:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.431" endtime="20201029 09:34:24.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.807" level="INFO">${RESULT} = [{'diff': 1.1529999994763784e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1799999999340116e-...</msg>
<status status="PASS" starttime="20201029 09:34:24.799" endtime="20201029 09:34:24.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.818" level="INFO">${OVERHEAD} = {'diff': [1.1529999994763784e-06, 1.1670000006347436e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1520000002818165e-06...</msg>
<status status="PASS" starttime="20201029 09:34:24.809" endtime="20201029 09:34:24.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.825" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:24.824" endtime="20201029 09:34:24.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.828" level="INFO">VALUE: [1.1529999994763784e-06, 1.1670000006347436e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.1659999996638248e-06, 1.2079999995862067e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.0839999999845418e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.0969999992838098e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.826" endtime="20201029 09:34:24.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.820" endtime="20201029 09:34:24.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.402" endtime="20201029 09:34:24.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.401" endtime="20201029 09:34:24.830"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.838" endtime="20201029 09:34:24.853"></status>
</kw>
<msg timestamp="20201029 09:34:24.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.836" endtime="20201029 09:34:24.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.855" endtime="20201029 09:34:24.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.857" endtime="20201029 09:34:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.833" endtime="20201029 09:34:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.832" endtime="20201029 09:34:24.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.866" endtime="20201029 09:34:25.189"></status>
</kw>
<msg timestamp="20201029 09:34:25.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.767529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.767531028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.865" endtime="20201029 09:34:25.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.767529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.767531028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.194" endtime="20201029 09:34:25.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.204" endtime="20201029 09:34:25.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.862" endtime="20201029 09:34:25.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.860" endtime="20201029 09:34:25.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.211" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1949999993987603e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1389999992061917e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-0...</msg>
<status status="PASS" starttime="20201029 09:34:25.207" endtime="20201029 09:34:25.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.216" level="INFO">${OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1949999993987603e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1520000002818165e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:25.212" endtime="20201029 09:34:25.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:25.219" endtime="20201029 09:34:25.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.223" level="INFO">VALUE: [1.181000000016752e-06, 1.1949999993987603e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.2360000001265803e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1380000000116297e-06, 1.0839999999845418e-06, 1.1660000005520033e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1530000003645569e-06]</msg>
<status status="PASS" starttime="20201029 09:34:25.221" endtime="20201029 09:34:25.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.217" endtime="20201029 09:34:25.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.831" endtime="20201029 09:34:25.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.830" endtime="20201029 09:34:25.225"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.233" endtime="20201029 09:34:25.247"></status>
</kw>
<msg timestamp="20201029 09:34:25.248" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.231" endtime="20201029 09:34:25.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.249" endtime="20201029 09:34:25.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.251" endtime="20201029 09:34:25.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.229" endtime="20201029 09:34:25.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.227" endtime="20201029 09:34:25.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.261" endtime="20201029 09:34:25.576"></status>
</kw>
<msg timestamp="20201029 09:34:25.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.185529264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.185530444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.260" endtime="20201029 09:34:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.185529264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.185530444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.581" endtime="20201029 09:34:25.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.591" endtime="20201029 09:34:25.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.256" endtime="20201029 09:34:25.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.254" endtime="20201029 09:34:25.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.597" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.2080000004743852e-06}, {'diff': 1.1669999997465652e-...</msg>
<status status="PASS" starttime="20201029 09:34:25.594" endtime="20201029 09:34:25.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.602" level="INFO">${OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1659999996638248e-06...</msg>
<status status="PASS" starttime="20201029 09:34:25.598" endtime="20201029 09:34:25.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:25.605" endtime="20201029 09:34:25.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.609" level="INFO">VALUE: [1.1799999999340116e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.0969999992838098e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.250000000396767e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1660000005520033e-06]</msg>
<status status="PASS" starttime="20201029 09:34:25.607" endtime="20201029 09:34:25.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.603" endtime="20201029 09:34:25.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.226" endtime="20201029 09:34:25.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.225" endtime="20201029 09:34:25.611"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.619" endtime="20201029 09:34:25.634"></status>
</kw>
<msg timestamp="20201029 09:34:25.634" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.617" endtime="20201029 09:34:25.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.637" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.635" endtime="20201029 09:34:25.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.638" endtime="20201029 09:34:25.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.615" endtime="20201029 09:34:25.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.613" endtime="20201029 09:34:25.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.647" endtime="20201029 09:34:25.958"></status>
</kw>
<msg timestamp="20201029 09:34:25.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.57064825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.570649403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:25.645" endtime="20201029 09:34:25.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.57064825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.570649403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:25.963" endtime="20201029 09:34:25.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.973" endtime="20201029 09:34:25.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.643" endtime="20201029 09:34:25.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.641" endtime="20201029 09:34:25.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.979" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1529999994763784e-06...</msg>
<status status="PASS" starttime="20201029 09:34:25.976" endtime="20201029 09:34:25.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.985" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:25.980" endtime="20201029 09:34:25.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.989" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:25.988" endtime="20201029 09:34:25.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.991" level="INFO">VALUE: [1.1530000003645569e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2090000005571255e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.069999999714355e-06, 1.1799999999340116e-06, 1.0980000002547285e-06, 1.1659999996638248e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 09:34:25.990" endtime="20201029 09:34:25.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.986" endtime="20201029 09:34:25.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.612" endtime="20201029 09:34:25.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.612" endtime="20201029 09:34:25.993"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.001" endtime="20201029 09:34:26.017"></status>
</kw>
<msg timestamp="20201029 09:34:26.017" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.000" endtime="20201029 09:34:26.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.018" endtime="20201029 09:34:26.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.020" endtime="20201029 09:34:26.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.997" endtime="20201029 09:34:26.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.995" endtime="20201029 09:34:26.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.029" endtime="20201029 09:34:26.344"></status>
</kw>
<msg timestamp="20201029 09:34:26.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.946059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.946060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.028" endtime="20201029 09:34:26.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.946059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.946060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.349" endtime="20201029 09:34:26.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.358" endtime="20201029 09:34:26.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.025" endtime="20201029 09:34:26.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.024" endtime="20201029 09:34:26.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.365" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.069999999714355e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.0980000002547285e-06...</msg>
<status status="PASS" starttime="20201029 09:34:26.362" endtime="20201029 09:34:26.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.370" level="INFO">${OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.069999999714355e-06, 1.1799999999340116e-06, 1.0980000002547285e-06, 1.1659999996638248e-06, 1.151999999393638e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:26.366" endtime="20201029 09:34:26.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.374" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:26.373" endtime="20201029 09:34:26.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.377" level="INFO">VALUE: [1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.069999999714355e-06, 1.1799999999340116e-06, 1.0980000002547285e-06, 1.1659999996638248e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.2360000001265803e-06, 1.1249999998241833e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1809999991285736e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.2080000004743852e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 09:34:26.375" endtime="20201029 09:34:26.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.371" endtime="20201029 09:34:26.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.994" endtime="20201029 09:34:26.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.994" endtime="20201029 09:34:26.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.547" endtime="20201029 09:34:26.379"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:18.473" endtime="20201029 09:34:26.379" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.386" endtime="20201029 09:34:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.385" endtime="20201029 09:34:26.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.421" endtime="20201029 09:34:26.440"></status>
</kw>
<msg timestamp="20201029 09:34:26.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.420" endtime="20201029 09:34:26.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.441" endtime="20201029 09:34:26.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.446" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:26.444" endtime="20201029 09:34:26.446"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:26.417" endtime="20201029 09:34:26.447"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:26.415" endtime="20201029 09:34:26.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.414" endtime="20201029 09:34:26.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:26.451" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:26.450" endtime="20201029 09:34:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.448" endtime="20201029 09:34:26.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.413" endtime="20201029 09:34:26.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.412" endtime="20201029 09:34:26.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.453" endtime="20201029 09:34:26.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.408" endtime="20201029 09:34:26.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.407" endtime="20201029 09:34:26.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.383" endtime="20201029 09:34:26.455"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.463" endtime="20201029 09:34:26.485"></status>
</kw>
<msg timestamp="20201029 09:34:26.486" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.462" endtime="20201029 09:34:26.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.488" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.487" endtime="20201029 09:34:26.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.489" endtime="20201029 09:34:26.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.459" endtime="20201029 09:34:26.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.457" endtime="20201029 09:34:26.492"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.495" endtime="20201029 09:34:26.496"></status>
</kw>
<msg timestamp="20201029 09:34:26.497" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:26.493" endtime="20201029 09:34:26.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.501" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:26.500" endtime="20201029 09:34:26.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.504" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:26.502" endtime="20201029 09:34:26.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.497" endtime="20201029 09:34:26.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.509" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:26.508" endtime="20201029 09:34:26.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.511" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:26.510" endtime="20201029 09:34:26.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.505" endtime="20201029 09:34:26.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.518" endtime="20201029 09:34:26.806"></status>
</kw>
<msg timestamp="20201029 09:34:26.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067799167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067805222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.516" endtime="20201029 09:34:26.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067799167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067805222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.810" endtime="20201029 09:34:26.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.818" endtime="20201029 09:34:26.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.514" endtime="20201029 09:34:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.512" endtime="20201029 09:34:26.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.825" level="INFO">${RESULT} = [{'diff': 6.0550000000048065e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.013999999999632e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:26.822" endtime="20201029 09:34:26.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.829" level="INFO">${OVERHEAD} = {'diff': [6.0550000000048065e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.027999999992263e-06, 7.000000000007001e-06, 7.01...</msg>
<status status="PASS" starttime="20201029 09:34:26.826" endtime="20201029 09:34:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.834" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:26.833" endtime="20201029 09:34:26.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.837" level="INFO">VALUE: [6.0550000000048065e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.027999999992263e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.0280000000061404e-06, 7.054999999991929e-06, 7.000000000007001e-06, 7.000000000007001e-06, 6.999999999993123e-06, 6.986000000000492e-06, 7.013000000000158e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.026999999992789e-06, 6.945000000008195e-06, 7.000000000007001e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.068999999998438e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.027000000006667e-06, 7.013999999999632e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201029 09:34:26.836" endtime="20201029 09:34:26.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.830" endtime="20201029 09:34:26.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.456" endtime="20201029 09:34:26.839"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:26.381" endtime="20201029 09:34:26.839" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.853" endtime="20201029 09:34:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.851" endtime="20201029 09:34:26.873"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.886" endtime="20201029 09:34:26.902"></status>
</kw>
<msg timestamp="20201029 09:34:26.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.884" endtime="20201029 09:34:26.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.904" endtime="20201029 09:34:26.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.908" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:26.906" endtime="20201029 09:34:26.909"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:26.881" endtime="20201029 09:34:26.909"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:26.879" endtime="20201029 09:34:26.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.878" endtime="20201029 09:34:26.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:26.914" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:26.913" endtime="20201029 09:34:26.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.911" endtime="20201029 09:34:26.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.877" endtime="20201029 09:34:26.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.876" endtime="20201029 09:34:26.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.915" endtime="20201029 09:34:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.875" endtime="20201029 09:34:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.873" endtime="20201029 09:34:26.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.850" endtime="20201029 09:34:26.918"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.930" endtime="20201029 09:34:26.984"></status>
</kw>
<msg timestamp="20201029 09:34:26.984" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.927" endtime="20201029 09:34:26.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.987" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.985" endtime="20201029 09:34:26.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.988" endtime="20201029 09:34:26.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.923" endtime="20201029 09:34:26.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.920" endtime="20201029 09:34:26.990"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.993" endtime="20201029 09:34:26.995"></status>
</kw>
<msg timestamp="20201029 09:34:26.995" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:26.991" endtime="20201029 09:34:26.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.999" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:26.998" endtime="20201029 09:34:26.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.001" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:27.000" endtime="20201029 09:34:27.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.996" endtime="20201029 09:34:27.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.006" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:27.005" endtime="20201029 09:34:27.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.008" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:27.007" endtime="20201029 09:34:27.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.002" endtime="20201029 09:34:27.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.015" endtime="20201029 09:34:27.304"></status>
</kw>
<msg timestamp="20201029 09:34:27.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069006625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.013" endtime="20201029 09:34:27.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069006625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.308" endtime="20201029 09:34:27.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.316" endtime="20201029 09:34:27.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.011" endtime="20201029 09:34:27.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.009" endtime="20201029 09:34:27.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.323" level="INFO">${RESULT} = [{'diff': 1.3721999999993795e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.240300000000417e-05}, {'diff': 2.236099999999852e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.319" endtime="20201029 09:34:27.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.328" level="INFO">${OVERHEAD} = {'diff': [1.3721999999993795e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.236099999999852e-05, 2.2430000000003836e-05, 2.238900000001154e-05, 2.23...</msg>
<status status="PASS" starttime="20201029 09:34:27.324" endtime="20201029 09:34:27.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.333" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:27.332" endtime="20201029 09:34:27.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.335" level="INFO">VALUE: [1.3721999999993795e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.236099999999852e-05, 2.2430000000003836e-05, 2.238900000001154e-05, 2.2374999999991152e-05, 2.2387999999998187e-05, 2.2445000000009818e-05, 2.240300000000417e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.2402999999990292e-05, 2.2387999999998187e-05, 2.2471999999995607e-05, 2.240300000000417e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238900000001154e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.2402000000004696e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.2374999999991152e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.2402999999990292e-05, 2.2402999999990292e-05, 2.2374999999991152e-05, 2.2402999999990292e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.243100000000331e-05, 2.237500000000503e-05, 2.238900000001154e-05, 2.2402999999990292e-05, 2.234700000000589e-05, 2.237500000000503e-05, 2.237500000000503e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.334" endtime="20201029 09:34:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.329" endtime="20201029 09:34:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.919" endtime="20201029 09:34:27.337"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:26.847" endtime="20201029 09:34:27.338" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.345" endtime="20201029 09:34:27.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.343" endtime="20201029 09:34:27.365"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.378" endtime="20201029 09:34:27.397"></status>
</kw>
<msg timestamp="20201029 09:34:27.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.376" endtime="20201029 09:34:27.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.398" endtime="20201029 09:34:27.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.403" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:27.401" endtime="20201029 09:34:27.403"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:27.374" endtime="20201029 09:34:27.404"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:27.371" endtime="20201029 09:34:27.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.370" endtime="20201029 09:34:27.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:27.408" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:27.408" endtime="20201029 09:34:27.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.405" endtime="20201029 09:34:27.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.369" endtime="20201029 09:34:27.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.368" endtime="20201029 09:34:27.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.411" endtime="20201029 09:34:27.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.367" endtime="20201029 09:34:27.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.365" endtime="20201029 09:34:27.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.342" endtime="20201029 09:34:27.414"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.423" endtime="20201029 09:34:27.556"></status>
</kw>
<msg timestamp="20201029 09:34:27.556" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.421" endtime="20201029 09:34:27.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.559" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.558" endtime="20201029 09:34:27.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.561" endtime="20201029 09:34:27.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.419" endtime="20201029 09:34:27.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.416" endtime="20201029 09:34:27.565"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.567" endtime="20201029 09:34:27.569"></status>
</kw>
<msg timestamp="20201029 09:34:27.570" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:27.566" endtime="20201029 09:34:27.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.575" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:27.573" endtime="20201029 09:34:27.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.577" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:27.576" endtime="20201029 09:34:27.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.570" endtime="20201029 09:34:27.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.584" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:27.583" endtime="20201029 09:34:27.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.587" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:27.585" endtime="20201029 09:34:27.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.580" endtime="20201029 09:34:27.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.596" endtime="20201029 09:34:27.913"></status>
</kw>
<msg timestamp="20201029 09:34:27.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069482778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.594" endtime="20201029 09:34:27.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069482778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.917" endtime="20201029 09:34:27.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.925" endtime="20201029 09:34:27.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.590" endtime="20201029 09:34:27.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.588" endtime="20201029 09:34:27.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.933" level="INFO">${RESULT} = [{'diff': 2.4930000000006336e-05}, {'diff': 4.1403000000009293e-05}, {'diff': 4.140199999999594e-05}, {'diff': 4.1389000000002785e-05}, {'diff': 4.1403000000009293e-05}, {'diff': 4.1417000000001924e-0...</msg>
<status status="PASS" starttime="20201029 09:34:27.929" endtime="20201029 09:34:27.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.937" level="INFO">${OVERHEAD} = {'diff': [2.4930000000006336e-05, 4.1403000000009293e-05, 4.140199999999594e-05, 4.1389000000002785e-05, 4.1403000000009293e-05, 4.1417000000001924e-05, 4.1389000000002785e-05, 4.1361000000003645e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:27.934" endtime="20201029 09:34:27.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.942" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:27.941" endtime="20201029 09:34:27.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.945" level="INFO">VALUE: [2.4930000000006336e-05, 4.1403000000009293e-05, 4.140199999999594e-05, 4.1389000000002785e-05, 4.1403000000009293e-05, 4.1417000000001924e-05, 4.1389000000002785e-05, 4.1361000000003645e-05, 4.1402999999995416e-05, 4.143100000000843e-05, 4.1389000000002785e-05, 4.134799999999661e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1403000000009293e-05, 4.1403000000009293e-05, 4.147200000000073e-05, 4.1402999999995416e-05, 4.1403000000009293e-05, 4.1346999999997136e-05, 4.1417000000001924e-05, 4.141600000000245e-05, 4.1402999999995416e-05, 4.148600000000724e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.14170000000158e-05, 4.1402999999995416e-05, 4.140300000002317e-05, 4.136099999998977e-05, 4.140199999999594e-05, 4.144400000000159e-05, 4.1429999999981204e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1375000000010154e-05, 4.1375000000010154e-05, 4.1402999999995416e-05, 4.143100000000843e-05, 4.141699999998805e-05, 4.1445000000001064e-05, 4.140199999999594e-05, 4.141599999998857e-05, 4.140300000002317e-05, 4.140199999999594e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.943" endtime="20201029 09:34:27.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.938" endtime="20201029 09:34:27.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.415" endtime="20201029 09:34:27.946"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:27.339" endtime="20201029 09:34:27.947" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.954" endtime="20201029 09:34:27.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.952" endtime="20201029 09:34:27.974"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.988" endtime="20201029 09:34:28.006"></status>
</kw>
<msg timestamp="20201029 09:34:28.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.987" endtime="20201029 09:34:28.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.007" endtime="20201029 09:34:28.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:28.010" endtime="20201029 09:34:28.012"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:27.983" endtime="20201029 09:34:28.013"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:27.981" endtime="20201029 09:34:28.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.980" endtime="20201029 09:34:28.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:28.018" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:28.017" endtime="20201029 09:34:28.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.015" endtime="20201029 09:34:28.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.979" endtime="20201029 09:34:28.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.978" endtime="20201029 09:34:28.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.019" endtime="20201029 09:34:28.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.977" endtime="20201029 09:34:28.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.975" endtime="20201029 09:34:28.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.951" endtime="20201029 09:34:28.022"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.031" endtime="20201029 09:34:28.053"></status>
</kw>
<msg timestamp="20201029 09:34:28.054" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.029" endtime="20201029 09:34:28.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.057" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.055" endtime="20201029 09:34:28.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.058" endtime="20201029 09:34:28.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.026" endtime="20201029 09:34:28.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.024" endtime="20201029 09:34:28.060"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.062" endtime="20201029 09:34:28.064"></status>
</kw>
<msg timestamp="20201029 09:34:28.065" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:28.061" endtime="20201029 09:34:28.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.069" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:28.068" endtime="20201029 09:34:28.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.071" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:28.070" endtime="20201029 09:34:28.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.066" endtime="20201029 09:34:28.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.076" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:28.075" endtime="20201029 09:34:28.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.079" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:28.078" endtime="20201029 09:34:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.073" endtime="20201029 09:34:28.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.087" endtime="20201029 09:34:28.373"></status>
</kw>
<msg timestamp="20201029 09:34:28.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067053653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067058264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.086" endtime="20201029 09:34:28.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067053653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067058264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.378" endtime="20201029 09:34:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.386" endtime="20201029 09:34:28.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.082" endtime="20201029 09:34:28.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.080" endtime="20201029 09:34:28.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.393" level="INFO">${RESULT} = [{'diff': 4.611000000001586e-06}, {'diff': 4.569999999995411e-06}, {'diff': 4.569999999995411e-06}, {'diff': 4.555000000003306e-06}, {'diff': 4.597999999994551e-06}, {'diff': 4.58400000000192e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:28.390" endtime="20201029 09:34:28.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:28.397" level="INFO">${OVERHEAD} = {'diff': [4.611000000001586e-06, 4.569999999995411e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.597999999994551e-06, 4.58400000000192e-06, 4.555000000003306e-06, 4.624999999994217e-06, 4.59799...</msg>
<status status="PASS" starttime="20201029 09:34:28.394" endtime="20201029 09:34:28.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.402" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:28.401" endtime="20201029 09:34:28.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.404" level="INFO">VALUE: [4.611000000001586e-06, 4.569999999995411e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.597999999994551e-06, 4.58400000000192e-06, 4.555000000003306e-06, 4.624999999994217e-06, 4.597999999994551e-06, 4.596999999995077e-06, 4.570000000009289e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.568999999995937e-06, 4.58400000000192e-06, 4.568999999995937e-06, 4.568999999995937e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.58400000000192e-06, 4.52800000000364e-06, 4.597000000008955e-06, 4.568999999995937e-06, 4.58400000000192e-06, 4.569999999995411e-06, 4.55600000000278e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.541000000010675e-06, 4.597000000008955e-06, 4.541999999996271e-06, 4.624999999994217e-06, 4.5829999999885684e-06, 4.554999999989429e-06, 4.583000000002446e-06, 4.5000000000045e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.5829999999885684e-06, 4.568999999995937e-06, 4.598000000008429e-06, 4.5829999999885684e-06]</msg>
<status status="PASS" starttime="20201029 09:34:28.403" endtime="20201029 09:34:28.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.398" endtime="20201029 09:34:28.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.023" endtime="20201029 09:34:28.406"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:27.949" endtime="20201029 09:34:28.406" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.414" endtime="20201029 09:34:28.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.412" endtime="20201029 09:34:28.434"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.449" endtime="20201029 09:34:28.465"></status>
</kw>
<msg timestamp="20201029 09:34:28.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.447" endtime="20201029 09:34:28.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.467" endtime="20201029 09:34:28.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:28.469" endtime="20201029 09:34:28.472"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.444" endtime="20201029 09:34:28.472"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.442" endtime="20201029 09:34:28.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.440" endtime="20201029 09:34:28.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:28.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:28.476" endtime="20201029 09:34:28.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.474" endtime="20201029 09:34:28.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.440" endtime="20201029 09:34:28.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.439" endtime="20201029 09:34:28.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.479" endtime="20201029 09:34:28.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.437" endtime="20201029 09:34:28.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.435" endtime="20201029 09:34:28.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.411" endtime="20201029 09:34:28.481"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.491" endtime="20201029 09:34:28.545"></status>
</kw>
<msg timestamp="20201029 09:34:28.546" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.489" endtime="20201029 09:34:28.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.548" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.547" endtime="20201029 09:34:28.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.550" endtime="20201029 09:34:28.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.486" endtime="20201029 09:34:28.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.484" endtime="20201029 09:34:28.552"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.554" endtime="20201029 09:34:28.557"></status>
</kw>
<msg timestamp="20201029 09:34:28.558" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:28.553" endtime="20201029 09:34:28.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.562" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:28.561" endtime="20201029 09:34:28.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.564" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:28.563" endtime="20201029 09:34:28.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.559" endtime="20201029 09:34:28.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.570" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:28.568" endtime="20201029 09:34:28.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.572" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:28.571" endtime="20201029 09:34:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.566" endtime="20201029 09:34:28.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.579" endtime="20201029 09:34:28.868"></status>
</kw>
<msg timestamp="20201029 09:34:28.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068442042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.578" endtime="20201029 09:34:28.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068442042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.873" endtime="20201029 09:34:28.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.881" endtime="20201029 09:34:28.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.575" endtime="20201029 09:34:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.573" endtime="20201029 09:34:28.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.888" level="INFO">${RESULT} = [{'diff': 1.4597999999990674e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.4638999999996849e-05}, {'diff': 1.4597000000005078e-05}, {'diff': 1.4570000000005412e-05...</msg>
<status status="PASS" starttime="20201029 09:34:28.884" endtime="20201029 09:34:28.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:28.893" level="INFO">${OVERHEAD} = {'diff': [1.4597999999990674e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4638999999996849e-05, 1.4597000000005078e-05, 1.4570000000005412e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:28.889" endtime="20201029 09:34:28.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.897" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:28.896" endtime="20201029 09:34:28.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.900" level="INFO">VALUE: [1.4597999999990674e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4638999999996849e-05, 1.4597000000005078e-05, 1.4570000000005412e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4555999999998903e-05, 1.4513999999993255e-05, 1.456899999999206e-05, 1.4513999999993255e-05, 1.4597000000005078e-05, 1.4597000000005078e-05, 1.4583000000012447e-05, 1.461099999999771e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4583000000012447e-05, 1.4597000000005078e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4569999999991534e-05, 1.455499999999943e-05, 1.45969999999912e-05, 1.4569999999991534e-05, 1.458299999999857e-05, 1.4597999999990674e-05, 1.462499999999034e-05, 1.45969999999912e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.456899999999206e-05, 1.4583999999998043e-05, 1.456899999999206e-05, 1.4598000000004552e-05, 1.4598000000004552e-05, 1.4625000000004218e-05, 1.4569000000005938e-05, 1.4597000000005078e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.456899999999206e-05, 1.4639000000010727e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4569000000005938e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.4597000000005078e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.898" endtime="20201029 09:34:28.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.893" endtime="20201029 09:34:28.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.482" endtime="20201029 09:34:28.901"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:28.408" endtime="20201029 09:34:28.902" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.909" endtime="20201029 09:34:28.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.907" endtime="20201029 09:34:28.929"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.943" endtime="20201029 09:34:28.961"></status>
</kw>
<msg timestamp="20201029 09:34:28.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.941" endtime="20201029 09:34:28.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.963" endtime="20201029 09:34:28.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.967" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:28.965" endtime="20201029 09:34:28.968"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.939" endtime="20201029 09:34:28.968"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.936" endtime="20201029 09:34:28.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.935" endtime="20201029 09:34:28.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:28.973" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:28.972" endtime="20201029 09:34:28.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.970" endtime="20201029 09:34:28.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.934" endtime="20201029 09:34:28.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.933" endtime="20201029 09:34:28.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.975" endtime="20201029 09:34:28.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.932" endtime="20201029 09:34:28.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.930" endtime="20201029 09:34:28.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.906" endtime="20201029 09:34:28.978"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.990" endtime="20201029 09:34:29.124"></status>
</kw>
<msg timestamp="20201029 09:34:29.124" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.988" endtime="20201029 09:34:29.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.128" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.125" endtime="20201029 09:34:29.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.129" endtime="20201029 09:34:29.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.985" endtime="20201029 09:34:29.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.980" endtime="20201029 09:34:29.133"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.136" endtime="20201029 09:34:29.138"></status>
</kw>
<msg timestamp="20201029 09:34:29.138" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:29.134" endtime="20201029 09:34:29.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.143" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:29.142" endtime="20201029 09:34:29.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.145" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:29.144" endtime="20201029 09:34:29.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.139" endtime="20201029 09:34:29.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.150" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:29.149" endtime="20201029 09:34:29.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.153" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:29.152" endtime="20201029 09:34:29.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.147" endtime="20201029 09:34:29.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.163" endtime="20201029 09:34:29.457"></status>
</kw>
<msg timestamp="20201029 09:34:29.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071934847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071957542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.161" endtime="20201029 09:34:29.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071934847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071957542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.462" endtime="20201029 09:34:29.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.472" endtime="20201029 09:34:29.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.158" endtime="20201029 09:34:29.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.156" endtime="20201029 09:34:29.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.479" level="INFO">${RESULT} = [{'diff': 2.269500000000313e-05}, {'diff': 2.2735999999995427e-05}, {'diff': 2.2707999999996287e-05}, {'diff': 2.2651999999998007e-05}, {'diff': 2.2707999999996287e-05}, {'diff': 2.270899999999576e-05...</msg>
<status status="PASS" starttime="20201029 09:34:29.475" endtime="20201029 09:34:29.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:29.484" level="INFO">${OVERHEAD} = {'diff': [2.269500000000313e-05, 2.2735999999995427e-05, 2.2707999999996287e-05, 2.2651999999998007e-05, 2.2707999999996287e-05, 2.270899999999576e-05, 2.2709000000009638e-05, 2.2707999999996287e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:29.480" endtime="20201029 09:34:29.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.489" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:29.487" endtime="20201029 09:34:29.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.491" level="INFO">VALUE: [2.269500000000313e-05, 2.2735999999995427e-05, 2.2707999999996287e-05, 2.2651999999998007e-05, 2.2707999999996287e-05, 2.270899999999576e-05, 2.2709000000009638e-05, 2.2707999999996287e-05, 2.2693999999989778e-05, 2.2693999999989778e-05, 2.2707999999996287e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.272299999998839e-05, 2.2722000000002796e-05, 2.2638000000005376e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.272299999998839e-05, 2.2707999999996287e-05, 2.269500000000313e-05, 2.2666000000004516e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2709000000009638e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2736000000023182e-05, 2.270799999998241e-05, 2.2708000000010164e-05, 2.2708000000010164e-05, 2.270799999998241e-05, 2.2693999999989778e-05, 2.2693999999989778e-05, 2.2722000000002796e-05, 2.269499999998925e-05, 2.272300000000227e-05, 2.2708000000010164e-05, 2.2722000000002796e-05, 2.2693999999989778e-05, 2.272199999997504e-05, 2.2709000000009638e-05, 2.2764000000008444e-05, 2.2694000000017533e-05, 2.2694000000017533e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2709000000009638e-05, 2.2693999999989778e-05]</msg>
<status status="PASS" starttime="20201029 09:34:29.490" endtime="20201029 09:34:29.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.485" endtime="20201029 09:34:29.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.978" endtime="20201029 09:34:29.493"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:28.903" endtime="20201029 09:34:29.493" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.500" endtime="20201029 09:34:29.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.498" endtime="20201029 09:34:29.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.535" endtime="20201029 09:34:29.553"></status>
</kw>
<msg timestamp="20201029 09:34:29.553" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.533" endtime="20201029 09:34:29.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.554" endtime="20201029 09:34:29.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.560" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:29.557" endtime="20201029 09:34:29.560"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:29.531" endtime="20201029 09:34:29.561"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:29.528" endtime="20201029 09:34:29.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.527" endtime="20201029 09:34:29.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:29.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:29.565" endtime="20201029 09:34:29.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.562" endtime="20201029 09:34:29.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.526" endtime="20201029 09:34:29.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.525" endtime="20201029 09:34:29.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.567" endtime="20201029 09:34:29.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.523" endtime="20201029 09:34:29.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.521" endtime="20201029 09:34:29.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.497" endtime="20201029 09:34:29.570"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.573" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:29.581" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:30.728" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:29.572" endtime="20201029 09:34:30.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.732" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 09:34:30.730" endtime="20201029 09:34:31.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.570" endtime="20201029 09:34:31.734"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.741" endtime="20201029 09:34:31.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.738" endtime="20201029 09:34:31.765"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.782" endtime="20201029 09:34:31.796"></status>
</kw>
<msg timestamp="20201029 09:34:31.797" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.779" endtime="20201029 09:34:31.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.802" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.799" endtime="20201029 09:34:31.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.805" endtime="20201029 09:34:31.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.773" endtime="20201029 09:34:31.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.769" endtime="20201029 09:34:31.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.825" endtime="20201029 09:34:32.127"></status>
</kw>
<msg timestamp="20201029 09:34:32.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030144028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030163569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.822" endtime="20201029 09:34:32.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030144028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030163569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.131" endtime="20201029 09:34:32.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.140" endtime="20201029 09:34:32.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.816" endtime="20201029 09:34:32.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.812" endtime="20201029 09:34:32.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.146" level="INFO">${PHILIP_RES} = [{'diff': 1.954100000000139e-05}, {'diff': 6.1529999999983265e-06}, {'diff': 6.166000000001892e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.2090000000000756e-06}, {'diff': 6.180000000001462e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:32.143" endtime="20201029 09:34:32.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.152" level="INFO">${RESULT} = {'diff': [1.954100000000139e-05, 6.1529999999983265e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.1...</msg>
<status status="PASS" starttime="20201029 09:34:32.148" endtime="20201029 09:34:32.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.156" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.155" endtime="20201029 09:34:32.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.159" level="INFO">VALUE: [1.954100000000139e-05, 6.1529999999983265e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.1389999999987566e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.153000000001796e-06, 6.165999999998423e-06, 6.180999999997466e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201029 09:34:32.157" endtime="20201029 09:34:32.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.153" endtime="20201029 09:34:32.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.766" endtime="20201029 09:34:32.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.737" endtime="20201029 09:34:32.160"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.163" endtime="20201029 09:34:32.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.161" endtime="20201029 09:34:32.182"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.191" endtime="20201029 09:34:32.201"></status>
</kw>
<msg timestamp="20201029 09:34:32.202" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.189" endtime="20201029 09:34:32.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.204" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.203" endtime="20201029 09:34:32.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.205" endtime="20201029 09:34:32.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.187" endtime="20201029 09:34:32.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.185" endtime="20201029 09:34:32.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.215" endtime="20201029 09:34:32.501"></status>
</kw>
<msg timestamp="20201029 09:34:32.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016612708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016621903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.213" endtime="20201029 09:34:32.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016612708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016621903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.506" endtime="20201029 09:34:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.516" endtime="20201029 09:34:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.211" endtime="20201029 09:34:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.209" endtime="20201029 09:34:32.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.523" level="INFO">${PHILIP_RES} = [{'diff': 9.195000000000036e-06}, {'diff': 8.902999999997607e-06}, {'diff': 8.888000000002033e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.860999999998898e-06}, {'diff': 8.887999999998564e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:32.519" endtime="20201029 09:34:32.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.529" level="INFO">${RESULT} = {'diff': [9.195000000000036e-06, 8.902999999997607e-06, 8.888000000002033e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.8889...</msg>
<status status="PASS" starttime="20201029 09:34:32.525" endtime="20201029 09:34:32.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.534" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.533" endtime="20201029 09:34:32.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.537" level="INFO">VALUE: [9.195000000000036e-06, 8.902999999997607e-06, 8.888000000002033e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.930000000000743e-06, 8.901999999998134e-06, 8.917000000000647e-06, 8.847999999998801e-06, 8.930000000000743e-06, 8.874999999998467e-06, 8.902999999997607e-06, 8.902000000001603e-06, 8.972999999998926e-06, 8.944000000000313e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.819000000000188e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.861000000002367e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.931000000000217e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.931000000000217e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.916999999997177e-06, 8.889000000001507e-06]</msg>
<status status="PASS" starttime="20201029 09:34:32.535" endtime="20201029 09:34:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.530" endtime="20201029 09:34:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.183" endtime="20201029 09:34:32.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.161" endtime="20201029 09:34:32.539"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.541" endtime="20201029 09:34:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.540" endtime="20201029 09:34:32.562"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.571" endtime="20201029 09:34:32.583"></status>
</kw>
<msg timestamp="20201029 09:34:32.583" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.569" endtime="20201029 09:34:32.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.586" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.585" endtime="20201029 09:34:32.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.588" endtime="20201029 09:34:32.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.566" endtime="20201029 09:34:32.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.564" endtime="20201029 09:34:32.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.598" endtime="20201029 09:34:32.884"></status>
</kw>
<msg timestamp="20201029 09:34:32.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017801556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.597" endtime="20201029 09:34:32.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017801556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.889" endtime="20201029 09:34:32.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.897" endtime="20201029 09:34:32.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.593" endtime="20201029 09:34:32.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.591" endtime="20201029 09:34:32.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.904" level="INFO">${PHILIP_RES} = [{'diff': 1.2110999999998678e-05}, {'diff': 1.1861000000001898e-05}, {'diff': 1.1846999999998858e-05}, {'diff': 1.1861000000001898e-05}, {'diff': 1.1832999999999289e-05}, {'diff': 1.1847999999998332e-...</msg>
<status status="PASS" starttime="20201029 09:34:32.900" endtime="20201029 09:34:32.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.908" level="INFO">${RESULT} = {'diff': [1.2110999999998678e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1847999999998332e-05, 1.1862000000001371e-05, 1.1846999999998858e-05...</msg>
<status status="PASS" starttime="20201029 09:34:32.905" endtime="20201029 09:34:32.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.912" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.911" endtime="20201029 09:34:32.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.916" level="INFO">VALUE: [1.2110999999998678e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1847999999998332e-05, 1.1862000000001371e-05, 1.1846999999998858e-05, 1.1833000000002758e-05, 1.1874999999997998e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1833999999998762e-05, 1.1820000000002662e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1847000000002328e-05, 1.1847999999998332e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1847999999998332e-05, 1.1847000000002328e-05, 1.1860999999998428e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1889000000001038e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1847000000002328e-05, 1.1917000000000177e-05, 1.1846999999998858e-05, 1.1862000000001371e-05, 1.1833999999998762e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1874999999997998e-05, 1.1847999999998332e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.179099999999711e-05, 1.1861000000001898e-05]</msg>
<status status="PASS" starttime="20201029 09:34:32.914" endtime="20201029 09:34:32.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.909" endtime="20201029 09:34:32.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.563" endtime="20201029 09:34:32.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.539" endtime="20201029 09:34:32.917"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.919" endtime="20201029 09:34:32.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.918" endtime="20201029 09:34:32.939"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.948" endtime="20201029 09:34:32.959"></status>
</kw>
<msg timestamp="20201029 09:34:32.960" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.946" endtime="20201029 09:34:32.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.963" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.961" endtime="20201029 09:34:32.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.964" endtime="20201029 09:34:32.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.943" endtime="20201029 09:34:32.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.941" endtime="20201029 09:34:32.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.973" endtime="20201029 09:34:33.259"></status>
</kw>
<msg timestamp="20201029 09:34:33.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016928292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016943486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.971" endtime="20201029 09:34:33.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016928292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016943486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.263" endtime="20201029 09:34:33.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.271" endtime="20201029 09:34:33.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.969" endtime="20201029 09:34:33.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.967" endtime="20201029 09:34:33.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.278" level="INFO">${PHILIP_RES} = [{'diff': 1.5193999999999624e-05}, {'diff': 1.4986000000001554e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.508299999999907e-05}, {'diff': 1.501300000000122e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:33.275" endtime="20201029 09:34:33.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.283" level="INFO">${RESULT} = {'diff': [1.5193999999999624e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1....</msg>
<status status="PASS" starttime="20201029 09:34:33.279" endtime="20201029 09:34:33.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.287" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.286" endtime="20201029 09:34:33.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.290" level="INFO">VALUE: [1.5193999999999624e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5027999999996794e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.5014000000000693e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.50689999999995e-05, 1.5000000000001124e-05, 1.502700000000079e-05, 1.5055999999999403e-05, 1.508299999999907e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.5069999999998973e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4971999999998514e-05, 1.504100000000036e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201029 09:34:33.289" endtime="20201029 09:34:33.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.284" endtime="20201029 09:34:33.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.940" endtime="20201029 09:34:33.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.917" endtime="20201029 09:34:33.291"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.294" endtime="20201029 09:34:33.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.292" endtime="20201029 09:34:33.314"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.326" endtime="20201029 09:34:33.341"></status>
</kw>
<msg timestamp="20201029 09:34:33.342" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.324" endtime="20201029 09:34:33.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.344" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.343" endtime="20201029 09:34:33.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.345" endtime="20201029 09:34:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.320" endtime="20201029 09:34:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.317" endtime="20201029 09:34:33.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.354" endtime="20201029 09:34:33.640"></status>
</kw>
<msg timestamp="20201029 09:34:33.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.353" endtime="20201029 09:34:33.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.644" endtime="20201029 09:34:33.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.652" endtime="20201029 09:34:33.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.350" endtime="20201029 09:34:33.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.348" endtime="20201029 09:34:33.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.660" level="INFO">${PHILIP_RES} = [{'diff': 1.869499999999913e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.8416000000000265e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8348000000001363e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:33.657" endtime="20201029 09:34:33.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.664" level="INFO">${RESULT} = {'diff': [1.869499999999913e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8348000000001363e-05, 1.836099999999799e-05, 1.843099999999931e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 09:34:33.661" endtime="20201029 09:34:33.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.668" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.667" endtime="20201029 09:34:33.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.671" level="INFO">VALUE: [1.869499999999913e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8348000000001363e-05, 1.836099999999799e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8444000000002875e-05, 1.843100000000278e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8458000000002445e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.840300000000017e-05, 1.844499999999888e-05, 1.8416000000000265e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8430000000003305e-05, 1.8499999999997685e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.838899999999713e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8444000000002875e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.8458000000002445e-05, 1.8401999999997226e-05, 1.840300000000017e-05]</msg>
<status status="PASS" starttime="20201029 09:34:33.670" endtime="20201029 09:34:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.665" endtime="20201029 09:34:33.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.315" endtime="20201029 09:34:33.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.292" endtime="20201029 09:34:33.672"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.675" endtime="20201029 09:34:33.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.673" endtime="20201029 09:34:33.695"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.703" endtime="20201029 09:34:33.716"></status>
</kw>
<msg timestamp="20201029 09:34:33.717" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.701" endtime="20201029 09:34:33.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.719" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.718" endtime="20201029 09:34:33.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.720" endtime="20201029 09:34:33.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.699" endtime="20201029 09:34:33.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.697" endtime="20201029 09:34:33.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.730" endtime="20201029 09:34:34.019"></status>
</kw>
<msg timestamp="20201029 09:34:34.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017482681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.728" endtime="20201029 09:34:34.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017482681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.028" endtime="20201029 09:34:34.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.047" endtime="20201029 09:34:34.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.726" endtime="20201029 09:34:34.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.724" endtime="20201029 09:34:34.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.064" level="INFO">${PHILIP_RES} = [{'diff': 2.2292000000000145e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.2055999999999465e-0...</msg>
<status status="PASS" starttime="20201029 09:34:34.054" endtime="20201029 09:34:34.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.073" level="INFO">${RESULT} = {'diff': [2.2292000000000145e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2041999999999895e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:34.066" endtime="20201029 09:34:34.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.082" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.080" endtime="20201029 09:34:34.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.088" level="INFO">VALUE: [2.2292000000000145e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.2040999999996952e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2027999999996856e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.2014000000000755e-05, 2.209700000000217e-05, 2.2028000000000325e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2070000000002504e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2027999999996856e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.212500000000131e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.2014000000000755e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.1986000000001615e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.085" endtime="20201029 09:34:34.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.075" endtime="20201029 09:34:34.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.695" endtime="20201029 09:34:34.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.673" endtime="20201029 09:34:34.092"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.098" endtime="20201029 09:34:34.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.094" endtime="20201029 09:34:34.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.127" endtime="20201029 09:34:34.140"></status>
</kw>
<msg timestamp="20201029 09:34:34.141" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.125" endtime="20201029 09:34:34.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.143" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.142" endtime="20201029 09:34:34.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.144" endtime="20201029 09:34:34.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.122" endtime="20201029 09:34:34.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.120" endtime="20201029 09:34:34.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.153" endtime="20201029 09:34:34.440"></status>
</kw>
<msg timestamp="20201029 09:34:34.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017226014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017252167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.152" endtime="20201029 09:34:34.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017226014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017252167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.444" endtime="20201029 09:34:34.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.453" endtime="20201029 09:34:34.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.149" endtime="20201029 09:34:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.148" endtime="20201029 09:34:34.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.459" level="INFO">${PHILIP_RES} = [{'diff': 2.615299999999751e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.590300000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:34.456" endtime="20201029 09:34:34.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.464" level="INFO">${RESULT} = {'diff': [2.615299999999751e-05, 2.590299999999726e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.59030...</msg>
<status status="PASS" starttime="20201029 09:34:34.460" endtime="20201029 09:34:34.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.469" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.467" endtime="20201029 09:34:34.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.471" level="INFO">VALUE: [2.615299999999751e-05, 2.590299999999726e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.5888000000001687e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.5986000000002146e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.593099999999987e-05, 2.5915999999997358e-05, 2.5874999999998122e-05, 2.587500000000159e-05, 2.590299999999726e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.594499999999944e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5820000000002785e-05, 2.59170000000003e-05, 2.586100000000202e-05, 2.5902000000001257e-05, 2.5902000000001257e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.5832999999999412e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.5846999999998982e-05, 2.5887999999998218e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588899999999769e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.470" endtime="20201029 09:34:34.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.465" endtime="20201029 09:34:34.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.119" endtime="20201029 09:34:34.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.093" endtime="20201029 09:34:34.472"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.475" endtime="20201029 09:34:34.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.473" endtime="20201029 09:34:34.495"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.503" endtime="20201029 09:34:34.517"></status>
</kw>
<msg timestamp="20201029 09:34:34.517" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.502" endtime="20201029 09:34:34.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.520" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.518" endtime="20201029 09:34:34.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.521" endtime="20201029 09:34:34.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.499" endtime="20201029 09:34:34.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.497" endtime="20201029 09:34:34.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.530" endtime="20201029 09:34:34.819"></status>
</kw>
<msg timestamp="20201029 09:34:34.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017314153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017344403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.528" endtime="20201029 09:34:34.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017314153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017344403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.823" endtime="20201029 09:34:34.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.831" endtime="20201029 09:34:34.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.526" endtime="20201029 09:34:34.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.524" endtime="20201029 09:34:34.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.838" level="INFO">${PHILIP_RES} = [{'diff': 3.0250000000002497e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 3.0014000000001817e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9916000000001358e-05}, {'diff': 2.9971999999999638e-...</msg>
<status status="PASS" starttime="20201029 09:34:34.835" endtime="20201029 09:34:34.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.842" level="INFO">${RESULT} = {'diff': [3.0250000000002497e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9971999999999638e-05, 2.9916000000001358e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05...</msg>
<status status="PASS" starttime="20201029 09:34:34.839" endtime="20201029 09:34:34.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.846" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.845" endtime="20201029 09:34:34.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.849" level="INFO">VALUE: [3.0250000000002497e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9971999999999638e-05, 2.9916000000001358e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.998699999999868e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 3.0000000000002247e-05, 3.0012999999998874e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.9916999999997362e-05, 2.997299999999911e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.9986000000002677e-05, 2.9958000000000068e-05, 3.0027000000001913e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 3.0000000000002247e-05, 2.9971999999999638e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.9958000000000068e-05, 2.998700000000215e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.9985999999999208e-05, 2.9986000000002677e-05, 2.995899999999954e-05, 2.9972000000003107e-05, 2.9971999999999638e-05, 3.0012999999998874e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.998699999999868e-05, 2.9999999999998778e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.847" endtime="20201029 09:34:34.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.843" endtime="20201029 09:34:34.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.495" endtime="20201029 09:34:34.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.473" endtime="20201029 09:34:34.850"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.853" endtime="20201029 09:34:34.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.851" endtime="20201029 09:34:34.874"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.884" endtime="20201029 09:34:34.897"></status>
</kw>
<msg timestamp="20201029 09:34:34.898" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.882" endtime="20201029 09:34:34.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.900" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.899" endtime="20201029 09:34:34.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.901" endtime="20201029 09:34:34.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.878" endtime="20201029 09:34:34.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.876" endtime="20201029 09:34:34.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.911" endtime="20201029 09:34:35.197"></status>
</kw>
<msg timestamp="20201029 09:34:35.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.910" endtime="20201029 09:34:35.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.201" endtime="20201029 09:34:35.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.210" endtime="20201029 09:34:35.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.907" endtime="20201029 09:34:35.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.905" endtime="20201029 09:34:35.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.216" level="INFO">${PHILIP_RES} = [{'diff': 3.449999999999981e-05}, {'diff': 3.4291000000002264e-05}, {'diff': 3.429199999999827e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.4290999999998795e-05}, {'diff': 3.429200000000174e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:35.213" endtime="20201029 09:34:35.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.220" level="INFO">${RESULT} = {'diff': [3.449999999999981e-05, 3.4291000000002264e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.429200000000174e-05, 3.423599999999999e-05, 3.4290999999998795e-05, 3.42...</msg>
<status status="PASS" starttime="20201029 09:34:35.217" endtime="20201029 09:34:35.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.225" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.224" endtime="20201029 09:34:35.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.227" level="INFO">VALUE: [3.449999999999981e-05, 3.4291000000002264e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.429200000000174e-05, 3.423599999999999e-05, 3.4290999999998795e-05, 3.42779999999987e-05, 3.430600000000131e-05, 3.4305000000001834e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.42779999999987e-05, 3.4276999999999225e-05, 3.426399999999913e-05, 3.429200000000174e-05, 3.4276999999999225e-05, 3.429199999999827e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.429200000000174e-05, 3.426399999999913e-05, 3.4276999999999225e-05, 3.427800000000217e-05, 3.427800000000217e-05, 3.4262999999999655e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.42640000000026e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.429200000000174e-05, 3.427800000000217e-05, 3.4276999999999225e-05, 3.426399999999913e-05, 3.430600000000131e-05, 3.423599999999999e-05, 3.429200000000174e-05, 3.42779999999987e-05, 3.4276999999999225e-05, 3.42640000000026e-05, 3.430600000000131e-05, 3.422200000000042e-05, 3.42779999999987e-05, 3.424999999999956e-05, 3.4263000000003124e-05]</msg>
<status status="PASS" starttime="20201029 09:34:35.226" endtime="20201029 09:34:35.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.221" endtime="20201029 09:34:35.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.874" endtime="20201029 09:34:35.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.851" endtime="20201029 09:34:35.229"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.232" endtime="20201029 09:34:35.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.231" endtime="20201029 09:34:35.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.260" endtime="20201029 09:34:35.274"></status>
</kw>
<msg timestamp="20201029 09:34:35.274" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.259" endtime="20201029 09:34:35.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.277" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.275" endtime="20201029 09:34:35.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.278" endtime="20201029 09:34:35.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.256" endtime="20201029 09:34:35.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.254" endtime="20201029 09:34:35.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.287" endtime="20201029 09:34:35.585"></status>
</kw>
<msg timestamp="20201029 09:34:35.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.285" endtime="20201029 09:34:35.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.595" endtime="20201029 09:34:35.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.613" endtime="20201029 09:34:35.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.283" endtime="20201029 09:34:35.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.281" endtime="20201029 09:34:35.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.627" level="INFO">${PHILIP_RES} = [{'diff': 3.898600000000127e-05}, {'diff': 3.877799999999973e-05}, {'diff': 3.8790999999999826e-05}, {'diff': 3.876400000000016e-05}, {'diff': 3.87919999999993e-05}, {'diff': 3.8875000000000715e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:35.620" endtime="20201029 09:34:35.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.637" level="INFO">${RESULT} = {'diff': [3.898600000000127e-05, 3.877799999999973e-05, 3.8790999999999826e-05, 3.876400000000016e-05, 3.87919999999993e-05, 3.8875000000000715e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 09:34:35.629" endtime="20201029 09:34:35.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.642" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.641" endtime="20201029 09:34:35.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.645" level="INFO">VALUE: [3.898600000000127e-05, 3.877799999999973e-05, 3.8790999999999826e-05, 3.876400000000016e-05, 3.87919999999993e-05, 3.8875000000000715e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.87919999999993e-05, 3.87919999999993e-05, 3.8804999999999396e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8875000000000715e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.880600000000234e-05, 3.880599999999887e-05, 3.877799999999973e-05, 3.8790999999999826e-05, 3.880599999999887e-05, 3.8861000000001145e-05, 3.880599999999887e-05, 3.8861000000001145e-05, 3.8804999999999396e-05, 3.880599999999887e-05, 3.883399999999801e-05, 3.8819000000002435e-05, 3.8804999999999396e-05, 3.877799999999973e-05, 3.87919999999993e-05, 3.886200000000062e-05, 3.8777000000000256e-05, 3.877799999999973e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8875000000000715e-05, 3.880599999999887e-05, 3.881999999999844e-05, 3.8818999999998965e-05, 3.8805000000002865e-05, 3.882000000000191e-05, 3.87919999999993e-05]</msg>
<status status="PASS" starttime="20201029 09:34:35.643" endtime="20201029 09:34:35.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.638" endtime="20201029 09:34:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.253" endtime="20201029 09:34:35.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.230" endtime="20201029 09:34:35.647"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.650" endtime="20201029 09:34:35.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.648" endtime="20201029 09:34:35.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.678" endtime="20201029 09:34:35.692"></status>
</kw>
<msg timestamp="20201029 09:34:35.692" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.676" endtime="20201029 09:34:35.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.695" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.693" endtime="20201029 09:34:35.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.696" endtime="20201029 09:34:35.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.674" endtime="20201029 09:34:35.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.672" endtime="20201029 09:34:35.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.705" endtime="20201029 09:34:35.991"></status>
</kw>
<msg timestamp="20201029 09:34:35.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016836014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016879833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.703" endtime="20201029 09:34:35.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016836014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016879833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.995" endtime="20201029 09:34:36.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.003" endtime="20201029 09:34:36.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.701" endtime="20201029 09:34:36.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.699" endtime="20201029 09:34:36.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.011" level="INFO">${PHILIP_RES} = [{'diff': 4.3819000000000496e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.355499999999721e-05}, {'diff': 4.3569000000000246e-05}, {'diff': 4.355600000000015e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:36.008" endtime="20201029 09:34:36.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.015" level="INFO">${RESULT} = {'diff': [4.3819000000000496e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.355499999999721e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 09:34:36.012" endtime="20201029 09:34:36.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.019" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.018" endtime="20201029 09:34:36.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.022" level="INFO">VALUE: [4.3819000000000496e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.355499999999721e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.355600000000015e-05, 4.352800000000101e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4.355499999999721e-05, 4.3541000000001107e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.359799999999886e-05, 4.355499999999721e-05, 4.355600000000015e-05, 4.356999999999972e-05, 4.3541000000001107e-05, 4.348599999999883e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4.358399999999929e-05, 4.354099999999764e-05, 4.354200000000058e-05, 4.354199999999711e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.354199999999711e-05, 4.352700000000154e-05, 4.355600000000015e-05, 4.356999999999972e-05, 4.3541000000001107e-05, 4.3582999999999816e-05, 4.354200000000058e-05, 4.352699999999807e-05, 4.3596999999999386e-05, 4.354200000000058e-05, 4.3569000000000246e-05, 4.3569000000000246e-05, 4.355600000000015e-05]</msg>
<status status="PASS" starttime="20201029 09:34:36.020" endtime="20201029 09:34:36.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.016" endtime="20201029 09:34:36.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.670" endtime="20201029 09:34:36.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.648" endtime="20201029 09:34:36.024"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.026" endtime="20201029 09:34:36.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.025" endtime="20201029 09:34:36.046"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.054" endtime="20201029 09:34:36.068"></status>
</kw>
<msg timestamp="20201029 09:34:36.069" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.053" endtime="20201029 09:34:36.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.071" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.070" endtime="20201029 09:34:36.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.072" endtime="20201029 09:34:36.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.050" endtime="20201029 09:34:36.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.048" endtime="20201029 09:34:36.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.082" endtime="20201029 09:34:36.367"></status>
</kw>
<msg timestamp="20201029 09:34:36.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016961583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017010361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.081" endtime="20201029 09:34:36.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016961583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017010361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.372" endtime="20201029 09:34:36.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.380" endtime="20201029 09:34:36.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.078" endtime="20201029 09:34:36.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.077" endtime="20201029 09:34:36.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.386" level="INFO">${PHILIP_RES} = [{'diff': 4.877800000000279e-05}, {'diff': 4.859700000000092e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.854199999999864e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.854199999999864e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:36.383" endtime="20201029 09:34:36.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.390" level="INFO">${RESULT} = {'diff': [4.877800000000279e-05, 4.859700000000092e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.849999999999993e-05, 4.854199999999864e-05, 4.85280...</msg>
<status status="PASS" starttime="20201029 09:34:36.387" endtime="20201029 09:34:36.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.395" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.394" endtime="20201029 09:34:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.397" level="INFO">VALUE: [4.877800000000279e-05, 4.859700000000092e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.849999999999993e-05, 4.854199999999864e-05, 4.852800000000254e-05, 4.854100000000264e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.854100000000264e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.859700000000092e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.855600000000168e-05, 4.855600000000168e-05, 4.854099999999917e-05, 4.854199999999864e-05, 4.852799999999907e-05, 4.859700000000092e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.849999999999993e-05, 4.854200000000211e-05, 4.852700000000307e-05, 4.855600000000168e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.85269999999996e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.851400000000297e-05, 4.852800000000254e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201029 09:34:36.396" endtime="20201029 09:34:36.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.391" endtime="20201029 09:34:36.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.046" endtime="20201029 09:34:36.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.024" endtime="20201029 09:34:36.400"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.402" endtime="20201029 09:34:36.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.401" endtime="20201029 09:34:36.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.430" endtime="20201029 09:34:36.446"></status>
</kw>
<msg timestamp="20201029 09:34:36.447" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.429" endtime="20201029 09:34:36.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.449" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.448" endtime="20201029 09:34:36.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.450" endtime="20201029 09:34:36.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.426" endtime="20201029 09:34:36.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.424" endtime="20201029 09:34:36.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.459" endtime="20201029 09:34:36.746"></status>
</kw>
<msg timestamp="20201029 09:34:36.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016755486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.458" endtime="20201029 09:34:36.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016755486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.750" endtime="20201029 09:34:36.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.759" endtime="20201029 09:34:36.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.455" endtime="20201029 09:34:36.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.454" endtime="20201029 09:34:36.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.765" level="INFO">${PHILIP_RES} = [{'diff': 5.393100000000012e-05}, {'diff': 5.372299999999858e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3707999999999534e-05...</msg>
<status status="PASS" starttime="20201029 09:34:36.762" endtime="20201029 09:34:36.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.770" level="INFO">${RESULT} = {'diff': [5.393100000000012e-05, 5.372299999999858e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.380599999999999e-05, 5.3735999999998674e-05, 5...</msg>
<status status="PASS" starttime="20201029 09:34:36.766" endtime="20201029 09:34:36.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.775" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.773" endtime="20201029 09:34:36.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.777" level="INFO">VALUE: [5.393100000000012e-05, 5.372299999999858e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.380599999999999e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.372200000000257e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 5.373600000000214e-05, 5.372200000000257e-05, 5.3680000000000394e-05, 5.3777999999997383e-05, 5.3721999999999104e-05, 5.373699999999815e-05, 5.373699999999815e-05, 5.3735999999998674e-05, 5.380500000000052e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.375000000000171e-05, 5.375000000000171e-05, 5.373700000000162e-05, 5.36670000000003e-05, 5.375000000000171e-05, 5.377699999999791e-05, 5.3721999999999104e-05, 5.379200000000042e-05, 5.3735999999998674e-05, 5.3652000000001254e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.370899999999901e-05, 5.373700000000162e-05, 5.375000000000171e-05, 5.375000000000171e-05, 5.3708000000003e-05, 5.373600000000214e-05, 5.3693999999999964e-05, 5.373600000000214e-05, 5.372200000000257e-05, 5.373600000000214e-05, 5.372299999999858e-05]</msg>
<status status="PASS" starttime="20201029 09:34:36.776" endtime="20201029 09:34:36.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.771" endtime="20201029 09:34:36.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.423" endtime="20201029 09:34:36.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.400" endtime="20201029 09:34:36.779"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.781" endtime="20201029 09:34:36.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.780" endtime="20201029 09:34:36.801"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.809" endtime="20201029 09:34:36.825"></status>
</kw>
<msg timestamp="20201029 09:34:36.826" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.808" endtime="20201029 09:34:36.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.828" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.827" endtime="20201029 09:34:36.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.829" endtime="20201029 09:34:36.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.805" endtime="20201029 09:34:36.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.803" endtime="20201029 09:34:36.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.838" endtime="20201029 09:34:37.125"></status>
</kw>
<msg timestamp="20201029 09:34:37.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016948389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017007806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.837" endtime="20201029 09:34:37.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016948389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017007806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.129" endtime="20201029 09:34:37.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.137" endtime="20201029 09:34:37.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.834" endtime="20201029 09:34:37.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.833" endtime="20201029 09:34:37.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.145" level="INFO">${PHILIP_RES} = [{'diff': 5.941699999999911e-05}, {'diff': 5.9151999999999816e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.9165999999999386e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:37.142" endtime="20201029 09:34:37.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.149" level="INFO">${RESULT} = {'diff': [5.941699999999911e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.916699999999886e-05, 5.912500000000015e-05, 5.9165999999999386e-05, 5.9151999999999816e-05, 5.915300000000276e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 09:34:37.146" endtime="20201029 09:34:37.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.154" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.152" endtime="20201029 09:34:37.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.156" level="INFO">VALUE: [5.941699999999911e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.916699999999886e-05, 5.912500000000015e-05, 5.9165999999999386e-05, 5.9151999999999816e-05, 5.915300000000276e-05, 5.912500000000015e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.913900000000319e-05, 5.909700000000101e-05, 5.916700000000233e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.9165999999999386e-05, 5.912500000000015e-05, 5.916699999999886e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9179999999998956e-05, 5.9151999999999816e-05, 5.9194999999998e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9138000000000246e-05, 5.918099999999843e-05, 5.916699999999886e-05, 5.918099999999843e-05, 5.915299999999929e-05, 5.9207999999998095e-05, 5.916700000000233e-05, 5.915299999999929e-05, 5.915300000000276e-05, 5.913899999999972e-05, 5.9151999999999816e-05, 5.916700000000233e-05, 5.91810000000019e-05, 5.915299999999929e-05, 5.913900000000319e-05, 5.913899999999972e-05]</msg>
<status status="PASS" starttime="20201029 09:34:37.155" endtime="20201029 09:34:37.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.150" endtime="20201029 09:34:37.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.802" endtime="20201029 09:34:37.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.779" endtime="20201029 09:34:37.158"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.160" endtime="20201029 09:34:37.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.159" endtime="20201029 09:34:37.180"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.188" endtime="20201029 09:34:37.204"></status>
</kw>
<msg timestamp="20201029 09:34:37.205" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.187" endtime="20201029 09:34:37.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.207" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.206" endtime="20201029 09:34:37.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.208" endtime="20201029 09:34:37.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.184" endtime="20201029 09:34:37.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.182" endtime="20201029 09:34:37.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.218" endtime="20201029 09:34:37.504"></status>
</kw>
<msg timestamp="20201029 09:34:37.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01683175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:37.217" endtime="20201029 09:34:37.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01683175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:37.509" endtime="20201029 09:34:37.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.517" endtime="20201029 09:34:37.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.214" endtime="20201029 09:34:37.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.212" endtime="20201029 09:34:37.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.523" level="INFO">${PHILIP_RES} = [{'diff': 6.506900000000093e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.47639999999984e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.480499999999764e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:37.520" endtime="20201029 09:34:37.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.527" level="INFO">${RESULT} = {'diff': [6.506900000000093e-05, 6.479200000000102e-05, 6.47639999999984e-05, 6.480600000000059e-05, 6.480600000000059e-05, 6.480499999999764e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.48050...</msg>
<status status="PASS" starttime="20201029 09:34:37.524" endtime="20201029 09:34:37.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.532" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.531" endtime="20201029 09:34:37.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.534" level="INFO">VALUE: [6.506900000000093e-05, 6.479200000000102e-05, 6.47639999999984e-05, 6.480600000000059e-05, 6.480600000000059e-05, 6.480499999999764e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.480500000000111e-05, 6.481900000000068e-05, 6.480599999999712e-05, 6.481900000000068e-05, 6.486099999999939e-05, 6.473599999999927e-05, 6.481900000000068e-05, 6.480499999999764e-05, 6.479200000000102e-05, 6.481900000000068e-05, 6.480499999999764e-05, 6.483399999999973e-05, 6.479200000000102e-05, 6.479199999999755e-05, 6.482000000000016e-05, 6.484699999999982e-05, 6.480500000000111e-05, 6.479200000000102e-05, 6.480600000000059e-05, 6.480500000000111e-05, 6.479199999999755e-05, 6.480600000000059e-05, 6.473599999999927e-05, 6.486099999999939e-05, 6.482000000000016e-05, 6.486099999999939e-05, 6.480499999999764e-05, 6.482000000000016e-05, 6.483300000000025e-05, 6.481900000000068e-05, 6.476400000000188e-05, 6.479100000000154e-05, 6.480500000000111e-05, 6.473599999999927e-05, 6.479200000000102e-05, 6.481900000000068e-05, 6.480599999999712e-05, 6.477800000000145e-05, 6.481900000000068e-05, 6.483399999999973e-05, 6.480600000000059e-05, 6.479099999999807e-05]</msg>
<status status="PASS" starttime="20201029 09:34:37.533" endtime="20201029 09:34:37.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.528" endtime="20201029 09:34:37.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.181" endtime="20201029 09:34:37.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.158" endtime="20201029 09:34:37.537"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.539" endtime="20201029 09:34:37.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.538" endtime="20201029 09:34:37.559"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.567" endtime="20201029 09:34:37.585"></status>
</kw>
<msg timestamp="20201029 09:34:37.585" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.566" endtime="20201029 09:34:37.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.588" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.586" endtime="20201029 09:34:37.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.589" endtime="20201029 09:34:37.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.563" endtime="20201029 09:34:37.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.561" endtime="20201029 09:34:37.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.598" endtime="20201029 09:34:37.884"></status>
</kw>
<msg timestamp="20201029 09:34:37.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016740208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.596" endtime="20201029 09:34:37.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016740208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.888" endtime="20201029 09:34:37.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.896" endtime="20201029 09:34:37.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.594" endtime="20201029 09:34:37.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.592" endtime="20201029 09:34:37.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.902" level="INFO">${PHILIP_RES} = [{'diff': 7.093099999999977e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.072199999999876e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.068099999999952e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:37.899" endtime="20201029 09:34:37.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.908" level="INFO">${RESULT} = {'diff': [7.093099999999977e-05, 7.068099999999952e-05, 7.072199999999876e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.0680...</msg>
<status status="PASS" starttime="20201029 09:34:37.903" endtime="20201029 09:34:37.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.912" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.911" endtime="20201029 09:34:37.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.914" level="INFO">VALUE: [7.093099999999977e-05, 7.068099999999952e-05, 7.072199999999876e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.069499999999909e-05, 7.069399999999962e-05, 7.066600000000048e-05, 7.069499999999909e-05, 7.068099999999952e-05, 7.066699999999995e-05, 7.066600000000048e-05, 7.069399999999962e-05, 7.062499999999777e-05, 7.066699999999995e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.068099999999952e-05, 7.06109999999982e-05, 7.068099999999952e-05, 7.066600000000048e-05, 7.068000000000005e-05, 7.069499999999909e-05, 7.069499999999909e-05, 7.068000000000005e-05, 7.069399999999962e-05, 7.065300000000038e-05, 7.05979999999981e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.069399999999962e-05, 7.070799999999919e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.065200000000091e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05]</msg>
<status status="PASS" starttime="20201029 09:34:37.913" endtime="20201029 09:34:37.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.908" endtime="20201029 09:34:37.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.560" endtime="20201029 09:34:37.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.537" endtime="20201029 09:34:37.916"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.919" endtime="20201029 09:34:37.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.917" endtime="20201029 09:34:37.939"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.947" endtime="20201029 09:34:37.964"></status>
</kw>
<msg timestamp="20201029 09:34:37.964" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.945" endtime="20201029 09:34:37.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.967" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.966" endtime="20201029 09:34:37.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.968" endtime="20201029 09:34:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.943" endtime="20201029 09:34:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.941" endtime="20201029 09:34:37.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.977" endtime="20201029 09:34:38.264"></status>
</kw>
<msg timestamp="20201029 09:34:38.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016690111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016767153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.975" endtime="20201029 09:34:38.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016690111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016767153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.269" endtime="20201029 09:34:38.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.279" endtime="20201029 09:34:38.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.973" endtime="20201029 09:34:38.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.971" endtime="20201029 09:34:38.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.285" level="INFO">${PHILIP_RES} = [{'diff': 7.704199999999939e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.682000000000175e-05}, {'diff': 7.6764e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201029 09:34:38.282" endtime="20201029 09:34:38.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.289" level="INFO">${RESULT} = {'diff': [7.704199999999939e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.682000000000175e-05, 7.6764e-05, 7.683399999999785e-05, 7.681999999999828e-05, 7.679199999999914...</msg>
<status status="PASS" starttime="20201029 09:34:38.286" endtime="20201029 09:34:38.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.293" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.292" endtime="20201029 09:34:38.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.296" level="INFO">VALUE: [7.704199999999939e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.682000000000175e-05, 7.6764e-05, 7.683399999999785e-05, 7.681999999999828e-05, 7.679199999999914e-05, 7.68189999999988e-05, 7.679099999999967e-05, 7.679099999999967e-05, 7.679099999999967e-05, 7.677800000000304e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.681999999999828e-05, 7.677799999999957e-05, 7.6764e-05, 7.680600000000218e-05, 7.677799999999957e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.67770000000001e-05, 7.680499999999923e-05, 7.680499999999923e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.68050000000027e-05, 7.676300000000053e-05, 7.6764e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.683400000000132e-05, 7.6764e-05, 7.6764e-05, 7.6764e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.676300000000053e-05, 7.679099999999967e-05, 7.679099999999967e-05, 7.670899999999772e-05, 7.679199999999914e-05, 7.6764e-05, 7.679200000000261e-05, 7.679199999999914e-05]</msg>
<status status="PASS" starttime="20201029 09:34:38.295" endtime="20201029 09:34:38.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.290" endtime="20201029 09:34:38.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.939" endtime="20201029 09:34:38.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.917" endtime="20201029 09:34:38.298"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.300" endtime="20201029 09:34:38.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.299" endtime="20201029 09:34:38.320"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.328" endtime="20201029 09:34:38.347"></status>
</kw>
<msg timestamp="20201029 09:34:38.347" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.327" endtime="20201029 09:34:38.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.350" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.348" endtime="20201029 09:34:38.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.351" endtime="20201029 09:34:38.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.324" endtime="20201029 09:34:38.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.322" endtime="20201029 09:34:38.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.361" endtime="20201029 09:34:38.646"></status>
</kw>
<msg timestamp="20201029 09:34:38.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016791792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.359" endtime="20201029 09:34:38.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016791792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.650" endtime="20201029 09:34:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.658" endtime="20201029 09:34:38.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.357" endtime="20201029 09:34:38.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.355" endtime="20201029 09:34:38.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.665" level="INFO">${PHILIP_RES} = [{'diff': 8.336100000000055e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.313899999999944e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.311199999999977e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:38.662" endtime="20201029 09:34:38.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.669" level="INFO">${RESULT} = {'diff': [8.336100000000055e-05, 8.312499999999987e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.311199999999977e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.3111000...</msg>
<status status="PASS" starttime="20201029 09:34:38.666" endtime="20201029 09:34:38.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.673" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.672" endtime="20201029 09:34:38.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.676" level="INFO">VALUE: [8.336100000000055e-05, 8.312499999999987e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.311199999999977e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.311099999999683e-05, 8.312499999999987e-05, 8.311099999999683e-05, 8.31110000000003e-05, 8.308399999999716e-05, 8.312499999999987e-05, 8.309699999999726e-05, 8.312499999999987e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.304199999999845e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.312499999999987e-05, 8.308400000000063e-05, 8.308300000000116e-05, 8.30980000000002e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.308300000000116e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.302799999999888e-05, 8.311199999999977e-05, 8.309699999999726e-05, 8.30980000000002e-05, 8.308299999999769e-05, 8.308299999999769e-05, 8.305499999999855e-05, 8.309700000000073e-05]</msg>
<status status="PASS" starttime="20201029 09:34:38.674" endtime="20201029 09:34:38.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.670" endtime="20201029 09:34:38.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.321" endtime="20201029 09:34:38.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.298" endtime="20201029 09:34:38.678"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.681" endtime="20201029 09:34:38.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.680" endtime="20201029 09:34:38.701"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.710" endtime="20201029 09:34:38.728"></status>
</kw>
<msg timestamp="20201029 09:34:38.729" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.708" endtime="20201029 09:34:38.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.731" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.730" endtime="20201029 09:34:38.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.732" endtime="20201029 09:34:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.705" endtime="20201029 09:34:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.703" endtime="20201029 09:34:38.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.741" endtime="20201029 09:34:39.027"></status>
</kw>
<msg timestamp="20201029 09:34:39.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017126778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017216694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.740" endtime="20201029 09:34:39.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017126778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017216694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.031" endtime="20201029 09:34:39.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.039" endtime="20201029 09:34:39.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.737" endtime="20201029 09:34:39.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.735" endtime="20201029 09:34:39.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.046" level="INFO">${PHILIP_RES} = [{'diff': 8.991600000000238e-05}, {'diff': 8.959799999999976e-05}, {'diff': 8.969500000000075e-05}, {'diff': 8.967999999999823e-05}, {'diff': 8.966599999999866e-05}, {'diff': 8.958400000000019e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:39.042" endtime="20201029 09:34:39.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.051" level="INFO">${RESULT} = {'diff': [8.991600000000238e-05, 8.959799999999976e-05, 8.969500000000075e-05, 8.967999999999823e-05, 8.966599999999866e-05, 8.958400000000019e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.96659...</msg>
<status status="PASS" starttime="20201029 09:34:39.047" endtime="20201029 09:34:39.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.055" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.054" endtime="20201029 09:34:39.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.058" level="INFO">VALUE: [8.991600000000238e-05, 8.959799999999976e-05, 8.969500000000075e-05, 8.967999999999823e-05, 8.966599999999866e-05, 8.958400000000019e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.966599999999866e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.965300000000204e-05, 8.966599999999866e-05, 8.96670000000016e-05, 8.965299999999857e-05, 8.965299999999857e-05, 8.96800000000017e-05, 8.9638999999999e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.966600000000213e-05, 8.958400000000019e-05, 8.965300000000204e-05, 8.968100000000118e-05, 8.963799999999952e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.963900000000247e-05, 8.96519999999991e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.966599999999866e-05, 8.966699999999814e-05, 8.9638999999999e-05, 8.965299999999857e-05, 8.969400000000127e-05, 8.962499999999943e-05, 8.963900000000247e-05, 8.965299999999857e-05, 8.96519999999991e-05, 8.966699999999814e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.96519999999991e-05, 8.965300000000204e-05, 8.968099999999771e-05, 8.96670000000016e-05, 8.959700000000029e-05, 8.965300000000204e-05]</msg>
<status status="PASS" starttime="20201029 09:34:39.056" endtime="20201029 09:34:39.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.051" endtime="20201029 09:34:39.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.702" endtime="20201029 09:34:39.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.679" endtime="20201029 09:34:39.059"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.062" endtime="20201029 09:34:39.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.060" endtime="20201029 09:34:39.082"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.090" endtime="20201029 09:34:39.110"></status>
</kw>
<msg timestamp="20201029 09:34:39.110" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.088" endtime="20201029 09:34:39.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.113" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.111" endtime="20201029 09:34:39.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.114" endtime="20201029 09:34:39.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.086" endtime="20201029 09:34:39.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.084" endtime="20201029 09:34:39.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.123" endtime="20201029 09:34:39.408"></status>
</kw>
<msg timestamp="20201029 09:34:39.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016832986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.121" endtime="20201029 09:34:39.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016832986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.412" endtime="20201029 09:34:39.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.420" endtime="20201029 09:34:39.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.119" endtime="20201029 09:34:39.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.117" endtime="20201029 09:34:39.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.428" level="INFO">${PHILIP_RES} = [{'diff': 9.672200000000047e-05}, {'diff': 9.643099999999752e-05}, {'diff': 9.644500000000056e-05}, {'diff': 9.641700000000142e-05}, {'diff': 9.641700000000142e-05}, {'diff': 9.643100000000099e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:39.425" endtime="20201029 09:34:39.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.432" level="INFO">${RESULT} = {'diff': [9.672200000000047e-05, 9.643099999999752e-05, 9.644500000000056e-05, 9.641700000000142e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.644400000000108e-05, 9.642999999999805e-05, 9.6443...</msg>
<status status="PASS" starttime="20201029 09:34:39.429" endtime="20201029 09:34:39.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.437" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.435" endtime="20201029 09:34:39.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.439" level="INFO">VALUE: [9.672200000000047e-05, 9.643099999999752e-05, 9.644500000000056e-05, 9.641700000000142e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.644400000000108e-05, 9.642999999999805e-05, 9.644399999999761e-05, 9.641699999999795e-05, 9.644500000000056e-05, 9.643099999999752e-05, 9.643000000000151e-05, 9.643000000000151e-05, 9.643000000000151e-05, 9.647200000000022e-05, 9.643099999999752e-05, 9.643099999999752e-05, 9.637499999999924e-05, 9.643100000000099e-05, 9.643000000000151e-05, 9.636099999999967e-05, 9.64859999999998e-05, 9.641700000000142e-05, 9.643000000000151e-05, 9.643099999999752e-05, 9.643099999999752e-05, 9.643000000000151e-05, 9.644400000000108e-05, 9.643000000000151e-05, 9.641600000000194e-05, 9.641700000000142e-05, 9.643099999999752e-05, 9.649999999999936e-05, 9.643100000000099e-05, 9.641599999999848e-05, 9.643000000000151e-05, 9.644400000000108e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.641700000000142e-05, 9.643099999999752e-05, 9.642999999999805e-05, 9.644400000000108e-05, 9.643000000000151e-05, 9.644400000000108e-05, 9.643100000000099e-05, 9.641699999999795e-05, 9.643099999999752e-05, 9.643099999999752e-05]</msg>
<status status="PASS" starttime="20201029 09:34:39.438" endtime="20201029 09:34:39.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.433" endtime="20201029 09:34:39.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.082" endtime="20201029 09:34:39.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.060" endtime="20201029 09:34:39.441"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.443" endtime="20201029 09:34:39.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.442" endtime="20201029 09:34:39.463"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.471" endtime="20201029 09:34:39.491"></status>
</kw>
<msg timestamp="20201029 09:34:39.492" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.470" endtime="20201029 09:34:39.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.494" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.493" endtime="20201029 09:34:39.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.495" endtime="20201029 09:34:39.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.467" endtime="20201029 09:34:39.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.465" endtime="20201029 09:34:39.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.505" endtime="20201029 09:34:39.791"></status>
</kw>
<msg timestamp="20201029 09:34:39.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016783806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0168875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:39.504" endtime="20201029 09:34:39.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016783806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0168875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:39.795" endtime="20201029 09:34:39.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.803" endtime="20201029 09:34:39.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.501" endtime="20201029 09:34:39.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.499" endtime="20201029 09:34:39.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.809" level="INFO">${PHILIP_RES} = [{'diff': 0.0001036940000000014}, {'diff': 0.00010341599999999854}, {'diff': 0.00010343000000000158}, {'diff': 0.00010343100000000105}, {'diff': 0.00010341700000000148}, {'diff': 0.0001034450000000006...</msg>
<status status="PASS" starttime="20201029 09:34:39.806" endtime="20201029 09:34:39.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.814" level="INFO">${RESULT} = {'diff': [0.0001036940000000014, 0.00010341599999999854, 0.00010343000000000158, 0.00010343100000000105, 0.00010341700000000148, 0.00010344500000000062, 0.00010344400000000115, 0.00010338900000000234,...</msg>
<status status="PASS" starttime="20201029 09:34:39.810" endtime="20201029 09:34:39.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.818" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.817" endtime="20201029 09:34:39.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.820" level="INFO">VALUE: [0.0001036940000000014, 0.00010341599999999854, 0.00010343000000000158, 0.00010343100000000105, 0.00010341700000000148, 0.00010344500000000062, 0.00010344400000000115, 0.00010338900000000234, 0.00010343100000000105, 0.00010343100000000105, 0.00010342999999999811, 0.00010344399999999768, 0.00010343100000000105, 0.00010340299999999844, 0.00010341699999999801, 0.00010342999999999811, 0.00010345800000000072, 0.00010344500000000062, 0.00010345800000000072, 0.00010344400000000115, 0.00010344400000000115, 0.000103513999999999, 0.00010343100000000105, 0.00010343000000000158, 0.00010344400000000115, 0.00010340299999999844, 0.00010345900000000019, 0.00010342999999999811, 0.00010341599999999854, 0.00010341699999999801, 0.00010343100000000105, 0.00010344500000000062, 0.00010347200000000029, 0.00010340199999999897, 0.000103513999999999, 0.0001033749999999993, 0.00010341700000000148, 0.00010344400000000115, 0.00010348599999999986, 0.00010344500000000062, 0.00010344500000000062, 0.00010344399999999768, 0.0001033749999999993, 0.00010341699999999801, 0.00010343099999999758, 0.00010342999999999811, 0.00010345800000000072, 0.00010345800000000072, 0.00010344500000000062, 0.00010344500000000062]</msg>
<status status="PASS" starttime="20201029 09:34:39.819" endtime="20201029 09:34:39.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.814" endtime="20201029 09:34:39.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.464" endtime="20201029 09:34:39.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.441" endtime="20201029 09:34:39.823"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.825" endtime="20201029 09:34:39.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.824" endtime="20201029 09:34:39.845"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.853" endtime="20201029 09:34:39.874"></status>
</kw>
<msg timestamp="20201029 09:34:39.875" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.852" endtime="20201029 09:34:39.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.877" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.876" endtime="20201029 09:34:39.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.878" endtime="20201029 09:34:39.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.849" endtime="20201029 09:34:39.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.847" endtime="20201029 09:34:39.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.887" endtime="20201029 09:34:40.177"></status>
</kw>
<msg timestamp="20201029 09:34:40.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016677125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016788042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.885" endtime="20201029 09:34:40.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016677125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016788042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.181" endtime="20201029 09:34:40.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.189" endtime="20201029 09:34:40.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.883" endtime="20201029 09:34:40.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.881" endtime="20201029 09:34:40.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.195" level="INFO">${PHILIP_RES} = [{'diff': 0.00011091699999999857}, {'diff': 0.00011062499999999961}, {'diff': 0.00011065300000000222}, {'diff': 0.00011066699999999832}, {'diff': 0.00011066699999999832}, {'diff': 0.000110681000000001...</msg>
<status status="PASS" starttime="20201029 09:34:40.192" endtime="20201029 09:34:40.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.200" level="INFO">${RESULT} = {'diff': [0.00011091699999999857, 0.00011062499999999961, 0.00011065300000000222, 0.00011066699999999832, 0.00011066699999999832, 0.00011068100000000136, 0.00011066700000000179, 0.00011066599999999885...</msg>
<status status="PASS" starttime="20201029 09:34:40.196" endtime="20201029 09:34:40.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.204" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.203" endtime="20201029 09:34:40.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.207" level="INFO">VALUE: [0.00011091699999999857, 0.00011062499999999961, 0.00011065300000000222, 0.00011066699999999832, 0.00011066699999999832, 0.00011068100000000136, 0.00011066700000000179, 0.00011066599999999885, 0.00011065299999999875, 0.00011072300000000007, 0.00011062499999999961, 0.00011065199999999928, 0.00011066699999999832, 0.00011069400000000146, 0.00011065299999999875, 0.00011066599999999885, 0.00011066700000000179, 0.00011063799999999971, 0.00011068099999999789, 0.00011063799999999971, 0.00011059700000000047, 0.00011063799999999971, 0.00011066699999999832, 0.00011063799999999971, 0.00011065300000000222, 0.00011062499999999961, 0.00011066699999999832, 0.00011066600000000232, 0.00011065300000000222, 0.00011065299999999875, 0.00011063899999999918, 0.00011059799999999995, 0.00011063899999999918, 0.00011066699999999832, 0.00011066700000000179, 0.00011065300000000222, 0.00011063900000000265, 0.00011063899999999918, 0.00011066600000000232, 0.00011066700000000179, 0.00011063899999999918, 0.00011070799999999756, 0.0001107090000000005, 0.00011066699999999832, 0.00011063899999999918, 0.00011065300000000222, 0.00011066600000000232, 0.00011062499999999961, 0.00011066599999999885, 0.00011066700000000179]</msg>
<status status="PASS" starttime="20201029 09:34:40.205" endtime="20201029 09:34:40.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.201" endtime="20201029 09:34:40.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.846" endtime="20201029 09:34:40.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.823" endtime="20201029 09:34:40.208"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.211" endtime="20201029 09:34:40.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.209" endtime="20201029 09:34:40.232"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.246" endtime="20201029 09:34:40.270"></status>
</kw>
<msg timestamp="20201029 09:34:40.271" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.244" endtime="20201029 09:34:40.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.276" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.273" endtime="20201029 09:34:40.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.278" endtime="20201029 09:34:40.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.240" endtime="20201029 09:34:40.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.236" endtime="20201029 09:34:40.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.294" endtime="20201029 09:34:40.585"></status>
</kw>
<msg timestamp="20201029 09:34:40.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025121417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.291" endtime="20201029 09:34:40.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025121417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.594" endtime="20201029 09:34:40.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.612" endtime="20201029 09:34:40.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.287" endtime="20201029 09:34:40.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.284" endtime="20201029 09:34:40.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.625" level="INFO">${PHILIP_RES} = [{'diff': 0.00011837500000000042}, {'diff': 0.0001181110000000006}, {'diff': 0.00011809699999999757}, {'diff': 0.00011809800000000051}, {'diff': 0.00011812500000000017}, {'diff': 0.0001180980000000005...</msg>
<status status="PASS" starttime="20201029 09:34:40.618" endtime="20201029 09:34:40.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.634" level="INFO">${RESULT} = {'diff': [0.00011837500000000042, 0.0001181110000000006, 0.00011809699999999757, 0.00011809800000000051, 0.00011812500000000017, 0.00011809800000000051, 0.00011816599999999941, 0.0001181110000000006, ...</msg>
<status status="PASS" starttime="20201029 09:34:40.627" endtime="20201029 09:34:40.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.642" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.640" endtime="20201029 09:34:40.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.647" level="INFO">VALUE: [0.00011837500000000042, 0.0001181110000000006, 0.00011809699999999757, 0.00011809800000000051, 0.00011812500000000017, 0.00011809800000000051, 0.00011816599999999941, 0.0001181110000000006, 0.00011804200000000223, 0.00011809700000000103, 0.00011811099999999713, 0.00011809700000000103, 0.00011816599999999941, 0.00011809700000000103, 0.00011812500000000017, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011811099999999713, 0.00011812500000000017, 0.0001181110000000006, 0.00011811099999999713, 0.000118082999999998, 0.0001181249999999967, 0.00011809699999999757, 0.00011811100000000407, 0.00011811100000000407, 0.00011811100000000407, 0.00011811099999999713, 0.00011809699999999757, 0.00011809699999999757, 0.00011809699999999757, 0.00011809699999999757, 0.00011808300000000493, 0.00011811100000000407, 0.00011811100000000407, 0.00011811099999999713, 0.00011813899999999627, 0.0001181249999999967, 0.00011811100000000407, 0.00011811100000000407, 0.00011807000000000484, 0.00011815300000000278, 0.00011809699999999757, 0.00011811099999999713, 0.0001180699999999979, 0.00011811099999999713, 0.00011809699999999757, 0.00011811100000000407, 0.00011811100000000407]</msg>
<status status="PASS" starttime="20201029 09:34:40.644" endtime="20201029 09:34:40.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.635" endtime="20201029 09:34:40.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.233" endtime="20201029 09:34:40.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.209" endtime="20201029 09:34:40.651"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.656" endtime="20201029 09:34:40.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.653" endtime="20201029 09:34:40.679"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.691" endtime="20201029 09:34:40.714"></status>
</kw>
<msg timestamp="20201029 09:34:40.714" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.689" endtime="20201029 09:34:40.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.717" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.715" endtime="20201029 09:34:40.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.718" endtime="20201029 09:34:40.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.687" endtime="20201029 09:34:40.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.683" endtime="20201029 09:34:40.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.729" endtime="20201029 09:34:41.014"></status>
</kw>
<msg timestamp="20201029 09:34:41.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.727" endtime="20201029 09:34:41.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.018" endtime="20201029 09:34:41.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.026" endtime="20201029 09:34:41.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.725" endtime="20201029 09:34:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.723" endtime="20201029 09:34:41.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.032" level="INFO">${PHILIP_RES} = [{'diff': 0.0001260689999999995}, {'diff': 0.00012584700000000185}, {'diff': 0.00012580599999999914}, {'diff': 0.0001258060000000026}, {'diff': 0.000125778}, {'diff': 0.000125778}, {'diff': 0.00012577...</msg>
<status status="PASS" starttime="20201029 09:34:41.029" endtime="20201029 09:34:41.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.036" level="INFO">${RESULT} = {'diff': [0.0001260689999999995, 0.00012584700000000185, 0.00012580599999999914, 0.0001258060000000026, 0.000125778, 0.000125778, 0.000125778, 0.00012576399999999696, 0.0001257910000000001, 0.00012577...</msg>
<status status="PASS" starttime="20201029 09:34:41.033" endtime="20201029 09:34:41.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.040" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.039" endtime="20201029 09:34:41.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.043" level="INFO">VALUE: [0.0001260689999999995, 0.00012584700000000185, 0.00012580599999999914, 0.0001258060000000026, 0.000125778, 0.000125778, 0.000125778, 0.00012576399999999696, 0.0001257910000000001, 0.000125778, 0.00012580599999999914, 0.0001258329999999988, 0.00012579199999999957, 0.000125778, 0.00012577700000000053, 0.000125778, 0.00012579199999999957, 0.00012579199999999957, 0.00012586100000000142, 0.00012583399999999828, 0.00012579199999999957, 0.0001257910000000001, 0.000125778, 0.0001257360000000013, 0.0001257910000000001, 0.00012580599999999914, 0.000125778, 0.00012576300000000096, 0.0001258060000000026, 0.00012579199999999957, 0.00012579199999999957, 0.0001257910000000001, 0.000125778, 0.00012579199999999957, 0.0001258329999999988, 0.00012579199999999957, 0.0001257360000000013, 0.00012586100000000489, 0.00012575000000000086, 0.00012580599999999914, 0.00012579199999999957, 0.00012575000000000086, 0.00012570800000000215, 0.00012579199999999957, 0.00012575000000000086, 0.00012580599999999914, 0.00012576400000000043, 0.00012580499999999967, 0.00012580599999999914, 0.00012579199999999957]</msg>
<status status="PASS" starttime="20201029 09:34:41.041" endtime="20201029 09:34:41.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.037" endtime="20201029 09:34:41.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.680" endtime="20201029 09:34:41.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.652" endtime="20201029 09:34:41.045"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.048" endtime="20201029 09:34:41.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.046" endtime="20201029 09:34:41.068"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.076" endtime="20201029 09:34:41.099"></status>
</kw>
<msg timestamp="20201029 09:34:41.099" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.074" endtime="20201029 09:34:41.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.102" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.100" endtime="20201029 09:34:41.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.103" endtime="20201029 09:34:41.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.071" endtime="20201029 09:34:41.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.070" endtime="20201029 09:34:41.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.112" endtime="20201029 09:34:41.400"></status>
</kw>
<msg timestamp="20201029 09:34:41.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016610431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016744375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.110" endtime="20201029 09:34:41.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016610431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016744375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.409" endtime="20201029 09:34:41.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.426" endtime="20201029 09:34:41.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.108" endtime="20201029 09:34:41.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.106" endtime="20201029 09:34:41.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.439" level="INFO">${PHILIP_RES} = [{'diff': 0.00013394400000000042}, {'diff': 0.00013369499999999965}, {'diff': 0.0001336800000000006}, {'diff': 0.00013370899999999922}, {'diff': 0.00013373600000000235}, {'diff': 0.0001337499999999984...</msg>
<status status="PASS" starttime="20201029 09:34:41.433" endtime="20201029 09:34:41.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.449" level="INFO">${RESULT} = {'diff': [0.00013394400000000042, 0.00013369499999999965, 0.0001336800000000006, 0.00013370899999999922, 0.00013373600000000235, 0.00013374999999999845, 0.00013369400000000017, 0.00013369400000000017,...</msg>
<status status="PASS" starttime="20201029 09:34:41.441" endtime="20201029 09:34:41.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.458" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.456" endtime="20201029 09:34:41.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.463" level="INFO">VALUE: [0.00013394400000000042, 0.00013369499999999965, 0.0001336800000000006, 0.00013370899999999922, 0.00013373600000000235, 0.00013374999999999845, 0.00013369400000000017, 0.00013369400000000017, 0.0001337090000000027, 0.0001336800000000006, 0.0001337090000000027, 0.0001336800000000006, 0.00013367999999999713, 0.0001336670000000005, 0.00013369400000000017, 0.00013368100000000008, 0.00013366599999999756, 0.0001336670000000005, 0.00013370799999999974, 0.00013369400000000017, 0.00013368100000000008, 0.0001336800000000006, 0.00013370899999999922, 0.00013368100000000008, 0.0001336250000000018, 0.00013369499999999965, 0.00013369400000000017, 0.00013369499999999965, 0.0001336800000000006, 0.00013370799999999974, 0.00013365300000000094, 0.00013366599999999756, 0.00013368100000000008, 0.00013367999999999713, 0.00013369499999999965, 0.00013373600000000235, 0.0001336800000000006, 0.00013368100000000008, 0.00013363900000000137, 0.00013366699999999704, 0.00013369400000000017, 0.00013369400000000017, 0.0001336670000000005, 0.00013369400000000017, 0.00013369499999999965, 0.00013369400000000017, 0.0001336670000000005, 0.00013368100000000008, 0.00013369400000000017, 0.00013363900000000137]</msg>
<status status="PASS" starttime="20201029 09:34:41.460" endtime="20201029 09:34:41.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.451" endtime="20201029 09:34:41.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.068" endtime="20201029 09:34:41.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.046" endtime="20201029 09:34:41.467"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.472" endtime="20201029 09:34:41.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.469" endtime="20201029 09:34:41.494"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.502" endtime="20201029 09:34:41.526"></status>
</kw>
<msg timestamp="20201029 09:34:41.526" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.500" endtime="20201029 09:34:41.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.528" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.527" endtime="20201029 09:34:41.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.529" endtime="20201029 09:34:41.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.498" endtime="20201029 09:34:41.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.496" endtime="20201029 09:34:41.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.538" endtime="20201029 09:34:41.826"></status>
</kw>
<msg timestamp="20201029 09:34:41.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017530111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017672194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.537" endtime="20201029 09:34:41.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017530111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017672194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.830" endtime="20201029 09:34:41.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.838" endtime="20201029 09:34:41.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.534" endtime="20201029 09:34:41.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.533" endtime="20201029 09:34:41.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.844" level="INFO">${PHILIP_RES} = [{'diff': 0.0001420829999999977}, {'diff': 0.0001418050000000018}, {'diff': 0.00014180600000000126}, {'diff': 0.00014183299999999746}, {'diff': 0.00014180499999999832}, {'diff': 0.0001418340000000004}...</msg>
<status status="PASS" starttime="20201029 09:34:41.841" endtime="20201029 09:34:41.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.848" level="INFO">${RESULT} = {'diff': [0.0001420829999999977, 0.0001418050000000018, 0.00014180600000000126, 0.00014183299999999746, 0.00014180499999999832, 0.0001418340000000004, 0.00014182000000000083, 0.0001418189999999979, 0....</msg>
<status status="PASS" starttime="20201029 09:34:41.845" endtime="20201029 09:34:41.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.852" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.851" endtime="20201029 09:34:41.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.855" level="INFO">VALUE: [0.0001420829999999977, 0.0001418050000000018, 0.00014180600000000126, 0.00014183299999999746, 0.00014180499999999832, 0.0001418340000000004, 0.00014182000000000083, 0.0001418189999999979, 0.00014181999999999736, 0.00014182000000000083, 0.0001418050000000018, 0.00014180600000000126, 0.0001418059999999978, 0.0001418050000000018, 0.00014186199999999954, 0.00014181999999999736, 0.00014173599999999995, 0.00014177800000000212, 0.0001418340000000004, 0.00014181900000000136, 0.0001418059999999978, 0.00014182000000000083, 0.0001418050000000018, 0.0001418059999999978, 0.0001418059999999978, 0.0001418050000000018, 0.0001417920000000017, 0.0001418059999999978, 0.00014180499999999832, 0.00014184799999999997, 0.0001417920000000017, 0.00014180499999999832, 0.00014180499999999832, 0.00014177800000000212, 0.00014181900000000136, 0.00014180499999999832, 0.00014181999999999736, 0.00014187499999999964, 0.00014183300000000093, 0.00014176399999999909, 0.0001418059999999978, 0.00014177800000000212, 0.00014180600000000126, 0.0001418470000000005, 0.00014181900000000136, 0.00014179199999999476, 0.00014183300000000093, 0.0001418050000000018, 0.0001418340000000004, 0.00014183300000000093]</msg>
<status status="PASS" starttime="20201029 09:34:41.853" endtime="20201029 09:34:41.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.849" endtime="20201029 09:34:41.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.494" endtime="20201029 09:34:41.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.468" endtime="20201029 09:34:41.857"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.859" endtime="20201029 09:34:41.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.858" endtime="20201029 09:34:41.879"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.887" endtime="20201029 09:34:41.911"></status>
</kw>
<msg timestamp="20201029 09:34:41.911" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.885" endtime="20201029 09:34:41.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.914" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.912" endtime="20201029 09:34:41.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.915" endtime="20201029 09:34:41.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.883" endtime="20201029 09:34:41.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.881" endtime="20201029 09:34:41.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.925" endtime="20201029 09:34:42.214"></status>
</kw>
<msg timestamp="20201029 09:34:42.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016532653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016683069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.923" endtime="20201029 09:34:42.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016532653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016683069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.222" endtime="20201029 09:34:42.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.239" endtime="20201029 09:34:42.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.921" endtime="20201029 09:34:42.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.919" endtime="20201029 09:34:42.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.252" level="INFO">${PHILIP_RES} = [{'diff': 0.00015041599999999697}, {'diff': 0.00015015200000000062}, {'diff': 0.00015017999999999976}, {'diff': 0.00015015200000000062}, {'diff': 0.00015022200000000194}, {'diff': 0.000150166000000000...</msg>
<status status="PASS" starttime="20201029 09:34:42.246" endtime="20201029 09:34:42.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.261" level="INFO">${RESULT} = {'diff': [0.00015041599999999697, 0.00015015200000000062, 0.00015017999999999976, 0.00015015200000000062, 0.00015022200000000194, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0...</msg>
<status status="PASS" starttime="20201029 09:34:42.254" endtime="20201029 09:34:42.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.270" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.267" endtime="20201029 09:34:42.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.275" level="INFO">VALUE: [0.00015041599999999697, 0.00015015200000000062, 0.00015017999999999976, 0.00015015200000000062, 0.00015022200000000194, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.0001501530000000001, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.00015018099999999923, 0.00015016700000000313, 0.0001501530000000001, 0.0001501530000000001, 0.00015016699999999966, 0.0001501530000000001, 0.00015018099999999923, 0.00015018099999999923, 0.0001501530000000001, 0.00015012499999999748, 0.0001502079999999989, 0.00015013900000000052, 0.00015016699999999966, 0.00015016699999999966, 0.00015011200000000086, 0.00015015200000000062, 0.0001502360000000015, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.0001501530000000001, 0.00015012500000000095, 0.0001501660000000002, 0.0001501660000000002, 0.0001501530000000001, 0.00015018099999999923, 0.0001501530000000001, 0.0001501810000000027, 0.00015013900000000052, 0.00015013900000000052, 0.00015016700000000313, 0.00015012499999999748, 0.00015023599999999804, 0.0001501530000000001, 0.00015016699999999966, 0.0001502079999999989, 0.00015011100000000138]</msg>
<status status="PASS" starttime="20201029 09:34:42.272" endtime="20201029 09:34:42.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.262" endtime="20201029 09:34:42.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.880" endtime="20201029 09:34:42.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.857" endtime="20201029 09:34:42.280"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:42.285" endtime="20201029 09:34:42.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.282" endtime="20201029 09:34:42.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.313" endtime="20201029 09:34:42.339"></status>
</kw>
<msg timestamp="20201029 09:34:42.339" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.312" endtime="20201029 09:34:42.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.342" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.340" endtime="20201029 09:34:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.343" endtime="20201029 09:34:42.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.309" endtime="20201029 09:34:42.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.307" endtime="20201029 09:34:42.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.351" endtime="20201029 09:34:42.637"></status>
</kw>
<msg timestamp="20201029 09:34:42.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016906042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.350" endtime="20201029 09:34:42.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016906042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.641" endtime="20201029 09:34:42.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.649" endtime="20201029 09:34:42.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.348" endtime="20201029 09:34:42.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.346" endtime="20201029 09:34:42.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.655" level="INFO">${PHILIP_RES} = [{'diff': 0.00015899999999999942}, {'diff': 0.00015874999999999917}, {'diff': 0.00015880599999999745}, {'diff': 0.00015872200000000003}, {'diff': 0.00015872200000000003}, {'diff': 0.000158735999999999...</msg>
<status status="PASS" starttime="20201029 09:34:42.652" endtime="20201029 09:34:42.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.660" level="INFO">${RESULT} = {'diff': [0.00015899999999999942, 0.00015874999999999917, 0.00015880599999999745, 0.00015872200000000003, 0.00015872200000000003, 0.0001587359999999996, 0.0001587359999999996, 0.00015870899999999993, ...</msg>
<status status="PASS" starttime="20201029 09:34:42.656" endtime="20201029 09:34:42.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.664" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.663" endtime="20201029 09:34:42.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.667" level="INFO">VALUE: [0.00015899999999999942, 0.00015874999999999917, 0.00015880599999999745, 0.00015872200000000003, 0.00015872200000000003, 0.0001587359999999996, 0.0001587359999999996, 0.00015870899999999993, 0.00015875000000000264, 0.00015873600000000307, 0.0001587359999999996, 0.00015873699999999907, 0.00015876399999999874, 0.00015872200000000003, 0.00015876399999999874, 0.0001587359999999996, 0.00015872200000000003, 0.0001587359999999996, 0.0001587359999999996, 0.00015874999999999917, 0.00015874999999999917, 0.00015879200000000135, 0.00015875000000000264, 0.00015875000000000264, 0.00015874999999999917, 0.00015874999999999917, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.00015874999999999917, 0.0001587359999999996, 0.0001588200000000005, 0.00015873600000000307, 0.00015872200000000003, 0.00015873600000000307, 0.0001587359999999996, 0.00015870899999999993, 0.00015872200000000003, 0.00015877699999999884, 0.00015876399999999874, 0.00015874999999999917, 0.00015877800000000178, 0.00015876399999999874, 0.00015879200000000482, 0.00015879199999999788, 0.00015872200000000003, 0.00015872200000000003, 0.00015870899999999993]</msg>
<status status="PASS" starttime="20201029 09:34:42.665" endtime="20201029 09:34:42.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.661" endtime="20201029 09:34:42.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.306" endtime="20201029 09:34:42.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.281" endtime="20201029 09:34:42.668"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:42.671" endtime="20201029 09:34:42.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.669" endtime="20201029 09:34:42.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.699" endtime="20201029 09:34:42.724"></status>
</kw>
<msg timestamp="20201029 09:34:42.725" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.697" endtime="20201029 09:34:42.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.727" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.726" endtime="20201029 09:34:42.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.728" endtime="20201029 09:34:42.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.695" endtime="20201029 09:34:42.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.693" endtime="20201029 09:34:42.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.737" endtime="20201029 09:34:43.028"></status>
</kw>
<msg timestamp="20201029 09:34:43.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016747278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.736" endtime="20201029 09:34:43.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016747278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.037" endtime="20201029 09:34:43.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.054" endtime="20201029 09:34:43.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.733" endtime="20201029 09:34:43.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.731" endtime="20201029 09:34:43.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:43.068" level="INFO">${PHILIP_RES} = [{'diff': 0.00016783400000000212}, {'diff': 0.00016755600000000273}, {'diff': 0.00016752800000000012}, {'diff': 0.0001674860000000014}, {'diff': 0.0001675419999999997}, {'diff': 0.00016745900000000175...</msg>
<status status="PASS" starttime="20201029 09:34:43.061" endtime="20201029 09:34:43.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.076" level="INFO">${RESULT} = {'diff': [0.00016783400000000212, 0.00016755600000000273, 0.00016752800000000012, 0.0001674860000000014, 0.0001675419999999997, 0.00016745900000000175, 0.00016752800000000012, 0.00016755600000000273, ...</msg>
<status status="PASS" starttime="20201029 09:34:43.070" endtime="20201029 09:34:43.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.087" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:43.085" endtime="20201029 09:34:43.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.093" level="INFO">VALUE: [0.00016783400000000212, 0.00016755600000000273, 0.00016752800000000012, 0.0001674860000000014, 0.0001675419999999997, 0.00016745900000000175, 0.00016752800000000012, 0.00016755600000000273, 0.0001675419999999997, 0.00016754100000000022, 0.00016754100000000022, 0.0001675419999999997, 0.00016755599999999926, 0.0001675419999999997, 0.00016755599999999926, 0.0001675419999999997, 0.00016752800000000012, 0.00016748599999999794, 0.00016758299999999893, 0.0001675419999999997, 0.00016751400000000055, 0.00016755599999999926, 0.00016755600000000273, 0.00016752800000000012, 0.00016754100000000022, 0.00016748599999999794, 0.0001675419999999997, 0.0001675419999999997, 0.00016752800000000012, 0.0001675419999999997, 0.00016754099999999675, 0.0001675549999999998, 0.00016752800000000012, 0.0001675419999999997, 0.00016755599999999926, 0.00016752800000000012, 0.00016755599999999926, 0.00016754100000000022, 0.00016756900000000283, 0.0001675549999999998, 0.0001675419999999997, 0.00016755599999999926, 0.0001675560000000062, 0.00016752800000000012, 0.00016754100000000022, 0.00016754100000000022, 0.00016752700000000065, 0.0001674860000000014, 0.0001675419999999997, 0.0001675419999999997]</msg>
<status status="PASS" starttime="20201029 09:34:43.090" endtime="20201029 09:34:43.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.079" endtime="20201029 09:34:43.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.691" endtime="20201029 09:34:43.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.669" endtime="20201029 09:34:43.097"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:43.101" endtime="20201029 09:34:43.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.098" endtime="20201029 09:34:43.122"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.130" endtime="20201029 09:34:43.157"></status>
</kw>
<msg timestamp="20201029 09:34:43.158" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.129" endtime="20201029 09:34:43.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.160" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.159" endtime="20201029 09:34:43.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.161" endtime="20201029 09:34:43.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.126" endtime="20201029 09:34:43.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.124" endtime="20201029 09:34:43.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.171" endtime="20201029 09:34:43.457"></status>
</kw>
<msg timestamp="20201029 09:34:43.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016843472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017020306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.169" endtime="20201029 09:34:43.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016843472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017020306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.460" endtime="20201029 09:34:43.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.468" endtime="20201029 09:34:43.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.167" endtime="20201029 09:34:43.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.165" endtime="20201029 09:34:43.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:43.475" level="INFO">${PHILIP_RES} = [{'diff': 0.00017683399999999724}, {'diff': 0.00017655600000000132}, {'diff': 0.00017658299999999752}, {'diff': 0.0001765700000000009}, {'diff': 0.00017655599999999785}, {'diff': 0.0001765560000000013...</msg>
<status status="PASS" starttime="20201029 09:34:43.471" endtime="20201029 09:34:43.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.479" level="INFO">${RESULT} = {'diff': [0.00017683399999999724, 0.00017655600000000132, 0.00017658299999999752, 0.0001765700000000009, 0.00017655599999999785, 0.00017655600000000132, 0.00017654199999999828, 0.00017658400000000046,...</msg>
<status status="PASS" starttime="20201029 09:34:43.476" endtime="20201029 09:34:43.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.483" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:43.482" endtime="20201029 09:34:43.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.485" level="INFO">VALUE: [0.00017683399999999724, 0.00017655600000000132, 0.00017658299999999752, 0.0001765700000000009, 0.00017655599999999785, 0.00017655600000000132, 0.00017654199999999828, 0.00017658400000000046, 0.00017658400000000046, 0.00017655600000000132, 0.0001765700000000009, 0.00017655599999999785, 0.0001765700000000009, 0.00017656999999999742, 0.00017656900000000142, 0.00017655599999999785, 0.00017656900000000142, 0.00017649999999999957, 0.000176583000000001, 0.00017654200000000175, 0.00017655499999999838, 0.00017654100000000228, 0.00017656899999999795, 0.000176583000000001, 0.0001765409999999988, 0.00017656900000000142, 0.00017659700000000056, 0.00017656900000000142, 0.0001765409999999988, 0.00017656900000000142, 0.00017656899999999795, 0.00017655600000000132, 0.000176583000000001, 0.00017656899999999795, 0.00017655600000000132, 0.00017654199999999828, 0.0001765700000000009, 0.00017654199999999828, 0.00017651399999999914, 0.00017655600000000132, 0.00017658400000000046, 0.00017655600000000132, 0.0001766249999999997, 0.00017648600000000347, 0.00017654200000000175, 0.00017661200000000654, 0.00017655600000000132, 0.0001765700000000009, 0.00017655600000000132, 0.00017656899999999448]</msg>
<status status="PASS" starttime="20201029 09:34:43.484" endtime="20201029 09:34:43.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.479" endtime="20201029 09:34:43.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.123" endtime="20201029 09:34:43.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.097" endtime="20201029 09:34:43.488"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:43.490" endtime="20201029 09:34:43.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.489" endtime="20201029 09:34:43.510"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.518" endtime="20201029 09:34:43.546"></status>
</kw>
<msg timestamp="20201029 09:34:43.547" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.516" endtime="20201029 09:34:43.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.549" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.548" endtime="20201029 09:34:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.550" endtime="20201029 09:34:43.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.514" endtime="20201029 09:34:43.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.512" endtime="20201029 09:34:43.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.559" endtime="20201029 09:34:43.850"></status>
</kw>
<msg timestamp="20201029 09:34:43.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016582181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016768264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.557" endtime="20201029 09:34:43.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016582181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016768264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.859" endtime="20201029 09:34:43.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.876" endtime="20201029 09:34:43.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.555" endtime="20201029 09:34:43.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.553" endtime="20201029 09:34:43.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:43.889" level="INFO">${PHILIP_RES} = [{'diff': 0.00018608300000000008}, {'diff': 0.00018583299999999983}, {'diff': 0.00018580499999999722}, {'diff': 0.0001858330000000033}, {'diff': 0.00018581900000000026}, {'diff': 0.0001858190000000002...</msg>
<status status="PASS" starttime="20201029 09:34:43.883" endtime="20201029 09:34:43.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.900" level="INFO">${RESULT} = {'diff': [0.00018608300000000008, 0.00018583299999999983, 0.00018580499999999722, 0.0001858330000000033, 0.00018581900000000026, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017,...</msg>
<status status="PASS" starttime="20201029 09:34:43.891" endtime="20201029 09:34:43.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.908" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:43.906" endtime="20201029 09:34:43.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.913" level="INFO">VALUE: [0.00018608300000000008, 0.00018583299999999983, 0.00018580499999999722, 0.0001858330000000033, 0.00018581900000000026, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017, 0.00018581999999999974, 0.00018581999999999974, 0.0001858050000000007, 0.00018580600000000017, 0.0001858050000000007, 0.00018581900000000026, 0.00018581999999999974, 0.0001858339999999993, 0.00018581999999999974, 0.00018580600000000017, 0.00018581900000000026, 0.0001858050000000007, 0.00018581900000000026, 0.00018581900000000026, 0.00018579099999999765, 0.00018581999999999974, 0.00018584700000000287, 0.00018586100000000244, 0.00018580600000000017, 0.0001858050000000007, 0.0001858050000000007, 0.00018581900000000026, 0.00018581900000000026, 0.00018580600000000017, 0.00018581999999999974, 0.00018584799999999888, 0.00018581999999999974, 0.00018580600000000017, 0.00018581900000000026, 0.0001858469999999994, 0.00018580499999999722, 0.00018581900000000373, 0.00018581999999999627, 0.00018580600000000363, 0.0001858059999999967, 0.00018579200000000407, 0.00018580499999999722, 0.00018580500000000416, 0.0001858189999999968, 0.00018581900000000373, 0.0001858189999999968, 0.0001858200000000032]</msg>
<status status="PASS" starttime="20201029 09:34:43.911" endtime="20201029 09:34:43.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.901" endtime="20201029 09:34:43.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.511" endtime="20201029 09:34:43.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.488" endtime="20201029 09:34:43.917"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:43.922" endtime="20201029 09:34:43.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.919" endtime="20201029 09:34:43.943"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.951" endtime="20201029 09:34:43.979"></status>
</kw>
<msg timestamp="20201029 09:34:43.979" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.949" endtime="20201029 09:34:43.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.982" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.980" endtime="20201029 09:34:43.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.983" endtime="20201029 09:34:43.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.947" endtime="20201029 09:34:43.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.945" endtime="20201029 09:34:43.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.992" endtime="20201029 09:34:44.278"></status>
</kw>
<msg timestamp="20201029 09:34:44.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016834208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.990" endtime="20201029 09:34:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016834208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.282" endtime="20201029 09:34:44.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.290" endtime="20201029 09:34:44.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.988" endtime="20201029 09:34:44.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.986" endtime="20201029 09:34:44.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:44.296" level="INFO">${PHILIP_RES} = [{'diff': 0.00019554100000000046}, {'diff': 0.0001952919999999997}, {'diff': 0.00019530599999999926}, {'diff': 0.00019530499999999978}, {'diff': 0.00019530600000000273}, {'diff': 0.0001952770000000006...</msg>
<status status="PASS" starttime="20201029 09:34:44.293" endtime="20201029 09:34:44.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.300" level="INFO">${RESULT} = {'diff': [0.00019554100000000046, 0.0001952919999999997, 0.00019530599999999926, 0.00019530499999999978, 0.00019530600000000273, 0.00019527700000000064, 0.00019530599999999926, 0.0001952919999999997, ...</msg>
<status status="PASS" starttime="20201029 09:34:44.297" endtime="20201029 09:34:44.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.304" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:44.303" endtime="20201029 09:34:44.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.307" level="INFO">VALUE: [0.00019554100000000046, 0.0001952919999999997, 0.00019530599999999926, 0.00019530499999999978, 0.00019530600000000273, 0.00019527700000000064, 0.00019530599999999926, 0.0001952919999999997, 0.00019527800000000012, 0.00019530599999999926, 0.00019530499999999978, 0.0001952919999999997, 0.00019527800000000012, 0.00019527800000000012, 0.00019530600000000273, 0.00019527700000000064, 0.0001953339999999984, 0.00019527800000000012, 0.0001952919999999997, 0.0001952919999999997, 0.00019529100000000021, 0.00019530599999999926, 0.00019530499999999978, 0.0001953330000000024, 0.00019529200000000316, 0.00019530500000000325, 0.0001952919999999997, 0.00019529100000000021, 0.0001952919999999997, 0.00019530599999999926, 0.00019527800000000012, 0.00019527800000000012, 0.00019530499999999978, 0.00019530599999999926, 0.00019530600000000273, 0.00019526400000000055, 0.00019527800000000012, 0.00019526400000000055, 0.00019534700000000543, 0.00019527800000000012, 0.0001952919999999997, 0.00019530599999999926, 0.00019530499999999978, 0.00019536099999999806, 0.00019529100000000021, 0.0001952919999999997, 0.00019531999999999883, 0.000195361000000005, 0.00019530599999999926, 0.00019529100000000021]</msg>
<status status="PASS" starttime="20201029 09:34:44.305" endtime="20201029 09:34:44.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.301" endtime="20201029 09:34:44.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.943" endtime="20201029 09:34:44.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.918" endtime="20201029 09:34:44.309"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:44.311" endtime="20201029 09:34:44.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.309" endtime="20201029 09:34:44.331"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.339" endtime="20201029 09:34:44.368"></status>
</kw>
<msg timestamp="20201029 09:34:44.369" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.337" endtime="20201029 09:34:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.371" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.370" endtime="20201029 09:34:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.372" endtime="20201029 09:34:44.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.335" endtime="20201029 09:34:44.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.333" endtime="20201029 09:34:44.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.382" endtime="20201029 09:34:44.675"></status>
</kw>
<msg timestamp="20201029 09:34:44.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016619708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016824986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.380" endtime="20201029 09:34:44.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016619708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016824986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.683" endtime="20201029 09:34:44.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.700" endtime="20201029 09:34:44.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.378" endtime="20201029 09:34:44.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.376" endtime="20201029 09:34:44.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:44.714" level="INFO">${PHILIP_RES} = [{'diff': 0.0002052779999999997}, {'diff': 0.00020504199999999903}, {'diff': 0.00020500000000000032}, {'diff': 0.00020500000000000032}, {'diff': 0.00020500000000000032}, {'diff': 0.0002050000000000003...</msg>
<status status="PASS" starttime="20201029 09:34:44.707" endtime="20201029 09:34:44.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.722" level="INFO">${RESULT} = {'diff': [0.0002052779999999997, 0.00020504199999999903, 0.00020500000000000032, 0.00020500000000000032, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020498700000000022,...</msg>
<status status="PASS" starttime="20201029 09:34:44.716" endtime="20201029 09:34:44.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.731" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:44.729" endtime="20201029 09:34:44.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.734" level="INFO">VALUE: [0.0002052779999999997, 0.00020504199999999903, 0.00020500000000000032, 0.00020500000000000032, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020498700000000022, 0.00020498600000000075, 0.00020500000000000032, 0.00020498600000000075, 0.00020497200000000118, 0.00020504199999999903, 0.0002050139999999999, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020499999999999685, 0.0002050139999999999, 0.00020499999999999685, 0.00020498599999999728, 0.00020499999999999685, 0.00020499999999999685, 0.00020499999999999685, 0.0002050139999999999, 0.00020498599999999728, 0.00020498700000000022, 0.0002049719999999977, 0.00020498600000000075, 0.00020494399999999857, 0.00020502800000000293, 0.00020500000000000032, 0.00020498599999999728, 0.0002049719999999977, 0.00020500000000000032, 0.000205027999999996, 0.00020498600000000422, 0.00020498599999999728, 0.00020491600000000637, 0.00020498599999999728, 0.00020495800000000508, 0.00020499999999999685, 0.0002050000000000038, 0.00020494499999999805, 0.00020498599999999728, 0.00020499999999999685, 0.00020498599999999728, 0.00020498599999999728, 0.00020498599999999728, 0.0002049719999999977]</msg>
<status status="PASS" starttime="20201029 09:34:44.733" endtime="20201029 09:34:44.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.724" endtime="20201029 09:34:44.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.331" endtime="20201029 09:34:44.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.309" endtime="20201029 09:34:44.737"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:44.739" endtime="20201029 09:34:44.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.738" endtime="20201029 09:34:44.759"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.767" endtime="20201029 09:34:44.797"></status>
</kw>
<msg timestamp="20201029 09:34:44.798" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.766" endtime="20201029 09:34:44.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.800" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.799" endtime="20201029 09:34:44.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.801" endtime="20201029 09:34:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.763" endtime="20201029 09:34:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.761" endtime="20201029 09:34:44.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.810" endtime="20201029 09:34:45.096"></status>
</kw>
<msg timestamp="20201029 09:34:45.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016840722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.809" endtime="20201029 09:34:45.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016840722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.100" endtime="20201029 09:34:45.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.107" endtime="20201029 09:34:45.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.806" endtime="20201029 09:34:45.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.804" endtime="20201029 09:34:45.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:45.114" level="INFO">${PHILIP_RES} = [{'diff': 0.00021517999999999884}, {'diff': 0.00021490299999999893}, {'diff': 0.00021497200000000077}, {'diff': 0.0002149169999999985}, {'diff': 0.00021493000000000206}, {'diff': 0.0002149169999999985...</msg>
<status status="PASS" starttime="20201029 09:34:45.110" endtime="20201029 09:34:45.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.119" level="INFO">${RESULT} = {'diff': [0.00021517999999999884, 0.00021490299999999893, 0.00021497200000000077, 0.0002149169999999985, 0.00021493000000000206, 0.0002149169999999985, 0.00021490299999999893, 0.00021494400000000163, ...</msg>
<status status="PASS" starttime="20201029 09:34:45.115" endtime="20201029 09:34:45.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.123" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:45.122" endtime="20201029 09:34:45.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.125" level="INFO">VALUE: [0.00021517999999999884, 0.00021490299999999893, 0.00021497200000000077, 0.0002149169999999985, 0.00021493000000000206, 0.0002149169999999985, 0.00021490299999999893, 0.00021494400000000163, 0.00021493099999999807, 0.00021493000000000206, 0.00021486099999999675, 0.00021493100000000154, 0.0002149030000000024, 0.00021494399999999816, 0.00021493000000000206, 0.00021494499999999764, 0.00021494399999999816, 0.00021493100000000154, 0.00021493099999999807, 0.00021493000000000206, 0.0002149169999999985, 0.00021491599999999902, 0.00021493100000000154, 0.00021491599999999902, 0.0002149160000000025, 0.00021488899999999936, 0.00021491599999999902, 0.00021491700000000197, 0.0002149169999999985, 0.00021491700000000197, 0.00021490299999999893, 0.00021490299999999893, 0.0002149580000000012, 0.00021491599999999902, 0.00021491700000000197, 0.0002149580000000012, 0.0002148889999999959, 0.00021493100000000154, 0.00021487500000000326, 0.00021490299999999546, 0.00021490200000000292, 0.00021491700000000197, 0.00021490299999999546, 0.0002149030000000024, 0.0002149450000000011, 0.00021493000000000206, 0.00021491699999999503, 0.0002149160000000025, 0.00021498600000000034, 0.00021490299999999546]</msg>
<status status="PASS" starttime="20201029 09:34:45.124" endtime="20201029 09:34:45.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.119" endtime="20201029 09:34:45.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.760" endtime="20201029 09:34:45.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.737" endtime="20201029 09:34:45.127"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.130" endtime="20201029 09:34:45.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.128" endtime="20201029 09:34:45.149"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.158" endtime="20201029 09:34:45.188"></status>
</kw>
<msg timestamp="20201029 09:34:45.189" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.156" endtime="20201029 09:34:45.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.191" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.190" endtime="20201029 09:34:45.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.192" endtime="20201029 09:34:45.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.153" endtime="20201029 09:34:45.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.151" endtime="20201029 09:34:45.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.201" endtime="20201029 09:34:45.501"></status>
</kw>
<msg timestamp="20201029 09:34:45.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016746083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016971472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.200" endtime="20201029 09:34:45.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016746083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016971472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.509" endtime="20201029 09:34:45.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.527" endtime="20201029 09:34:45.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.197" endtime="20201029 09:34:45.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.196" endtime="20201029 09:34:45.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:45.540" level="INFO">${PHILIP_RES} = [{'diff': 0.00022538900000000292}, {'diff': 0.00022508299999999745}, {'diff': 0.00022505600000000126}, {'diff': 0.00022506900000000135}, {'diff': 0.00022506900000000135}, {'diff': 0.000225069000000001...</msg>
<status status="PASS" starttime="20201029 09:34:45.533" endtime="20201029 09:34:45.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.545" level="INFO">${RESULT} = {'diff': [0.00022538900000000292, 0.00022508299999999745, 0.00022505600000000126, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135...</msg>
<status status="PASS" starttime="20201029 09:34:45.542" endtime="20201029 09:34:45.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.549" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:45.548" endtime="20201029 09:34:45.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.552" level="INFO">VALUE: [0.00022538900000000292, 0.00022508299999999745, 0.00022505600000000126, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022505500000000178, 0.00022509799999999996, 0.00022505500000000178, 0.00022507000000000082, 0.00022506900000000135, 0.0002250840000000004, 0.00022504099999999874, 0.00022506999999999736, 0.00022506899999999788, 0.00022502800000000212, 0.0002250549999999983, 0.00022506999999999736, 0.00022508299999999745, 0.00022507000000000082, 0.00022508300000000092, 0.00022508300000000092, 0.00022507000000000082, 0.00022505500000000178, 0.00022505600000000126, 0.00022501399999999908, 0.0002251389999999992, 0.00022506900000000135, 0.0002250840000000004, 0.00022508300000000092, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022505500000000178, 0.00022502800000000212, 0.00022506900000000135, 0.00022505600000000126, 0.00022506900000000135, 0.00022506900000000135, 0.00022505600000000126, 0.00022511100000000006, 0.00022507000000000082, 0.0002250689999999944, 0.00022506999999999389, 0.0002250689999999944, 0.00022505599999999432, 0.00022508299999999398, 0.00022499999999999604]</msg>
<status status="PASS" starttime="20201029 09:34:45.550" endtime="20201029 09:34:45.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.546" endtime="20201029 09:34:45.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.150" endtime="20201029 09:34:45.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.128" endtime="20201029 09:34:45.554"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.556" endtime="20201029 09:34:45.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.554" endtime="20201029 09:34:45.576"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.584" endtime="20201029 09:34:45.615"></status>
</kw>
<msg timestamp="20201029 09:34:45.616" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.582" endtime="20201029 09:34:45.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.618" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.617" endtime="20201029 09:34:45.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.619" endtime="20201029 09:34:45.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.580" endtime="20201029 09:34:45.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.578" endtime="20201029 09:34:45.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.629" endtime="20201029 09:34:45.914"></status>
</kw>
<msg timestamp="20201029 09:34:45.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016745694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:45.627" endtime="20201029 09:34:45.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016745694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:45.918" endtime="20201029 09:34:45.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.926" endtime="20201029 09:34:45.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.625" endtime="20201029 09:34:45.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.623" endtime="20201029 09:34:45.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:45.932" level="INFO">${PHILIP_RES} = [{'diff': 0.0002356939999999981}, {'diff': 0.00023543100000000122}, {'diff': 0.0002354450000000008}, {'diff': 0.00023544400000000132}, {'diff': 0.00023545900000000036}, {'diff': 0.0002353890000000025}...</msg>
<status status="PASS" starttime="20201029 09:34:45.929" endtime="20201029 09:34:45.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.936" level="INFO">${RESULT} = {'diff': [0.0002356939999999981, 0.00023543100000000122, 0.0002354450000000008, 0.00023544400000000132, 0.00023545900000000036, 0.0002353890000000025, 0.00023540300000000208, 0.00023543000000000175, 0...</msg>
<status status="PASS" starttime="20201029 09:34:45.933" endtime="20201029 09:34:45.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.940" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:45.939" endtime="20201029 09:34:45.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.943" level="INFO">VALUE: [0.0002356939999999981, 0.00023543100000000122, 0.0002354450000000008, 0.00023544400000000132, 0.00023545900000000036, 0.0002353890000000025, 0.00023540300000000208, 0.00023543000000000175, 0.00023547299999999993, 0.00023543000000000175, 0.00023544400000000132, 0.0002354450000000008, 0.0002354580000000009, 0.00023537499999999947, 0.00023544399999999785, 0.00023541699999999818, 0.00023540199999999914, 0.00023538899999999904, 0.00023540199999999914, 0.00023544499999999732, 0.00023544499999999732, 0.00023547200000000046, 0.00023545900000000036, 0.00023542999999999828, 0.00023545900000000036, 0.00023545799999999742, 0.00023547200000000046, 0.00023545799999999742, 0.00023552699999999926, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.00023544400000000132, 0.00023544399999999438, 0.00023547200000000046, 0.00023544399999999438, 0.0002354450000000008, 0.0002354299999999948, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.0002354580000000009, 0.0002354450000000008, 0.0002354450000000008, 0.00023544400000000132, 0.00023547200000000046, 0.0002354580000000009, 0.00023541700000000165]</msg>
<status status="PASS" starttime="20201029 09:34:45.941" endtime="20201029 09:34:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.937" endtime="20201029 09:34:45.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.576" endtime="20201029 09:34:45.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.554" endtime="20201029 09:34:45.945"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.948" endtime="20201029 09:34:45.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.946" endtime="20201029 09:34:45.968"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.976" endtime="20201029 09:34:46.008"></status>
</kw>
<msg timestamp="20201029 09:34:46.008" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.974" endtime="20201029 09:34:46.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.011" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.009" endtime="20201029 09:34:46.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.012" endtime="20201029 09:34:46.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.972" endtime="20201029 09:34:46.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.970" endtime="20201029 09:34:46.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.021" endtime="20201029 09:34:46.317"></status>
</kw>
<msg timestamp="20201029 09:34:46.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016771625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017017944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.019" endtime="20201029 09:34:46.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016771625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017017944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.326" endtime="20201029 09:34:46.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.343" endtime="20201029 09:34:46.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.017" endtime="20201029 09:34:46.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.015" endtime="20201029 09:34:46.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:46.356" level="INFO">${PHILIP_RES} = [{'diff': 0.0002463190000000018}, {'diff': 0.00024611100000000025}, {'diff': 0.0002460280000000023}, {'diff': 0.00024604200000000187}, {'diff': 0.00024605599999999797}, {'diff': 0.0002460419999999984}...</msg>
<status status="PASS" starttime="20201029 09:34:46.350" endtime="20201029 09:34:46.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:46.361" level="INFO">${RESULT} = {'diff': [0.0002463190000000018, 0.00024611100000000025, 0.0002460280000000023, 0.00024604200000000187, 0.00024605599999999797, 0.0002460419999999984, 0.0002460419999999984, 0.00024602699999999936, 0....</msg>
<status status="PASS" starttime="20201029 09:34:46.357" endtime="20201029 09:34:46.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.366" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:46.365" endtime="20201029 09:34:46.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.368" level="INFO">VALUE: [0.0002463190000000018, 0.00024611100000000025, 0.0002460280000000023, 0.00024604200000000187, 0.00024605599999999797, 0.0002460419999999984, 0.0002460419999999984, 0.00024602699999999936, 0.00024605500000000197, 0.0002460280000000023, 0.00024605600000000144, 0.000246070000000001, 0.00024602799999999883, 0.0002459869999999996, 0.00024604099999999893, 0.0002460410000000024, 0.00024605600000000144, 0.00024605600000000144, 0.0002460419999999984, 0.00024606899999999807, 0.0002460549999999985, 0.00024606899999999807, 0.00024606900000000154, 0.00024604200000000187, 0.00024605600000000144, 0.0002460419999999984, 0.00024604099999999893, 0.00024606899999999807, 0.00024602799999999883, 0.00024605600000000144, 0.0002460280000000023, 0.00024604200000000187, 0.00024604200000000187, 0.0002460270000000028, 0.00024605500000000197, 0.00024609800000000015, 0.0002460559999999945, 0.00024606999999999407, 0.00024604199999999493, 0.00024605500000000197, 0.0002460410000000024, 0.0002460410000000024, 0.00024605600000000144, 0.0002460280000000023, 0.00024604200000000187, 0.00024605500000000197, 0.00024605500000000197, 0.0002460830000000011, 0.0002460280000000023, 0.0002460280000000023]</msg>
<status status="PASS" starttime="20201029 09:34:46.367" endtime="20201029 09:34:46.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.362" endtime="20201029 09:34:46.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.968" endtime="20201029 09:34:46.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.946" endtime="20201029 09:34:46.370"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:46.372" endtime="20201029 09:34:46.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.371" endtime="20201029 09:34:46.392"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.400" endtime="20201029 09:34:46.433"></status>
</kw>
<msg timestamp="20201029 09:34:46.434" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.399" endtime="20201029 09:34:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.436" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.435" endtime="20201029 09:34:46.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.437" endtime="20201029 09:34:46.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.396" endtime="20201029 09:34:46.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.394" endtime="20201029 09:34:46.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.446" endtime="20201029 09:34:46.732"></status>
</kw>
<msg timestamp="20201029 09:34:46.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016895208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.445" endtime="20201029 09:34:46.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016895208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.736" endtime="20201029 09:34:46.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.743" endtime="20201029 09:34:46.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.442" endtime="20201029 09:34:46.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.440" endtime="20201029 09:34:46.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:46.750" level="INFO">${PHILIP_RES} = [{'diff': 0.000257139}, {'diff': 0.00025688899999999973}, {'diff': 0.00025688899999999973}, {'diff': 0.0002568610000000006}, {'diff': 0.00025687500000000016}, {'diff': 0.0002569029999999993}, {'diff':...</msg>
<status status="PASS" starttime="20201029 09:34:46.747" endtime="20201029 09:34:46.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:46.753" level="INFO">${RESULT} = {'diff': [0.000257139, 0.00025688899999999973, 0.00025688899999999973, 0.0002568610000000006, 0.00025687500000000016, 0.0002569029999999993, 0.00025688899999999973, 0.00025683399999999745, 0.000256875...</msg>
<status status="PASS" starttime="20201029 09:34:46.750" endtime="20201029 09:34:46.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.758" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:46.757" endtime="20201029 09:34:46.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.760" level="INFO">VALUE: [0.000257139, 0.00025688899999999973, 0.00025688899999999973, 0.0002568610000000006, 0.00025687500000000016, 0.0002569029999999993, 0.00025688899999999973, 0.00025683399999999745, 0.00025687500000000016, 0.0002568189999999984, 0.0002568610000000006, 0.00025687500000000016, 0.00025688899999999973, 0.0002568610000000006, 0.00025688899999999973, 0.0002569029999999993, 0.00025688899999999973, 0.0002568749999999967, 0.00025691699999999887, 0.00025687500000000016, 0.00025687500000000016, 0.0002568610000000006, 0.0002568610000000006, 0.00025680499999999884, 0.00025687500000000016, 0.0002568480000000005, 0.00025687500000000016, 0.00025687500000000016, 0.000256847000000001, 0.000256847000000001, 0.00025687500000000363, 0.00025679199999999874, 0.00025687500000000363, 0.0002568330000000049, 0.0002568470000000045, 0.00025694399999999507, 0.0002568609999999971, 0.0002568890000000032, 0.0002568890000000032, 0.0002568890000000032, 0.0002568879999999968, 0.0002568749999999967, 0.0002568749999999967, 0.00025687500000000363, 0.00025687500000000363, 0.0002568609999999971, 0.00025684699999999755, 0.00025687500000000363, 0.00025686100000000406, 0.0002568890000000032]</msg>
<status status="PASS" starttime="20201029 09:34:46.759" endtime="20201029 09:34:46.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.754" endtime="20201029 09:34:46.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.393" endtime="20201029 09:34:46.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.370" endtime="20201029 09:34:46.762"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:46.764" endtime="20201029 09:34:46.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.763" endtime="20201029 09:34:46.784"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.792" endtime="20201029 09:34:46.826"></status>
</kw>
<msg timestamp="20201029 09:34:46.827" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.791" endtime="20201029 09:34:46.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.829" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.828" endtime="20201029 09:34:46.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.830" endtime="20201029 09:34:46.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.788" endtime="20201029 09:34:46.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.786" endtime="20201029 09:34:46.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.840" endtime="20201029 09:34:47.138"></status>
</kw>
<msg timestamp="20201029 09:34:47.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016651222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.839" endtime="20201029 09:34:47.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016651222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.147" endtime="20201029 09:34:47.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.164" endtime="20201029 09:34:47.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.836" endtime="20201029 09:34:47.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.834" endtime="20201029 09:34:47.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:47.172" level="INFO">${PHILIP_RES} = [{'diff': 0.00026819499999999885}, {'diff': 0.0002679029999999999}, {'diff': 0.00026791700000000293}, {'diff': 0.00026793099999999903}, {'diff': 0.0002679449999999986}, {'diff': 0.00026794500000000207...</msg>
<status status="PASS" starttime="20201029 09:34:47.169" endtime="20201029 09:34:47.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.176" level="INFO">${RESULT} = {'diff': [0.00026819499999999885, 0.0002679029999999999, 0.00026791700000000293, 0.00026793099999999903, 0.0002679449999999986, 0.00026794500000000207, 0.0002679310000000025, 0.00026791699999999946, 0...</msg>
<status status="PASS" starttime="20201029 09:34:47.173" endtime="20201029 09:34:47.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.180" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:47.179" endtime="20201029 09:34:47.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.182" level="INFO">VALUE: [0.00026819499999999885, 0.0002679029999999999, 0.00026791700000000293, 0.00026793099999999903, 0.0002679449999999986, 0.00026794500000000207, 0.0002679310000000025, 0.00026791699999999946, 0.00026793099999999903, 0.0002678890000000003, 0.00026793099999999903, 0.0002679029999999999, 0.0002679860000000013, 0.0002679310000000025, 0.00026793099999999903, 0.0002679449999999986, 0.0002678890000000003, 0.0002678609999999977, 0.00026791699999999946, 0.00026791700000000293, 0.00026793099999999903, 0.00026791699999999946, 0.00026792999999999956, 0.00026791700000000293, 0.000267916, 0.0002679579999999987, 0.000267930000000003, 0.00026795800000000217, 0.00026792999999999956, 0.000267916, 0.0002679029999999999, 0.00026794399999999913, 0.000267916, 0.000267916, 0.00026787500000000075, 0.00026794400000000607, 0.00026794399999999913, 0.00026794399999999913, 0.00026794400000000607, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.00026792999999999956, 0.00026797199999999827, 0.00026794399999999913, 0.0002679999999999974, 0.00026793099999999903, 0.00026791699999999946, 0.00026797199999999827, 0.00026793099999999903]</msg>
<status status="PASS" starttime="20201029 09:34:47.181" endtime="20201029 09:34:47.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.177" endtime="20201029 09:34:47.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.785" endtime="20201029 09:34:47.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.762" endtime="20201029 09:34:47.185"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:47.188" endtime="20201029 09:34:47.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.186" endtime="20201029 09:34:47.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.216" endtime="20201029 09:34:47.251"></status>
</kw>
<msg timestamp="20201029 09:34:47.252" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.214" endtime="20201029 09:34:47.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.254" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.253" endtime="20201029 09:34:47.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.255" endtime="20201029 09:34:47.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.212" endtime="20201029 09:34:47.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.210" endtime="20201029 09:34:47.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.264" endtime="20201029 09:34:47.549"></status>
</kw>
<msg timestamp="20201029 09:34:47.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017049375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.263" endtime="20201029 09:34:47.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017049375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.553" endtime="20201029 09:34:47.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.561" endtime="20201029 09:34:47.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.260" endtime="20201029 09:34:47.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.259" endtime="20201029 09:34:47.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:47.567" level="INFO">${PHILIP_RES} = [{'diff': 0.00027948599999999893}, {'diff': 0.00027920799999999954}, {'diff': 0.00027920799999999954}, {'diff': 0.0002792220000000026}, {'diff': 0.00027919499999999944}, {'diff': 0.0002791949999999994...</msg>
<status status="PASS" starttime="20201029 09:34:47.564" endtime="20201029 09:34:47.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.572" level="INFO">${RESULT} = {'diff': [0.00027948599999999893, 0.00027920799999999954, 0.00027920799999999954, 0.0002792220000000026, 0.00027919499999999944, 0.00027919499999999944, 0.0002792090000000025, 0.00027919499999999944, ...</msg>
<status status="PASS" starttime="20201029 09:34:47.568" endtime="20201029 09:34:47.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.576" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:47.575" endtime="20201029 09:34:47.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.578" level="INFO">VALUE: [0.00027948599999999893, 0.00027920799999999954, 0.00027920799999999954, 0.0002792220000000026, 0.00027919499999999944, 0.00027919499999999944, 0.0002792090000000025, 0.00027919499999999944, 0.00027919499999999944, 0.0002791800000000004, 0.00027919399999999997, 0.0002792500000000017, 0.0002792640000000013, 0.00027920799999999954, 0.00027919399999999997, 0.00027919499999999944, 0.0002791809999999999, 0.00027922300000000205, 0.0002792090000000025, 0.00027919399999999997, 0.00027920799999999954, 0.00027919399999999997, 0.0002791800000000004, 0.00027920799999999954, 0.0002791809999999999, 0.00027924999999999825, 0.00027919499999999944, 0.00027919499999999944, 0.000279194999999996, 0.000279208000000003, 0.00027922199999999564, 0.0002791530000000042, 0.00027919400000000344, 0.0002791939999999965, 0.000279208000000003, 0.000279208000000003, 0.00027922199999999564, 0.0002791950000000029, 0.000279194999999996, 0.0002791809999999964, 0.0002792220000000026, 0.00027922199999999564, 0.0002792220000000026, 0.0002792220000000026, 0.0002792359999999952, 0.00027922300000000205, 0.0002791939999999965, 0.000279194999999996, 0.0002792090000000025, 0.00027920899999999554]</msg>
<status status="PASS" starttime="20201029 09:34:47.577" endtime="20201029 09:34:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.573" endtime="20201029 09:34:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.208" endtime="20201029 09:34:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.186" endtime="20201029 09:34:47.580"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:47.583" endtime="20201029 09:34:47.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.581" endtime="20201029 09:34:47.602"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.610" endtime="20201029 09:34:47.647"></status>
</kw>
<msg timestamp="20201029 09:34:47.647" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.609" endtime="20201029 09:34:47.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.650" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.648" endtime="20201029 09:34:47.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.651" endtime="20201029 09:34:47.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.606" endtime="20201029 09:34:47.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.605" endtime="20201029 09:34:47.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.660" endtime="20201029 09:34:47.961"></status>
</kw>
<msg timestamp="20201029 09:34:47.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016991972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.658" endtime="20201029 09:34:47.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016991972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.970" endtime="20201029 09:34:47.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.980" endtime="20201029 09:34:47.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.656" endtime="20201029 09:34:47.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.654" endtime="20201029 09:34:47.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:47.987" level="INFO">${PHILIP_RES} = [{'diff': 0.0002909440000000013}, {'diff': 0.00029072199999999673}, {'diff': 0.00029070800000000063}, {'diff': 0.00029070800000000063}, {'diff': 0.00029073599999999977}, {'diff': 0.0002907080000000006...</msg>
<status status="PASS" starttime="20201029 09:34:47.984" endtime="20201029 09:34:47.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.991" level="INFO">${RESULT} = {'diff': [0.0002909440000000013, 0.00029072199999999673, 0.00029070800000000063, 0.00029070800000000063, 0.00029073599999999977, 0.00029070800000000063, 0.00029069400000000106, 0.00029070799999999716,...</msg>
<status status="PASS" starttime="20201029 09:34:47.988" endtime="20201029 09:34:47.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.995" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:47.994" endtime="20201029 09:34:47.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.997" level="INFO">VALUE: [0.0002909440000000013, 0.00029072199999999673, 0.00029070800000000063, 0.00029070800000000063, 0.00029073599999999977, 0.00029070800000000063, 0.00029069400000000106, 0.00029070799999999716, 0.0002907220000000002, 0.0002907220000000002, 0.00029070800000000063, 0.0002907500000000028, 0.0002907229999999997, 0.0002906939999999976, 0.00029070800000000063, 0.000290679999999998, 0.0002907220000000002, 0.0002906939999999976, 0.00029063900000000226, 0.0002906939999999976, 0.00029070800000000063, 0.0002906939999999976, 0.00029070800000000063, 0.00029072199999999673, 0.00029069400000000106, 0.00029073599999999977, 0.0002907500000000028, 0.0002907220000000002, 0.0002907220000000002, 0.00029070800000000063, 0.0002906949999999936, 0.00029069400000000106, 0.00029069500000000054, 0.00029070800000000063, 0.00029073599999999977, 0.00029070800000000063, 0.00029068100000000097, 0.00029073699999999925, 0.0002907079999999937, 0.0002907220000000002, 0.00029070800000000063, 0.00029069500000000054, 0.0002907220000000002, 0.0002907090000000001, 0.00029070800000000063, 0.00029069500000000054, 0.00029073599999999977, 0.00029068100000000097, 0.00029068100000000097, 0.00029069500000000054]</msg>
<status status="PASS" starttime="20201029 09:34:47.996" endtime="20201029 09:34:47.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.991" endtime="20201029 09:34:47.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.603" endtime="20201029 09:34:47.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.581" endtime="20201029 09:34:47.999"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:48.002" endtime="20201029 09:34:48.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.000" endtime="20201029 09:34:48.021"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.029" endtime="20201029 09:34:48.066"></status>
</kw>
<msg timestamp="20201029 09:34:48.066" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.028" endtime="20201029 09:34:48.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.069" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.067" endtime="20201029 09:34:48.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.070" endtime="20201029 09:34:48.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.025" endtime="20201029 09:34:48.073"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.024" endtime="20201029 09:34:48.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.080" endtime="20201029 09:34:48.365"></status>
</kw>
<msg timestamp="20201029 09:34:48.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016691222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016993903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.078" endtime="20201029 09:34:48.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016691222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016993903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.369" endtime="20201029 09:34:48.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.377" endtime="20201029 09:34:48.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.076" endtime="20201029 09:34:48.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.074" endtime="20201029 09:34:48.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:48.383" level="INFO">${PHILIP_RES} = [{'diff': 0.00030268100000000256}, {'diff': 0.0003024860000000011}, {'diff': 0.0003024020000000002}, {'diff': 0.000302458000000002}, {'diff': 0.0003024310000000023}, {'diff': 0.00030241600000000327}, ...</msg>
<status status="PASS" starttime="20201029 09:34:48.380" endtime="20201029 09:34:48.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.387" level="INFO">${RESULT} = {'diff': [0.00030268100000000256, 0.0003024860000000011, 0.0003024020000000002, 0.000302458000000002, 0.0003024310000000023, 0.00030241600000000327, 0.00030243000000000284, 0.0003024310000000023, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:48.384" endtime="20201029 09:34:48.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.391" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:48.390" endtime="20201029 09:34:48.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.394" level="INFO">VALUE: [0.00030268100000000256, 0.0003024860000000011, 0.0003024020000000002, 0.000302458000000002, 0.0003024310000000023, 0.00030241600000000327, 0.00030243000000000284, 0.0003024310000000023, 0.00030238900000000013, 0.00030243000000000284, 0.0003024440000000024, 0.0003024310000000023, 0.00030241700000000274, 0.00030243000000000284, 0.0003024860000000011, 0.0003024310000000023, 0.00030244399999999894, 0.0003024310000000023, 0.0003024029999999997, 0.00030237500000000056, 0.00030238800000000066, 0.0003024450000000019, 0.0003024450000000019, 0.000302458000000002, 0.0003024860000000011, 0.0003024310000000023, 0.00030241699999999927, 0.0003024159999999998, 0.00030241699999999927, 0.000302458999999998, 0.00030238900000000013, 0.0003024579999999985, 0.00030243099999999884, 0.00030243099999999884, 0.0003024159999999998, 0.0003024579999999985, 0.00030243099999999884, 0.00030242999999999937, 0.00030244399999999894, 0.00030241699999999927, 0.00030243099999999884, 0.00030242999999999937, 0.0003024579999999985, 0.00030241699999999927, 0.00030244399999999894, 0.0003024159999999998, 0.00030243099999999884, 0.00030241699999999927, 0.00030242999999999937, 0.0003024159999999998]</msg>
<status status="PASS" starttime="20201029 09:34:48.392" endtime="20201029 09:34:48.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.388" endtime="20201029 09:34:48.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.022" endtime="20201029 09:34:48.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.000" endtime="20201029 09:34:48.396"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:48.399" endtime="20201029 09:34:48.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.397" endtime="20201029 09:34:48.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.426" endtime="20201029 09:34:48.465"></status>
</kw>
<msg timestamp="20201029 09:34:48.465" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.425" endtime="20201029 09:34:48.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.468" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.467" endtime="20201029 09:34:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.469" endtime="20201029 09:34:48.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.422" endtime="20201029 09:34:48.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.420" endtime="20201029 09:34:48.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.478" endtime="20201029 09:34:48.781"></status>
</kw>
<msg timestamp="20201029 09:34:48.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016643458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016958139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.476" endtime="20201029 09:34:48.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016643458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016958139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.788" endtime="20201029 09:34:48.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.795" endtime="20201029 09:34:48.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.474" endtime="20201029 09:34:48.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.472" endtime="20201029 09:34:48.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:48.802" level="INFO">${PHILIP_RES} = [{'diff': 0.0003146810000000007}, {'diff': 0.0003143890000000017}, {'diff': 0.0003144299999999975}, {'diff': 0.0003143619999999986}, {'diff': 0.0003143749999999987}, {'diff': 0.00031437500000000215}, ...</msg>
<status status="PASS" starttime="20201029 09:34:48.799" endtime="20201029 09:34:48.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.807" level="INFO">${RESULT} = {'diff': [0.0003146810000000007, 0.0003143890000000017, 0.0003144299999999975, 0.0003143619999999986, 0.0003143749999999987, 0.00031437500000000215, 0.0003144299999999975, 0.0003143749999999987, 0.000...</msg>
<status status="PASS" starttime="20201029 09:34:48.803" endtime="20201029 09:34:48.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.811" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:48.810" endtime="20201029 09:34:48.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.813" level="INFO">VALUE: [0.0003146810000000007, 0.0003143890000000017, 0.0003144299999999975, 0.0003143619999999986, 0.0003143749999999987, 0.00031437500000000215, 0.0003144299999999975, 0.0003143749999999987, 0.00031438899999999825, 0.00031437500000000215, 0.0003143749999999987, 0.0003143609999999991, 0.00031438899999999825, 0.0003143749999999987, 0.00031437500000000215, 0.0003143609999999991, 0.0003143749999999987, 0.000314333, 0.0003143890000000017, 0.0003143749999999987, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000017, 0.0003143060000000003, 0.0003144159999999979, 0.0003143750000000056, 0.0003143749999999987, 0.0003143609999999991, 0.0003143750000000056, 0.0003143749999999987, 0.0003143749999999987, 0.0003143749999999987, 0.0003144029999999978, 0.0003143620000000055, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000052, 0.0003143749999999987, 0.0003143890000000052, 0.00031438899999999825, 0.0003143749999999987, 0.0003143750000000056, 0.0003143749999999987, 0.0003143749999999987, 0.0003143890000000052, 0.0003143609999999991, 0.0003143750000000056, 0.0003143609999999991, 0.00031438899999999825, 0.0003143890000000052]</msg>
<status status="PASS" starttime="20201029 09:34:48.812" endtime="20201029 09:34:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.807" endtime="20201029 09:34:48.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.419" endtime="20201029 09:34:48.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.397" endtime="20201029 09:34:48.815"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:48.818" endtime="20201029 09:34:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.816" endtime="20201029 09:34:48.838"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.846" endtime="20201029 09:34:48.885"></status>
</kw>
<msg timestamp="20201029 09:34:48.886" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.845" endtime="20201029 09:34:48.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.888" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.887" endtime="20201029 09:34:48.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.889" endtime="20201029 09:34:48.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.842" endtime="20201029 09:34:48.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.840" endtime="20201029 09:34:48.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.898" endtime="20201029 09:34:49.186"></status>
</kw>
<msg timestamp="20201029 09:34:49.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.897" endtime="20201029 09:34:49.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.190" endtime="20201029 09:34:49.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.198" endtime="20201029 09:34:49.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.894" endtime="20201029 09:34:49.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.892" endtime="20201029 09:34:49.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:49.204" level="INFO">${PHILIP_RES} = [{'diff': 0.0003268480000000011}, {'diff': 0.0003265549999999992}, {'diff': 0.0003265559999999987}, {'diff': 0.0003265689999999988}, {'diff': 0.0003265700000000017}, {'diff': 0.00032656900000000225}, ...</msg>
<status status="PASS" starttime="20201029 09:34:49.201" endtime="20201029 09:34:49.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:49.208" level="INFO">${RESULT} = {'diff': [0.0003268480000000011, 0.0003265549999999992, 0.0003265559999999987, 0.0003265689999999988, 0.0003265700000000017, 0.00032656900000000225, 0.00032656999999999825, 0.0003264719999999978, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:49.205" endtime="20201029 09:34:49.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.213" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:49.212" endtime="20201029 09:34:49.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.216" level="INFO">VALUE: [0.0003268480000000011, 0.0003265549999999992, 0.0003265559999999987, 0.0003265689999999988, 0.0003265700000000017, 0.00032656900000000225, 0.00032656999999999825, 0.0003264719999999978, 0.0003265559999999987, 0.00032655600000000215, 0.0003265130000000005, 0.00032656999999999825, 0.0003265689999999988, 0.0003265419999999991, 0.0003265549999999992, 0.0003265700000000017, 0.00032651399999999997, 0.00032656999999999825, 0.0003265549999999992, 0.00032655600000000215, 0.00032655600000000215, 0.00032648600000000083, 0.00032652799999999954, 0.0003265549999999992, 0.0003265559999999987, 0.00032654099999999964, 0.0003265560000000056, 0.00032655500000000615, 0.0003265419999999991, 0.0003265549999999992, 0.0003265419999999991, 0.0003265559999999987, 0.0003265689999999988, 0.0003265419999999991, 0.0003265549999999992, 0.0003265700000000052, 0.0003265410000000066, 0.0003265560000000056, 0.00032652799999999954, 0.0003265559999999987, 0.0003265559999999987, 0.00032651399999999997, 0.0003265419999999991, 0.0003265549999999992, 0.0003266110000000044, 0.0003265689999999988, 0.0003265560000000056, 0.0003265549999999992, 0.00032662499999999706, 0.0003265419999999991]</msg>
<status status="PASS" starttime="20201029 09:34:49.214" endtime="20201029 09:34:49.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.209" endtime="20201029 09:34:49.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.838" endtime="20201029 09:34:49.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.815" endtime="20201029 09:34:49.217"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:49.220" endtime="20201029 09:34:49.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.218" endtime="20201029 09:34:49.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.248" endtime="20201029 09:34:49.288"></status>
</kw>
<msg timestamp="20201029 09:34:49.289" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.247" endtime="20201029 09:34:49.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.291" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.290" endtime="20201029 09:34:49.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.292" endtime="20201029 09:34:49.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.244" endtime="20201029 09:34:49.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.242" endtime="20201029 09:34:49.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.302" endtime="20201029 09:34:49.613"></status>
</kw>
<msg timestamp="20201029 09:34:49.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017124514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017463764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.301" endtime="20201029 09:34:49.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017124514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017463764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.617" endtime="20201029 09:34:49.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.625" endtime="20201029 09:34:49.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.298" endtime="20201029 09:34:49.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.297" endtime="20201029 09:34:49.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:49.631" level="INFO">${PHILIP_RES} = [{'diff': 0.0003392499999999993}, {'diff': 0.0003389719999999999}, {'diff': 0.0003389589999999998}, {'diff': 0.00033894400000000074}, {'diff': 0.00033895799999999685}, {'diff': 0.00033897299999999936}...</msg>
<status status="PASS" starttime="20201029 09:34:49.628" endtime="20201029 09:34:49.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:49.635" level="INFO">${RESULT} = {'diff': [0.0003392499999999993, 0.0003389719999999999, 0.0003389589999999998, 0.00033894400000000074, 0.00033895799999999685, 0.00033897299999999936, 0.0003389439999999973, 0.0003389719999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:49.632" endtime="20201029 09:34:49.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.640" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:49.639" endtime="20201029 09:34:49.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.642" level="INFO">VALUE: [0.0003392499999999993, 0.0003389719999999999, 0.0003389589999999998, 0.00033894400000000074, 0.00033895799999999685, 0.00033897299999999936, 0.0003389439999999973, 0.0003389719999999999, 0.0003389450000000002, 0.00033894400000000074, 0.0003389580000000003, 0.0003389589999999998, 0.00033894400000000074, 0.0003389030000000015, 0.0003389450000000002, 0.00033897299999999936, 0.00033891599999999814, 0.0003389719999999999, 0.0003389580000000003, 0.00033898599999999945, 0.0003389580000000003, 0.00033894400000000074, 0.0003389719999999999, 0.0003389719999999999, 0.0003389719999999999, 0.0003389589999999998, 0.0003390269999999987, 0.0003389719999999999, 0.00033902799999999816, 0.0003389580000000003, 0.0003389580000000003, 0.0003389589999999998, 0.0003389580000000003, 0.00033894400000000074, 0.0003389309999999937, 0.0003389719999999999, 0.00033901400000000553, 0.0003389450000000002, 0.00033888900000000194, 0.0003389580000000003, 0.0003389589999999998, 0.00033893100000000065, 0.0003389580000000003, 0.0003389170000000011, 0.00033898599999999945, 0.0003389439999999938, 0.0003389589999999998, 0.0003389719999999999, 0.000338999999999999, 0.0003389719999999999]</msg>
<status status="PASS" starttime="20201029 09:34:49.641" endtime="20201029 09:34:49.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.636" endtime="20201029 09:34:49.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.240" endtime="20201029 09:34:49.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.218" endtime="20201029 09:34:49.645"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:49.648" endtime="20201029 09:34:49.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.646" endtime="20201029 09:34:49.668"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.676" endtime="20201029 09:34:49.717"></status>
</kw>
<msg timestamp="20201029 09:34:49.718" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.674" endtime="20201029 09:34:49.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.720" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.719" endtime="20201029 09:34:49.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.721" endtime="20201029 09:34:49.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.672" endtime="20201029 09:34:49.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.670" endtime="20201029 09:34:49.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.731" endtime="20201029 09:34:50.017"></status>
</kw>
<msg timestamp="20201029 09:34:50.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017226861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017578708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.729" endtime="20201029 09:34:50.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017226861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017578708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.021" endtime="20201029 09:34:50.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.029" endtime="20201029 09:34:50.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.727" endtime="20201029 09:34:50.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.725" endtime="20201029 09:34:50.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:50.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0003518469999999989}, {'diff': 0.0003515419999999998}, {'diff': 0.00035158299999999906}, {'diff': 0.00035158399999999854}, {'diff': 0.0003515689999999995}, {'diff': 0.00035159699999999863}...</msg>
<status status="PASS" starttime="20201029 09:34:50.032" endtime="20201029 09:34:50.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:50.040" level="INFO">${RESULT} = {'diff': [0.0003518469999999989, 0.0003515419999999998, 0.00035158299999999906, 0.00035158399999999854, 0.0003515689999999995, 0.00035159699999999863, 0.00035158299999999906, 0.0003515970000000021, 0....</msg>
<status status="PASS" starttime="20201029 09:34:50.036" endtime="20201029 09:34:50.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.044" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:50.043" endtime="20201029 09:34:50.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.046" level="INFO">VALUE: [0.0003518469999999989, 0.0003515419999999998, 0.00035158299999999906, 0.00035158399999999854, 0.0003515689999999995, 0.00035159699999999863, 0.00035158299999999906, 0.0003515970000000021, 0.00035156999999999897, 0.0003515689999999995, 0.00035163899999999734, 0.00035159699999999863, 0.00035157000000000244, 0.00035165199999999744, 0.00035158299999999906, 0.00035155600000000287, 0.00035157000000000244, 0.00035155600000000287, 0.00035158300000000253, 0.00035159699999999863, 0.00035159699999999863, 0.00035156900000000296, 0.0003515139999999972, 0.0003515970000000021, 0.00035158399999999507, 0.00035158300000000253, 0.000351584000000002, 0.0003515970000000021, 0.00035158300000000253, 0.00035157000000000244, 0.0003515829999999956, 0.0003515980000000016, 0.0003515970000000021, 0.0003515829999999956, 0.0003515699999999955, 0.0003515970000000021, 0.0003515699999999955, 0.00035158300000000253, 0.0003515410000000038, 0.00035158300000000253, 0.0003515829999999956, 0.00035158300000000253, 0.00035158300000000253, 0.00035162500000000124, 0.00035158300000000253, 0.0003515970000000021, 0.0003515279999999968, 0.0003516530000000004, 0.0003515970000000021, 0.0003515829999999956]</msg>
<status status="PASS" starttime="20201029 09:34:50.045" endtime="20201029 09:34:50.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.040" endtime="20201029 09:34:50.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.668" endtime="20201029 09:34:50.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.646" endtime="20201029 09:34:50.048"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:50.051" endtime="20201029 09:34:50.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.049" endtime="20201029 09:34:50.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.078" endtime="20201029 09:34:50.120"></status>
</kw>
<msg timestamp="20201029 09:34:50.121" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.077" endtime="20201029 09:34:50.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.123" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.122" endtime="20201029 09:34:50.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.124" endtime="20201029 09:34:50.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.074" endtime="20201029 09:34:50.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.072" endtime="20201029 09:34:50.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.133" endtime="20201029 09:34:50.436"></status>
</kw>
<msg timestamp="20201029 09:34:50.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016763569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017128208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.132" endtime="20201029 09:34:50.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016763569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017128208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.440" endtime="20201029 09:34:50.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.447" endtime="20201029 09:34:50.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.129" endtime="20201029 09:34:50.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.127" endtime="20201029 09:34:50.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:50.454" level="INFO">${PHILIP_RES} = [{'diff': 0.00036463899999999994}, {'diff': 0.00036443100000000186}, {'diff': 0.00036444500000000143}, {'diff': 0.00036441599999999935}, {'diff': 0.00036441599999999935}, {'diff': 0.000364402999999999...</msg>
<status status="PASS" starttime="20201029 09:34:50.451" endtime="20201029 09:34:50.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:50.458" level="INFO">${RESULT} = {'diff': [0.00036463899999999994, 0.00036443100000000186, 0.00036444500000000143, 0.00036441599999999935, 0.00036441599999999935, 0.00036440299999999926, 0.00036443100000000186, 0.0003644439999999985,...</msg>
<status status="PASS" starttime="20201029 09:34:50.455" endtime="20201029 09:34:50.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.462" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:50.461" endtime="20201029 09:34:50.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.464" level="INFO">VALUE: [0.00036463899999999994, 0.00036443100000000186, 0.00036444500000000143, 0.00036441599999999935, 0.00036441599999999935, 0.00036440299999999926, 0.00036443100000000186, 0.0003644439999999985, 0.0003644170000000023, 0.0003644169999999988, 0.0003644300000000024, 0.00036444500000000143, 0.0003644030000000027, 0.0003644169999999988, 0.00036444400000000196, 0.0003644169999999988, 0.00036440299999999926, 0.0003644299999999989, 0.0003644170000000023, 0.0003643750000000001, 0.00036443100000000186, 0.00036441599999999935, 0.00036444499999999797, 0.0003644169999999988, 0.0003644299999999989, 0.0003644439999999985, 0.00036440299999999926, 0.0003644309999999984, 0.000364458000000005, 0.0003644870000000036, 0.0003644299999999989, 0.0003644439999999985, 0.00036444400000000543, 0.0003644309999999984, 0.0003644309999999984, 0.0003644299999999989, 0.00036443100000000533, 0.0003644439999999985, 0.0003644299999999989, 0.0003643750000000001, 0.00036443100000000533, 0.00036445799999999806, 0.0003644299999999989, 0.0003644169999999988, 0.0003644169999999988, 0.0003644299999999989, 0.0003644439999999985, 0.00036445899999999753, 0.0003644299999999989, 0.00036444400000000543]</msg>
<status status="PASS" starttime="20201029 09:34:50.463" endtime="20201029 09:34:50.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.459" endtime="20201029 09:34:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.071" endtime="20201029 09:34:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.049" endtime="20201029 09:34:50.466"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:50.469" endtime="20201029 09:34:50.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.467" endtime="20201029 09:34:50.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.497" endtime="20201029 09:34:50.539"></status>
</kw>
<msg timestamp="20201029 09:34:50.540" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.495" endtime="20201029 09:34:50.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.542" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.541" endtime="20201029 09:34:50.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.543" endtime="20201029 09:34:50.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.492" endtime="20201029 09:34:50.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.491" endtime="20201029 09:34:50.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.553" endtime="20201029 09:34:50.838"></status>
</kw>
<msg timestamp="20201029 09:34:50.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016711306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017089069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.552" endtime="20201029 09:34:50.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016711306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017089069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.842" endtime="20201029 09:34:50.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.850" endtime="20201029 09:34:50.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.549" endtime="20201029 09:34:50.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.547" endtime="20201029 09:34:50.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:50.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0003777629999999997}, {'diff': 0.00037751399999999893}, {'diff': 0.00037755500000000164}, {'diff': 0.00037749999999999936}, {'diff': 0.0003775279999999985}, {'diff': 0.0003775270000000025}...</msg>
<status status="PASS" starttime="20201029 09:34:50.853" endtime="20201029 09:34:50.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:50.860" level="INFO">${RESULT} = {'diff': [0.0003777629999999997, 0.00037751399999999893, 0.00037755500000000164, 0.00037749999999999936, 0.0003775279999999985, 0.0003775270000000025, 0.0003775279999999985, 0.00037748600000000326, 0....</msg>
<status status="PASS" starttime="20201029 09:34:50.857" endtime="20201029 09:34:50.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.865" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:50.864" endtime="20201029 09:34:50.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.868" level="INFO">VALUE: [0.0003777629999999997, 0.00037751399999999893, 0.00037755500000000164, 0.00037749999999999936, 0.0003775279999999985, 0.0003775270000000025, 0.0003775279999999985, 0.00037748600000000326, 0.0003775419999999981, 0.00037749999999999936, 0.00037749999999999936, 0.00037754100000000207, 0.0003774859999999998, 0.00037751399999999893, 0.00037750000000000283, 0.00037749999999999936, 0.00037750000000000283, 0.00037751399999999893, 0.0003774859999999998, 0.0003775140000000024, 0.00037751399999999893, 0.0003774999999999959, 0.00037755500000000164, 0.000377528000000002, 0.0003774999999999959, 0.0003774999999999959, 0.00037750000000000283, 0.00037754100000000207, 0.0003774859999999963, 0.0003774859999999963, 0.000377528000000002, 0.00037748700000000274, 0.0003774999999999959, 0.00037750000000000283, 0.0003775140000000024, 0.00037751399999999546, 0.0003775140000000024, 0.00037750000000000283, 0.0003774720000000037, 0.00037751399999999546, 0.0003775140000000024, 0.00037748700000000274, 0.00037751399999999546, 0.0003775830000000008, 0.0003775140000000024, 0.0003775140000000024, 0.0003774999999999959, 0.0003775140000000024, 0.000377528000000002, 0.00037747199999999675]</msg>
<status status="PASS" starttime="20201029 09:34:50.866" endtime="20201029 09:34:50.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.861" endtime="20201029 09:34:50.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.489" endtime="20201029 09:34:50.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.467" endtime="20201029 09:34:50.871"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:50.873" endtime="20201029 09:34:50.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.872" endtime="20201029 09:34:50.893"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.902" endtime="20201029 09:34:50.946"></status>
</kw>
<msg timestamp="20201029 09:34:50.946" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.900" endtime="20201029 09:34:50.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:50.949" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:50.947" endtime="20201029 09:34:50.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.950" endtime="20201029 09:34:50.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.897" endtime="20201029 09:34:50.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.896" endtime="20201029 09:34:50.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:50.959" endtime="20201029 09:34:51.263"></status>
</kw>
<msg timestamp="20201029 09:34:51.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016855278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017246347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:50.957" endtime="20201029 09:34:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016855278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017246347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:51.266" endtime="20201029 09:34:51.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.274" endtime="20201029 09:34:51.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.955" endtime="20201029 09:34:51.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.953" endtime="20201029 09:34:51.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:51.280" level="INFO">${PHILIP_RES} = [{'diff': 0.00039106899999999736}, {'diff': 0.00039083300000000015}, {'diff': 0.00039087499999999886}, {'diff': 0.00039082000000000006}, {'diff': 0.00039077800000000135}, {'diff': 0.000390792000000000...</msg>
<status status="PASS" starttime="20201029 09:34:51.277" endtime="20201029 09:34:51.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:51.285" level="INFO">${RESULT} = {'diff': [0.00039106899999999736, 0.00039083300000000015, 0.00039087499999999886, 0.00039082000000000006, 0.00039077800000000135, 0.0003907920000000009, 0.0003908060000000005, 0.0003908060000000005, 0...</msg>
<status status="PASS" starttime="20201029 09:34:51.281" endtime="20201029 09:34:51.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.289" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:51.288" endtime="20201029 09:34:51.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.292" level="INFO">VALUE: [0.00039106899999999736, 0.00039083300000000015, 0.00039087499999999886, 0.00039082000000000006, 0.00039077800000000135, 0.0003907920000000009, 0.0003908060000000005, 0.0003908060000000005, 0.000390805000000001, 0.00039079100000000144, 0.0003908190000000006, 0.0003908190000000006, 0.00039082000000000006, 0.0003908340000000031, 0.00039082000000000006, 0.0003908190000000006, 0.0003908190000000006, 0.0003908190000000006, 0.0003908190000000006, 0.0003908190000000006, 0.000390805999999997, 0.0003907500000000022, 0.0003908609999999993, 0.0003908060000000005, 0.0003908190000000006, 0.0003907500000000022, 0.00039079100000000144, 0.00039083300000000015, 0.0003908190000000006, 0.00039076399999999484, 0.0003908339999999996, 0.00039083400000000657, 0.0003907500000000022, 0.0003908049999999941, 0.0003908469999999997, 0.0003908190000000006, 0.0003907920000000009, 0.0003908060000000005, 0.000390791999999994, 0.0003908060000000005, 0.0003907920000000009, 0.0003908609999999993, 0.00039074999999999527, 0.0003908190000000006, 0.00039081899999999364, 0.0003908060000000005, 0.00039082000000000006, 0.00039082000000000006, 0.0003908469999999997, 0.00039082000000000006]</msg>
<status status="PASS" starttime="20201029 09:34:51.290" endtime="20201029 09:34:51.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.286" endtime="20201029 09:34:51.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.894" endtime="20201029 09:34:51.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:50.871" endtime="20201029 09:34:51.294"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:51.296" endtime="20201029 09:34:51.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.295" endtime="20201029 09:34:51.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.324" endtime="20201029 09:34:51.369"></status>
</kw>
<msg timestamp="20201029 09:34:51.369" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.322" endtime="20201029 09:34:51.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.372" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:51.370" endtime="20201029 09:34:51.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.373" endtime="20201029 09:34:51.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.320" endtime="20201029 09:34:51.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.318" endtime="20201029 09:34:51.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.382" endtime="20201029 09:34:51.668"></status>
</kw>
<msg timestamp="20201029 09:34:51.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016584014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016988611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:51.380" endtime="20201029 09:34:51.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016584014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016988611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:51.672" endtime="20201029 09:34:51.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:51.680" endtime="20201029 09:34:51.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.377" endtime="20201029 09:34:51.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.376" endtime="20201029 09:34:51.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:51.686" level="INFO">${PHILIP_RES} = [{'diff': 0.0004045969999999996}, {'diff': 0.0004043199999999997}, {'diff': 0.0004043199999999997}, {'diff': 0.00040434699999999935}, {'diff': 0.0004043329999999998}, {'diff': 0.00040434699999999935},...</msg>
<status status="PASS" starttime="20201029 09:34:51.683" endtime="20201029 09:34:51.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:51.690" level="INFO">${RESULT} = {'diff': [0.0004045969999999996, 0.0004043199999999997, 0.0004043199999999997, 0.00040434699999999935, 0.0004043329999999998, 0.00040434699999999935, 0.0004043480000000023, 0.0004043190000000002, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:51.687" endtime="20201029 09:34:51.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.694" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:51.693" endtime="20201029 09:34:51.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:51.697" level="INFO">VALUE: [0.0004045969999999996, 0.0004043199999999997, 0.0004043199999999997, 0.00040434699999999935, 0.0004043329999999998, 0.00040434699999999935, 0.0004043480000000023, 0.0004043190000000002, 0.00040433300000000325, 0.00040426399999999793, 0.00040433399999999925, 0.0004043199999999997, 0.00040434699999999935, 0.00040434699999999935, 0.0004043329999999998, 0.00040433399999999925, 0.0004043749999999985, 0.00040434699999999935, 0.0004043199999999997, 0.0004043890000000015, 0.00040433300000000325, 0.00040434699999999935, 0.0004043190000000002, 0.0004043479999999988, 0.0004043750000000054, 0.0004043329999999998, 0.00040433399999999925, 0.00040434699999999935, 0.0004043479999999988, 0.0004043190000000002, 0.0004043190000000002, 0.0004043879999999986, 0.00040433399999999925, 0.0004043470000000063, 0.0004043329999999998, 0.0004043060000000001, 0.0004043060000000001, 0.00040434699999999935, 0.0004043329999999998, 0.00040434699999999935, 0.00040433399999999925, 0.0004043199999999997, 0.0004043329999999998, 0.0004043190000000002, 0.00040433399999999925, 0.00040440300000000456, 0.0004043330000000067, 0.0004043329999999998, 0.00040434699999999935, 0.0004043609999999989]</msg>
<status status="PASS" starttime="20201029 09:34:51.696" endtime="20201029 09:34:51.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.691" endtime="20201029 09:34:51.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.316" endtime="20201029 09:34:51.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:51.294" endtime="20201029 09:34:51.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.735" endtime="20201029 09:34:51.699"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:29.495" endtime="20201029 09:34:51.699" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:08.058" endtime="20201029 09:34:51.708"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:34:05.020" endtime="20201029 09:34:51.739"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
